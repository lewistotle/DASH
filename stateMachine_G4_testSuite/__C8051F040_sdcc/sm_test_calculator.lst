                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.0 #5416 (Mar 22 2009) (MINGW32)
                              4 ; This file was generated Sat Jan 02 19:24:43 2010
                              5 ;--------------------------------------------------------
                              6 	.module sm_test_calculator
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _doCalculation
                             13 	.globl _calculator_getEventQueueDepth
                             14 	.globl _calculator_constructor
                             15 	.globl _calculator_destructor
                             16 	.globl _calculator_getHistoryQueueDepth
                             17 	.globl _calculator_getMachineSize
                             18 	.globl _calculator_constructor2
                             19 	.globl _calculator_destructor2
                             20 ;--------------------------------------------------------
                             21 ; special function registers
                             22 ;--------------------------------------------------------
                             23 	.area RSEG    (DATA)
                             24 ;--------------------------------------------------------
                             25 ; special function bits
                             26 ;--------------------------------------------------------
                             27 	.area RSEG    (DATA)
                             28 ;--------------------------------------------------------
                             29 ; overlayable register banks
                             30 ;--------------------------------------------------------
                             31 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      32 	.ds 8
                             33 ;--------------------------------------------------------
                             34 ; internal ram data
                             35 ;--------------------------------------------------------
                             36 	.area DSEG    (DATA)
   0000                      37 _calculator_constructor_sloc0_1_0:
   0000                      38 	.ds 3
                             39 ;--------------------------------------------------------
                             40 ; overlayable items in internal ram 
                             41 ;--------------------------------------------------------
                             42 	.area OSEG    (OVR,DATA)
                             43 ;--------------------------------------------------------
                             44 ; indirectly addressable internal ram data
                             45 ;--------------------------------------------------------
                             46 	.area ISEG    (DATA)
                             47 ;--------------------------------------------------------
                             48 ; absolute internal ram data
                             49 ;--------------------------------------------------------
                             50 	.area IABS    (ABS,DATA)
                             51 	.area IABS    (ABS,DATA)
                             52 ;--------------------------------------------------------
                             53 ; bit data
                             54 ;--------------------------------------------------------
                             55 	.area BSEG    (BIT)
                             56 ;--------------------------------------------------------
                             57 ; paged external ram data
                             58 ;--------------------------------------------------------
                             59 	.area PSEG    (PAG,XDATA)
                             60 ;--------------------------------------------------------
                             61 ; external ram data
                             62 ;--------------------------------------------------------
                             63 	.area XSEG    (XDATA)
   0000                      64 _calculator_constructor_base_1_1:
   0000                      65 	.ds 3
   0003                      66 _calculator_destructor_self_1_1:
   0003                      67 	.ds 3
   0006                      68 _calculator_constructor2_self_1_1:
   0006                      69 	.ds 3
   0009                      70 _doCalculation_type_1_1:
   0009                      71 	.ds 1
                             72 ;--------------------------------------------------------
                             73 ; absolute external ram data
                             74 ;--------------------------------------------------------
                             75 	.area XABS    (ABS,XDATA)
                             76 ;--------------------------------------------------------
                             77 ; external initialized ram data
                             78 ;--------------------------------------------------------
                             79 	.area XISEG   (XDATA)
   0000                      80 _calculator_name:
   0000                      81 	.ds 3
                             82 	.area HOME    (CODE)
                             83 	.area GSINIT0 (CODE)
                             84 	.area GSINIT1 (CODE)
                             85 	.area GSINIT2 (CODE)
                             86 	.area GSINIT3 (CODE)
                             87 	.area GSINIT4 (CODE)
                             88 	.area GSINIT5 (CODE)
                             89 	.area GSINIT  (CODE)
                             90 	.area GSFINAL (CODE)
                             91 	.area CSEG    (CODE)
                             92 ;--------------------------------------------------------
                             93 ; global & static initialisations
                             94 ;--------------------------------------------------------
                             95 	.area HOME    (CODE)
                             96 	.area GSINIT  (CODE)
                             97 	.area GSFINAL (CODE)
                             98 	.area GSINIT  (CODE)
                             99 ;--------------------------------------------------------
                            100 ; Home
                            101 ;--------------------------------------------------------
                            102 	.area HOME    (CODE)
                            103 	.area HOME    (CODE)
                            104 ;--------------------------------------------------------
                            105 ; code
                            106 ;--------------------------------------------------------
                            107 	.area CSEG    (CODE)
                            108 ;------------------------------------------------------------
                            109 ;Allocation info for local variables in function 'calculator_getEventQueueDepth'
                            110 ;------------------------------------------------------------
                            111 ;------------------------------------------------------------
                            112 ;	../sm_test_calculator.c:23: SET_EVENT_QUEUE_DEPTH(config_CalcEVENT_QUEUE_DEPTH) ;
                            113 ;	-----------------------------------------
                            114 ;	 function calculator_getEventQueueDepth
                            115 ;	-----------------------------------------
   0000                     116 _calculator_getEventQueueDepth:
                    0002    117 	ar2 = 0x02
                    0003    118 	ar3 = 0x03
                    0004    119 	ar4 = 0x04
                    0005    120 	ar5 = 0x05
                    0006    121 	ar6 = 0x06
                    0007    122 	ar7 = 0x07
                    0000    123 	ar0 = 0x00
                    0001    124 	ar1 = 0x01
   0000 90 00 10            125 	mov	dptr,#0x0010
   0003 22                  126 	ret
                            127 ;------------------------------------------------------------
                            128 ;Allocation info for local variables in function 'calculator_constructor'
                            129 ;------------------------------------------------------------
                            130 ;sloc0                     Allocated with name '_calculator_constructor_sloc0_1_0'
                            131 ;base                      Allocated with name '_calculator_constructor_base_1_1'
                            132 ;------------------------------------------------------------
                            133 ;	../sm_test_calculator.c:47: END_STATE_MACHINE_DEFINITION() ;
                            134 ;	-----------------------------------------
                            135 ;	 function calculator_constructor
                            136 ;	-----------------------------------------
   0004                     137 _calculator_constructor:
   0004 AA F0               138 	mov	r2,b
   0006 AB 83               139 	mov	r3,dph
   0008 E5 82               140 	mov	a,dpl
   000A 90s00r00            141 	mov	dptr,#_calculator_constructor_base_1_1
   000D F0                  142 	movx	@dptr,a
   000E A3                  143 	inc	dptr
   000F EB                  144 	mov	a,r3
   0010 F0                  145 	movx	@dptr,a
   0011 A3                  146 	inc	dptr
   0012 EA                  147 	mov	a,r2
   0013 F0                  148 	movx	@dptr,a
   0014 90s00r00            149 	mov	dptr,#_calculator_constructor_base_1_1
   0017 E0                  150 	movx	a,@dptr
   0018 FA                  151 	mov	r2,a
   0019 A3                  152 	inc	dptr
   001A E0                  153 	movx	a,@dptr
   001B FB                  154 	mov	r3,a
   001C A3                  155 	inc	dptr
   001D E0                  156 	movx	a,@dptr
   001E FC                  157 	mov	r4,a
   001F 8A 82               158 	mov	dpl,r2
   0021 8B 83               159 	mov	dph,r3
   0023 8C F0               160 	mov	b,r4
   0025 74r00               161 	mov	a,#_calculator_TOP
   0027 12s00r00            162 	lcall	__gptrput
   002A A3                  163 	inc	dptr
   002B 74s00               164 	mov	a,#(_calculator_TOP >> 8)
   002D 12s00r00            165 	lcall	__gptrput
   0030 74 05               166 	mov	a,#0x05
   0032 2A                  167 	add	a,r2
   0033 FD                  168 	mov	r5,a
   0034 E4                  169 	clr	a
   0035 3B                  170 	addc	a,r3
   0036 FE                  171 	mov	r6,a
   0037 8C 07               172 	mov	ar7,r4
   0039 8D 82               173 	mov	dpl,r5
   003B 8E 83               174 	mov	dph,r6
   003D 8F F0               175 	mov	b,r7
   003F 74r00               176 	mov	a,#_calculator_TOP
   0041 12s00r00            177 	lcall	__gptrput
   0044 A3                  178 	inc	dptr
   0045 74s00               179 	mov	a,#(_calculator_TOP >> 8)
   0047 12s00r00            180 	lcall	__gptrput
   004A A3                  181 	inc	dptr
   004B 74 80               182 	mov	a,#0x80
   004D 12s00r00            183 	lcall	__gptrput
   0050 74 02               184 	mov	a,#0x02
   0052 2A                  185 	add	a,r2
   0053 F5*00               186 	mov	_calculator_constructor_sloc0_1_0,a
   0055 E4                  187 	clr	a
   0056 3B                  188 	addc	a,r3
   0057 F5*01               189 	mov	(_calculator_constructor_sloc0_1_0 + 1),a
   0059 8C*02               190 	mov	(_calculator_constructor_sloc0_1_0 + 2),r4
   005B 90s00r00            191 	mov	dptr,#_calculator_name
   005E E0                  192 	movx	a,@dptr
   005F F8                  193 	mov	r0,a
   0060 A3                  194 	inc	dptr
   0061 E0                  195 	movx	a,@dptr
   0062 F9                  196 	mov	r1,a
   0063 A3                  197 	inc	dptr
   0064 E0                  198 	movx	a,@dptr
   0065 FD                  199 	mov	r5,a
   0066 85*00 82            200 	mov	dpl,_calculator_constructor_sloc0_1_0
   0069 85*01 83            201 	mov	dph,(_calculator_constructor_sloc0_1_0 + 1)
   006C 85*02 F0            202 	mov	b,(_calculator_constructor_sloc0_1_0 + 2)
   006F E8                  203 	mov	a,r0
   0070 12s00r00            204 	lcall	__gptrput
   0073 A3                  205 	inc	dptr
   0074 E9                  206 	mov	a,r1
   0075 12s00r00            207 	lcall	__gptrput
   0078 A3                  208 	inc	dptr
   0079 ED                  209 	mov	a,r5
   007A 12s00r00            210 	lcall	__gptrput
   007D 8A 82               211 	mov	dpl,r2
   007F 8B 83               212 	mov	dph,r3
   0081 8C F0               213 	mov	b,r4
   0083 02s00rB2            214 	ljmp	_calculator_constructor2
                            215 ;------------------------------------------------------------
                            216 ;Allocation info for local variables in function 'calculator_destructor'
                            217 ;------------------------------------------------------------
                            218 ;self                      Allocated with name '_calculator_destructor_self_1_1'
                            219 ;------------------------------------------------------------
                            220 ;	../sm_test_calculator.c:47: 
                            221 ;	-----------------------------------------
                            222 ;	 function calculator_destructor
                            223 ;	-----------------------------------------
   0086                     224 _calculator_destructor:
   0086 AA F0               225 	mov	r2,b
   0088 AB 83               226 	mov	r3,dph
   008A E5 82               227 	mov	a,dpl
   008C 90s00r03            228 	mov	dptr,#_calculator_destructor_self_1_1
   008F F0                  229 	movx	@dptr,a
   0090 A3                  230 	inc	dptr
   0091 EB                  231 	mov	a,r3
   0092 F0                  232 	movx	@dptr,a
   0093 A3                  233 	inc	dptr
   0094 EA                  234 	mov	a,r2
   0095 F0                  235 	movx	@dptr,a
   0096 90s00r03            236 	mov	dptr,#_calculator_destructor_self_1_1
   0099 E0                  237 	movx	a,@dptr
   009A FA                  238 	mov	r2,a
   009B A3                  239 	inc	dptr
   009C E0                  240 	movx	a,@dptr
   009D FB                  241 	mov	r3,a
   009E A3                  242 	inc	dptr
   009F E0                  243 	movx	a,@dptr
   00A0 FC                  244 	mov	r4,a
   00A1 8A 82               245 	mov	dpl,r2
   00A3 8B 83               246 	mov	dph,r3
   00A5 8C F0               247 	mov	b,r4
   00A7 02s00rED            248 	ljmp	_calculator_destructor2
                            249 ;------------------------------------------------------------
                            250 ;Allocation info for local variables in function 'calculator_getHistoryQueueDepth'
                            251 ;------------------------------------------------------------
                            252 ;------------------------------------------------------------
                            253 ;	../sm_test_calculator.c:47: END_STATE_MACHINE_DEFINITION() ;
                            254 ;	-----------------------------------------
                            255 ;	 function calculator_getHistoryQueueDepth
                            256 ;	-----------------------------------------
   00AA                     257 _calculator_getHistoryQueueDepth:
   00AA 90 00 4E            258 	mov	dptr,#0x004E
   00AD 22                  259 	ret
                            260 ;------------------------------------------------------------
                            261 ;Allocation info for local variables in function 'calculator_getMachineSize'
                            262 ;------------------------------------------------------------
                            263 ;------------------------------------------------------------
                            264 ;	../sm_test_calculator.c:47: 
                            265 ;	-----------------------------------------
                            266 ;	 function calculator_getMachineSize
                            267 ;	-----------------------------------------
   00AE                     268 _calculator_getMachineSize:
   00AE 90 00 2F            269 	mov	dptr,#0x002F
   00B1 22                  270 	ret
                            271 ;------------------------------------------------------------
                            272 ;Allocation info for local variables in function 'calculator_constructor2'
                            273 ;------------------------------------------------------------
                            274 ;self                      Allocated with name '_calculator_constructor2_self_1_1'
                            275 ;------------------------------------------------------------
                            276 ;	../sm_test_calculator.c:50: STATE_MACHINE_CONSTRUCTOR()
                            277 ;	-----------------------------------------
                            278 ;	 function calculator_constructor2
                            279 ;	-----------------------------------------
   00B2                     280 _calculator_constructor2:
   00B2 AA F0               281 	mov	r2,b
   00B4 AB 83               282 	mov	r3,dph
   00B6 E5 82               283 	mov	a,dpl
   00B8 90s00r06            284 	mov	dptr,#_calculator_constructor2_self_1_1
   00BB F0                  285 	movx	@dptr,a
   00BC A3                  286 	inc	dptr
   00BD EB                  287 	mov	a,r3
   00BE F0                  288 	movx	@dptr,a
   00BF A3                  289 	inc	dptr
   00C0 EA                  290 	mov	a,r2
   00C1 F0                  291 	movx	@dptr,a
                            292 ;	../sm_test_calculator.c:52: self->result = 0 ;
   00C2 90s00r06            293 	mov	dptr,#_calculator_constructor2_self_1_1
   00C5 E0                  294 	movx	a,@dptr
   00C6 FA                  295 	mov	r2,a
   00C7 A3                  296 	inc	dptr
   00C8 E0                  297 	movx	a,@dptr
   00C9 FB                  298 	mov	r3,a
   00CA A3                  299 	inc	dptr
   00CB E0                  300 	movx	a,@dptr
   00CC FC                  301 	mov	r4,a
   00CD 74 2B               302 	mov	a,#0x2B
   00CF 2A                  303 	add	a,r2
   00D0 FA                  304 	mov	r2,a
   00D1 E4                  305 	clr	a
   00D2 3B                  306 	addc	a,r3
   00D3 FB                  307 	mov	r3,a
   00D4 8A 82               308 	mov	dpl,r2
   00D6 8B 83               309 	mov	dph,r3
   00D8 8C F0               310 	mov	b,r4
   00DA E4                  311 	clr	a
   00DB 12s00r00            312 	lcall	__gptrput
   00DE A3                  313 	inc	dptr
   00DF E4                  314 	clr	a
   00E0 12s00r00            315 	lcall	__gptrput
   00E3 A3                  316 	inc	dptr
   00E4 E4                  317 	clr	a
   00E5 12s00r00            318 	lcall	__gptrput
   00E8 A3                  319 	inc	dptr
   00E9 E4                  320 	clr	a
   00EA 02s00r00            321 	ljmp	__gptrput
                            322 ;------------------------------------------------------------
                            323 ;Allocation info for local variables in function 'calculator_destructor2'
                            324 ;------------------------------------------------------------
                            325 ;self                      Allocated with name '_calculator_destructor2_self_1_1'
                            326 ;------------------------------------------------------------
                            327 ;	../sm_test_calculator.c:56: STATE_MACHINE_DESTRUCTOR()
                            328 ;	-----------------------------------------
                            329 ;	 function calculator_destructor2
                            330 ;	-----------------------------------------
   00ED                     331 _calculator_destructor2:
                            332 ;	../sm_test_calculator.c:58: (void)self ;	/* Nothing to do here */
   00ED 22                  333 	ret
                            334 ;------------------------------------------------------------
                            335 ;Allocation info for local variables in function 'calculator_TOP_handler'
                            336 ;------------------------------------------------------------
                            337 ;event                     Allocated to stack - offset -5
                            338 ;self                      Allocated to registers r2 r3 r4 
                            339 ;stateResponseCode         Allocated to registers 
                            340 ;------------------------------------------------------------
                            341 ;	../sm_test_calculator.c:62: DEFINE_TOP_STATE()
                            342 ;	-----------------------------------------
                            343 ;	 function calculator_TOP_handler
                            344 ;	-----------------------------------------
   00EE                     345 _calculator_TOP_handler:
   00EE C0*00               346 	push	_bp
   00F0 85 81*00            347 	mov	_bp,sp
   00F3 AA 82               348 	mov	r2,dpl
   00F5 AB 83               349 	mov	r3,dph
   00F7 AC F0               350 	mov	r4,b
                            351 ;	../sm_test_calculator.c:64: INITIAL_TRANSITION(TO(begin),																	NO_ACTION) ;
   00F9 E5*00               352 	mov	a,_bp
   00FB 24 FB               353 	add	a,#0xfb
   00FD F8                  354 	mov	r0,a
   00FE 86 05               355 	mov	ar5,@r0
   0100 08                  356 	inc	r0
   0101 86 06               357 	mov	ar6,@r0
   0103 08                  358 	inc	r0
   0104 86 07               359 	mov	ar7,@r0
   0106 8D 82               360 	mov	dpl,r5
   0108 8E 83               361 	mov	dph,r6
   010A 8F F0               362 	mov	b,r7
   010C 12s00r00            363 	lcall	__gptrget
   010F FD                  364 	mov	r5,a
   0110 BD 02 23            365 	cjne	r5,#0x02,00102$
   0113 74 08               366 	mov	a,#0x08
   0115 2A                  367 	add	a,r2
   0116 FA                  368 	mov	r2,a
   0117 E4                  369 	clr	a
   0118 3B                  370 	addc	a,r3
   0119 FB                  371 	mov	r3,a
   011A 8A 82               372 	mov	dpl,r2
   011C 8B 83               373 	mov	dph,r3
   011E 8C F0               374 	mov	b,r4
   0120 74r24               375 	mov	a,#_calculator_begin
   0122 12s00r00            376 	lcall	__gptrput
   0125 A3                  377 	inc	dptr
   0126 74s00               378 	mov	a,#(_calculator_begin >> 8)
   0128 12s00r00            379 	lcall	__gptrput
   012B A3                  380 	inc	dptr
   012C 74 80               381 	mov	a,#0x80
   012E 12s00r00            382 	lcall	__gptrput
   0131 75 82 02            383 	mov	dpl,#0x02
   0134 80 03               384 	sjmp	00103$
   0136                     385 00102$:
                            386 ;	../sm_test_calculator.c:66: END_DEFINE_STATE()
   0136 75 82 00            387 	mov	dpl,#0x00
   0139                     388 00103$:
   0139 D0*00               389 	pop	_bp
   013B 22                  390 	ret
                            391 ;------------------------------------------------------------
                            392 ;Allocation info for local variables in function 'calculator_on_handler'
                            393 ;------------------------------------------------------------
                            394 ;event                     Allocated to stack - offset -5
                            395 ;self                      Allocated to stack - offset 1
                            396 ;stateResponseCode         Allocated to registers 
                            397 ;stateResponseCode         Allocated to registers 
                            398 ;stateResponseCode         Allocated to registers 
                            399 ;------------------------------------------------------------
                            400 ;	../sm_test_calculator.c:69: DEFINE_STATE(on)
                            401 ;	-----------------------------------------
                            402 ;	 function calculator_on_handler
                            403 ;	-----------------------------------------
   013C                     404 _calculator_on_handler:
   013C C0*00               405 	push	_bp
   013E 85 81*00            406 	mov	_bp,sp
   0141 C0 82               407 	push	dpl
   0143 C0 83               408 	push	dph
   0145 C0 F0               409 	push	b
                            410 ;	../sm_test_calculator.c:71: INITIAL_TRANSITION(TO(ready),																NO_ACTION) ;
   0147 E5*00               411 	mov	a,_bp
   0149 24 FB               412 	add	a,#0xfb
   014B F8                  413 	mov	r0,a
   014C 86 05               414 	mov	ar5,@r0
   014E 08                  415 	inc	r0
   014F 86 06               416 	mov	ar6,@r0
   0151 08                  417 	inc	r0
   0152 86 07               418 	mov	ar7,@r0
   0154 8D 82               419 	mov	dpl,r5
   0156 8E 83               420 	mov	dph,r6
   0158 8F F0               421 	mov	b,r7
   015A 12s00r00            422 	lcall	__gptrget
   015D FD                  423 	mov	r5,a
   015E BD 02 2A            424 	cjne	r5,#0x02,00102$
   0161 A8*00               425 	mov	r0,_bp
   0163 08                  426 	inc	r0
   0164 74 08               427 	mov	a,#0x08
   0166 26                  428 	add	a,@r0
   0167 FE                  429 	mov	r6,a
   0168 E4                  430 	clr	a
   0169 08                  431 	inc	r0
   016A 36                  432 	addc	a,@r0
   016B FF                  433 	mov	r7,a
   016C 08                  434 	inc	r0
   016D 86 02               435 	mov	ar2,@r0
   016F 8E 82               436 	mov	dpl,r6
   0171 8F 83               437 	mov	dph,r7
   0173 8A F0               438 	mov	b,r2
   0175 74r12               439 	mov	a,#_calculator_ready
   0177 12s00r00            440 	lcall	__gptrput
   017A A3                  441 	inc	dptr
   017B 74s00               442 	mov	a,#(_calculator_ready >> 8)
   017D 12s00r00            443 	lcall	__gptrput
   0180 A3                  444 	inc	dptr
   0181 74 80               445 	mov	a,#0x80
   0183 12s00r00            446 	lcall	__gptrput
   0186 75 82 02            447 	mov	dpl,#0x02
   0189 80 5D               448 	sjmp	00107$
   018B                     449 00102$:
                            450 ;	../sm_test_calculator.c:73: TRANSITION_ON(CLEAR,												TO(on),					NO_ACTION) ;
   018B BD 06 2A            451 	cjne	r5,#0x06,00104$
   018E A8*00               452 	mov	r0,_bp
   0190 08                  453 	inc	r0
   0191 74 08               454 	mov	a,#0x08
   0193 26                  455 	add	a,@r0
   0194 FA                  456 	mov	r2,a
   0195 E4                  457 	clr	a
   0196 08                  458 	inc	r0
   0197 36                  459 	addc	a,@r0
   0198 FB                  460 	mov	r3,a
   0199 08                  461 	inc	r0
   019A 86 04               462 	mov	ar4,@r0
   019C 8A 82               463 	mov	dpl,r2
   019E 8B 83               464 	mov	dph,r3
   01A0 8C F0               465 	mov	b,r4
   01A2 74r09               466 	mov	a,#_calculator_on
   01A4 12s00r00            467 	lcall	__gptrput
   01A7 A3                  468 	inc	dptr
   01A8 74s00               469 	mov	a,#(_calculator_on >> 8)
   01AA 12s00r00            470 	lcall	__gptrput
   01AD A3                  471 	inc	dptr
   01AE 74 80               472 	mov	a,#0x80
   01B0 12s00r00            473 	lcall	__gptrput
   01B3 75 82 02            474 	mov	dpl,#0x02
   01B6 80 30               475 	sjmp	00107$
   01B8                     476 00104$:
                            477 ;	../sm_test_calculator.c:74: TRANSITION_ON(OFF,													TO(STATE_MACHINE_EXIT),	NO_ACTION) ;
   01B8 BD 0D 2A            478 	cjne	r5,#0x0D,00106$
   01BB A8*00               479 	mov	r0,_bp
   01BD 08                  480 	inc	r0
   01BE 74 08               481 	mov	a,#0x08
   01C0 26                  482 	add	a,@r0
   01C1 FA                  483 	mov	r2,a
   01C2 E4                  484 	clr	a
   01C3 08                  485 	inc	r0
   01C4 36                  486 	addc	a,@r0
   01C5 FB                  487 	mov	r3,a
   01C6 08                  488 	inc	r0
   01C7 86 04               489 	mov	ar4,@r0
   01C9 8A 82               490 	mov	dpl,r2
   01CB 8B 83               491 	mov	dph,r3
   01CD 8C F0               492 	mov	b,r4
   01CF 74r00               493 	mov	a,#_calculator_TOP
   01D1 12s00r00            494 	lcall	__gptrput
   01D4 A3                  495 	inc	dptr
   01D5 74s00               496 	mov	a,#(_calculator_TOP >> 8)
   01D7 12s00r00            497 	lcall	__gptrput
   01DA A3                  498 	inc	dptr
   01DB 74 80               499 	mov	a,#0x80
   01DD 12s00r00            500 	lcall	__gptrput
   01E0 75 82 02            501 	mov	dpl,#0x02
   01E3 80 03               502 	sjmp	00107$
   01E5                     503 00106$:
                            504 ;	../sm_test_calculator.c:76: END_DEFINE_STATE()
   01E5 75 82 00            505 	mov	dpl,#0x00
   01E8                     506 00107$:
   01E8 85*00 81            507 	mov	sp,_bp
   01EB D0*00               508 	pop	_bp
   01ED 22                  509 	ret
                            510 ;------------------------------------------------------------
                            511 ;Allocation info for local variables in function 'calculator_ready_handler'
                            512 ;------------------------------------------------------------
                            513 ;event                     Allocated to stack - offset -5
                            514 ;self                      Allocated to stack - offset 1
                            515 ;stateResponseCode         Allocated to registers 
                            516 ;stateResponseCode         Allocated to registers 
                            517 ;------------------------------------------------------------
                            518 ;	../sm_test_calculator.c:79: DEFINE_STATE(ready)
                            519 ;	-----------------------------------------
                            520 ;	 function calculator_ready_handler
                            521 ;	-----------------------------------------
   01EE                     522 _calculator_ready_handler:
   01EE C0*00               523 	push	_bp
   01F0 85 81*00            524 	mov	_bp,sp
   01F3 C0 82               525 	push	dpl
   01F5 C0 83               526 	push	dph
   01F7 C0 F0               527 	push	b
                            528 ;	../sm_test_calculator.c:81: INITIAL_TRANSITION(TO(zero1),																NO_ACTION) ;
   01F9 E5*00               529 	mov	a,_bp
   01FB 24 FB               530 	add	a,#0xfb
   01FD F8                  531 	mov	r0,a
   01FE 86 05               532 	mov	ar5,@r0
   0200 08                  533 	inc	r0
   0201 86 06               534 	mov	ar6,@r0
   0203 08                  535 	inc	r0
   0204 86 07               536 	mov	ar7,@r0
   0206 8D 82               537 	mov	dpl,r5
   0208 8E 83               538 	mov	dph,r6
   020A 8F F0               539 	mov	b,r7
   020C 12s00r00            540 	lcall	__gptrget
   020F FD                  541 	mov	r5,a
   0210 BD 02 2A            542 	cjne	r5,#0x02,00102$
   0213 A8*00               543 	mov	r0,_bp
   0215 08                  544 	inc	r0
   0216 74 08               545 	mov	a,#0x08
   0218 26                  546 	add	a,@r0
   0219 FE                  547 	mov	r6,a
   021A E4                  548 	clr	a
   021B 08                  549 	inc	r0
   021C 36                  550 	addc	a,@r0
   021D FF                  551 	mov	r7,a
   021E 08                  552 	inc	r0
   021F 86 02               553 	mov	ar2,@r0
   0221 8E 82               554 	mov	dpl,r6
   0223 8F 83               555 	mov	dph,r7
   0225 8A F0               556 	mov	b,r2
   0227 74r3F               557 	mov	a,#_calculator_zero1
   0229 12s00r00            558 	lcall	__gptrput
   022C A3                  559 	inc	dptr
   022D 74s00               560 	mov	a,#(_calculator_zero1 >> 8)
   022F 12s00r00            561 	lcall	__gptrput
   0232 A3                  562 	inc	dptr
   0233 74 80               563 	mov	a,#0x80
   0235 12s00r00            564 	lcall	__gptrput
   0238 75 82 02            565 	mov	dpl,#0x02
   023B 80 30               566 	sjmp	00105$
   023D                     567 00102$:
                            568 ;	../sm_test_calculator.c:83: TRANSITION_ON(OPERATION,											TO(opEntered),			NO_ACTION) ;
   023D BD 0B 2A            569 	cjne	r5,#0x0B,00104$
   0240 A8*00               570 	mov	r0,_bp
   0242 08                  571 	inc	r0
   0243 74 08               572 	mov	a,#0x08
   0245 26                  573 	add	a,@r0
   0246 FA                  574 	mov	r2,a
   0247 E4                  575 	clr	a
   0248 08                  576 	inc	r0
   0249 36                  577 	addc	a,@r0
   024A FB                  578 	mov	r3,a
   024B 08                  579 	inc	r0
   024C 86 04               580 	mov	ar4,@r0
   024E 8A 82               581 	mov	dpl,r2
   0250 8B 83               582 	mov	dph,r3
   0252 8C F0               583 	mov	b,r4
   0254 74r63               584 	mov	a,#_calculator_opEntered
   0256 12s00r00            585 	lcall	__gptrput
   0259 A3                  586 	inc	dptr
   025A 74s00               587 	mov	a,#(_calculator_opEntered >> 8)
   025C 12s00r00            588 	lcall	__gptrput
   025F A3                  589 	inc	dptr
   0260 74 80               590 	mov	a,#0x80
   0262 12s00r00            591 	lcall	__gptrput
   0265 75 82 02            592 	mov	dpl,#0x02
   0268 80 03               593 	sjmp	00105$
   026A                     594 00104$:
                            595 ;	../sm_test_calculator.c:85: END_DEFINE_STATE()
   026A 75 82 00            596 	mov	dpl,#0x00
   026D                     597 00105$:
   026D 85*00 81            598 	mov	sp,_bp
   0270 D0*00               599 	pop	_bp
   0272 22                  600 	ret
                            601 ;------------------------------------------------------------
                            602 ;Allocation info for local variables in function 'calculator_result_handler'
                            603 ;------------------------------------------------------------
                            604 ;event                     Allocated to stack - offset -5
                            605 ;self                      Allocated to registers 
                            606 ;stateResponseCode         Allocated to registers 
                            607 ;------------------------------------------------------------
                            608 ;	../sm_test_calculator.c:88: DEFINE_STATE(result)
                            609 ;	-----------------------------------------
                            610 ;	 function calculator_result_handler
                            611 ;	-----------------------------------------
   0273                     612 _calculator_result_handler:
   0273 C0*00               613 	push	_bp
   0275 85 81*00            614 	mov	_bp,sp
                            615 ;	../sm_test_calculator.c:91: END_DEFINE_STATE()
   0278 75 82 00            616 	mov	dpl,#0x00
   027B D0*00               617 	pop	_bp
   027D 22                  618 	ret
                            619 ;------------------------------------------------------------
                            620 ;Allocation info for local variables in function 'calculator_begin_handler'
                            621 ;------------------------------------------------------------
                            622 ;event                     Allocated to stack - offset -5
                            623 ;self                      Allocated to stack - offset 1
                            624 ;stateResponseCode         Allocated to registers 
                            625 ;stateResponseCode         Allocated to registers 
                            626 ;stateResponseCode         Allocated to registers 
                            627 ;stateResponseCode         Allocated to registers 
                            628 ;stateResponseCode         Allocated to registers 
                            629 ;sloc0                     Allocated to stack - offset 9
                            630 ;------------------------------------------------------------
                            631 ;	../sm_test_calculator.c:94: DEFINE_STATE(begin)
                            632 ;	-----------------------------------------
                            633 ;	 function calculator_begin_handler
                            634 ;	-----------------------------------------
   027E                     635 _calculator_begin_handler:
   027E C0*00               636 	push	_bp
   0280 85 81*00            637 	mov	_bp,sp
   0283 C0 82               638 	push	dpl
   0285 C0 83               639 	push	dph
   0287 C0 F0               640 	push	b
                            641 ;	../sm_test_calculator.c:97: INITIAL_TRANSITION(TO(on),																	NO_ACTION) ;
   0289 E5*00               642 	mov	a,_bp
   028B 24 FB               643 	add	a,#0xfb
   028D F8                  644 	mov	r0,a
   028E 86 05               645 	mov	ar5,@r0
   0290 08                  646 	inc	r0
   0291 86 06               647 	mov	ar6,@r0
   0293 08                  648 	inc	r0
   0294 86 07               649 	mov	ar7,@r0
   0296 8D 82               650 	mov	dpl,r5
   0298 8E 83               651 	mov	dph,r6
   029A 8F F0               652 	mov	b,r7
   029C 12s00r00            653 	lcall	__gptrget
   029F FA                  654 	mov	r2,a
   02A0 BA 02 2B            655 	cjne	r2,#0x02,00102$
   02A3 A8*00               656 	mov	r0,_bp
   02A5 08                  657 	inc	r0
   02A6 74 08               658 	mov	a,#0x08
   02A8 26                  659 	add	a,@r0
   02A9 FA                  660 	mov	r2,a
   02AA E4                  661 	clr	a
   02AB 08                  662 	inc	r0
   02AC 36                  663 	addc	a,@r0
   02AD FB                  664 	mov	r3,a
   02AE 08                  665 	inc	r0
   02AF 86 04               666 	mov	ar4,@r0
   02B1 8A 82               667 	mov	dpl,r2
   02B3 8B 83               668 	mov	dph,r3
   02B5 8C F0               669 	mov	b,r4
   02B7 74r09               670 	mov	a,#_calculator_on
   02B9 12s00r00            671 	lcall	__gptrput
   02BC A3                  672 	inc	dptr
   02BD 74s00               673 	mov	a,#(_calculator_on >> 8)
   02BF 12s00r00            674 	lcall	__gptrput
   02C2 A3                  675 	inc	dptr
   02C3 74 80               676 	mov	a,#0x80
   02C5 12s00r00            677 	lcall	__gptrput
   02C8 75 82 02            678 	mov	dpl,#0x02
   02CB 02s03r98            679 	ljmp	00112$
   02CE                     680 00102$:
                            681 ;	../sm_test_calculator.c:99: TRANSITION_ON_IF(OPERATION,	IF(CAST_EVENT(keyEvent_t)->key == '-'),	TO(negated1),			NO_ACTION) ;
   02CE BA 0B 3D            682 	cjne	r2,#0x0B,00104$
   02D1 0D                  683 	inc	r5
   02D2 BD 00 01            684 	cjne	r5,#0x00,00124$
   02D5 0E                  685 	inc	r6
   02D6                     686 00124$:
   02D6 8D 82               687 	mov	dpl,r5
   02D8 8E 83               688 	mov	dph,r6
   02DA 8F F0               689 	mov	b,r7
   02DC 12s00r00            690 	lcall	__gptrget
   02DF FD                  691 	mov	r5,a
   02E0 BD 2D 2B            692 	cjne	r5,#0x2D,00104$
   02E3 A8*00               693 	mov	r0,_bp
   02E5 08                  694 	inc	r0
   02E6 74 08               695 	mov	a,#0x08
   02E8 26                  696 	add	a,@r0
   02E9 FA                  697 	mov	r2,a
   02EA E4                  698 	clr	a
   02EB 08                  699 	inc	r0
   02EC 36                  700 	addc	a,@r0
   02ED FB                  701 	mov	r3,a
   02EE 08                  702 	inc	r0
   02EF 86 04               703 	mov	ar4,@r0
   02F1 8A 82               704 	mov	dpl,r2
   02F3 8B 83               705 	mov	dph,r3
   02F5 8C F0               706 	mov	b,r4
   02F7 74r2D               707 	mov	a,#_calculator_negated1
   02F9 12s00r00            708 	lcall	__gptrput
   02FC A3                  709 	inc	dptr
   02FD 74s00               710 	mov	a,#(_calculator_negated1 >> 8)
   02FF 12s00r00            711 	lcall	__gptrput
   0302 A3                  712 	inc	dptr
   0303 74 80               713 	mov	a,#0x80
   0305 12s00r00            714 	lcall	__gptrput
   0308 75 82 02            715 	mov	dpl,#0x02
   030B 02s03r98            716 	ljmp	00112$
   030E                     717 00104$:
                            718 ;	../sm_test_calculator.c:100: TRANSITION_ON(DIGIT_0,												TO(zero1),				NO_ACTION) ;
   030E BA 08 2A            719 	cjne	r2,#0x08,00107$
   0311 A8*00               720 	mov	r0,_bp
   0313 08                  721 	inc	r0
   0314 74 08               722 	mov	a,#0x08
   0316 26                  723 	add	a,@r0
   0317 FA                  724 	mov	r2,a
   0318 E4                  725 	clr	a
   0319 08                  726 	inc	r0
   031A 36                  727 	addc	a,@r0
   031B FB                  728 	mov	r3,a
   031C 08                  729 	inc	r0
   031D 86 04               730 	mov	ar4,@r0
   031F 8A 82               731 	mov	dpl,r2
   0321 8B 83               732 	mov	dph,r3
   0323 8C F0               733 	mov	b,r4
   0325 74r3F               734 	mov	a,#_calculator_zero1
   0327 12s00r00            735 	lcall	__gptrput
   032A A3                  736 	inc	dptr
   032B 74s00               737 	mov	a,#(_calculator_zero1 >> 8)
   032D 12s00r00            738 	lcall	__gptrput
   0330 A3                  739 	inc	dptr
   0331 74 80               740 	mov	a,#0x80
   0333 12s00r00            741 	lcall	__gptrput
   0336 75 82 02            742 	mov	dpl,#0x02
   0339 80 5D               743 	sjmp	00112$
   033B                     744 00107$:
                            745 ;	../sm_test_calculator.c:101: TRANSITION_ON(DIGIT_1_9,											TO(int1),				NO_ACTION) ;
   033B BA 09 2A            746 	cjne	r2,#0x09,00109$
   033E A8*00               747 	mov	r0,_bp
   0340 08                  748 	inc	r0
   0341 74 08               749 	mov	a,#0x08
   0343 26                  750 	add	a,@r0
   0344 FA                  751 	mov	r2,a
   0345 E4                  752 	clr	a
   0346 08                  753 	inc	r0
   0347 36                  754 	addc	a,@r0
   0348 FB                  755 	mov	r3,a
   0349 08                  756 	inc	r0
   034A 86 04               757 	mov	ar4,@r0
   034C 8A 82               758 	mov	dpl,r2
   034E 8B 83               759 	mov	dph,r3
   0350 8C F0               760 	mov	b,r4
   0352 74r48               761 	mov	a,#_calculator_int1
   0354 12s00r00            762 	lcall	__gptrput
   0357 A3                  763 	inc	dptr
   0358 74s00               764 	mov	a,#(_calculator_int1 >> 8)
   035A 12s00r00            765 	lcall	__gptrput
   035D A3                  766 	inc	dptr
   035E 74 80               767 	mov	a,#0x80
   0360 12s00r00            768 	lcall	__gptrput
   0363 75 82 02            769 	mov	dpl,#0x02
   0366 80 30               770 	sjmp	00112$
   0368                     771 00109$:
                            772 ;	../sm_test_calculator.c:102: TRANSITION_ON(POINT,												TO(frac1),				NO_ACTION) ;
   0368 BA 0A 2A            773 	cjne	r2,#0x0A,00111$
   036B A8*00               774 	mov	r0,_bp
   036D 08                  775 	inc	r0
   036E 74 08               776 	mov	a,#0x08
   0370 26                  777 	add	a,@r0
   0371 FA                  778 	mov	r2,a
   0372 E4                  779 	clr	a
   0373 08                  780 	inc	r0
   0374 36                  781 	addc	a,@r0
   0375 FB                  782 	mov	r3,a
   0376 08                  783 	inc	r0
   0377 86 04               784 	mov	ar4,@r0
   0379 8A 82               785 	mov	dpl,r2
   037B 8B 83               786 	mov	dph,r3
   037D 8C F0               787 	mov	b,r4
   037F 74r51               788 	mov	a,#_calculator_frac1
   0381 12s00r00            789 	lcall	__gptrput
   0384 A3                  790 	inc	dptr
   0385 74s00               791 	mov	a,#(_calculator_frac1 >> 8)
   0387 12s00r00            792 	lcall	__gptrput
   038A A3                  793 	inc	dptr
   038B 74 80               794 	mov	a,#0x80
   038D 12s00r00            795 	lcall	__gptrput
   0390 75 82 02            796 	mov	dpl,#0x02
   0393 80 03               797 	sjmp	00112$
   0395                     798 00111$:
                            799 ;	../sm_test_calculator.c:104: END_DEFINE_STATE()
   0395 75 82 00            800 	mov	dpl,#0x00
   0398                     801 00112$:
   0398 85*00 81            802 	mov	sp,_bp
   039B D0*00               803 	pop	_bp
   039D 22                  804 	ret
                            805 ;------------------------------------------------------------
                            806 ;Allocation info for local variables in function 'calculator_negated1_handler'
                            807 ;------------------------------------------------------------
                            808 ;event                     Allocated to stack - offset -5
                            809 ;self                      Allocated to stack - offset 1
                            810 ;stateResponseCode         Allocated to registers 
                            811 ;stateResponseCode         Allocated to registers 
                            812 ;stateResponseCode         Allocated to registers 
                            813 ;stateResponseCode         Allocated to registers 
                            814 ;stateResponseCode         Allocated to registers 
                            815 ;sloc0                     Allocated to stack - offset 9
                            816 ;------------------------------------------------------------
                            817 ;	../sm_test_calculator.c:107: DEFINE_STATE(negated1)
                            818 ;	-----------------------------------------
                            819 ;	 function calculator_negated1_handler
                            820 ;	-----------------------------------------
   039E                     821 _calculator_negated1_handler:
   039E C0*00               822 	push	_bp
   03A0 85 81*00            823 	mov	_bp,sp
   03A3 C0 82               824 	push	dpl
   03A5 C0 83               825 	push	dph
   03A7 C0 F0               826 	push	b
                            827 ;	../sm_test_calculator.c:109: TRANSITION_ON(CLEAR_ENTRY,											TO(begin),				NO_ACTION) ;
   03A9 E5*00               828 	mov	a,_bp
   03AB 24 FB               829 	add	a,#0xfb
   03AD F8                  830 	mov	r0,a
   03AE 86 05               831 	mov	ar5,@r0
   03B0 08                  832 	inc	r0
   03B1 86 06               833 	mov	ar6,@r0
   03B3 08                  834 	inc	r0
   03B4 86 07               835 	mov	ar7,@r0
   03B6 8D 82               836 	mov	dpl,r5
   03B8 8E 83               837 	mov	dph,r6
   03BA 8F F0               838 	mov	b,r7
   03BC 12s00r00            839 	lcall	__gptrget
   03BF FA                  840 	mov	r2,a
   03C0 BA 07 2B            841 	cjne	r2,#0x07,00102$
   03C3 A8*00               842 	mov	r0,_bp
   03C5 08                  843 	inc	r0
   03C6 74 08               844 	mov	a,#0x08
   03C8 26                  845 	add	a,@r0
   03C9 FA                  846 	mov	r2,a
   03CA E4                  847 	clr	a
   03CB 08                  848 	inc	r0
   03CC 36                  849 	addc	a,@r0
   03CD FB                  850 	mov	r3,a
   03CE 08                  851 	inc	r0
   03CF 86 04               852 	mov	ar4,@r0
   03D1 8A 82               853 	mov	dpl,r2
   03D3 8B 83               854 	mov	dph,r3
   03D5 8C F0               855 	mov	b,r4
   03D7 74r24               856 	mov	a,#_calculator_begin
   03D9 12s00r00            857 	lcall	__gptrput
   03DC A3                  858 	inc	dptr
   03DD 74s00               859 	mov	a,#(_calculator_begin >> 8)
   03DF 12s00r00            860 	lcall	__gptrput
   03E2 A3                  861 	inc	dptr
   03E3 74 80               862 	mov	a,#0x80
   03E5 12s00r00            863 	lcall	__gptrput
   03E8 75 82 02            864 	mov	dpl,#0x02
   03EB 02s04r93            865 	ljmp	00112$
   03EE                     866 00102$:
                            867 ;	../sm_test_calculator.c:110: TRANSITION_ON(DIGIT_0,												TO(zero1),				NO_ACTION) ;
   03EE BA 08 2B            868 	cjne	r2,#0x08,00104$
   03F1 A8*00               869 	mov	r0,_bp
   03F3 08                  870 	inc	r0
   03F4 74 08               871 	mov	a,#0x08
   03F6 26                  872 	add	a,@r0
   03F7 FA                  873 	mov	r2,a
   03F8 E4                  874 	clr	a
   03F9 08                  875 	inc	r0
   03FA 36                  876 	addc	a,@r0
   03FB FB                  877 	mov	r3,a
   03FC 08                  878 	inc	r0
   03FD 86 04               879 	mov	ar4,@r0
   03FF 8A 82               880 	mov	dpl,r2
   0401 8B 83               881 	mov	dph,r3
   0403 8C F0               882 	mov	b,r4
   0405 74r3F               883 	mov	a,#_calculator_zero1
   0407 12s00r00            884 	lcall	__gptrput
   040A A3                  885 	inc	dptr
   040B 74s00               886 	mov	a,#(_calculator_zero1 >> 8)
   040D 12s00r00            887 	lcall	__gptrput
   0410 A3                  888 	inc	dptr
   0411 74 80               889 	mov	a,#0x80
   0413 12s00r00            890 	lcall	__gptrput
   0416 75 82 02            891 	mov	dpl,#0x02
   0419 02s04r93            892 	ljmp	00112$
   041C                     893 00104$:
                            894 ;	../sm_test_calculator.c:111: TRANSITION_ON(DIGIT_1_9,											TO(int1),				NO_ACTION) ;
   041C BA 09 2A            895 	cjne	r2,#0x09,00106$
   041F A8*00               896 	mov	r0,_bp
   0421 08                  897 	inc	r0
   0422 74 08               898 	mov	a,#0x08
   0424 26                  899 	add	a,@r0
   0425 FA                  900 	mov	r2,a
   0426 E4                  901 	clr	a
   0427 08                  902 	inc	r0
   0428 36                  903 	addc	a,@r0
   0429 FB                  904 	mov	r3,a
   042A 08                  905 	inc	r0
   042B 86 04               906 	mov	ar4,@r0
   042D 8A 82               907 	mov	dpl,r2
   042F 8B 83               908 	mov	dph,r3
   0431 8C F0               909 	mov	b,r4
   0433 74r48               910 	mov	a,#_calculator_int1
   0435 12s00r00            911 	lcall	__gptrput
   0438 A3                  912 	inc	dptr
   0439 74s00               913 	mov	a,#(_calculator_int1 >> 8)
   043B 12s00r00            914 	lcall	__gptrput
   043E A3                  915 	inc	dptr
   043F 74 80               916 	mov	a,#0x80
   0441 12s00r00            917 	lcall	__gptrput
   0444 75 82 02            918 	mov	dpl,#0x02
   0447 80 4A               919 	sjmp	00112$
   0449                     920 00106$:
                            921 ;	../sm_test_calculator.c:112: TRANSITION_ON(POINT,												TO(frac1),				NO_ACTION) ;
   0449 BA 0A 2A            922 	cjne	r2,#0x0A,00108$
   044C A8*00               923 	mov	r0,_bp
   044E 08                  924 	inc	r0
   044F 74 08               925 	mov	a,#0x08
   0451 26                  926 	add	a,@r0
   0452 FA                  927 	mov	r2,a
   0453 E4                  928 	clr	a
   0454 08                  929 	inc	r0
   0455 36                  930 	addc	a,@r0
   0456 FB                  931 	mov	r3,a
   0457 08                  932 	inc	r0
   0458 86 04               933 	mov	ar4,@r0
   045A 8A 82               934 	mov	dpl,r2
   045C 8B 83               935 	mov	dph,r3
   045E 8C F0               936 	mov	b,r4
   0460 74r51               937 	mov	a,#_calculator_frac1
   0462 12s00r00            938 	lcall	__gptrput
   0465 A3                  939 	inc	dptr
   0466 74s00               940 	mov	a,#(_calculator_frac1 >> 8)
   0468 12s00r00            941 	lcall	__gptrput
   046B A3                  942 	inc	dptr
   046C 74 80               943 	mov	a,#0x80
   046E 12s00r00            944 	lcall	__gptrput
   0471 75 82 02            945 	mov	dpl,#0x02
   0474 80 1D               946 	sjmp	00112$
   0476                     947 00108$:
                            948 ;	../sm_test_calculator.c:113: CONSUME_EVENT_IF(OPERATION,	IF(CAST_EVENT(keyEvent_t)->key == '-'),							NO_ACTION) ;
   0476 BA 0B 17            949 	cjne	r2,#0x0B,00110$
   0479 0D                  950 	inc	r5
   047A BD 00 01            951 	cjne	r5,#0x00,00130$
   047D 0E                  952 	inc	r6
   047E                     953 00130$:
   047E 8D 82               954 	mov	dpl,r5
   0480 8E 83               955 	mov	dph,r6
   0482 8F F0               956 	mov	b,r7
   0484 12s00r00            957 	lcall	__gptrget
   0487 FD                  958 	mov	r5,a
   0488 BD 2D 05            959 	cjne	r5,#0x2D,00110$
   048B 75 82 01            960 	mov	dpl,#0x01
   048E 80 03               961 	sjmp	00112$
   0490                     962 00110$:
                            963 ;	../sm_test_calculator.c:115: END_DEFINE_STATE()
   0490 75 82 00            964 	mov	dpl,#0x00
   0493                     965 00112$:
   0493 85*00 81            966 	mov	sp,_bp
   0496 D0*00               967 	pop	_bp
   0498 22                  968 	ret
                            969 ;------------------------------------------------------------
                            970 ;Allocation info for local variables in function 'calculator_operand1_handler'
                            971 ;------------------------------------------------------------
                            972 ;event                     Allocated to stack - offset -5
                            973 ;self                      Allocated to stack - offset 1
                            974 ;stateResponseCode         Allocated to registers 
                            975 ;stateResponseCode         Allocated to registers 
                            976 ;stateResponseCode         Allocated to registers 
                            977 ;------------------------------------------------------------
                            978 ;	../sm_test_calculator.c:118: DEFINE_STATE(operand1)
                            979 ;	-----------------------------------------
                            980 ;	 function calculator_operand1_handler
                            981 ;	-----------------------------------------
   0499                     982 _calculator_operand1_handler:
   0499 C0*00               983 	push	_bp
   049B 85 81*00            984 	mov	_bp,sp
   049E C0 82               985 	push	dpl
   04A0 C0 83               986 	push	dph
   04A2 C0 F0               987 	push	b
                            988 ;	../sm_test_calculator.c:120: TRANSITION_ON(CLEAR_ENTRY,											TO(ready),				NO_ACTION) ;
   04A4 E5*00               989 	mov	a,_bp
   04A6 24 FB               990 	add	a,#0xfb
   04A8 F8                  991 	mov	r0,a
   04A9 86 05               992 	mov	ar5,@r0
   04AB 08                  993 	inc	r0
   04AC 86 06               994 	mov	ar6,@r0
   04AE 08                  995 	inc	r0
   04AF 86 07               996 	mov	ar7,@r0
   04B1 8D 82               997 	mov	dpl,r5
   04B3 8E 83               998 	mov	dph,r6
   04B5 8F F0               999 	mov	b,r7
   04B7 12s00r00           1000 	lcall	__gptrget
   04BA FD                 1001 	mov	r5,a
   04BB BD 07 2A           1002 	cjne	r5,#0x07,00102$
   04BE A8*00              1003 	mov	r0,_bp
   04C0 08                 1004 	inc	r0
   04C1 74 08              1005 	mov	a,#0x08
   04C3 26                 1006 	add	a,@r0
   04C4 FE                 1007 	mov	r6,a
   04C5 E4                 1008 	clr	a
   04C6 08                 1009 	inc	r0
   04C7 36                 1010 	addc	a,@r0
   04C8 FF                 1011 	mov	r7,a
   04C9 08                 1012 	inc	r0
   04CA 86 02              1013 	mov	ar2,@r0
   04CC 8E 82              1014 	mov	dpl,r6
   04CE 8F 83              1015 	mov	dph,r7
   04D0 8A F0              1016 	mov	b,r2
   04D2 74r12              1017 	mov	a,#_calculator_ready
   04D4 12s00r00           1018 	lcall	__gptrput
   04D7 A3                 1019 	inc	dptr
   04D8 74s00              1020 	mov	a,#(_calculator_ready >> 8)
   04DA 12s00r00           1021 	lcall	__gptrput
   04DD A3                 1022 	inc	dptr
   04DE 74 80              1023 	mov	a,#0x80
   04E0 12s00r00           1024 	lcall	__gptrput
   04E3 75 82 02           1025 	mov	dpl,#0x02
   04E6 80 30              1026 	sjmp	00105$
   04E8                    1027 00102$:
                           1028 ;	../sm_test_calculator.c:121: TRANSITION_ON(OPERATION,											TO(opEntered),			NO_ACTION) ;
   04E8 BD 0B 2A           1029 	cjne	r5,#0x0B,00104$
   04EB A8*00              1030 	mov	r0,_bp
   04ED 08                 1031 	inc	r0
   04EE 74 08              1032 	mov	a,#0x08
   04F0 26                 1033 	add	a,@r0
   04F1 FA                 1034 	mov	r2,a
   04F2 E4                 1035 	clr	a
   04F3 08                 1036 	inc	r0
   04F4 36                 1037 	addc	a,@r0
   04F5 FB                 1038 	mov	r3,a
   04F6 08                 1039 	inc	r0
   04F7 86 04              1040 	mov	ar4,@r0
   04F9 8A 82              1041 	mov	dpl,r2
   04FB 8B 83              1042 	mov	dph,r3
   04FD 8C F0              1043 	mov	b,r4
   04FF 74r63              1044 	mov	a,#_calculator_opEntered
   0501 12s00r00           1045 	lcall	__gptrput
   0504 A3                 1046 	inc	dptr
   0505 74s00              1047 	mov	a,#(_calculator_opEntered >> 8)
   0507 12s00r00           1048 	lcall	__gptrput
   050A A3                 1049 	inc	dptr
   050B 74 80              1050 	mov	a,#0x80
   050D 12s00r00           1051 	lcall	__gptrput
   0510 75 82 02           1052 	mov	dpl,#0x02
   0513 80 03              1053 	sjmp	00105$
   0515                    1054 00104$:
                           1055 ;	../sm_test_calculator.c:123: END_DEFINE_STATE()
   0515 75 82 00           1056 	mov	dpl,#0x00
   0518                    1057 00105$:
   0518 85*00 81           1058 	mov	sp,_bp
   051B D0*00              1059 	pop	_bp
   051D 22                 1060 	ret
                           1061 ;------------------------------------------------------------
                           1062 ;Allocation info for local variables in function 'calculator_zero1_handler'
                           1063 ;------------------------------------------------------------
                           1064 ;event                     Allocated to stack - offset -5
                           1065 ;self                      Allocated to stack - offset 1
                           1066 ;stateResponseCode         Allocated to registers 
                           1067 ;stateResponseCode         Allocated to registers 
                           1068 ;stateResponseCode         Allocated to registers 
                           1069 ;------------------------------------------------------------
                           1070 ;	../sm_test_calculator.c:126: DEFINE_STATE(zero1)
                           1071 ;	-----------------------------------------
                           1072 ;	 function calculator_zero1_handler
                           1073 ;	-----------------------------------------
   051E                    1074 _calculator_zero1_handler:
   051E C0*00              1075 	push	_bp
   0520 85 81*00           1076 	mov	_bp,sp
   0523 C0 82              1077 	push	dpl
   0525 C0 83              1078 	push	dph
   0527 C0 F0              1079 	push	b
                           1080 ;	../sm_test_calculator.c:128: INITIAL_TRANSITION(TO(zero2),																NO_ACTION) ;
   0529 E5*00              1081 	mov	a,_bp
   052B 24 FB              1082 	add	a,#0xfb
   052D F8                 1083 	mov	r0,a
   052E 86 05              1084 	mov	ar5,@r0
   0530 08                 1085 	inc	r0
   0531 86 06              1086 	mov	ar6,@r0
   0533 08                 1087 	inc	r0
   0534 86 07              1088 	mov	ar7,@r0
   0536 8D 82              1089 	mov	dpl,r5
   0538 8E 83              1090 	mov	dph,r6
   053A 8F F0              1091 	mov	b,r7
   053C 12s00r00           1092 	lcall	__gptrget
   053F FD                 1093 	mov	r5,a
   0540 BD 02 2A           1094 	cjne	r5,#0x02,00102$
   0543 A8*00              1095 	mov	r0,_bp
   0545 08                 1096 	inc	r0
   0546 74 08              1097 	mov	a,#0x08
   0548 26                 1098 	add	a,@r0
   0549 FE                 1099 	mov	r6,a
   054A E4                 1100 	clr	a
   054B 08                 1101 	inc	r0
   054C 36                 1102 	addc	a,@r0
   054D FF                 1103 	mov	r7,a
   054E 08                 1104 	inc	r0
   054F 86 02              1105 	mov	ar2,@r0
   0551 8E 82              1106 	mov	dpl,r6
   0553 8F 83              1107 	mov	dph,r7
   0555 8A F0              1108 	mov	b,r2
   0557 74r7E              1109 	mov	a,#_calculator_zero2
   0559 12s00r00           1110 	lcall	__gptrput
   055C A3                 1111 	inc	dptr
   055D 74s00              1112 	mov	a,#(_calculator_zero2 >> 8)
   055F 12s00r00           1113 	lcall	__gptrput
   0562 A3                 1114 	inc	dptr
   0563 74 80              1115 	mov	a,#0x80
   0565 12s00r00           1116 	lcall	__gptrput
   0568 75 82 02           1117 	mov	dpl,#0x02
   056B 80 65              1118 	sjmp	00109$
   056D                    1119 00102$:
                           1120 ;	../sm_test_calculator.c:129: CONSUME_EVENT(DIGIT_0,																		NO_ACTION) ;
   056D BD 08 05           1121 	cjne	r5,#0x08,00104$
   0570 75 82 01           1122 	mov	dpl,#0x01
   0573 80 5D              1123 	sjmp	00109$
   0575                    1124 00104$:
                           1125 ;	../sm_test_calculator.c:130: TRANSITION_ON(DIGIT_1_9,											TO(int1),				NO_ACTION) ;
   0575 BD 09 2A           1126 	cjne	r5,#0x09,00106$
   0578 A8*00              1127 	mov	r0,_bp
   057A 08                 1128 	inc	r0
   057B 74 08              1129 	mov	a,#0x08
   057D 26                 1130 	add	a,@r0
   057E FA                 1131 	mov	r2,a
   057F E4                 1132 	clr	a
   0580 08                 1133 	inc	r0
   0581 36                 1134 	addc	a,@r0
   0582 FB                 1135 	mov	r3,a
   0583 08                 1136 	inc	r0
   0584 86 04              1137 	mov	ar4,@r0
   0586 8A 82              1138 	mov	dpl,r2
   0588 8B 83              1139 	mov	dph,r3
   058A 8C F0              1140 	mov	b,r4
   058C 74r48              1141 	mov	a,#_calculator_int1
   058E 12s00r00           1142 	lcall	__gptrput
   0591 A3                 1143 	inc	dptr
   0592 74s00              1144 	mov	a,#(_calculator_int1 >> 8)
   0594 12s00r00           1145 	lcall	__gptrput
   0597 A3                 1146 	inc	dptr
   0598 74 80              1147 	mov	a,#0x80
   059A 12s00r00           1148 	lcall	__gptrput
   059D 75 82 02           1149 	mov	dpl,#0x02
   05A0 80 30              1150 	sjmp	00109$
   05A2                    1151 00106$:
                           1152 ;	../sm_test_calculator.c:131: TRANSITION_ON(POINT,												TO(frac1),				NO_ACTION) ;
   05A2 BD 0A 2A           1153 	cjne	r5,#0x0A,00108$
   05A5 A8*00              1154 	mov	r0,_bp
   05A7 08                 1155 	inc	r0
   05A8 74 08              1156 	mov	a,#0x08
   05AA 26                 1157 	add	a,@r0
   05AB FA                 1158 	mov	r2,a
   05AC E4                 1159 	clr	a
   05AD 08                 1160 	inc	r0
   05AE 36                 1161 	addc	a,@r0
   05AF FB                 1162 	mov	r3,a
   05B0 08                 1163 	inc	r0
   05B1 86 04              1164 	mov	ar4,@r0
   05B3 8A 82              1165 	mov	dpl,r2
   05B5 8B 83              1166 	mov	dph,r3
   05B7 8C F0              1167 	mov	b,r4
   05B9 74r51              1168 	mov	a,#_calculator_frac1
   05BB 12s00r00           1169 	lcall	__gptrput
   05BE A3                 1170 	inc	dptr
   05BF 74s00              1171 	mov	a,#(_calculator_frac1 >> 8)
   05C1 12s00r00           1172 	lcall	__gptrput
   05C4 A3                 1173 	inc	dptr
   05C5 74 80              1174 	mov	a,#0x80
   05C7 12s00r00           1175 	lcall	__gptrput
   05CA 75 82 02           1176 	mov	dpl,#0x02
   05CD 80 03              1177 	sjmp	00109$
   05CF                    1178 00108$:
                           1179 ;	../sm_test_calculator.c:133: END_DEFINE_STATE()
   05CF 75 82 00           1180 	mov	dpl,#0x00
   05D2                    1181 00109$:
   05D2 85*00 81           1182 	mov	sp,_bp
   05D5 D0*00              1183 	pop	_bp
   05D7 22                 1184 	ret
                           1185 ;------------------------------------------------------------
                           1186 ;Allocation info for local variables in function 'calculator_int1_handler'
                           1187 ;------------------------------------------------------------
                           1188 ;event                     Allocated to stack - offset -5
                           1189 ;self                      Allocated to registers r2 r3 r4 
                           1190 ;stateResponseCode         Allocated to registers 
                           1191 ;stateResponseCode         Allocated to registers 
                           1192 ;------------------------------------------------------------
                           1193 ;	../sm_test_calculator.c:136: DEFINE_STATE(int1)
                           1194 ;	-----------------------------------------
                           1195 ;	 function calculator_int1_handler
                           1196 ;	-----------------------------------------
   05D8                    1197 _calculator_int1_handler:
   05D8 C0*00              1198 	push	_bp
   05DA 85 81*00           1199 	mov	_bp,sp
   05DD AA 82              1200 	mov	r2,dpl
   05DF AB 83              1201 	mov	r3,dph
   05E1 AC F0              1202 	mov	r4,b
                           1203 ;	../sm_test_calculator.c:138: TRANSITION_ON(POINT,												TO(frac1),				NO_ACTION) ;
   05E3 E5*00              1204 	mov	a,_bp
   05E5 24 FB              1205 	add	a,#0xfb
   05E7 F8                 1206 	mov	r0,a
   05E8 86 05              1207 	mov	ar5,@r0
   05EA 08                 1208 	inc	r0
   05EB 86 06              1209 	mov	ar6,@r0
   05ED 08                 1210 	inc	r0
   05EE 86 07              1211 	mov	ar7,@r0
   05F0 8D 82              1212 	mov	dpl,r5
   05F2 8E 83              1213 	mov	dph,r6
   05F4 8F F0              1214 	mov	b,r7
   05F6 12s00r00           1215 	lcall	__gptrget
   05F9 FD                 1216 	mov	r5,a
   05FA BD 0A 23           1217 	cjne	r5,#0x0A,00102$
   05FD 74 08              1218 	mov	a,#0x08
   05FF 2A                 1219 	add	a,r2
   0600 FA                 1220 	mov	r2,a
   0601 E4                 1221 	clr	a
   0602 3B                 1222 	addc	a,r3
   0603 FB                 1223 	mov	r3,a
   0604 8A 82              1224 	mov	dpl,r2
   0606 8B 83              1225 	mov	dph,r3
   0608 8C F0              1226 	mov	b,r4
   060A 74r51              1227 	mov	a,#_calculator_frac1
   060C 12s00r00           1228 	lcall	__gptrput
   060F A3                 1229 	inc	dptr
   0610 74s00              1230 	mov	a,#(_calculator_frac1 >> 8)
   0612 12s00r00           1231 	lcall	__gptrput
   0615 A3                 1232 	inc	dptr
   0616 74 80              1233 	mov	a,#0x80
   0618 12s00r00           1234 	lcall	__gptrput
   061B 75 82 02           1235 	mov	dpl,#0x02
   061E 80 03              1236 	sjmp	00103$
   0620                    1237 00102$:
                           1238 ;	../sm_test_calculator.c:140: END_DEFINE_STATE()
   0620 75 82 00           1239 	mov	dpl,#0x00
   0623                    1240 00103$:
   0623 D0*00              1241 	pop	_bp
   0625 22                 1242 	ret
                           1243 ;------------------------------------------------------------
                           1244 ;Allocation info for local variables in function 'calculator_frac1_handler'
                           1245 ;------------------------------------------------------------
                           1246 ;event                     Allocated to stack - offset -5
                           1247 ;self                      Allocated to registers 
                           1248 ;stateResponseCode         Allocated to registers 
                           1249 ;------------------------------------------------------------
                           1250 ;	../sm_test_calculator.c:143: DEFINE_STATE(frac1)
                           1251 ;	-----------------------------------------
                           1252 ;	 function calculator_frac1_handler
                           1253 ;	-----------------------------------------
   0626                    1254 _calculator_frac1_handler:
   0626 C0*00              1255 	push	_bp
   0628 85 81*00           1256 	mov	_bp,sp
                           1257 ;	../sm_test_calculator.c:145: CONSUME_EVENT(POINT,																		NO_ACTION) ;
   062B E5*00              1258 	mov	a,_bp
   062D 24 FB              1259 	add	a,#0xfb
   062F F8                 1260 	mov	r0,a
   0630 86 02              1261 	mov	ar2,@r0
   0632 08                 1262 	inc	r0
   0633 86 03              1263 	mov	ar3,@r0
   0635 08                 1264 	inc	r0
   0636 86 04              1265 	mov	ar4,@r0
   0638 8A 82              1266 	mov	dpl,r2
   063A 8B 83              1267 	mov	dph,r3
   063C 8C F0              1268 	mov	b,r4
   063E 12s00r00           1269 	lcall	__gptrget
   0641 FA                 1270 	mov	r2,a
   0642 BA 0A 05           1271 	cjne	r2,#0x0A,00102$
   0645 75 82 01           1272 	mov	dpl,#0x01
   0648 80 03              1273 	sjmp	00103$
   064A                    1274 00102$:
                           1275 ;	../sm_test_calculator.c:147: END_DEFINE_STATE()
   064A 75 82 00           1276 	mov	dpl,#0x00
   064D                    1277 00103$:
   064D D0*00              1278 	pop	_bp
   064F 22                 1279 	ret
                           1280 ;------------------------------------------------------------
                           1281 ;Allocation info for local variables in function 'calculator_error_handler'
                           1282 ;------------------------------------------------------------
                           1283 ;event                     Allocated to stack - offset -5
                           1284 ;self                      Allocated to registers r2 r3 r4 
                           1285 ;stateResponseCode         Allocated to registers 
                           1286 ;------------------------------------------------------------
                           1287 ;	../sm_test_calculator.c:150: DEFINE_STATE(error)
                           1288 ;	-----------------------------------------
                           1289 ;	 function calculator_error_handler
                           1290 ;	-----------------------------------------
   0650                    1291 _calculator_error_handler:
   0650 C0*00              1292 	push	_bp
   0652 85 81*00           1293 	mov	_bp,sp
   0655 AA 82              1294 	mov	r2,dpl
   0657 AB 83              1295 	mov	r3,dph
   0659 AC F0              1296 	mov	r4,b
                           1297 ;	../sm_test_calculator.c:152: INITIAL_TRANSITION(TO(frac2),																NO_ACTION) ;
   065B E5*00              1298 	mov	a,_bp
   065D 24 FB              1299 	add	a,#0xfb
   065F F8                 1300 	mov	r0,a
   0660 86 05              1301 	mov	ar5,@r0
   0662 08                 1302 	inc	r0
   0663 86 06              1303 	mov	ar6,@r0
   0665 08                 1304 	inc	r0
   0666 86 07              1305 	mov	ar7,@r0
   0668 8D 82              1306 	mov	dpl,r5
   066A 8E 83              1307 	mov	dph,r6
   066C 8F F0              1308 	mov	b,r7
   066E 12s00r00           1309 	lcall	__gptrget
   0671 FD                 1310 	mov	r5,a
   0672 BD 02 23           1311 	cjne	r5,#0x02,00102$
   0675 74 08              1312 	mov	a,#0x08
   0677 2A                 1313 	add	a,r2
   0678 FA                 1314 	mov	r2,a
   0679 E4                 1315 	clr	a
   067A 3B                 1316 	addc	a,r3
   067B FB                 1317 	mov	r3,a
   067C 8A 82              1318 	mov	dpl,r2
   067E 8B 83              1319 	mov	dph,r3
   0680 8C F0              1320 	mov	b,r4
   0682 74r90              1321 	mov	a,#_calculator_frac2
   0684 12s00r00           1322 	lcall	__gptrput
   0687 A3                 1323 	inc	dptr
   0688 74s00              1324 	mov	a,#(_calculator_frac2 >> 8)
   068A 12s00r00           1325 	lcall	__gptrput
   068D A3                 1326 	inc	dptr
   068E 74 80              1327 	mov	a,#0x80
   0690 12s00r00           1328 	lcall	__gptrput
   0693 75 82 02           1329 	mov	dpl,#0x02
   0696 80 03              1330 	sjmp	00103$
   0698                    1331 00102$:
                           1332 ;	../sm_test_calculator.c:154: END_DEFINE_STATE()
   0698 75 82 00           1333 	mov	dpl,#0x00
   069B                    1334 00103$:
   069B D0*00              1335 	pop	_bp
   069D 22                 1336 	ret
                           1337 ;------------------------------------------------------------
                           1338 ;Allocation info for local variables in function 'calculator_opEntered_handler'
                           1339 ;------------------------------------------------------------
                           1340 ;event                     Allocated to stack - offset -5
                           1341 ;self                      Allocated to registers r2 r3 r4 
                           1342 ;stateResponseCode         Allocated to registers 
                           1343 ;stateResponseCode         Allocated to registers 
                           1344 ;stateResponseCode         Allocated to registers 
                           1345 ;stateResponseCode         Allocated to registers 
                           1346 ;stateResponseCode         Allocated to registers 
                           1347 ;sloc0                     Allocated to stack - offset 1
                           1348 ;------------------------------------------------------------
                           1349 ;	../sm_test_calculator.c:157: DEFINE_STATE(opEntered)
                           1350 ;	-----------------------------------------
                           1351 ;	 function calculator_opEntered_handler
                           1352 ;	-----------------------------------------
   069E                    1353 _calculator_opEntered_handler:
   069E C0*00              1354 	push	_bp
   06A0 85 81*00           1355 	mov	_bp,sp
   06A3 05 81              1356 	inc	sp
   06A5 AA 82              1357 	mov	r2,dpl
   06A7 AB 83              1358 	mov	r3,dph
   06A9 AC F0              1359 	mov	r4,b
                           1360 ;	../sm_test_calculator.c:159: TRANSITION_ON_IF(OPERATION,	IF(CAST_EVENT(keyEvent_t)->key == '-'),	TO(negated2),			NO_ACTION) ;
   06AB E5*00              1361 	mov	a,_bp
   06AD 24 FB              1362 	add	a,#0xfb
   06AF F8                 1363 	mov	r0,a
   06B0 86 05              1364 	mov	ar5,@r0
   06B2 08                 1365 	inc	r0
   06B3 86 06              1366 	mov	ar6,@r0
   06B5 08                 1367 	inc	r0
   06B6 86 07              1368 	mov	ar7,@r0
   06B8 8D 82              1369 	mov	dpl,r5
   06BA 8E 83              1370 	mov	dph,r6
   06BC 8F F0              1371 	mov	b,r7
   06BE A8*00              1372 	mov	r0,_bp
   06C0 08                 1373 	inc	r0
   06C1 12s00r00           1374 	lcall	__gptrget
   06C4 F6                 1375 	mov	@r0,a
   06C5 A8*00              1376 	mov	r0,_bp
   06C7 08                 1377 	inc	r0
   06C8 B6 0B 38           1378 	cjne	@r0,#0x0B,00102$
   06CB 0D                 1379 	inc	r5
   06CC BD 00 01           1380 	cjne	r5,#0x00,00119$
   06CF 0E                 1381 	inc	r6
   06D0                    1382 00119$:
   06D0 8D 82              1383 	mov	dpl,r5
   06D2 8E 83              1384 	mov	dph,r6
   06D4 8F F0              1385 	mov	b,r7
   06D6 12s00r00           1386 	lcall	__gptrget
   06D9 FD                 1387 	mov	r5,a
   06DA BD 2D 26           1388 	cjne	r5,#0x2D,00102$
   06DD 74 08              1389 	mov	a,#0x08
   06DF 2A                 1390 	add	a,r2
   06E0 FD                 1391 	mov	r5,a
   06E1 E4                 1392 	clr	a
   06E2 3B                 1393 	addc	a,r3
   06E3 FE                 1394 	mov	r6,a
   06E4 8C 07              1395 	mov	ar7,r4
   06E6 8D 82              1396 	mov	dpl,r5
   06E8 8E 83              1397 	mov	dph,r6
   06EA 8F F0              1398 	mov	b,r7
   06EC 74r6C              1399 	mov	a,#_calculator_negated2
   06EE 12s00r00           1400 	lcall	__gptrput
   06F1 A3                 1401 	inc	dptr
   06F2 74s00              1402 	mov	a,#(_calculator_negated2 >> 8)
   06F4 12s00r00           1403 	lcall	__gptrput
   06F7 A3                 1404 	inc	dptr
   06F8 74 80              1405 	mov	a,#0x80
   06FA 12s00r00           1406 	lcall	__gptrput
   06FD 75 82 02           1407 	mov	dpl,#0x02
   0700 02s07r85           1408 	ljmp	00110$
   0703                    1409 00102$:
                           1410 ;	../sm_test_calculator.c:160: TRANSITION_ON(DIGIT_0,												TO(zero2),				NO_ACTION) ;
   0703 A8*00              1411 	mov	r0,_bp
   0705 08                 1412 	inc	r0
   0706 B6 08 25           1413 	cjne	@r0,#0x08,00105$
   0709 74 08              1414 	mov	a,#0x08
   070B 2A                 1415 	add	a,r2
   070C FD                 1416 	mov	r5,a
   070D E4                 1417 	clr	a
   070E 3B                 1418 	addc	a,r3
   070F FE                 1419 	mov	r6,a
   0710 8C 07              1420 	mov	ar7,r4
   0712 8D 82              1421 	mov	dpl,r5
   0714 8E 83              1422 	mov	dph,r6
   0716 8F F0              1423 	mov	b,r7
   0718 74r7E              1424 	mov	a,#_calculator_zero2
   071A 12s00r00           1425 	lcall	__gptrput
   071D A3                 1426 	inc	dptr
   071E 74s00              1427 	mov	a,#(_calculator_zero2 >> 8)
   0720 12s00r00           1428 	lcall	__gptrput
   0723 A3                 1429 	inc	dptr
   0724 74 80              1430 	mov	a,#0x80
   0726 12s00r00           1431 	lcall	__gptrput
   0729 75 82 02           1432 	mov	dpl,#0x02
   072C 80 57              1433 	sjmp	00110$
   072E                    1434 00105$:
                           1435 ;	../sm_test_calculator.c:161: TRANSITION_ON(DIGIT_1_9,											TO(int2),				NO_ACTION) ;
   072E A8*00              1436 	mov	r0,_bp
   0730 08                 1437 	inc	r0
   0731 B6 09 25           1438 	cjne	@r0,#0x09,00107$
   0734 74 08              1439 	mov	a,#0x08
   0736 2A                 1440 	add	a,r2
   0737 FD                 1441 	mov	r5,a
   0738 E4                 1442 	clr	a
   0739 3B                 1443 	addc	a,r3
   073A FE                 1444 	mov	r6,a
   073B 8C 07              1445 	mov	ar7,r4
   073D 8D 82              1446 	mov	dpl,r5
   073F 8E 83              1447 	mov	dph,r6
   0741 8F F0              1448 	mov	b,r7
   0743 74r87              1449 	mov	a,#_calculator_int2
   0745 12s00r00           1450 	lcall	__gptrput
   0748 A3                 1451 	inc	dptr
   0749 74s00              1452 	mov	a,#(_calculator_int2 >> 8)
   074B 12s00r00           1453 	lcall	__gptrput
   074E A3                 1454 	inc	dptr
   074F 74 80              1455 	mov	a,#0x80
   0751 12s00r00           1456 	lcall	__gptrput
   0754 75 82 02           1457 	mov	dpl,#0x02
   0757 80 2C              1458 	sjmp	00110$
   0759                    1459 00107$:
                           1460 ;	../sm_test_calculator.c:162: TRANSITION_ON(POINT,												TO(frac2),				NO_ACTION) ;
   0759 A8*00              1461 	mov	r0,_bp
   075B 08                 1462 	inc	r0
   075C B6 0A 23           1463 	cjne	@r0,#0x0A,00109$
   075F 74 08              1464 	mov	a,#0x08
   0761 2A                 1465 	add	a,r2
   0762 FA                 1466 	mov	r2,a
   0763 E4                 1467 	clr	a
   0764 3B                 1468 	addc	a,r3
   0765 FB                 1469 	mov	r3,a
   0766 8A 82              1470 	mov	dpl,r2
   0768 8B 83              1471 	mov	dph,r3
   076A 8C F0              1472 	mov	b,r4
   076C 74r90              1473 	mov	a,#_calculator_frac2
   076E 12s00r00           1474 	lcall	__gptrput
   0771 A3                 1475 	inc	dptr
   0772 74s00              1476 	mov	a,#(_calculator_frac2 >> 8)
   0774 12s00r00           1477 	lcall	__gptrput
   0777 A3                 1478 	inc	dptr
   0778 74 80              1479 	mov	a,#0x80
   077A 12s00r00           1480 	lcall	__gptrput
   077D 75 82 02           1481 	mov	dpl,#0x02
   0780 80 03              1482 	sjmp	00110$
   0782                    1483 00109$:
                           1484 ;	../sm_test_calculator.c:164: END_DEFINE_STATE()
   0782 75 82 00           1485 	mov	dpl,#0x00
   0785                    1486 00110$:
   0785 85*00 81           1487 	mov	sp,_bp
   0788 D0*00              1488 	pop	_bp
   078A 22                 1489 	ret
                           1490 ;------------------------------------------------------------
                           1491 ;Allocation info for local variables in function 'calculator_negated2_handler'
                           1492 ;------------------------------------------------------------
                           1493 ;event                     Allocated to stack - offset -5
                           1494 ;self                      Allocated to stack - offset 1
                           1495 ;stateResponseCode         Allocated to registers 
                           1496 ;stateResponseCode         Allocated to registers 
                           1497 ;stateResponseCode         Allocated to registers 
                           1498 ;stateResponseCode         Allocated to registers 
                           1499 ;stateResponseCode         Allocated to registers 
                           1500 ;sloc0                     Allocated to stack - offset 9
                           1501 ;------------------------------------------------------------
                           1502 ;	../sm_test_calculator.c:167: DEFINE_STATE(negated2)
                           1503 ;	-----------------------------------------
                           1504 ;	 function calculator_negated2_handler
                           1505 ;	-----------------------------------------
   078B                    1506 _calculator_negated2_handler:
   078B C0*00              1507 	push	_bp
   078D 85 81*00           1508 	mov	_bp,sp
   0790 C0 82              1509 	push	dpl
   0792 C0 83              1510 	push	dph
   0794 C0 F0              1511 	push	b
                           1512 ;	../sm_test_calculator.c:169: TRANSITION_ON(CLEAR_ENTRY,											TO(opEntered),			NO_ACTION) ;
   0796 E5*00              1513 	mov	a,_bp
   0798 24 FB              1514 	add	a,#0xfb
   079A F8                 1515 	mov	r0,a
   079B 86 05              1516 	mov	ar5,@r0
   079D 08                 1517 	inc	r0
   079E 86 06              1518 	mov	ar6,@r0
   07A0 08                 1519 	inc	r0
   07A1 86 07              1520 	mov	ar7,@r0
   07A3 8D 82              1521 	mov	dpl,r5
   07A5 8E 83              1522 	mov	dph,r6
   07A7 8F F0              1523 	mov	b,r7
   07A9 12s00r00           1524 	lcall	__gptrget
   07AC FA                 1525 	mov	r2,a
   07AD BA 07 2B           1526 	cjne	r2,#0x07,00102$
   07B0 A8*00              1527 	mov	r0,_bp
   07B2 08                 1528 	inc	r0
   07B3 74 08              1529 	mov	a,#0x08
   07B5 26                 1530 	add	a,@r0
   07B6 FA                 1531 	mov	r2,a
   07B7 E4                 1532 	clr	a
   07B8 08                 1533 	inc	r0
   07B9 36                 1534 	addc	a,@r0
   07BA FB                 1535 	mov	r3,a
   07BB 08                 1536 	inc	r0
   07BC 86 04              1537 	mov	ar4,@r0
   07BE 8A 82              1538 	mov	dpl,r2
   07C0 8B 83              1539 	mov	dph,r3
   07C2 8C F0              1540 	mov	b,r4
   07C4 74r63              1541 	mov	a,#_calculator_opEntered
   07C6 12s00r00           1542 	lcall	__gptrput
   07C9 A3                 1543 	inc	dptr
   07CA 74s00              1544 	mov	a,#(_calculator_opEntered >> 8)
   07CC 12s00r00           1545 	lcall	__gptrput
   07CF A3                 1546 	inc	dptr
   07D0 74 80              1547 	mov	a,#0x80
   07D2 12s00r00           1548 	lcall	__gptrput
   07D5 75 82 02           1549 	mov	dpl,#0x02
   07D8 02s08r80           1550 	ljmp	00112$
   07DB                    1551 00102$:
                           1552 ;	../sm_test_calculator.c:170: TRANSITION_ON(DIGIT_0,												TO(zero2),				NO_ACTION) ;
   07DB BA 08 2B           1553 	cjne	r2,#0x08,00104$
   07DE A8*00              1554 	mov	r0,_bp
   07E0 08                 1555 	inc	r0
   07E1 74 08              1556 	mov	a,#0x08
   07E3 26                 1557 	add	a,@r0
   07E4 FA                 1558 	mov	r2,a
   07E5 E4                 1559 	clr	a
   07E6 08                 1560 	inc	r0
   07E7 36                 1561 	addc	a,@r0
   07E8 FB                 1562 	mov	r3,a
   07E9 08                 1563 	inc	r0
   07EA 86 04              1564 	mov	ar4,@r0
   07EC 8A 82              1565 	mov	dpl,r2
   07EE 8B 83              1566 	mov	dph,r3
   07F0 8C F0              1567 	mov	b,r4
   07F2 74r7E              1568 	mov	a,#_calculator_zero2
   07F4 12s00r00           1569 	lcall	__gptrput
   07F7 A3                 1570 	inc	dptr
   07F8 74s00              1571 	mov	a,#(_calculator_zero2 >> 8)
   07FA 12s00r00           1572 	lcall	__gptrput
   07FD A3                 1573 	inc	dptr
   07FE 74 80              1574 	mov	a,#0x80
   0800 12s00r00           1575 	lcall	__gptrput
   0803 75 82 02           1576 	mov	dpl,#0x02
   0806 02s08r80           1577 	ljmp	00112$
   0809                    1578 00104$:
                           1579 ;	../sm_test_calculator.c:171: TRANSITION_ON(DIGIT_1_9,											TO(int2),				NO_ACTION) ;
   0809 BA 09 2A           1580 	cjne	r2,#0x09,00106$
   080C A8*00              1581 	mov	r0,_bp
   080E 08                 1582 	inc	r0
   080F 74 08              1583 	mov	a,#0x08
   0811 26                 1584 	add	a,@r0
   0812 FA                 1585 	mov	r2,a
   0813 E4                 1586 	clr	a
   0814 08                 1587 	inc	r0
   0815 36                 1588 	addc	a,@r0
   0816 FB                 1589 	mov	r3,a
   0817 08                 1590 	inc	r0
   0818 86 04              1591 	mov	ar4,@r0
   081A 8A 82              1592 	mov	dpl,r2
   081C 8B 83              1593 	mov	dph,r3
   081E 8C F0              1594 	mov	b,r4
   0820 74r87              1595 	mov	a,#_calculator_int2
   0822 12s00r00           1596 	lcall	__gptrput
   0825 A3                 1597 	inc	dptr
   0826 74s00              1598 	mov	a,#(_calculator_int2 >> 8)
   0828 12s00r00           1599 	lcall	__gptrput
   082B A3                 1600 	inc	dptr
   082C 74 80              1601 	mov	a,#0x80
   082E 12s00r00           1602 	lcall	__gptrput
   0831 75 82 02           1603 	mov	dpl,#0x02
   0834 80 4A              1604 	sjmp	00112$
   0836                    1605 00106$:
                           1606 ;	../sm_test_calculator.c:172: TRANSITION_ON(POINT,												TO(frac2),				NO_ACTION) ;
   0836 BA 0A 2A           1607 	cjne	r2,#0x0A,00108$
   0839 A8*00              1608 	mov	r0,_bp
   083B 08                 1609 	inc	r0
   083C 74 08              1610 	mov	a,#0x08
   083E 26                 1611 	add	a,@r0
   083F FA                 1612 	mov	r2,a
   0840 E4                 1613 	clr	a
   0841 08                 1614 	inc	r0
   0842 36                 1615 	addc	a,@r0
   0843 FB                 1616 	mov	r3,a
   0844 08                 1617 	inc	r0
   0845 86 04              1618 	mov	ar4,@r0
   0847 8A 82              1619 	mov	dpl,r2
   0849 8B 83              1620 	mov	dph,r3
   084B 8C F0              1621 	mov	b,r4
   084D 74r90              1622 	mov	a,#_calculator_frac2
   084F 12s00r00           1623 	lcall	__gptrput
   0852 A3                 1624 	inc	dptr
   0853 74s00              1625 	mov	a,#(_calculator_frac2 >> 8)
   0855 12s00r00           1626 	lcall	__gptrput
   0858 A3                 1627 	inc	dptr
   0859 74 80              1628 	mov	a,#0x80
   085B 12s00r00           1629 	lcall	__gptrput
   085E 75 82 02           1630 	mov	dpl,#0x02
   0861 80 1D              1631 	sjmp	00112$
   0863                    1632 00108$:
                           1633 ;	../sm_test_calculator.c:173: CONSUME_EVENT_IF(OPERATION,	IF(CAST_EVENT(keyEvent_t)->key == '-'),							NO_ACTION) ;
   0863 BA 0B 17           1634 	cjne	r2,#0x0B,00110$
   0866 0D                 1635 	inc	r5
   0867 BD 00 01           1636 	cjne	r5,#0x00,00130$
   086A 0E                 1637 	inc	r6
   086B                    1638 00130$:
   086B 8D 82              1639 	mov	dpl,r5
   086D 8E 83              1640 	mov	dph,r6
   086F 8F F0              1641 	mov	b,r7
   0871 12s00r00           1642 	lcall	__gptrget
   0874 FD                 1643 	mov	r5,a
   0875 BD 2D 05           1644 	cjne	r5,#0x2D,00110$
   0878 75 82 01           1645 	mov	dpl,#0x01
   087B 80 03              1646 	sjmp	00112$
   087D                    1647 00110$:
                           1648 ;	../sm_test_calculator.c:175: END_DEFINE_STATE()
   087D 75 82 00           1649 	mov	dpl,#0x00
   0880                    1650 00112$:
   0880 85*00 81           1651 	mov	sp,_bp
   0883 D0*00              1652 	pop	_bp
   0885 22                 1653 	ret
                           1654 ;------------------------------------------------------------
                           1655 ;Allocation info for local variables in function 'doCalculation'
                           1656 ;------------------------------------------------------------
                           1657 ;type                      Allocated with name '_doCalculation_type_1_1'
                           1658 ;------------------------------------------------------------
                           1659 ;	../sm_test_calculator.c:178: uint8_t doCalculation(	uint8_t type)
                           1660 ;	-----------------------------------------
                           1661 ;	 function doCalculation
                           1662 ;	-----------------------------------------
   0886                    1663 _doCalculation:
   0886 E5 82              1664 	mov	a,dpl
   0888 90s00r09           1665 	mov	dptr,#_doCalculation_type_1_1
   088B F0                 1666 	movx	@dptr,a
                           1667 ;	../sm_test_calculator.c:180: switch(type)
   088C 90s00r09           1668 	mov	dptr,#_doCalculation_type_1_1
   088F E0                 1669 	movx	a,@dptr
   0890 FA                 1670 	mov	r2,a
   0891 BA 2A 02           1671 	cjne	r2,#0x2A,00113$
   0894 80 17              1672 	sjmp	00103$
   0896                    1673 00113$:
   0896 BA 2B 02           1674 	cjne	r2,#0x2B,00114$
   0899 80 0A              1675 	sjmp	00101$
   089B                    1676 00114$:
   089B BA 2D 02           1677 	cjne	r2,#0x2D,00115$
   089E 80 09              1678 	sjmp	00102$
   08A0                    1679 00115$:
                           1680 ;	../sm_test_calculator.c:182: case '+': { return true ; }
   08A0 BA 2F 12           1681 	cjne	r2,#0x2F,00105$
   08A3 80 0C              1682 	sjmp	00104$
   08A5                    1683 00101$:
   08A5 75 82 01           1684 	mov	dpl,#0x01
                           1685 ;	../sm_test_calculator.c:183: case '-': { return true ; }
   08A8 22                 1686 	ret
   08A9                    1687 00102$:
   08A9 75 82 01           1688 	mov	dpl,#0x01
                           1689 ;	../sm_test_calculator.c:184: case '*': { return true ; }
   08AC 22                 1690 	ret
   08AD                    1691 00103$:
   08AD 75 82 01           1692 	mov	dpl,#0x01
                           1693 ;	../sm_test_calculator.c:185: case '/': { return true ; }
   08B0 22                 1694 	ret
   08B1                    1695 00104$:
   08B1 75 82 01           1696 	mov	dpl,#0x01
                           1697 ;	../sm_test_calculator.c:186: default:  { return false ; }
                           1698 ;	../sm_test_calculator.c:187: }
   08B4 22                 1699 	ret
   08B5                    1700 00105$:
   08B5 75 82 00           1701 	mov	dpl,#0x00
   08B8 22                 1702 	ret
                           1703 ;------------------------------------------------------------
                           1704 ;Allocation info for local variables in function 'calculator_operand2_handler'
                           1705 ;------------------------------------------------------------
                           1706 ;event                     Allocated to stack - offset -5
                           1707 ;self                      Allocated to stack - offset 1
                           1708 ;stateResponseCode         Allocated to registers 
                           1709 ;stateResponseCode         Allocated to registers 
                           1710 ;goodCalc                  Allocated to registers r2 
                           1711 ;stateResponseCode         Allocated to registers 
                           1712 ;stateResponseCode         Allocated to registers 
                           1713 ;stateResponseCode         Allocated to registers 
                           1714 ;sloc0                     Allocated to stack - offset 10
                           1715 ;------------------------------------------------------------
                           1716 ;	../sm_test_calculator.c:191: DEFINE_STATE(operand2)
                           1717 ;	-----------------------------------------
                           1718 ;	 function calculator_operand2_handler
                           1719 ;	-----------------------------------------
   08B9                    1720 _calculator_operand2_handler:
   08B9 C0*00              1721 	push	_bp
   08BB 85 81*00           1722 	mov	_bp,sp
   08BE C0 82              1723 	push	dpl
   08C0 C0 83              1724 	push	dph
   08C2 C0 F0              1725 	push	b
                           1726 ;	../sm_test_calculator.c:193: TRANSITION_ON(CLEAR_ENTRY,											TO(opEntered),			NO_ACTION) ;
   08C4 E5*00              1727 	mov	a,_bp
   08C6 24 FB              1728 	add	a,#0xfb
   08C8 F8                 1729 	mov	r0,a
   08C9 86 05              1730 	mov	ar5,@r0
   08CB 08                 1731 	inc	r0
   08CC 86 06              1732 	mov	ar6,@r0
   08CE 08                 1733 	inc	r0
   08CF 86 07              1734 	mov	ar7,@r0
   08D1 8D 82              1735 	mov	dpl,r5
   08D3 8E 83              1736 	mov	dph,r6
   08D5 8F F0              1737 	mov	b,r7
   08D7 12s00r00           1738 	lcall	__gptrget
   08DA FA                 1739 	mov	r2,a
   08DB BA 07 2B           1740 	cjne	r2,#0x07,00102$
   08DE A8*00              1741 	mov	r0,_bp
   08E0 08                 1742 	inc	r0
   08E1 74 08              1743 	mov	a,#0x08
   08E3 26                 1744 	add	a,@r0
   08E4 FA                 1745 	mov	r2,a
   08E5 E4                 1746 	clr	a
   08E6 08                 1747 	inc	r0
   08E7 36                 1748 	addc	a,@r0
   08E8 FB                 1749 	mov	r3,a
   08E9 08                 1750 	inc	r0
   08EA 86 04              1751 	mov	ar4,@r0
   08EC 8A 82              1752 	mov	dpl,r2
   08EE 8B 83              1753 	mov	dph,r3
   08F0 8C F0              1754 	mov	b,r4
   08F2 74r63              1755 	mov	a,#_calculator_opEntered
   08F4 12s00r00           1756 	lcall	__gptrput
   08F7 A3                 1757 	inc	dptr
   08F8 74s00              1758 	mov	a,#(_calculator_opEntered >> 8)
   08FA 12s00r00           1759 	lcall	__gptrput
   08FD A3                 1760 	inc	dptr
   08FE 74 80              1761 	mov	a,#0x80
   0900 12s00r00           1762 	lcall	__gptrput
   0903 75 82 02           1763 	mov	dpl,#0x02
   0906 02s09rD4           1764 	ljmp	00114$
   0909                    1765 00102$:
                           1766 ;	../sm_test_calculator.c:195: HANDLE_STATE_EVENTS
   0909 BA 0B 02           1767 	cjne	r2,#0x0B,00123$
   090C 80 08              1768 	sjmp	00104$
   090E                    1769 00123$:
   090E BA 0C 02           1770 	cjne	r2,#0x0C,00124$
   0911 80 03              1771 	sjmp	00125$
   0913                    1772 00124$:
   0913 02s09rD1           1773 	ljmp	00113$
   0916                    1774 00125$:
                           1775 ;	../sm_test_calculator.c:198: EVENT(EQUALS)
   0916                    1776 00104$:
                           1777 ;	../sm_test_calculator.c:200: uint8_t goodCalc = doCalculation(CAST_EVENT(keyEvent_t)->key) ;
   0916 74 01              1778 	mov	a,#0x01
   0918 2D                 1779 	add	a,r5
   0919 FA                 1780 	mov	r2,a
   091A E4                 1781 	clr	a
   091B 3E                 1782 	addc	a,r6
   091C FB                 1783 	mov	r3,a
   091D 8F 04              1784 	mov	ar4,r7
   091F 8A 82              1785 	mov	dpl,r2
   0921 8B 83              1786 	mov	dph,r3
   0923 8C F0              1787 	mov	b,r4
   0925 12s00r00           1788 	lcall	__gptrget
   0928 F5 82              1789 	mov	dpl,a
   092A C0 05              1790 	push	ar5
   092C C0 06              1791 	push	ar6
   092E C0 07              1792 	push	ar7
   0930 12s08r86           1793 	lcall	_doCalculation
   0933 AA 82              1794 	mov	r2,dpl
   0935 D0 07              1795 	pop	ar7
   0937 D0 06              1796 	pop	ar6
   0939 D0 05              1797 	pop	ar5
                           1798 ;	../sm_test_calculator.c:202: if(goodCalc)
   093B EA                 1799 	mov	a,r2
   093C 60 64              1800 	jz	00110$
                           1801 ;	../sm_test_calculator.c:204: TRANSITION_ON(OPERATION,								TO(opEntered),			NO_ACTION) ;
   093E 8D 82              1802 	mov	dpl,r5
   0940 8E 83              1803 	mov	dph,r6
   0942 8F F0              1804 	mov	b,r7
   0944 12s00r00           1805 	lcall	__gptrget
   0947 FA                 1806 	mov	r2,a
   0948 BA 0B 2A           1807 	cjne	r2,#0x0B,00106$
   094B A8*00              1808 	mov	r0,_bp
   094D 08                 1809 	inc	r0
   094E 74 08              1810 	mov	a,#0x08
   0950 26                 1811 	add	a,@r0
   0951 FB                 1812 	mov	r3,a
   0952 E4                 1813 	clr	a
   0953 08                 1814 	inc	r0
   0954 36                 1815 	addc	a,@r0
   0955 FC                 1816 	mov	r4,a
   0956 08                 1817 	inc	r0
   0957 86 05              1818 	mov	ar5,@r0
   0959 8B 82              1819 	mov	dpl,r3
   095B 8C 83              1820 	mov	dph,r4
   095D 8D F0              1821 	mov	b,r5
   095F 74r63              1822 	mov	a,#_calculator_opEntered
   0961 12s00r00           1823 	lcall	__gptrput
   0964 A3                 1824 	inc	dptr
   0965 74s00              1825 	mov	a,#(_calculator_opEntered >> 8)
   0967 12s00r00           1826 	lcall	__gptrput
   096A A3                 1827 	inc	dptr
   096B 74 80              1828 	mov	a,#0x80
   096D 12s00r00           1829 	lcall	__gptrput
   0970 75 82 02           1830 	mov	dpl,#0x02
   0973 80 5F              1831 	sjmp	00114$
   0975                    1832 00106$:
                           1833 ;	../sm_test_calculator.c:205: TRANSITION_ON(EQUALS,									TO(result),				NO_ACTION) ;
   0975 BA 0C 54           1834 	cjne	r2,#0x0C,00111$
   0978 A8*00              1835 	mov	r0,_bp
   097A 08                 1836 	inc	r0
   097B 74 08              1837 	mov	a,#0x08
   097D 26                 1838 	add	a,@r0
   097E FA                 1839 	mov	r2,a
   097F E4                 1840 	clr	a
   0980 08                 1841 	inc	r0
   0981 36                 1842 	addc	a,@r0
   0982 FB                 1843 	mov	r3,a
   0983 08                 1844 	inc	r0
   0984 86 04              1845 	mov	ar4,@r0
   0986 8A 82              1846 	mov	dpl,r2
   0988 8B 83              1847 	mov	dph,r3
   098A 8C F0              1848 	mov	b,r4
   098C 74r1B              1849 	mov	a,#_calculator_result
   098E 12s00r00           1850 	lcall	__gptrput
   0991 A3                 1851 	inc	dptr
   0992 74s00              1852 	mov	a,#(_calculator_result >> 8)
   0994 12s00r00           1853 	lcall	__gptrput
   0997 A3                 1854 	inc	dptr
   0998 74 80              1855 	mov	a,#0x80
   099A 12s00r00           1856 	lcall	__gptrput
   099D 75 82 02           1857 	mov	dpl,#0x02
   09A0 80 32              1858 	sjmp	00114$
   09A2                    1859 00110$:
                           1860 ;	../sm_test_calculator.c:209: TRANSITION_TO(error, NO_ACTION) ;
   09A2 A8*00              1861 	mov	r0,_bp
   09A4 08                 1862 	inc	r0
   09A5 74 08              1863 	mov	a,#0x08
   09A7 26                 1864 	add	a,@r0
   09A8 FA                 1865 	mov	r2,a
   09A9 E4                 1866 	clr	a
   09AA 08                 1867 	inc	r0
   09AB 36                 1868 	addc	a,@r0
   09AC FB                 1869 	mov	r3,a
   09AD 08                 1870 	inc	r0
   09AE 86 04              1871 	mov	ar4,@r0
   09B0 8A 82              1872 	mov	dpl,r2
   09B2 8B 83              1873 	mov	dph,r3
   09B4 8C F0              1874 	mov	b,r4
   09B6 74r5A              1875 	mov	a,#_calculator_error
   09B8 12s00r00           1876 	lcall	__gptrput
   09BB A3                 1877 	inc	dptr
   09BC 74s00              1878 	mov	a,#(_calculator_error >> 8)
   09BE 12s00r00           1879 	lcall	__gptrput
   09C1 A3                 1880 	inc	dptr
   09C2 74 80              1881 	mov	a,#0x80
   09C4 12s00r00           1882 	lcall	__gptrput
   09C7 75 82 02           1883 	mov	dpl,#0x02
   09CA 80 08              1884 	sjmp	00114$
   09CC                    1885 00111$:
                           1886 ;	../sm_test_calculator.c:212: EVENT_HANDLED
   09CC 75 82 01           1887 	mov	dpl,#0x01
                           1888 ;	../sm_test_calculator.c:214: HANDLE_STATE_EVENTS_DONE
   09CF 80 03              1889 	sjmp	00114$
   09D1                    1890 00113$:
                           1891 ;	../sm_test_calculator.c:216: END_DEFINE_STATE()
   09D1 75 82 00           1892 	mov	dpl,#0x00
   09D4                    1893 00114$:
   09D4 85*00 81           1894 	mov	sp,_bp
   09D7 D0*00              1895 	pop	_bp
   09D9 22                 1896 	ret
                           1897 ;------------------------------------------------------------
                           1898 ;Allocation info for local variables in function 'calculator_zero2_handler'
                           1899 ;------------------------------------------------------------
                           1900 ;event                     Allocated to stack - offset -5
                           1901 ;self                      Allocated to stack - offset 1
                           1902 ;stateResponseCode         Allocated to registers 
                           1903 ;stateResponseCode         Allocated to registers 
                           1904 ;stateResponseCode         Allocated to registers 
                           1905 ;------------------------------------------------------------
                           1906 ;	../sm_test_calculator.c:219: DEFINE_STATE(zero2)
                           1907 ;	-----------------------------------------
                           1908 ;	 function calculator_zero2_handler
                           1909 ;	-----------------------------------------
   09DA                    1910 _calculator_zero2_handler:
   09DA C0*00              1911 	push	_bp
   09DC 85 81*00           1912 	mov	_bp,sp
   09DF C0 82              1913 	push	dpl
   09E1 C0 83              1914 	push	dph
   09E3 C0 F0              1915 	push	b
                           1916 ;	../sm_test_calculator.c:221: INITIAL_TRANSITION(TO(negated1),															NO_ACTION) ;
   09E5 E5*00              1917 	mov	a,_bp
   09E7 24 FB              1918 	add	a,#0xfb
   09E9 F8                 1919 	mov	r0,a
   09EA 86 05              1920 	mov	ar5,@r0
   09EC 08                 1921 	inc	r0
   09ED 86 06              1922 	mov	ar6,@r0
   09EF 08                 1923 	inc	r0
   09F0 86 07              1924 	mov	ar7,@r0
   09F2 8D 82              1925 	mov	dpl,r5
   09F4 8E 83              1926 	mov	dph,r6
   09F6 8F F0              1927 	mov	b,r7
   09F8 12s00r00           1928 	lcall	__gptrget
   09FB FD                 1929 	mov	r5,a
   09FC BD 02 2A           1930 	cjne	r5,#0x02,00102$
   09FF A8*00              1931 	mov	r0,_bp
   0A01 08                 1932 	inc	r0
   0A02 74 08              1933 	mov	a,#0x08
   0A04 26                 1934 	add	a,@r0
   0A05 FE                 1935 	mov	r6,a
   0A06 E4                 1936 	clr	a
   0A07 08                 1937 	inc	r0
   0A08 36                 1938 	addc	a,@r0
   0A09 FF                 1939 	mov	r7,a
   0A0A 08                 1940 	inc	r0
   0A0B 86 02              1941 	mov	ar2,@r0
   0A0D 8E 82              1942 	mov	dpl,r6
   0A0F 8F 83              1943 	mov	dph,r7
   0A11 8A F0              1944 	mov	b,r2
   0A13 74r2D              1945 	mov	a,#_calculator_negated1
   0A15 12s00r00           1946 	lcall	__gptrput
   0A18 A3                 1947 	inc	dptr
   0A19 74s00              1948 	mov	a,#(_calculator_negated1 >> 8)
   0A1B 12s00r00           1949 	lcall	__gptrput
   0A1E A3                 1950 	inc	dptr
   0A1F 74 80              1951 	mov	a,#0x80
   0A21 12s00r00           1952 	lcall	__gptrput
   0A24 75 82 02           1953 	mov	dpl,#0x02
   0A27 80 65              1954 	sjmp	00109$
   0A29                    1955 00102$:
                           1956 ;	../sm_test_calculator.c:222: CONSUME_EVENT(DIGIT_0,																		NO_ACTION) ;
   0A29 BD 08 05           1957 	cjne	r5,#0x08,00104$
   0A2C 75 82 01           1958 	mov	dpl,#0x01
   0A2F 80 5D              1959 	sjmp	00109$
   0A31                    1960 00104$:
                           1961 ;	../sm_test_calculator.c:223: TRANSITION_ON(DIGIT_1_9,											TO(int2),				NO_ACTION) ;
   0A31 BD 09 2A           1962 	cjne	r5,#0x09,00106$
   0A34 A8*00              1963 	mov	r0,_bp
   0A36 08                 1964 	inc	r0
   0A37 74 08              1965 	mov	a,#0x08
   0A39 26                 1966 	add	a,@r0
   0A3A FA                 1967 	mov	r2,a
   0A3B E4                 1968 	clr	a
   0A3C 08                 1969 	inc	r0
   0A3D 36                 1970 	addc	a,@r0
   0A3E FB                 1971 	mov	r3,a
   0A3F 08                 1972 	inc	r0
   0A40 86 04              1973 	mov	ar4,@r0
   0A42 8A 82              1974 	mov	dpl,r2
   0A44 8B 83              1975 	mov	dph,r3
   0A46 8C F0              1976 	mov	b,r4
   0A48 74r87              1977 	mov	a,#_calculator_int2
   0A4A 12s00r00           1978 	lcall	__gptrput
   0A4D A3                 1979 	inc	dptr
   0A4E 74s00              1980 	mov	a,#(_calculator_int2 >> 8)
   0A50 12s00r00           1981 	lcall	__gptrput
   0A53 A3                 1982 	inc	dptr
   0A54 74 80              1983 	mov	a,#0x80
   0A56 12s00r00           1984 	lcall	__gptrput
   0A59 75 82 02           1985 	mov	dpl,#0x02
   0A5C 80 30              1986 	sjmp	00109$
   0A5E                    1987 00106$:
                           1988 ;	../sm_test_calculator.c:224: TRANSITION_ON(POINT,												TO(frac2),				NO_ACTION) ;
   0A5E BD 0A 2A           1989 	cjne	r5,#0x0A,00108$
   0A61 A8*00              1990 	mov	r0,_bp
   0A63 08                 1991 	inc	r0
   0A64 74 08              1992 	mov	a,#0x08
   0A66 26                 1993 	add	a,@r0
   0A67 FA                 1994 	mov	r2,a
   0A68 E4                 1995 	clr	a
   0A69 08                 1996 	inc	r0
   0A6A 36                 1997 	addc	a,@r0
   0A6B FB                 1998 	mov	r3,a
   0A6C 08                 1999 	inc	r0
   0A6D 86 04              2000 	mov	ar4,@r0
   0A6F 8A 82              2001 	mov	dpl,r2
   0A71 8B 83              2002 	mov	dph,r3
   0A73 8C F0              2003 	mov	b,r4
   0A75 74r90              2004 	mov	a,#_calculator_frac2
   0A77 12s00r00           2005 	lcall	__gptrput
   0A7A A3                 2006 	inc	dptr
   0A7B 74s00              2007 	mov	a,#(_calculator_frac2 >> 8)
   0A7D 12s00r00           2008 	lcall	__gptrput
   0A80 A3                 2009 	inc	dptr
   0A81 74 80              2010 	mov	a,#0x80
   0A83 12s00r00           2011 	lcall	__gptrput
   0A86 75 82 02           2012 	mov	dpl,#0x02
   0A89 80 03              2013 	sjmp	00109$
   0A8B                    2014 00108$:
                           2015 ;	../sm_test_calculator.c:226: END_DEFINE_STATE()
   0A8B 75 82 00           2016 	mov	dpl,#0x00
   0A8E                    2017 00109$:
   0A8E 85*00 81           2018 	mov	sp,_bp
   0A91 D0*00              2019 	pop	_bp
   0A93 22                 2020 	ret
                           2021 ;------------------------------------------------------------
                           2022 ;Allocation info for local variables in function 'calculator_int2_handler'
                           2023 ;------------------------------------------------------------
                           2024 ;event                     Allocated to stack - offset -5
                           2025 ;self                      Allocated to registers r2 r3 r4 
                           2026 ;stateResponseCode         Allocated to registers 
                           2027 ;stateResponseCode         Allocated to registers 
                           2028 ;------------------------------------------------------------
                           2029 ;	../sm_test_calculator.c:229: DEFINE_STATE(int2)
                           2030 ;	-----------------------------------------
                           2031 ;	 function calculator_int2_handler
                           2032 ;	-----------------------------------------
   0A94                    2033 _calculator_int2_handler:
   0A94 C0*00              2034 	push	_bp
   0A96 85 81*00           2035 	mov	_bp,sp
   0A99 AA 82              2036 	mov	r2,dpl
   0A9B AB 83              2037 	mov	r3,dph
   0A9D AC F0              2038 	mov	r4,b
                           2039 ;	../sm_test_calculator.c:231: TRANSITION_ON(POINT,												TO(frac2),				NO_ACTION) ;
   0A9F E5*00              2040 	mov	a,_bp
   0AA1 24 FB              2041 	add	a,#0xfb
   0AA3 F8                 2042 	mov	r0,a
   0AA4 86 05              2043 	mov	ar5,@r0
   0AA6 08                 2044 	inc	r0
   0AA7 86 06              2045 	mov	ar6,@r0
   0AA9 08                 2046 	inc	r0
   0AAA 86 07              2047 	mov	ar7,@r0
   0AAC 8D 82              2048 	mov	dpl,r5
   0AAE 8E 83              2049 	mov	dph,r6
   0AB0 8F F0              2050 	mov	b,r7
   0AB2 12s00r00           2051 	lcall	__gptrget
   0AB5 FD                 2052 	mov	r5,a
   0AB6 BD 0A 23           2053 	cjne	r5,#0x0A,00102$
   0AB9 74 08              2054 	mov	a,#0x08
   0ABB 2A                 2055 	add	a,r2
   0ABC FA                 2056 	mov	r2,a
   0ABD E4                 2057 	clr	a
   0ABE 3B                 2058 	addc	a,r3
   0ABF FB                 2059 	mov	r3,a
   0AC0 8A 82              2060 	mov	dpl,r2
   0AC2 8B 83              2061 	mov	dph,r3
   0AC4 8C F0              2062 	mov	b,r4
   0AC6 74r90              2063 	mov	a,#_calculator_frac2
   0AC8 12s00r00           2064 	lcall	__gptrput
   0ACB A3                 2065 	inc	dptr
   0ACC 74s00              2066 	mov	a,#(_calculator_frac2 >> 8)
   0ACE 12s00r00           2067 	lcall	__gptrput
   0AD1 A3                 2068 	inc	dptr
   0AD2 74 80              2069 	mov	a,#0x80
   0AD4 12s00r00           2070 	lcall	__gptrput
   0AD7 75 82 02           2071 	mov	dpl,#0x02
   0ADA 80 03              2072 	sjmp	00103$
   0ADC                    2073 00102$:
                           2074 ;	../sm_test_calculator.c:233: END_DEFINE_STATE()
   0ADC 75 82 00           2075 	mov	dpl,#0x00
   0ADF                    2076 00103$:
   0ADF D0*00              2077 	pop	_bp
   0AE1 22                 2078 	ret
                           2079 ;------------------------------------------------------------
                           2080 ;Allocation info for local variables in function 'calculator_frac2_handler'
                           2081 ;------------------------------------------------------------
                           2082 ;event                     Allocated to stack - offset -5
                           2083 ;self                      Allocated to registers 
                           2084 ;stateResponseCode         Allocated to registers 
                           2085 ;------------------------------------------------------------
                           2086 ;	../sm_test_calculator.c:236: DEFINE_STATE(frac2)
                           2087 ;	-----------------------------------------
                           2088 ;	 function calculator_frac2_handler
                           2089 ;	-----------------------------------------
   0AE2                    2090 _calculator_frac2_handler:
   0AE2 C0*00              2091 	push	_bp
   0AE4 85 81*00           2092 	mov	_bp,sp
                           2093 ;	../sm_test_calculator.c:238: CONSUME_EVENT(POINT,																		NO_ACTION) ;
   0AE7 E5*00              2094 	mov	a,_bp
   0AE9 24 FB              2095 	add	a,#0xfb
   0AEB F8                 2096 	mov	r0,a
   0AEC 86 02              2097 	mov	ar2,@r0
   0AEE 08                 2098 	inc	r0
   0AEF 86 03              2099 	mov	ar3,@r0
   0AF1 08                 2100 	inc	r0
   0AF2 86 04              2101 	mov	ar4,@r0
   0AF4 8A 82              2102 	mov	dpl,r2
   0AF6 8B 83              2103 	mov	dph,r3
   0AF8 8C F0              2104 	mov	b,r4
   0AFA 12s00r00           2105 	lcall	__gptrget
   0AFD FA                 2106 	mov	r2,a
   0AFE BA 0A 05           2107 	cjne	r2,#0x0A,00102$
   0B01 75 82 01           2108 	mov	dpl,#0x01
   0B04 80 03              2109 	sjmp	00103$
   0B06                    2110 00102$:
                           2111 ;	../sm_test_calculator.c:240: END_DEFINE_STATE()
   0B06 75 82 00           2112 	mov	dpl,#0x00
   0B09                    2113 00103$:
   0B09 D0*00              2114 	pop	_bp
   0B0B 22                 2115 	ret
                           2116 	.area CSEG    (CODE)
                           2117 	.area CONST   (CODE)
   0000                    2118 _calculator_TOP:
                           2119 ; generic printIvalPtr
   0000 00 00 00           2120 	.byte #0x00,#0x00,#0x00
   0003 00                 2121 	.db #0x00
   0004rEEs00              2122 	.byte _calculator_TOP_handler,(_calculator_TOP_handler >> 8)
   0006rA4s00 80           2123 	.byte _str_1,(_str_1 >> 8),#0x80
   0009                    2124 _calculator_on:
   0009r00s00 80           2125 	.byte _calculator_TOP,(_calculator_TOP >> 8),#0x80
   000C 00                 2126 	.db #0x00
   000Dr3Cs01              2127 	.byte _calculator_on_handler,(_calculator_on_handler >> 8)
   000FrB3s00 80           2128 	.byte _str_2,(_str_2 >> 8),#0x80
   0012                    2129 _calculator_ready:
   0012r09s00 80           2130 	.byte _calculator_on,(_calculator_on >> 8),#0x80
   0015 00                 2131 	.db #0x00
   0016rEEs01              2132 	.byte _calculator_ready_handler,(_calculator_ready_handler >> 8)
   0018rC1s00 80           2133 	.byte _str_3,(_str_3 >> 8),#0x80
   001B                    2134 _calculator_result:
   001Br12s00 80           2135 	.byte _calculator_ready,(_calculator_ready >> 8),#0x80
   001E 00                 2136 	.db #0x00
   001Fr73s02              2137 	.byte _calculator_result_handler,(_calculator_result_handler >> 8)
   0021rD2s00 80           2138 	.byte _str_4,(_str_4 >> 8),#0x80
   0024                    2139 _calculator_begin:
   0024r12s00 80           2140 	.byte _calculator_ready,(_calculator_ready >> 8),#0x80
   0027 00                 2141 	.db #0x00
   0028r7Es02              2142 	.byte _calculator_begin_handler,(_calculator_begin_handler >> 8)
   002ArE4s00 80           2143 	.byte _str_5,(_str_5 >> 8),#0x80
   002D                    2144 _calculator_negated1:
   002Dr09s00 80           2145 	.byte _calculator_on,(_calculator_on >> 8),#0x80
   0030 00                 2146 	.db #0x00
   0031r9Es03              2147 	.byte _calculator_negated1_handler,(_calculator_negated1_handler >> 8)
   0033rF5s00 80           2148 	.byte _str_6,(_str_6 >> 8),#0x80
   0036                    2149 _calculator_operand1:
   0036r09s00 80           2150 	.byte _calculator_on,(_calculator_on >> 8),#0x80
   0039 00                 2151 	.db #0x00
   003Ar99s04              2152 	.byte _calculator_operand1_handler,(_calculator_operand1_handler >> 8)
   003Cr09s01 80           2153 	.byte _str_7,(_str_7 >> 8),#0x80
   003F                    2154 _calculator_zero1:
   003Fr36s00 80           2155 	.byte _calculator_operand1,(_calculator_operand1 >> 8),#0x80
   0042 00                 2156 	.db #0x00
   0043r1Es05              2157 	.byte _calculator_zero1_handler,(_calculator_zero1_handler >> 8)
   0045r1Ds01 80           2158 	.byte _str_8,(_str_8 >> 8),#0x80
   0048                    2159 _calculator_int1:
   0048r36s00 80           2160 	.byte _calculator_operand1,(_calculator_operand1 >> 8),#0x80
   004B 00                 2161 	.db #0x00
   004CrD8s05              2162 	.byte _calculator_int1_handler,(_calculator_int1_handler >> 8)
   004Er2Es01 80           2163 	.byte _str_9,(_str_9 >> 8),#0x80
   0051                    2164 _calculator_frac1:
   0051r36s00 80           2165 	.byte _calculator_operand1,(_calculator_operand1 >> 8),#0x80
   0054 00                 2166 	.db #0x00
   0055r26s06              2167 	.byte _calculator_frac1_handler,(_calculator_frac1_handler >> 8)
   0057r3Es01 80           2168 	.byte _str_10,(_str_10 >> 8),#0x80
   005A                    2169 _calculator_error:
   005Ar09s00 80           2170 	.byte _calculator_on,(_calculator_on >> 8),#0x80
   005D 00                 2171 	.db #0x00
   005Er50s06              2172 	.byte _calculator_error_handler,(_calculator_error_handler >> 8)
   0060r4Fs01 80           2173 	.byte _str_11,(_str_11 >> 8),#0x80
   0063                    2174 _calculator_opEntered:
   0063r09s00 80           2175 	.byte _calculator_on,(_calculator_on >> 8),#0x80
   0066 00                 2176 	.db #0x00
   0067r9Es06              2177 	.byte _calculator_opEntered_handler,(_calculator_opEntered_handler >> 8)
   0069r60s01 80           2178 	.byte _str_12,(_str_12 >> 8),#0x80
   006C                    2179 _calculator_negated2:
   006Cr09s00 80           2180 	.byte _calculator_on,(_calculator_on >> 8),#0x80
   006F 00                 2181 	.db #0x00
   0070r8Bs07              2182 	.byte _calculator_negated2_handler,(_calculator_negated2_handler >> 8)
   0072r75s01 80           2183 	.byte _str_13,(_str_13 >> 8),#0x80
   0075                    2184 _calculator_operand2:
   0075r09s00 80           2185 	.byte _calculator_on,(_calculator_on >> 8),#0x80
   0078 00                 2186 	.db #0x00
   0079rB9s08              2187 	.byte _calculator_operand2_handler,(_calculator_operand2_handler >> 8)
   007Br89s01 80           2188 	.byte _str_14,(_str_14 >> 8),#0x80
   007E                    2189 _calculator_zero2:
   007Er75s00 80           2190 	.byte _calculator_operand2,(_calculator_operand2 >> 8),#0x80
   0081 00                 2191 	.db #0x00
   0082rDAs09              2192 	.byte _calculator_zero2_handler,(_calculator_zero2_handler >> 8)
   0084r9Ds01 80           2193 	.byte _str_15,(_str_15 >> 8),#0x80
   0087                    2194 _calculator_int2:
   0087r75s00 80           2195 	.byte _calculator_operand2,(_calculator_operand2 >> 8),#0x80
   008A 00                 2196 	.db #0x00
   008Br94s0A              2197 	.byte _calculator_int2_handler,(_calculator_int2_handler >> 8)
   008DrAEs01 80           2198 	.byte _str_16,(_str_16 >> 8),#0x80
   0090                    2199 _calculator_frac2:
   0090r75s00 80           2200 	.byte _calculator_operand2,(_calculator_operand2 >> 8),#0x80
   0093 00                 2201 	.db #0x00
   0094rE2s0A              2202 	.byte _calculator_frac2_handler,(_calculator_frac2_handler >> 8)
   0096rBEs01 80           2203 	.byte _str_17,(_str_17 >> 8),#0x80
   0099                    2204 __str_0:
   0099 63 61 6C 63 75 6C  2205 	.ascii "calculator"
        61 74 6F 72
   00A3 00                 2206 	.db 0x00
   00A4                    2207 _str_1:
   00A4 63 61 6C 63 75 6C  2208 	.ascii "calculator_TOP"
        61 74 6F 72 5F 54
        4F 50
   00B2 00                 2209 	.db 0x00
   00B3                    2210 _str_2:
   00B3 63 61 6C 63 75 6C  2211 	.ascii "calculator_on"
        61 74 6F 72 5F 6F
        6E
   00C0 00                 2212 	.db 0x00
   00C1                    2213 _str_3:
   00C1 63 61 6C 63 75 6C  2214 	.ascii "calculator_ready"
        61 74 6F 72 5F 72
        65 61 64 79
   00D1 00                 2215 	.db 0x00
   00D2                    2216 _str_4:
   00D2 63 61 6C 63 75 6C  2217 	.ascii "calculator_result"
        61 74 6F 72 5F 72
        65 73 75 6C 74
   00E3 00                 2218 	.db 0x00
   00E4                    2219 _str_5:
   00E4 63 61 6C 63 75 6C  2220 	.ascii "calculator_begin"
        61 74 6F 72 5F 62
        65 67 69 6E
   00F4 00                 2221 	.db 0x00
   00F5                    2222 _str_6:
   00F5 63 61 6C 63 75 6C  2223 	.ascii "calculator_negated1"
        61 74 6F 72 5F 6E
        65 67 61 74 65 64
        31
   0108 00                 2224 	.db 0x00
   0109                    2225 _str_7:
   0109 63 61 6C 63 75 6C  2226 	.ascii "calculator_operand1"
        61 74 6F 72 5F 6F
        70 65 72 61 6E 64
        31
   011C 00                 2227 	.db 0x00
   011D                    2228 _str_8:
   011D 63 61 6C 63 75 6C  2229 	.ascii "calculator_zero1"
        61 74 6F 72 5F 7A
        65 72 6F 31
   012D 00                 2230 	.db 0x00
   012E                    2231 _str_9:
   012E 63 61 6C 63 75 6C  2232 	.ascii "calculator_int1"
        61 74 6F 72 5F 69
        6E 74 31
   013D 00                 2233 	.db 0x00
   013E                    2234 _str_10:
   013E 63 61 6C 63 75 6C  2235 	.ascii "calculator_frac1"
        61 74 6F 72 5F 66
        72 61 63 31
   014E 00                 2236 	.db 0x00
   014F                    2237 _str_11:
   014F 63 61 6C 63 75 6C  2238 	.ascii "calculator_error"
        61 74 6F 72 5F 65
        72 72 6F 72
   015F 00                 2239 	.db 0x00
   0160                    2240 _str_12:
   0160 63 61 6C 63 75 6C  2241 	.ascii "calculator_opEntered"
        61 74 6F 72 5F 6F
        70 45 6E 74 65 72
        65 64
   0174 00                 2242 	.db 0x00
   0175                    2243 _str_13:
   0175 63 61 6C 63 75 6C  2244 	.ascii "calculator_negated2"
        61 74 6F 72 5F 6E
        65 67 61 74 65 64
        32
   0188 00                 2245 	.db 0x00
   0189                    2246 _str_14:
   0189 63 61 6C 63 75 6C  2247 	.ascii "calculator_operand2"
        61 74 6F 72 5F 6F
        70 65 72 61 6E 64
        32
   019C 00                 2248 	.db 0x00
   019D                    2249 _str_15:
   019D 63 61 6C 63 75 6C  2250 	.ascii "calculator_zero2"
        61 74 6F 72 5F 7A
        65 72 6F 32
   01AD 00                 2251 	.db 0x00
   01AE                    2252 _str_16:
   01AE 63 61 6C 63 75 6C  2253 	.ascii "calculator_int2"
        61 74 6F 72 5F 69
        6E 74 32
   01BD 00                 2254 	.db 0x00
   01BE                    2255 _str_17:
   01BE 63 61 6C 63 75 6C  2256 	.ascii "calculator_frac2"
        61 74 6F 72 5F 66
        72 61 63 32
   01CE 00                 2257 	.db 0x00
                           2258 	.area XINIT   (CODE)
   0000                    2259 __xinit__calculator_name:
   0000r99s00 80           2260 	.byte __str_0,(__str_0 >> 8),#0x80
                           2261 	.area CABS    (ABS,CODE)
