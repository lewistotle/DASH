                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.0 #5416 (Mar 22 2009) (MINGW32)
                              4 ; This file was generated Sat Jan 23 00:00:23 2010
                              5 ;--------------------------------------------------------
                              6 	.module sm_test_calculator
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _doCalculation
                             13 	.globl _calculator_getMemoryRequirements
                             14 	.globl _calculator_constructor
                             15 	.globl _calculator_destructor
                             16 	.globl _calculator_getHistoryArraySize
                             17 	.globl _calculator_getMachineSize
                             18 	.globl _calculator_constructor2
                             19 	.globl _calculator_destructor2
                             20 ;--------------------------------------------------------
                             21 ; special function registers
                             22 ;--------------------------------------------------------
                             23 	.area RSEG    (DATA)
                             24 ;--------------------------------------------------------
                             25 ; special function bits
                             26 ;--------------------------------------------------------
                             27 	.area RSEG    (DATA)
                             28 ;--------------------------------------------------------
                             29 ; overlayable register banks
                             30 ;--------------------------------------------------------
                             31 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      32 	.ds 8
                             33 ;--------------------------------------------------------
                             34 ; internal ram data
                             35 ;--------------------------------------------------------
                             36 	.area DSEG    (DATA)
   0000                      37 _calculator_constructor_sloc0_1_0:
   0000                      38 	.ds 3
                             39 ;--------------------------------------------------------
                             40 ; overlayable items in internal ram 
                             41 ;--------------------------------------------------------
                             42 	.area OSEG    (OVR,DATA)
                             43 ;--------------------------------------------------------
                             44 ; indirectly addressable internal ram data
                             45 ;--------------------------------------------------------
                             46 	.area ISEG    (DATA)
                             47 ;--------------------------------------------------------
                             48 ; absolute internal ram data
                             49 ;--------------------------------------------------------
                             50 	.area IABS    (ABS,DATA)
                             51 	.area IABS    (ABS,DATA)
                             52 ;--------------------------------------------------------
                             53 ; bit data
                             54 ;--------------------------------------------------------
                             55 	.area BSEG    (BIT)
                             56 ;--------------------------------------------------------
                             57 ; paged external ram data
                             58 ;--------------------------------------------------------
                             59 	.area PSEG    (PAG,XDATA)
                             60 ;--------------------------------------------------------
                             61 ; external ram data
                             62 ;--------------------------------------------------------
                             63 	.area XSEG    (XDATA)
   0000                      64 _calculator_getMemoryRequirements_calculator_eventPools_1_1:
   0000                      65 	.ds 8
   0008                      66 _calculator_getMemoryRequirements_calculator_memPool_1_1:
   0008                      67 	.ds 7
   000F                      68 _calculator_constructor_base_1_1:
   000F                      69 	.ds 3
   0012                      70 _calculator_destructor_self_1_1:
   0012                      71 	.ds 3
   0015                      72 _calculator_constructor2_self_1_1:
   0015                      73 	.ds 3
   0018                      74 _doCalculation_type_1_1:
   0018                      75 	.ds 1
                             76 ;--------------------------------------------------------
                             77 ; absolute external ram data
                             78 ;--------------------------------------------------------
                             79 	.area XABS    (ABS,XDATA)
                             80 ;--------------------------------------------------------
                             81 ; external initialized ram data
                             82 ;--------------------------------------------------------
                             83 	.area XISEG   (XDATA)
   0000                      84 _calculator_name:
   0000                      85 	.ds 3
                             86 	.area HOME    (CODE)
                             87 	.area GSINIT0 (CODE)
                             88 	.area GSINIT1 (CODE)
                             89 	.area GSINIT2 (CODE)
                             90 	.area GSINIT3 (CODE)
                             91 	.area GSINIT4 (CODE)
                             92 	.area GSINIT5 (CODE)
                             93 	.area GSINIT  (CODE)
                             94 	.area GSFINAL (CODE)
                             95 	.area CSEG    (CODE)
                             96 ;--------------------------------------------------------
                             97 ; global & static initialisations
                             98 ;--------------------------------------------------------
                             99 	.area HOME    (CODE)
                            100 	.area GSINIT  (CODE)
                            101 	.area GSFINAL (CODE)
                            102 	.area GSINIT  (CODE)
                            103 ;------------------------------------------------------------
                            104 ;Allocation info for local variables in function 'calculator_getMemoryRequirements'
                            105 ;------------------------------------------------------------
                            106 ;calculator_eventPools     Allocated with name '_calculator_getMemoryRequirements_calculator_eventPools_1_1'
                            107 ;calculator_memPool        Allocated with name '_calculator_getMemoryRequirements_calculator_memPool_1_1'
                            108 ;------------------------------------------------------------
                            109 ;	../sm_test_calculator.c:25: START_MEMORY_POOL_DECLARATIONS()
   0000 90s00r00            110 	mov	dptr,#_calculator_getMemoryRequirements_calculator_eventPools_1_1
   0003 74 08               111 	mov	a,#0x08
   0005 F0                  112 	movx	@dptr,a
   0006 A3                  113 	inc	dptr
   0007 E4                  114 	clr	a
   0008 F0                  115 	movx	@dptr,a
   0009 90s00r02            116 	mov	dptr,#(_calculator_getMemoryRequirements_calculator_eventPools_1_1 + 0x0002)
   000C 74 03               117 	mov	a,#0x03
   000E F0                  118 	movx	@dptr,a
   000F A3                  119 	inc	dptr
   0010 E4                  120 	clr	a
   0011 F0                  121 	movx	@dptr,a
   0012 90s00r04            122 	mov	dptr,#(_calculator_getMemoryRequirements_calculator_eventPools_1_1 + 0x0004)
   0015 74 0C               123 	mov	a,#0x0C
   0017 F0                  124 	movx	@dptr,a
   0018 A3                  125 	inc	dptr
   0019 E4                  126 	clr	a
   001A F0                  127 	movx	@dptr,a
   001B 90s00r06            128 	mov	dptr,#(_calculator_getMemoryRequirements_calculator_eventPools_1_1 + 0x0006)
   001E 74 02               129 	mov	a,#0x02
   0020 F0                  130 	movx	@dptr,a
   0021 A3                  131 	inc	dptr
   0022 E4                  132 	clr	a
   0023 F0                  133 	movx	@dptr,a
                            134 ;	../sm_test_calculator.c:32: END_MEMORY_REQUIREMENTS()
   0024 90s00r08            135 	mov	dptr,#_calculator_getMemoryRequirements_calculator_memPool_1_1
   0027 74 10               136 	mov	a,#0x10
   0029 F0                  137 	movx	@dptr,a
   002A A3                  138 	inc	dptr
   002B E4                  139 	clr	a
   002C F0                  140 	movx	@dptr,a
   002D 90s00r0A            141 	mov	dptr,#(_calculator_getMemoryRequirements_calculator_memPool_1_1 + 0x0002)
   0030 74 02               142 	mov	a,#0x02
   0032 F0                  143 	movx	@dptr,a
   0033 A3                  144 	inc	dptr
   0034 E4                  145 	clr	a
   0035 F0                  146 	movx	@dptr,a
   0036 90s00r0C            147 	mov	dptr,#(_calculator_getMemoryRequirements_calculator_memPool_1_1 + 0x0004)
   0039 74r00               148 	mov	a,#_calculator_getMemoryRequirements_calculator_eventPools_1_1
   003B F0                  149 	movx	@dptr,a
   003C A3                  150 	inc	dptr
   003D 74s00               151 	mov	a,#(_calculator_getMemoryRequirements_calculator_eventPools_1_1 >> 8)
   003F F0                  152 	movx	@dptr,a
   0040 A3                  153 	inc	dptr
   0041 E4                  154 	clr	a
   0042 F0                  155 	movx	@dptr,a
                            156 ;--------------------------------------------------------
                            157 ; Home
                            158 ;--------------------------------------------------------
                            159 	.area HOME    (CODE)
                            160 	.area HOME    (CODE)
                            161 ;--------------------------------------------------------
                            162 ; code
                            163 ;--------------------------------------------------------
                            164 	.area CSEG    (CODE)
                            165 ;------------------------------------------------------------
                            166 ;Allocation info for local variables in function 'calculator_getMemoryRequirements'
                            167 ;------------------------------------------------------------
                            168 ;calculator_eventPools     Allocated with name '_calculator_getMemoryRequirements_calculator_eventPools_1_1'
                            169 ;calculator_memPool        Allocated with name '_calculator_getMemoryRequirements_calculator_memPool_1_1'
                            170 ;------------------------------------------------------------
                            171 ;	../sm_test_calculator.c:21: DECLARE_MEMORY_REQUIREMENTS()
                            172 ;	-----------------------------------------
                            173 ;	 function calculator_getMemoryRequirements
                            174 ;	-----------------------------------------
   0000                     175 _calculator_getMemoryRequirements:
                    0002    176 	ar2 = 0x02
                    0003    177 	ar3 = 0x03
                    0004    178 	ar4 = 0x04
                    0005    179 	ar5 = 0x05
                    0006    180 	ar6 = 0x06
                    0007    181 	ar7 = 0x07
                    0000    182 	ar0 = 0x00
                    0001    183 	ar1 = 0x01
                            184 ;	../sm_test_calculator.c:32: END_MEMORY_REQUIREMENTS()
   0000 90s00r08            185 	mov	dptr,#_calculator_getMemoryRequirements_calculator_memPool_1_1
   0003 75 F0 00            186 	mov	b,#0x00
   0006 22                  187 	ret
                            188 ;------------------------------------------------------------
                            189 ;Allocation info for local variables in function 'calculator_constructor'
                            190 ;------------------------------------------------------------
                            191 ;sloc0                     Allocated with name '_calculator_constructor_sloc0_1_0'
                            192 ;base                      Allocated with name '_calculator_constructor_base_1_1'
                            193 ;------------------------------------------------------------
                            194 ;	../sm_test_calculator.c:60: END_STATE_MACHINE_DEFINITION() ;
                            195 ;	-----------------------------------------
                            196 ;	 function calculator_constructor
                            197 ;	-----------------------------------------
   0007                     198 _calculator_constructor:
   0007 AA F0               199 	mov	r2,b
   0009 AB 83               200 	mov	r3,dph
   000B E5 82               201 	mov	a,dpl
   000D 90s00r0F            202 	mov	dptr,#_calculator_constructor_base_1_1
   0010 F0                  203 	movx	@dptr,a
   0011 A3                  204 	inc	dptr
   0012 EB                  205 	mov	a,r3
   0013 F0                  206 	movx	@dptr,a
   0014 A3                  207 	inc	dptr
   0015 EA                  208 	mov	a,r2
   0016 F0                  209 	movx	@dptr,a
   0017 90s00r0F            210 	mov	dptr,#_calculator_constructor_base_1_1
   001A E0                  211 	movx	a,@dptr
   001B FA                  212 	mov	r2,a
   001C A3                  213 	inc	dptr
   001D E0                  214 	movx	a,@dptr
   001E FB                  215 	mov	r3,a
   001F A3                  216 	inc	dptr
   0020 E0                  217 	movx	a,@dptr
   0021 FC                  218 	mov	r4,a
   0022 8A 82               219 	mov	dpl,r2
   0024 8B 83               220 	mov	dph,r3
   0026 8C F0               221 	mov	b,r4
   0028 74r00               222 	mov	a,#_calculator_TOP
   002A 12s00r00            223 	lcall	__gptrput
   002D A3                  224 	inc	dptr
   002E 74s00               225 	mov	a,#(_calculator_TOP >> 8)
   0030 12s00r00            226 	lcall	__gptrput
   0033 74 05               227 	mov	a,#0x05
   0035 2A                  228 	add	a,r2
   0036 FD                  229 	mov	r5,a
   0037 E4                  230 	clr	a
   0038 3B                  231 	addc	a,r3
   0039 FE                  232 	mov	r6,a
   003A 8C 07               233 	mov	ar7,r4
   003C 8D 82               234 	mov	dpl,r5
   003E 8E 83               235 	mov	dph,r6
   0040 8F F0               236 	mov	b,r7
   0042 74r00               237 	mov	a,#_calculator_TOP
   0044 12s00r00            238 	lcall	__gptrput
   0047 A3                  239 	inc	dptr
   0048 74s00               240 	mov	a,#(_calculator_TOP >> 8)
   004A 12s00r00            241 	lcall	__gptrput
   004D A3                  242 	inc	dptr
   004E 74 80               243 	mov	a,#0x80
   0050 12s00r00            244 	lcall	__gptrput
   0053 74 02               245 	mov	a,#0x02
   0055 2A                  246 	add	a,r2
   0056 F5*00               247 	mov	_calculator_constructor_sloc0_1_0,a
   0058 E4                  248 	clr	a
   0059 3B                  249 	addc	a,r3
   005A F5*01               250 	mov	(_calculator_constructor_sloc0_1_0 + 1),a
   005C 8C*02               251 	mov	(_calculator_constructor_sloc0_1_0 + 2),r4
   005E 90s00r00            252 	mov	dptr,#_calculator_name
   0061 E0                  253 	movx	a,@dptr
   0062 F8                  254 	mov	r0,a
   0063 A3                  255 	inc	dptr
   0064 E0                  256 	movx	a,@dptr
   0065 F9                  257 	mov	r1,a
   0066 A3                  258 	inc	dptr
   0067 E0                  259 	movx	a,@dptr
   0068 FD                  260 	mov	r5,a
   0069 85*00 82            261 	mov	dpl,_calculator_constructor_sloc0_1_0
   006C 85*01 83            262 	mov	dph,(_calculator_constructor_sloc0_1_0 + 1)
   006F 85*02 F0            263 	mov	b,(_calculator_constructor_sloc0_1_0 + 2)
   0072 E8                  264 	mov	a,r0
   0073 12s00r00            265 	lcall	__gptrput
   0076 A3                  266 	inc	dptr
   0077 E9                  267 	mov	a,r1
   0078 12s00r00            268 	lcall	__gptrput
   007B A3                  269 	inc	dptr
   007C ED                  270 	mov	a,r5
   007D 12s00r00            271 	lcall	__gptrput
   0080 8A 82               272 	mov	dpl,r2
   0082 8B 83               273 	mov	dph,r3
   0084 8C F0               274 	mov	b,r4
   0086 02s00rB5            275 	ljmp	_calculator_constructor2
                            276 ;------------------------------------------------------------
                            277 ;Allocation info for local variables in function 'calculator_destructor'
                            278 ;------------------------------------------------------------
                            279 ;self                      Allocated with name '_calculator_destructor_self_1_1'
                            280 ;------------------------------------------------------------
                            281 ;	../sm_test_calculator.c:60: 
                            282 ;	-----------------------------------------
                            283 ;	 function calculator_destructor
                            284 ;	-----------------------------------------
   0089                     285 _calculator_destructor:
   0089 AA F0               286 	mov	r2,b
   008B AB 83               287 	mov	r3,dph
   008D E5 82               288 	mov	a,dpl
   008F 90s00r12            289 	mov	dptr,#_calculator_destructor_self_1_1
   0092 F0                  290 	movx	@dptr,a
   0093 A3                  291 	inc	dptr
   0094 EB                  292 	mov	a,r3
   0095 F0                  293 	movx	@dptr,a
   0096 A3                  294 	inc	dptr
   0097 EA                  295 	mov	a,r2
   0098 F0                  296 	movx	@dptr,a
   0099 90s00r12            297 	mov	dptr,#_calculator_destructor_self_1_1
   009C E0                  298 	movx	a,@dptr
   009D FA                  299 	mov	r2,a
   009E A3                  300 	inc	dptr
   009F E0                  301 	movx	a,@dptr
   00A0 FB                  302 	mov	r3,a
   00A1 A3                  303 	inc	dptr
   00A2 E0                  304 	movx	a,@dptr
   00A3 FC                  305 	mov	r4,a
   00A4 8A 82               306 	mov	dpl,r2
   00A6 8B 83               307 	mov	dph,r3
   00A8 8C F0               308 	mov	b,r4
   00AA 02s01r09            309 	ljmp	_calculator_destructor2
                            310 ;------------------------------------------------------------
                            311 ;Allocation info for local variables in function 'calculator_getHistoryArraySize'
                            312 ;------------------------------------------------------------
                            313 ;------------------------------------------------------------
                            314 ;	../sm_test_calculator.c:60: END_STATE_MACHINE_DEFINITION() ;
                            315 ;	-----------------------------------------
                            316 ;	 function calculator_getHistoryArraySize
                            317 ;	-----------------------------------------
   00AD                     318 _calculator_getHistoryArraySize:
   00AD 90 00 18            319 	mov	dptr,#0x0018
   00B0 22                  320 	ret
                            321 ;------------------------------------------------------------
                            322 ;Allocation info for local variables in function 'calculator_getMachineSize'
                            323 ;------------------------------------------------------------
                            324 ;------------------------------------------------------------
                            325 ;	../sm_test_calculator.c:60: 
                            326 ;	-----------------------------------------
                            327 ;	 function calculator_getMachineSize
                            328 ;	-----------------------------------------
   00B1                     329 _calculator_getMachineSize:
   00B1 90 00 33            330 	mov	dptr,#0x0033
   00B4 22                  331 	ret
                            332 ;------------------------------------------------------------
                            333 ;Allocation info for local variables in function 'calculator_constructor2'
                            334 ;------------------------------------------------------------
                            335 ;self                      Allocated with name '_calculator_constructor2_self_1_1'
                            336 ;------------------------------------------------------------
                            337 ;	../sm_test_calculator.c:63: STATE_MACHINE_CONSTRUCTOR()
                            338 ;	-----------------------------------------
                            339 ;	 function calculator_constructor2
                            340 ;	-----------------------------------------
   00B5                     341 _calculator_constructor2:
   00B5 AA F0               342 	mov	r2,b
   00B7 AB 83               343 	mov	r3,dph
   00B9 E5 82               344 	mov	a,dpl
   00BB 90s00r15            345 	mov	dptr,#_calculator_constructor2_self_1_1
   00BE F0                  346 	movx	@dptr,a
   00BF A3                  347 	inc	dptr
   00C0 EB                  348 	mov	a,r3
   00C1 F0                  349 	movx	@dptr,a
   00C2 A3                  350 	inc	dptr
   00C3 EA                  351 	mov	a,r2
   00C4 F0                  352 	movx	@dptr,a
                            353 ;	../sm_test_calculator.c:65: hsm_setMachinePriority(self, 0) ;
   00C5 90s00r15            354 	mov	dptr,#_calculator_constructor2_self_1_1
   00C8 E0                  355 	movx	a,@dptr
   00C9 FA                  356 	mov	r2,a
   00CA A3                  357 	inc	dptr
   00CB E0                  358 	movx	a,@dptr
   00CC FB                  359 	mov	r3,a
   00CD A3                  360 	inc	dptr
   00CE E0                  361 	movx	a,@dptr
   00CF FC                  362 	mov	r4,a
   00D0 90s00r00            363 	mov	dptr,#_hsm_setMachinePriority_PARM_2
   00D3 E4                  364 	clr	a
   00D4 F0                  365 	movx	@dptr,a
   00D5 8A 82               366 	mov	dpl,r2
   00D7 8B 83               367 	mov	dph,r3
   00D9 8C F0               368 	mov	b,r4
   00DB 12s00r00            369 	lcall	_hsm_setMachinePriority
                            370 ;	../sm_test_calculator.c:67: self->result = 0 ;
   00DE 90s00r15            371 	mov	dptr,#_calculator_constructor2_self_1_1
   00E1 E0                  372 	movx	a,@dptr
   00E2 FA                  373 	mov	r2,a
   00E3 A3                  374 	inc	dptr
   00E4 E0                  375 	movx	a,@dptr
   00E5 FB                  376 	mov	r3,a
   00E6 A3                  377 	inc	dptr
   00E7 E0                  378 	movx	a,@dptr
   00E8 FC                  379 	mov	r4,a
   00E9 74 2F               380 	mov	a,#0x2F
   00EB 2A                  381 	add	a,r2
   00EC FA                  382 	mov	r2,a
   00ED E4                  383 	clr	a
   00EE 3B                  384 	addc	a,r3
   00EF FB                  385 	mov	r3,a
   00F0 8A 82               386 	mov	dpl,r2
   00F2 8B 83               387 	mov	dph,r3
   00F4 8C F0               388 	mov	b,r4
   00F6 E4                  389 	clr	a
   00F7 12s00r00            390 	lcall	__gptrput
   00FA A3                  391 	inc	dptr
   00FB E4                  392 	clr	a
   00FC 12s00r00            393 	lcall	__gptrput
   00FF A3                  394 	inc	dptr
   0100 E4                  395 	clr	a
   0101 12s00r00            396 	lcall	__gptrput
   0104 A3                  397 	inc	dptr
   0105 E4                  398 	clr	a
   0106 02s00r00            399 	ljmp	__gptrput
                            400 ;------------------------------------------------------------
                            401 ;Allocation info for local variables in function 'calculator_destructor2'
                            402 ;------------------------------------------------------------
                            403 ;self                      Allocated with name '_calculator_destructor2_self_1_1'
                            404 ;------------------------------------------------------------
                            405 ;	../sm_test_calculator.c:71: STATE_MACHINE_DESTRUCTOR()
                            406 ;	-----------------------------------------
                            407 ;	 function calculator_destructor2
                            408 ;	-----------------------------------------
   0109                     409 _calculator_destructor2:
                            410 ;	../sm_test_calculator.c:73: (void)self ;	/* Nothing to do here */
   0109 22                  411 	ret
                            412 ;------------------------------------------------------------
                            413 ;Allocation info for local variables in function 'calculator_TOP_handler'
                            414 ;------------------------------------------------------------
                            415 ;event                     Allocated to stack - offset -5
                            416 ;self                      Allocated to registers r2 r3 r4 
                            417 ;stateResponseCode         Allocated to registers 
                            418 ;------------------------------------------------------------
                            419 ;	../sm_test_calculator.c:77: DEFINE_TOP_STATE()
                            420 ;	-----------------------------------------
                            421 ;	 function calculator_TOP_handler
                            422 ;	-----------------------------------------
   010A                     423 _calculator_TOP_handler:
   010A C0*00               424 	push	_bp
   010C 85 81*00            425 	mov	_bp,sp
   010F AA 82               426 	mov	r2,dpl
   0111 AB 83               427 	mov	r3,dph
   0113 AC F0               428 	mov	r4,b
                            429 ;	../sm_test_calculator.c:79: INITIAL_TRANSITION(TO(begin),																NO_ACTION) ;
   0115 E5*00               430 	mov	a,_bp
   0117 24 FB               431 	add	a,#0xfb
   0119 F8                  432 	mov	r0,a
   011A 86 05               433 	mov	ar5,@r0
   011C 08                  434 	inc	r0
   011D 86 06               435 	mov	ar6,@r0
   011F 08                  436 	inc	r0
   0120 86 07               437 	mov	ar7,@r0
   0122 8D 82               438 	mov	dpl,r5
   0124 8E 83               439 	mov	dph,r6
   0126 8F F0               440 	mov	b,r7
   0128 12s00r00            441 	lcall	__gptrget
   012B FD                  442 	mov	r5,a
   012C BD 02 23            443 	cjne	r5,#0x02,00102$
   012F 74 08               444 	mov	a,#0x08
   0131 2A                  445 	add	a,r2
   0132 FA                  446 	mov	r2,a
   0133 E4                  447 	clr	a
   0134 3B                  448 	addc	a,r3
   0135 FB                  449 	mov	r3,a
   0136 8A 82               450 	mov	dpl,r2
   0138 8B 83               451 	mov	dph,r3
   013A 8C F0               452 	mov	b,r4
   013C 74r24               453 	mov	a,#_calculator_begin
   013E 12s00r00            454 	lcall	__gptrput
   0141 A3                  455 	inc	dptr
   0142 74s00               456 	mov	a,#(_calculator_begin >> 8)
   0144 12s00r00            457 	lcall	__gptrput
   0147 A3                  458 	inc	dptr
   0148 74 80               459 	mov	a,#0x80
   014A 12s00r00            460 	lcall	__gptrput
   014D 75 82 02            461 	mov	dpl,#0x02
   0150 80 03               462 	sjmp	00103$
   0152                     463 00102$:
                            464 ;	../sm_test_calculator.c:81: END_DEFINE_STATE()
   0152 75 82 00            465 	mov	dpl,#0x00
   0155                     466 00103$:
   0155 D0*00               467 	pop	_bp
   0157 22                  468 	ret
                            469 ;------------------------------------------------------------
                            470 ;Allocation info for local variables in function 'calculator_on_handler'
                            471 ;------------------------------------------------------------
                            472 ;event                     Allocated to stack - offset -5
                            473 ;self                      Allocated to stack - offset 1
                            474 ;stateResponseCode         Allocated to registers 
                            475 ;------------------------------------------------------------
                            476 ;	../sm_test_calculator.c:84: DEFINE_STATE(on)
                            477 ;	-----------------------------------------
                            478 ;	 function calculator_on_handler
                            479 ;	-----------------------------------------
   0158                     480 _calculator_on_handler:
   0158 C0*00               481 	push	_bp
   015A 85 81*00            482 	mov	_bp,sp
   015D C0 82               483 	push	dpl
   015F C0 83               484 	push	dph
   0161 C0 F0               485 	push	b
                            486 ;	../sm_test_calculator.c:86: INITIAL_TRANSITION(TO(ready),																NO_ACTION) ;
   0163 E5*00               487 	mov	a,_bp
   0165 24 FB               488 	add	a,#0xfb
   0167 F8                  489 	mov	r0,a
   0168 86 05               490 	mov	ar5,@r0
   016A 08                  491 	inc	r0
   016B 86 06               492 	mov	ar6,@r0
   016D 08                  493 	inc	r0
   016E 86 07               494 	mov	ar7,@r0
   0170 8D 82               495 	mov	dpl,r5
   0172 8E 83               496 	mov	dph,r6
   0174 8F F0               497 	mov	b,r7
   0176 12s00r00            498 	lcall	__gptrget
   0179 FD                  499 	mov	r5,a
   017A BD 02 2A            500 	cjne	r5,#0x02,00102$
   017D A8*00               501 	mov	r0,_bp
   017F 08                  502 	inc	r0
   0180 74 08               503 	mov	a,#0x08
   0182 26                  504 	add	a,@r0
   0183 FE                  505 	mov	r6,a
   0184 E4                  506 	clr	a
   0185 08                  507 	inc	r0
   0186 36                  508 	addc	a,@r0
   0187 FF                  509 	mov	r7,a
   0188 08                  510 	inc	r0
   0189 86 02               511 	mov	ar2,@r0
   018B 8E 82               512 	mov	dpl,r6
   018D 8F 83               513 	mov	dph,r7
   018F 8A F0               514 	mov	b,r2
   0191 74r12               515 	mov	a,#_calculator_ready
   0193 12s00r00            516 	lcall	__gptrput
   0196 A3                  517 	inc	dptr
   0197 74s00               518 	mov	a,#(_calculator_ready >> 8)
   0199 12s00r00            519 	lcall	__gptrput
   019C A3                  520 	inc	dptr
   019D 74 80               521 	mov	a,#0x80
   019F 12s00r00            522 	lcall	__gptrput
   01A2 75 82 02            523 	mov	dpl,#0x02
   01A5 80 5D               524 	sjmp	00107$
   01A7                     525 00102$:
                            526 ;	../sm_test_calculator.c:88: TRANSITION_ON(CLEAR,												TO(on),					NO_ACTION) ;
   01A7 BD 08 2A            527 	cjne	r5,#0x08,00104$
   01AA A8*00               528 	mov	r0,_bp
   01AC 08                  529 	inc	r0
   01AD 74 08               530 	mov	a,#0x08
   01AF 26                  531 	add	a,@r0
   01B0 FA                  532 	mov	r2,a
   01B1 E4                  533 	clr	a
   01B2 08                  534 	inc	r0
   01B3 36                  535 	addc	a,@r0
   01B4 FB                  536 	mov	r3,a
   01B5 08                  537 	inc	r0
   01B6 86 04               538 	mov	ar4,@r0
   01B8 8A 82               539 	mov	dpl,r2
   01BA 8B 83               540 	mov	dph,r3
   01BC 8C F0               541 	mov	b,r4
   01BE 74r09               542 	mov	a,#_calculator_on
   01C0 12s00r00            543 	lcall	__gptrput
   01C3 A3                  544 	inc	dptr
   01C4 74s00               545 	mov	a,#(_calculator_on >> 8)
   01C6 12s00r00            546 	lcall	__gptrput
   01C9 A3                  547 	inc	dptr
   01CA 74 80               548 	mov	a,#0x80
   01CC 12s00r00            549 	lcall	__gptrput
   01CF 75 82 02            550 	mov	dpl,#0x02
   01D2 80 30               551 	sjmp	00107$
   01D4                     552 00104$:
                            553 ;	../sm_test_calculator.c:89: TRANSITION_ON(OFF,													TO(STATE_MACHINE_EXIT),	NO_ACTION) ;
   01D4 BD 0F 2A            554 	cjne	r5,#0x0F,00106$
   01D7 A8*00               555 	mov	r0,_bp
   01D9 08                  556 	inc	r0
   01DA 74 08               557 	mov	a,#0x08
   01DC 26                  558 	add	a,@r0
   01DD FA                  559 	mov	r2,a
   01DE E4                  560 	clr	a
   01DF 08                  561 	inc	r0
   01E0 36                  562 	addc	a,@r0
   01E1 FB                  563 	mov	r3,a
   01E2 08                  564 	inc	r0
   01E3 86 04               565 	mov	ar4,@r0
   01E5 8A 82               566 	mov	dpl,r2
   01E7 8B 83               567 	mov	dph,r3
   01E9 8C F0               568 	mov	b,r4
   01EB 74r00               569 	mov	a,#_calculator_TOP
   01ED 12s00r00            570 	lcall	__gptrput
   01F0 A3                  571 	inc	dptr
   01F1 74s00               572 	mov	a,#(_calculator_TOP >> 8)
   01F3 12s00r00            573 	lcall	__gptrput
   01F6 A3                  574 	inc	dptr
   01F7 74 80               575 	mov	a,#0x80
   01F9 12s00r00            576 	lcall	__gptrput
   01FC 75 82 02            577 	mov	dpl,#0x02
   01FF 80 03               578 	sjmp	00107$
   0201                     579 00106$:
                            580 ;	../sm_test_calculator.c:91: END_DEFINE_STATE()
   0201 75 82 00            581 	mov	dpl,#0x00
   0204                     582 00107$:
   0204 85*00 81            583 	mov	sp,_bp
   0207 D0*00               584 	pop	_bp
   0209 22                  585 	ret
                            586 ;------------------------------------------------------------
                            587 ;Allocation info for local variables in function 'calculator_ready_handler'
                            588 ;------------------------------------------------------------
                            589 ;event                     Allocated to stack - offset -5
                            590 ;self                      Allocated to registers 
                            591 ;stateResponseCode         Allocated to registers 
                            592 ;------------------------------------------------------------
                            593 ;	../sm_test_calculator.c:94: DEFINE_STATE(ready)
                            594 ;	-----------------------------------------
                            595 ;	 function calculator_ready_handler
                            596 ;	-----------------------------------------
   020A                     597 _calculator_ready_handler:
   020A C0*00               598 	push	_bp
   020C 85 81*00            599 	mov	_bp,sp
                            600 ;	../sm_test_calculator.c:102: END_DEFINE_STATE()
   020F 75 82 00            601 	mov	dpl,#0x00
   0212 D0*00               602 	pop	_bp
   0214 22                  603 	ret
                            604 ;------------------------------------------------------------
                            605 ;Allocation info for local variables in function 'calculator_result_handler'
                            606 ;------------------------------------------------------------
                            607 ;event                     Allocated to stack - offset -5
                            608 ;self                      Allocated to registers 
                            609 ;stateResponseCode         Allocated to registers 
                            610 ;------------------------------------------------------------
                            611 ;	../sm_test_calculator.c:105: DEFINE_STATE(result)
                            612 ;	-----------------------------------------
                            613 ;	 function calculator_result_handler
                            614 ;	-----------------------------------------
   0215                     615 _calculator_result_handler:
   0215 C0*00               616 	push	_bp
   0217 85 81*00            617 	mov	_bp,sp
                            618 ;	../sm_test_calculator.c:108: END_DEFINE_STATE()
   021A 75 82 00            619 	mov	dpl,#0x00
   021D D0*00               620 	pop	_bp
   021F 22                  621 	ret
                            622 ;------------------------------------------------------------
                            623 ;Allocation info for local variables in function 'calculator_begin_handler'
                            624 ;------------------------------------------------------------
                            625 ;event                     Allocated to stack - offset -5
                            626 ;self                      Allocated to registers 
                            627 ;stateResponseCode         Allocated to registers 
                            628 ;------------------------------------------------------------
                            629 ;	../sm_test_calculator.c:111: DEFINE_STATE(begin)
                            630 ;	-----------------------------------------
                            631 ;	 function calculator_begin_handler
                            632 ;	-----------------------------------------
   0220                     633 _calculator_begin_handler:
   0220 C0*00               634 	push	_bp
   0222 85 81*00            635 	mov	_bp,sp
                            636 ;	../sm_test_calculator.c:120: END_DEFINE_STATE()
   0225 75 82 00            637 	mov	dpl,#0x00
   0228 D0*00               638 	pop	_bp
   022A 22                  639 	ret
                            640 ;------------------------------------------------------------
                            641 ;Allocation info for local variables in function 'calculator_negated1_handler'
                            642 ;------------------------------------------------------------
                            643 ;event                     Allocated to stack - offset -5
                            644 ;self                      Allocated to stack - offset 1
                            645 ;stateResponseCode         Allocated to registers 
                            646 ;sloc0                     Allocated to stack - offset 5
                            647 ;------------------------------------------------------------
                            648 ;	../sm_test_calculator.c:123: DEFINE_STATE(negated1)
                            649 ;	-----------------------------------------
                            650 ;	 function calculator_negated1_handler
                            651 ;	-----------------------------------------
   022B                     652 _calculator_negated1_handler:
   022B C0*00               653 	push	_bp
   022D 85 81*00            654 	mov	_bp,sp
   0230 C0 82               655 	push	dpl
   0232 C0 83               656 	push	dph
   0234 C0 F0               657 	push	b
                            658 ;	../sm_test_calculator.c:125: TRANSITION_ON(CLEAR_ENTRY,											TO(begin),				NO_ACTION) ;
   0236 E5*00               659 	mov	a,_bp
   0238 24 FB               660 	add	a,#0xfb
   023A F8                  661 	mov	r0,a
   023B 86 05               662 	mov	ar5,@r0
   023D 08                  663 	inc	r0
   023E 86 06               664 	mov	ar6,@r0
   0240 08                  665 	inc	r0
   0241 86 07               666 	mov	ar7,@r0
   0243 8D 82               667 	mov	dpl,r5
   0245 8E 83               668 	mov	dph,r6
   0247 8F F0               669 	mov	b,r7
   0249 12s00r00            670 	lcall	__gptrget
   024C FA                  671 	mov	r2,a
   024D BA 09 2B            672 	cjne	r2,#0x09,00102$
   0250 A8*00               673 	mov	r0,_bp
   0252 08                  674 	inc	r0
   0253 74 08               675 	mov	a,#0x08
   0255 26                  676 	add	a,@r0
   0256 FA                  677 	mov	r2,a
   0257 E4                  678 	clr	a
   0258 08                  679 	inc	r0
   0259 36                  680 	addc	a,@r0
   025A FB                  681 	mov	r3,a
   025B 08                  682 	inc	r0
   025C 86 04               683 	mov	ar4,@r0
   025E 8A 82               684 	mov	dpl,r2
   0260 8B 83               685 	mov	dph,r3
   0262 8C F0               686 	mov	b,r4
   0264 74r24               687 	mov	a,#_calculator_begin
   0266 12s00r00            688 	lcall	__gptrput
   0269 A3                  689 	inc	dptr
   026A 74s00               690 	mov	a,#(_calculator_begin >> 8)
   026C 12s00r00            691 	lcall	__gptrput
   026F A3                  692 	inc	dptr
   0270 74 80               693 	mov	a,#0x80
   0272 12s00r00            694 	lcall	__gptrput
   0275 75 82 02            695 	mov	dpl,#0x02
   0278 02s03r22            696 	ljmp	00112$
   027B                     697 00102$:
                            698 ;	../sm_test_calculator.c:126: TRANSITION_ON(DIGIT_0,												TO(zero1),				NO_ACTION) ;
   027B BA 0A 2B            699 	cjne	r2,#0x0A,00104$
   027E A8*00               700 	mov	r0,_bp
   0280 08                  701 	inc	r0
   0281 74 08               702 	mov	a,#0x08
   0283 26                  703 	add	a,@r0
   0284 FA                  704 	mov	r2,a
   0285 E4                  705 	clr	a
   0286 08                  706 	inc	r0
   0287 36                  707 	addc	a,@r0
   0288 FB                  708 	mov	r3,a
   0289 08                  709 	inc	r0
   028A 86 04               710 	mov	ar4,@r0
   028C 8A 82               711 	mov	dpl,r2
   028E 8B 83               712 	mov	dph,r3
   0290 8C F0               713 	mov	b,r4
   0292 74r3F               714 	mov	a,#_calculator_zero1
   0294 12s00r00            715 	lcall	__gptrput
   0297 A3                  716 	inc	dptr
   0298 74s00               717 	mov	a,#(_calculator_zero1 >> 8)
   029A 12s00r00            718 	lcall	__gptrput
   029D A3                  719 	inc	dptr
   029E 74 80               720 	mov	a,#0x80
   02A0 12s00r00            721 	lcall	__gptrput
   02A3 75 82 02            722 	mov	dpl,#0x02
   02A6 02s03r22            723 	ljmp	00112$
   02A9                     724 00104$:
                            725 ;	../sm_test_calculator.c:127: TRANSITION_ON(DIGIT_1_9,											TO(int1),				NO_ACTION) ;
   02A9 BA 0B 2A            726 	cjne	r2,#0x0B,00106$
   02AC A8*00               727 	mov	r0,_bp
   02AE 08                  728 	inc	r0
   02AF 74 08               729 	mov	a,#0x08
   02B1 26                  730 	add	a,@r0
   02B2 FA                  731 	mov	r2,a
   02B3 E4                  732 	clr	a
   02B4 08                  733 	inc	r0
   02B5 36                  734 	addc	a,@r0
   02B6 FB                  735 	mov	r3,a
   02B7 08                  736 	inc	r0
   02B8 86 04               737 	mov	ar4,@r0
   02BA 8A 82               738 	mov	dpl,r2
   02BC 8B 83               739 	mov	dph,r3
   02BE 8C F0               740 	mov	b,r4
   02C0 74r48               741 	mov	a,#_calculator_int1
   02C2 12s00r00            742 	lcall	__gptrput
   02C5 A3                  743 	inc	dptr
   02C6 74s00               744 	mov	a,#(_calculator_int1 >> 8)
   02C8 12s00r00            745 	lcall	__gptrput
   02CB A3                  746 	inc	dptr
   02CC 74 80               747 	mov	a,#0x80
   02CE 12s00r00            748 	lcall	__gptrput
   02D1 75 82 02            749 	mov	dpl,#0x02
   02D4 80 4C               750 	sjmp	00112$
   02D6                     751 00106$:
                            752 ;	../sm_test_calculator.c:128: TRANSITION_ON(POINT,												TO(frac1),				NO_ACTION) ;
   02D6 BA 0C 2A            753 	cjne	r2,#0x0C,00108$
   02D9 A8*00               754 	mov	r0,_bp
   02DB 08                  755 	inc	r0
   02DC 74 08               756 	mov	a,#0x08
   02DE 26                  757 	add	a,@r0
   02DF FA                  758 	mov	r2,a
   02E0 E4                  759 	clr	a
   02E1 08                  760 	inc	r0
   02E2 36                  761 	addc	a,@r0
   02E3 FB                  762 	mov	r3,a
   02E4 08                  763 	inc	r0
   02E5 86 04               764 	mov	ar4,@r0
   02E7 8A 82               765 	mov	dpl,r2
   02E9 8B 83               766 	mov	dph,r3
   02EB 8C F0               767 	mov	b,r4
   02ED 74r51               768 	mov	a,#_calculator_frac1
   02EF 12s00r00            769 	lcall	__gptrput
   02F2 A3                  770 	inc	dptr
   02F3 74s00               771 	mov	a,#(_calculator_frac1 >> 8)
   02F5 12s00r00            772 	lcall	__gptrput
   02F8 A3                  773 	inc	dptr
   02F9 74 80               774 	mov	a,#0x80
   02FB 12s00r00            775 	lcall	__gptrput
   02FE 75 82 02            776 	mov	dpl,#0x02
   0301 80 1F               777 	sjmp	00112$
   0303                     778 00108$:
                            779 ;	../sm_test_calculator.c:129: CONSUME_EVENT_IF(OPERATION,	IF(CAST_EVENT(keyEvent_t)->key == '-'),							NO_ACTION) ;
   0303 BA 0D 19            780 	cjne	r2,#0x0D,00110$
   0306 74 02               781 	mov	a,#0x02
   0308 2D                  782 	add	a,r5
   0309 FD                  783 	mov	r5,a
   030A E4                  784 	clr	a
   030B 3E                  785 	addc	a,r6
   030C FE                  786 	mov	r6,a
   030D 8D 82               787 	mov	dpl,r5
   030F 8E 83               788 	mov	dph,r6
   0311 8F F0               789 	mov	b,r7
   0313 12s00r00            790 	lcall	__gptrget
   0316 FD                  791 	mov	r5,a
   0317 BD 2D 05            792 	cjne	r5,#0x2D,00110$
   031A 75 82 01            793 	mov	dpl,#0x01
   031D 80 03               794 	sjmp	00112$
   031F                     795 00110$:
                            796 ;	../sm_test_calculator.c:131: END_DEFINE_STATE()
   031F 75 82 00            797 	mov	dpl,#0x00
   0322                     798 00112$:
   0322 85*00 81            799 	mov	sp,_bp
   0325 D0*00               800 	pop	_bp
   0327 22                  801 	ret
                            802 ;------------------------------------------------------------
                            803 ;Allocation info for local variables in function 'calculator_operand1_handler'
                            804 ;------------------------------------------------------------
                            805 ;event                     Allocated to stack - offset -5
                            806 ;self                      Allocated to stack - offset 1
                            807 ;stateResponseCode         Allocated to registers 
                            808 ;------------------------------------------------------------
                            809 ;	../sm_test_calculator.c:134: DEFINE_STATE(operand1)
                            810 ;	-----------------------------------------
                            811 ;	 function calculator_operand1_handler
                            812 ;	-----------------------------------------
   0328                     813 _calculator_operand1_handler:
   0328 C0*00               814 	push	_bp
   032A 85 81*00            815 	mov	_bp,sp
   032D C0 82               816 	push	dpl
   032F C0 83               817 	push	dph
   0331 C0 F0               818 	push	b
                            819 ;	../sm_test_calculator.c:136: TRANSITION_ON(CLEAR_ENTRY,											TO(ready),				NO_ACTION) ;
   0333 E5*00               820 	mov	a,_bp
   0335 24 FB               821 	add	a,#0xfb
   0337 F8                  822 	mov	r0,a
   0338 86 05               823 	mov	ar5,@r0
   033A 08                  824 	inc	r0
   033B 86 06               825 	mov	ar6,@r0
   033D 08                  826 	inc	r0
   033E 86 07               827 	mov	ar7,@r0
   0340 8D 82               828 	mov	dpl,r5
   0342 8E 83               829 	mov	dph,r6
   0344 8F F0               830 	mov	b,r7
   0346 12s00r00            831 	lcall	__gptrget
   0349 FD                  832 	mov	r5,a
   034A BD 09 2A            833 	cjne	r5,#0x09,00102$
   034D A8*00               834 	mov	r0,_bp
   034F 08                  835 	inc	r0
   0350 74 08               836 	mov	a,#0x08
   0352 26                  837 	add	a,@r0
   0353 FE                  838 	mov	r6,a
   0354 E4                  839 	clr	a
   0355 08                  840 	inc	r0
   0356 36                  841 	addc	a,@r0
   0357 FF                  842 	mov	r7,a
   0358 08                  843 	inc	r0
   0359 86 02               844 	mov	ar2,@r0
   035B 8E 82               845 	mov	dpl,r6
   035D 8F 83               846 	mov	dph,r7
   035F 8A F0               847 	mov	b,r2
   0361 74r12               848 	mov	a,#_calculator_ready
   0363 12s00r00            849 	lcall	__gptrput
   0366 A3                  850 	inc	dptr
   0367 74s00               851 	mov	a,#(_calculator_ready >> 8)
   0369 12s00r00            852 	lcall	__gptrput
   036C A3                  853 	inc	dptr
   036D 74 80               854 	mov	a,#0x80
   036F 12s00r00            855 	lcall	__gptrput
   0372 75 82 02            856 	mov	dpl,#0x02
   0375 80 30               857 	sjmp	00105$
   0377                     858 00102$:
                            859 ;	../sm_test_calculator.c:137: TRANSITION_ON(OPERATION,											TO(opEntered),			NO_ACTION) ;
   0377 BD 0D 2A            860 	cjne	r5,#0x0D,00104$
   037A A8*00               861 	mov	r0,_bp
   037C 08                  862 	inc	r0
   037D 74 08               863 	mov	a,#0x08
   037F 26                  864 	add	a,@r0
   0380 FA                  865 	mov	r2,a
   0381 E4                  866 	clr	a
   0382 08                  867 	inc	r0
   0383 36                  868 	addc	a,@r0
   0384 FB                  869 	mov	r3,a
   0385 08                  870 	inc	r0
   0386 86 04               871 	mov	ar4,@r0
   0388 8A 82               872 	mov	dpl,r2
   038A 8B 83               873 	mov	dph,r3
   038C 8C F0               874 	mov	b,r4
   038E 74r63               875 	mov	a,#_calculator_opEntered
   0390 12s00r00            876 	lcall	__gptrput
   0393 A3                  877 	inc	dptr
   0394 74s00               878 	mov	a,#(_calculator_opEntered >> 8)
   0396 12s00r00            879 	lcall	__gptrput
   0399 A3                  880 	inc	dptr
   039A 74 80               881 	mov	a,#0x80
   039C 12s00r00            882 	lcall	__gptrput
   039F 75 82 02            883 	mov	dpl,#0x02
   03A2 80 03               884 	sjmp	00105$
   03A4                     885 00104$:
                            886 ;	../sm_test_calculator.c:139: END_DEFINE_STATE()
   03A4 75 82 00            887 	mov	dpl,#0x00
   03A7                     888 00105$:
   03A7 85*00 81            889 	mov	sp,_bp
   03AA D0*00               890 	pop	_bp
   03AC 22                  891 	ret
                            892 ;------------------------------------------------------------
                            893 ;Allocation info for local variables in function 'calculator_zero1_handler'
                            894 ;------------------------------------------------------------
                            895 ;event                     Allocated to stack - offset -5
                            896 ;self                      Allocated to stack - offset 1
                            897 ;stateResponseCode         Allocated to registers 
                            898 ;------------------------------------------------------------
                            899 ;	../sm_test_calculator.c:142: DEFINE_STATE(zero1)
                            900 ;	-----------------------------------------
                            901 ;	 function calculator_zero1_handler
                            902 ;	-----------------------------------------
   03AD                     903 _calculator_zero1_handler:
   03AD C0*00               904 	push	_bp
   03AF 85 81*00            905 	mov	_bp,sp
   03B2 C0 82               906 	push	dpl
   03B4 C0 83               907 	push	dph
   03B6 C0 F0               908 	push	b
                            909 ;	../sm_test_calculator.c:144: INITIAL_TRANSITION(TO(zero2),																NO_ACTION) ;
   03B8 E5*00               910 	mov	a,_bp
   03BA 24 FB               911 	add	a,#0xfb
   03BC F8                  912 	mov	r0,a
   03BD 86 05               913 	mov	ar5,@r0
   03BF 08                  914 	inc	r0
   03C0 86 06               915 	mov	ar6,@r0
   03C2 08                  916 	inc	r0
   03C3 86 07               917 	mov	ar7,@r0
   03C5 8D 82               918 	mov	dpl,r5
   03C7 8E 83               919 	mov	dph,r6
   03C9 8F F0               920 	mov	b,r7
   03CB 12s00r00            921 	lcall	__gptrget
   03CE FD                  922 	mov	r5,a
   03CF BD 02 2A            923 	cjne	r5,#0x02,00102$
   03D2 A8*00               924 	mov	r0,_bp
   03D4 08                  925 	inc	r0
   03D5 74 08               926 	mov	a,#0x08
   03D7 26                  927 	add	a,@r0
   03D8 FE                  928 	mov	r6,a
   03D9 E4                  929 	clr	a
   03DA 08                  930 	inc	r0
   03DB 36                  931 	addc	a,@r0
   03DC FF                  932 	mov	r7,a
   03DD 08                  933 	inc	r0
   03DE 86 02               934 	mov	ar2,@r0
   03E0 8E 82               935 	mov	dpl,r6
   03E2 8F 83               936 	mov	dph,r7
   03E4 8A F0               937 	mov	b,r2
   03E6 74r7E               938 	mov	a,#_calculator_zero2
   03E8 12s00r00            939 	lcall	__gptrput
   03EB A3                  940 	inc	dptr
   03EC 74s00               941 	mov	a,#(_calculator_zero2 >> 8)
   03EE 12s00r00            942 	lcall	__gptrput
   03F1 A3                  943 	inc	dptr
   03F2 74 80               944 	mov	a,#0x80
   03F4 12s00r00            945 	lcall	__gptrput
   03F7 75 82 02            946 	mov	dpl,#0x02
   03FA 80 65               947 	sjmp	00109$
   03FC                     948 00102$:
                            949 ;	../sm_test_calculator.c:145: CONSUME_EVENT(DIGIT_0,																		NO_ACTION) ;
   03FC BD 0A 05            950 	cjne	r5,#0x0A,00104$
   03FF 75 82 01            951 	mov	dpl,#0x01
   0402 80 5D               952 	sjmp	00109$
   0404                     953 00104$:
                            954 ;	../sm_test_calculator.c:146: TRANSITION_ON(DIGIT_1_9,											TO(int1),				NO_ACTION) ;
   0404 BD 0B 2A            955 	cjne	r5,#0x0B,00106$
   0407 A8*00               956 	mov	r0,_bp
   0409 08                  957 	inc	r0
   040A 74 08               958 	mov	a,#0x08
   040C 26                  959 	add	a,@r0
   040D FA                  960 	mov	r2,a
   040E E4                  961 	clr	a
   040F 08                  962 	inc	r0
   0410 36                  963 	addc	a,@r0
   0411 FB                  964 	mov	r3,a
   0412 08                  965 	inc	r0
   0413 86 04               966 	mov	ar4,@r0
   0415 8A 82               967 	mov	dpl,r2
   0417 8B 83               968 	mov	dph,r3
   0419 8C F0               969 	mov	b,r4
   041B 74r48               970 	mov	a,#_calculator_int1
   041D 12s00r00            971 	lcall	__gptrput
   0420 A3                  972 	inc	dptr
   0421 74s00               973 	mov	a,#(_calculator_int1 >> 8)
   0423 12s00r00            974 	lcall	__gptrput
   0426 A3                  975 	inc	dptr
   0427 74 80               976 	mov	a,#0x80
   0429 12s00r00            977 	lcall	__gptrput
   042C 75 82 02            978 	mov	dpl,#0x02
   042F 80 30               979 	sjmp	00109$
   0431                     980 00106$:
                            981 ;	../sm_test_calculator.c:147: TRANSITION_ON(POINT,												TO(frac1),				NO_ACTION) ;
   0431 BD 0C 2A            982 	cjne	r5,#0x0C,00108$
   0434 A8*00               983 	mov	r0,_bp
   0436 08                  984 	inc	r0
   0437 74 08               985 	mov	a,#0x08
   0439 26                  986 	add	a,@r0
   043A FA                  987 	mov	r2,a
   043B E4                  988 	clr	a
   043C 08                  989 	inc	r0
   043D 36                  990 	addc	a,@r0
   043E FB                  991 	mov	r3,a
   043F 08                  992 	inc	r0
   0440 86 04               993 	mov	ar4,@r0
   0442 8A 82               994 	mov	dpl,r2
   0444 8B 83               995 	mov	dph,r3
   0446 8C F0               996 	mov	b,r4
   0448 74r51               997 	mov	a,#_calculator_frac1
   044A 12s00r00            998 	lcall	__gptrput
   044D A3                  999 	inc	dptr
   044E 74s00              1000 	mov	a,#(_calculator_frac1 >> 8)
   0450 12s00r00           1001 	lcall	__gptrput
   0453 A3                 1002 	inc	dptr
   0454 74 80              1003 	mov	a,#0x80
   0456 12s00r00           1004 	lcall	__gptrput
   0459 75 82 02           1005 	mov	dpl,#0x02
   045C 80 03              1006 	sjmp	00109$
   045E                    1007 00108$:
                           1008 ;	../sm_test_calculator.c:149: END_DEFINE_STATE()
   045E 75 82 00           1009 	mov	dpl,#0x00
   0461                    1010 00109$:
   0461 85*00 81           1011 	mov	sp,_bp
   0464 D0*00              1012 	pop	_bp
   0466 22                 1013 	ret
                           1014 ;------------------------------------------------------------
                           1015 ;Allocation info for local variables in function 'calculator_int1_handler'
                           1016 ;------------------------------------------------------------
                           1017 ;event                     Allocated to stack - offset -5
                           1018 ;self                      Allocated to registers r2 r3 r4 
                           1019 ;stateResponseCode         Allocated to registers 
                           1020 ;------------------------------------------------------------
                           1021 ;	../sm_test_calculator.c:152: DEFINE_STATE(int1)
                           1022 ;	-----------------------------------------
                           1023 ;	 function calculator_int1_handler
                           1024 ;	-----------------------------------------
   0467                    1025 _calculator_int1_handler:
   0467 C0*00              1026 	push	_bp
   0469 85 81*00           1027 	mov	_bp,sp
   046C AA 82              1028 	mov	r2,dpl
   046E AB 83              1029 	mov	r3,dph
   0470 AC F0              1030 	mov	r4,b
                           1031 ;	../sm_test_calculator.c:154: TRANSITION_ON(POINT,												TO(frac1),				NO_ACTION) ;
   0472 E5*00              1032 	mov	a,_bp
   0474 24 FB              1033 	add	a,#0xfb
   0476 F8                 1034 	mov	r0,a
   0477 86 05              1035 	mov	ar5,@r0
   0479 08                 1036 	inc	r0
   047A 86 06              1037 	mov	ar6,@r0
   047C 08                 1038 	inc	r0
   047D 86 07              1039 	mov	ar7,@r0
   047F 8D 82              1040 	mov	dpl,r5
   0481 8E 83              1041 	mov	dph,r6
   0483 8F F0              1042 	mov	b,r7
   0485 12s00r00           1043 	lcall	__gptrget
   0488 FD                 1044 	mov	r5,a
   0489 BD 0C 23           1045 	cjne	r5,#0x0C,00102$
   048C 74 08              1046 	mov	a,#0x08
   048E 2A                 1047 	add	a,r2
   048F FA                 1048 	mov	r2,a
   0490 E4                 1049 	clr	a
   0491 3B                 1050 	addc	a,r3
   0492 FB                 1051 	mov	r3,a
   0493 8A 82              1052 	mov	dpl,r2
   0495 8B 83              1053 	mov	dph,r3
   0497 8C F0              1054 	mov	b,r4
   0499 74r51              1055 	mov	a,#_calculator_frac1
   049B 12s00r00           1056 	lcall	__gptrput
   049E A3                 1057 	inc	dptr
   049F 74s00              1058 	mov	a,#(_calculator_frac1 >> 8)
   04A1 12s00r00           1059 	lcall	__gptrput
   04A4 A3                 1060 	inc	dptr
   04A5 74 80              1061 	mov	a,#0x80
   04A7 12s00r00           1062 	lcall	__gptrput
   04AA 75 82 02           1063 	mov	dpl,#0x02
   04AD 80 03              1064 	sjmp	00103$
   04AF                    1065 00102$:
                           1066 ;	../sm_test_calculator.c:156: END_DEFINE_STATE()
   04AF 75 82 00           1067 	mov	dpl,#0x00
   04B2                    1068 00103$:
   04B2 D0*00              1069 	pop	_bp
   04B4 22                 1070 	ret
                           1071 ;------------------------------------------------------------
                           1072 ;Allocation info for local variables in function 'calculator_frac1_handler'
                           1073 ;------------------------------------------------------------
                           1074 ;event                     Allocated to stack - offset -5
                           1075 ;self                      Allocated to registers 
                           1076 ;stateResponseCode         Allocated to registers 
                           1077 ;------------------------------------------------------------
                           1078 ;	../sm_test_calculator.c:159: DEFINE_STATE(frac1)
                           1079 ;	-----------------------------------------
                           1080 ;	 function calculator_frac1_handler
                           1081 ;	-----------------------------------------
   04B5                    1082 _calculator_frac1_handler:
   04B5 C0*00              1083 	push	_bp
   04B7 85 81*00           1084 	mov	_bp,sp
                           1085 ;	../sm_test_calculator.c:161: CONSUME_EVENT(POINT,																		NO_ACTION) ;
   04BA E5*00              1086 	mov	a,_bp
   04BC 24 FB              1087 	add	a,#0xfb
   04BE F8                 1088 	mov	r0,a
   04BF 86 02              1089 	mov	ar2,@r0
   04C1 08                 1090 	inc	r0
   04C2 86 03              1091 	mov	ar3,@r0
   04C4 08                 1092 	inc	r0
   04C5 86 04              1093 	mov	ar4,@r0
   04C7 8A 82              1094 	mov	dpl,r2
   04C9 8B 83              1095 	mov	dph,r3
   04CB 8C F0              1096 	mov	b,r4
   04CD 12s00r00           1097 	lcall	__gptrget
   04D0 FA                 1098 	mov	r2,a
   04D1 BA 0C 05           1099 	cjne	r2,#0x0C,00102$
   04D4 75 82 01           1100 	mov	dpl,#0x01
   04D7 80 03              1101 	sjmp	00103$
   04D9                    1102 00102$:
                           1103 ;	../sm_test_calculator.c:163: END_DEFINE_STATE()
   04D9 75 82 00           1104 	mov	dpl,#0x00
   04DC                    1105 00103$:
   04DC D0*00              1106 	pop	_bp
   04DE 22                 1107 	ret
                           1108 ;------------------------------------------------------------
                           1109 ;Allocation info for local variables in function 'calculator_error_handler'
                           1110 ;------------------------------------------------------------
                           1111 ;event                     Allocated to stack - offset -5
                           1112 ;self                      Allocated to registers r2 r3 r4 
                           1113 ;stateResponseCode         Allocated to registers 
                           1114 ;------------------------------------------------------------
                           1115 ;	../sm_test_calculator.c:166: DEFINE_STATE(error)
                           1116 ;	-----------------------------------------
                           1117 ;	 function calculator_error_handler
                           1118 ;	-----------------------------------------
   04DF                    1119 _calculator_error_handler:
   04DF C0*00              1120 	push	_bp
   04E1 85 81*00           1121 	mov	_bp,sp
   04E4 AA 82              1122 	mov	r2,dpl
   04E6 AB 83              1123 	mov	r3,dph
   04E8 AC F0              1124 	mov	r4,b
                           1125 ;	../sm_test_calculator.c:168: INITIAL_TRANSITION(TO(frac2),																NO_ACTION) ;
   04EA E5*00              1126 	mov	a,_bp
   04EC 24 FB              1127 	add	a,#0xfb
   04EE F8                 1128 	mov	r0,a
   04EF 86 05              1129 	mov	ar5,@r0
   04F1 08                 1130 	inc	r0
   04F2 86 06              1131 	mov	ar6,@r0
   04F4 08                 1132 	inc	r0
   04F5 86 07              1133 	mov	ar7,@r0
   04F7 8D 82              1134 	mov	dpl,r5
   04F9 8E 83              1135 	mov	dph,r6
   04FB 8F F0              1136 	mov	b,r7
   04FD 12s00r00           1137 	lcall	__gptrget
   0500 FD                 1138 	mov	r5,a
   0501 BD 02 23           1139 	cjne	r5,#0x02,00102$
   0504 74 08              1140 	mov	a,#0x08
   0506 2A                 1141 	add	a,r2
   0507 FA                 1142 	mov	r2,a
   0508 E4                 1143 	clr	a
   0509 3B                 1144 	addc	a,r3
   050A FB                 1145 	mov	r3,a
   050B 8A 82              1146 	mov	dpl,r2
   050D 8B 83              1147 	mov	dph,r3
   050F 8C F0              1148 	mov	b,r4
   0511 74r90              1149 	mov	a,#_calculator_frac2
   0513 12s00r00           1150 	lcall	__gptrput
   0516 A3                 1151 	inc	dptr
   0517 74s00              1152 	mov	a,#(_calculator_frac2 >> 8)
   0519 12s00r00           1153 	lcall	__gptrput
   051C A3                 1154 	inc	dptr
   051D 74 80              1155 	mov	a,#0x80
   051F 12s00r00           1156 	lcall	__gptrput
   0522 75 82 02           1157 	mov	dpl,#0x02
   0525 80 03              1158 	sjmp	00103$
   0527                    1159 00102$:
                           1160 ;	../sm_test_calculator.c:170: END_DEFINE_STATE()
   0527 75 82 00           1161 	mov	dpl,#0x00
   052A                    1162 00103$:
   052A D0*00              1163 	pop	_bp
   052C 22                 1164 	ret
                           1165 ;------------------------------------------------------------
                           1166 ;Allocation info for local variables in function 'calculator_opEntered_handler'
                           1167 ;------------------------------------------------------------
                           1168 ;event                     Allocated to stack - offset -5
                           1169 ;self                      Allocated to registers r2 r3 r4 
                           1170 ;stateResponseCode         Allocated to registers 
                           1171 ;sloc0                     Allocated to stack - offset 1
                           1172 ;------------------------------------------------------------
                           1173 ;	../sm_test_calculator.c:173: DEFINE_STATE(opEntered)
                           1174 ;	-----------------------------------------
                           1175 ;	 function calculator_opEntered_handler
                           1176 ;	-----------------------------------------
   052D                    1177 _calculator_opEntered_handler:
   052D C0*00              1178 	push	_bp
   052F 85 81*00           1179 	mov	_bp,sp
   0532 05 81              1180 	inc	sp
   0534 AA 82              1181 	mov	r2,dpl
   0536 AB 83              1182 	mov	r3,dph
   0538 AC F0              1183 	mov	r4,b
                           1184 ;	../sm_test_calculator.c:175: TRANSITION_ON_IF(OPERATION,	IF(CAST_EVENT(keyEvent_t)->key == '-'),	TO(negated2),			NO_ACTION) ;
   053A E5*00              1185 	mov	a,_bp
   053C 24 FB              1186 	add	a,#0xfb
   053E F8                 1187 	mov	r0,a
   053F 86 05              1188 	mov	ar5,@r0
   0541 08                 1189 	inc	r0
   0542 86 06              1190 	mov	ar6,@r0
   0544 08                 1191 	inc	r0
   0545 86 07              1192 	mov	ar7,@r0
   0547 8D 82              1193 	mov	dpl,r5
   0549 8E 83              1194 	mov	dph,r6
   054B 8F F0              1195 	mov	b,r7
   054D A8*00              1196 	mov	r0,_bp
   054F 08                 1197 	inc	r0
   0550 12s00r00           1198 	lcall	__gptrget
   0553 F6                 1199 	mov	@r0,a
   0554 A8*00              1200 	mov	r0,_bp
   0556 08                 1201 	inc	r0
   0557 B6 0D 3A           1202 	cjne	@r0,#0x0D,00102$
   055A 74 02              1203 	mov	a,#0x02
   055C 2D                 1204 	add	a,r5
   055D FD                 1205 	mov	r5,a
   055E E4                 1206 	clr	a
   055F 3E                 1207 	addc	a,r6
   0560 FE                 1208 	mov	r6,a
   0561 8D 82              1209 	mov	dpl,r5
   0563 8E 83              1210 	mov	dph,r6
   0565 8F F0              1211 	mov	b,r7
   0567 12s00r00           1212 	lcall	__gptrget
   056A FD                 1213 	mov	r5,a
   056B BD 2D 26           1214 	cjne	r5,#0x2D,00102$
   056E 74 08              1215 	mov	a,#0x08
   0570 2A                 1216 	add	a,r2
   0571 FD                 1217 	mov	r5,a
   0572 E4                 1218 	clr	a
   0573 3B                 1219 	addc	a,r3
   0574 FE                 1220 	mov	r6,a
   0575 8C 07              1221 	mov	ar7,r4
   0577 8D 82              1222 	mov	dpl,r5
   0579 8E 83              1223 	mov	dph,r6
   057B 8F F0              1224 	mov	b,r7
   057D 74r6C              1225 	mov	a,#_calculator_negated2
   057F 12s00r00           1226 	lcall	__gptrput
   0582 A3                 1227 	inc	dptr
   0583 74s00              1228 	mov	a,#(_calculator_negated2 >> 8)
   0585 12s00r00           1229 	lcall	__gptrput
   0588 A3                 1230 	inc	dptr
   0589 74 80              1231 	mov	a,#0x80
   058B 12s00r00           1232 	lcall	__gptrput
   058E 75 82 02           1233 	mov	dpl,#0x02
   0591 02s06r16           1234 	ljmp	00110$
   0594                    1235 00102$:
                           1236 ;	../sm_test_calculator.c:176: TRANSITION_ON(DIGIT_0,												TO(zero2),				NO_ACTION) ;
   0594 A8*00              1237 	mov	r0,_bp
   0596 08                 1238 	inc	r0
   0597 B6 0A 25           1239 	cjne	@r0,#0x0A,00105$
   059A 74 08              1240 	mov	a,#0x08
   059C 2A                 1241 	add	a,r2
   059D FD                 1242 	mov	r5,a
   059E E4                 1243 	clr	a
   059F 3B                 1244 	addc	a,r3
   05A0 FE                 1245 	mov	r6,a
   05A1 8C 07              1246 	mov	ar7,r4
   05A3 8D 82              1247 	mov	dpl,r5
   05A5 8E 83              1248 	mov	dph,r6
   05A7 8F F0              1249 	mov	b,r7
   05A9 74r7E              1250 	mov	a,#_calculator_zero2
   05AB 12s00r00           1251 	lcall	__gptrput
   05AE A3                 1252 	inc	dptr
   05AF 74s00              1253 	mov	a,#(_calculator_zero2 >> 8)
   05B1 12s00r00           1254 	lcall	__gptrput
   05B4 A3                 1255 	inc	dptr
   05B5 74 80              1256 	mov	a,#0x80
   05B7 12s00r00           1257 	lcall	__gptrput
   05BA 75 82 02           1258 	mov	dpl,#0x02
   05BD 80 57              1259 	sjmp	00110$
   05BF                    1260 00105$:
                           1261 ;	../sm_test_calculator.c:177: TRANSITION_ON(DIGIT_1_9,											TO(int2),				NO_ACTION) ;
   05BF A8*00              1262 	mov	r0,_bp
   05C1 08                 1263 	inc	r0
   05C2 B6 0B 25           1264 	cjne	@r0,#0x0B,00107$
   05C5 74 08              1265 	mov	a,#0x08
   05C7 2A                 1266 	add	a,r2
   05C8 FD                 1267 	mov	r5,a
   05C9 E4                 1268 	clr	a
   05CA 3B                 1269 	addc	a,r3
   05CB FE                 1270 	mov	r6,a
   05CC 8C 07              1271 	mov	ar7,r4
   05CE 8D 82              1272 	mov	dpl,r5
   05D0 8E 83              1273 	mov	dph,r6
   05D2 8F F0              1274 	mov	b,r7
   05D4 74r87              1275 	mov	a,#_calculator_int2
   05D6 12s00r00           1276 	lcall	__gptrput
   05D9 A3                 1277 	inc	dptr
   05DA 74s00              1278 	mov	a,#(_calculator_int2 >> 8)
   05DC 12s00r00           1279 	lcall	__gptrput
   05DF A3                 1280 	inc	dptr
   05E0 74 80              1281 	mov	a,#0x80
   05E2 12s00r00           1282 	lcall	__gptrput
   05E5 75 82 02           1283 	mov	dpl,#0x02
   05E8 80 2C              1284 	sjmp	00110$
   05EA                    1285 00107$:
                           1286 ;	../sm_test_calculator.c:178: TRANSITION_ON(POINT,												TO(frac2),				NO_ACTION) ;
   05EA A8*00              1287 	mov	r0,_bp
   05EC 08                 1288 	inc	r0
   05ED B6 0C 23           1289 	cjne	@r0,#0x0C,00109$
   05F0 74 08              1290 	mov	a,#0x08
   05F2 2A                 1291 	add	a,r2
   05F3 FA                 1292 	mov	r2,a
   05F4 E4                 1293 	clr	a
   05F5 3B                 1294 	addc	a,r3
   05F6 FB                 1295 	mov	r3,a
   05F7 8A 82              1296 	mov	dpl,r2
   05F9 8B 83              1297 	mov	dph,r3
   05FB 8C F0              1298 	mov	b,r4
   05FD 74r90              1299 	mov	a,#_calculator_frac2
   05FF 12s00r00           1300 	lcall	__gptrput
   0602 A3                 1301 	inc	dptr
   0603 74s00              1302 	mov	a,#(_calculator_frac2 >> 8)
   0605 12s00r00           1303 	lcall	__gptrput
   0608 A3                 1304 	inc	dptr
   0609 74 80              1305 	mov	a,#0x80
   060B 12s00r00           1306 	lcall	__gptrput
   060E 75 82 02           1307 	mov	dpl,#0x02
   0611 80 03              1308 	sjmp	00110$
   0613                    1309 00109$:
                           1310 ;	../sm_test_calculator.c:180: END_DEFINE_STATE()
   0613 75 82 00           1311 	mov	dpl,#0x00
   0616                    1312 00110$:
   0616 85*00 81           1313 	mov	sp,_bp
   0619 D0*00              1314 	pop	_bp
   061B 22                 1315 	ret
                           1316 ;------------------------------------------------------------
                           1317 ;Allocation info for local variables in function 'calculator_negated2_handler'
                           1318 ;------------------------------------------------------------
                           1319 ;event                     Allocated to stack - offset -5
                           1320 ;self                      Allocated to stack - offset 1
                           1321 ;stateResponseCode         Allocated to registers 
                           1322 ;sloc0                     Allocated to stack - offset 5
                           1323 ;------------------------------------------------------------
                           1324 ;	../sm_test_calculator.c:183: DEFINE_STATE(negated2)
                           1325 ;	-----------------------------------------
                           1326 ;	 function calculator_negated2_handler
                           1327 ;	-----------------------------------------
   061C                    1328 _calculator_negated2_handler:
   061C C0*00              1329 	push	_bp
   061E 85 81*00           1330 	mov	_bp,sp
   0621 C0 82              1331 	push	dpl
   0623 C0 83              1332 	push	dph
   0625 C0 F0              1333 	push	b
                           1334 ;	../sm_test_calculator.c:185: TRANSITION_ON(CLEAR_ENTRY,											TO(opEntered),			NO_ACTION) ;
   0627 E5*00              1335 	mov	a,_bp
   0629 24 FB              1336 	add	a,#0xfb
   062B F8                 1337 	mov	r0,a
   062C 86 05              1338 	mov	ar5,@r0
   062E 08                 1339 	inc	r0
   062F 86 06              1340 	mov	ar6,@r0
   0631 08                 1341 	inc	r0
   0632 86 07              1342 	mov	ar7,@r0
   0634 8D 82              1343 	mov	dpl,r5
   0636 8E 83              1344 	mov	dph,r6
   0638 8F F0              1345 	mov	b,r7
   063A 12s00r00           1346 	lcall	__gptrget
   063D FA                 1347 	mov	r2,a
   063E BA 09 2B           1348 	cjne	r2,#0x09,00102$
   0641 A8*00              1349 	mov	r0,_bp
   0643 08                 1350 	inc	r0
   0644 74 08              1351 	mov	a,#0x08
   0646 26                 1352 	add	a,@r0
   0647 FA                 1353 	mov	r2,a
   0648 E4                 1354 	clr	a
   0649 08                 1355 	inc	r0
   064A 36                 1356 	addc	a,@r0
   064B FB                 1357 	mov	r3,a
   064C 08                 1358 	inc	r0
   064D 86 04              1359 	mov	ar4,@r0
   064F 8A 82              1360 	mov	dpl,r2
   0651 8B 83              1361 	mov	dph,r3
   0653 8C F0              1362 	mov	b,r4
   0655 74r63              1363 	mov	a,#_calculator_opEntered
   0657 12s00r00           1364 	lcall	__gptrput
   065A A3                 1365 	inc	dptr
   065B 74s00              1366 	mov	a,#(_calculator_opEntered >> 8)
   065D 12s00r00           1367 	lcall	__gptrput
   0660 A3                 1368 	inc	dptr
   0661 74 80              1369 	mov	a,#0x80
   0663 12s00r00           1370 	lcall	__gptrput
   0666 75 82 02           1371 	mov	dpl,#0x02
   0669 02s07r13           1372 	ljmp	00112$
   066C                    1373 00102$:
                           1374 ;	../sm_test_calculator.c:186: TRANSITION_ON(DIGIT_0,												TO(zero2),				NO_ACTION) ;
   066C BA 0A 2B           1375 	cjne	r2,#0x0A,00104$
   066F A8*00              1376 	mov	r0,_bp
   0671 08                 1377 	inc	r0
   0672 74 08              1378 	mov	a,#0x08
   0674 26                 1379 	add	a,@r0
   0675 FA                 1380 	mov	r2,a
   0676 E4                 1381 	clr	a
   0677 08                 1382 	inc	r0
   0678 36                 1383 	addc	a,@r0
   0679 FB                 1384 	mov	r3,a
   067A 08                 1385 	inc	r0
   067B 86 04              1386 	mov	ar4,@r0
   067D 8A 82              1387 	mov	dpl,r2
   067F 8B 83              1388 	mov	dph,r3
   0681 8C F0              1389 	mov	b,r4
   0683 74r7E              1390 	mov	a,#_calculator_zero2
   0685 12s00r00           1391 	lcall	__gptrput
   0688 A3                 1392 	inc	dptr
   0689 74s00              1393 	mov	a,#(_calculator_zero2 >> 8)
   068B 12s00r00           1394 	lcall	__gptrput
   068E A3                 1395 	inc	dptr
   068F 74 80              1396 	mov	a,#0x80
   0691 12s00r00           1397 	lcall	__gptrput
   0694 75 82 02           1398 	mov	dpl,#0x02
   0697 02s07r13           1399 	ljmp	00112$
   069A                    1400 00104$:
                           1401 ;	../sm_test_calculator.c:187: TRANSITION_ON(DIGIT_1_9,											TO(int2),				NO_ACTION) ;
   069A BA 0B 2A           1402 	cjne	r2,#0x0B,00106$
   069D A8*00              1403 	mov	r0,_bp
   069F 08                 1404 	inc	r0
   06A0 74 08              1405 	mov	a,#0x08
   06A2 26                 1406 	add	a,@r0
   06A3 FA                 1407 	mov	r2,a
   06A4 E4                 1408 	clr	a
   06A5 08                 1409 	inc	r0
   06A6 36                 1410 	addc	a,@r0
   06A7 FB                 1411 	mov	r3,a
   06A8 08                 1412 	inc	r0
   06A9 86 04              1413 	mov	ar4,@r0
   06AB 8A 82              1414 	mov	dpl,r2
   06AD 8B 83              1415 	mov	dph,r3
   06AF 8C F0              1416 	mov	b,r4
   06B1 74r87              1417 	mov	a,#_calculator_int2
   06B3 12s00r00           1418 	lcall	__gptrput
   06B6 A3                 1419 	inc	dptr
   06B7 74s00              1420 	mov	a,#(_calculator_int2 >> 8)
   06B9 12s00r00           1421 	lcall	__gptrput
   06BC A3                 1422 	inc	dptr
   06BD 74 80              1423 	mov	a,#0x80
   06BF 12s00r00           1424 	lcall	__gptrput
   06C2 75 82 02           1425 	mov	dpl,#0x02
   06C5 80 4C              1426 	sjmp	00112$
   06C7                    1427 00106$:
                           1428 ;	../sm_test_calculator.c:188: TRANSITION_ON(POINT,												TO(frac2),				NO_ACTION) ;
   06C7 BA 0C 2A           1429 	cjne	r2,#0x0C,00108$
   06CA A8*00              1430 	mov	r0,_bp
   06CC 08                 1431 	inc	r0
   06CD 74 08              1432 	mov	a,#0x08
   06CF 26                 1433 	add	a,@r0
   06D0 FA                 1434 	mov	r2,a
   06D1 E4                 1435 	clr	a
   06D2 08                 1436 	inc	r0
   06D3 36                 1437 	addc	a,@r0
   06D4 FB                 1438 	mov	r3,a
   06D5 08                 1439 	inc	r0
   06D6 86 04              1440 	mov	ar4,@r0
   06D8 8A 82              1441 	mov	dpl,r2
   06DA 8B 83              1442 	mov	dph,r3
   06DC 8C F0              1443 	mov	b,r4
   06DE 74r90              1444 	mov	a,#_calculator_frac2
   06E0 12s00r00           1445 	lcall	__gptrput
   06E3 A3                 1446 	inc	dptr
   06E4 74s00              1447 	mov	a,#(_calculator_frac2 >> 8)
   06E6 12s00r00           1448 	lcall	__gptrput
   06E9 A3                 1449 	inc	dptr
   06EA 74 80              1450 	mov	a,#0x80
   06EC 12s00r00           1451 	lcall	__gptrput
   06EF 75 82 02           1452 	mov	dpl,#0x02
   06F2 80 1F              1453 	sjmp	00112$
   06F4                    1454 00108$:
                           1455 ;	../sm_test_calculator.c:189: CONSUME_EVENT_IF(OPERATION,	IF(CAST_EVENT(keyEvent_t)->key == '-'),							NO_ACTION) ;
   06F4 BA 0D 19           1456 	cjne	r2,#0x0D,00110$
   06F7 74 02              1457 	mov	a,#0x02
   06F9 2D                 1458 	add	a,r5
   06FA FD                 1459 	mov	r5,a
   06FB E4                 1460 	clr	a
   06FC 3E                 1461 	addc	a,r6
   06FD FE                 1462 	mov	r6,a
   06FE 8D 82              1463 	mov	dpl,r5
   0700 8E 83              1464 	mov	dph,r6
   0702 8F F0              1465 	mov	b,r7
   0704 12s00r00           1466 	lcall	__gptrget
   0707 FD                 1467 	mov	r5,a
   0708 BD 2D 05           1468 	cjne	r5,#0x2D,00110$
   070B 75 82 01           1469 	mov	dpl,#0x01
   070E 80 03              1470 	sjmp	00112$
   0710                    1471 00110$:
                           1472 ;	../sm_test_calculator.c:191: END_DEFINE_STATE()
   0710 75 82 00           1473 	mov	dpl,#0x00
   0713                    1474 00112$:
   0713 85*00 81           1475 	mov	sp,_bp
   0716 D0*00              1476 	pop	_bp
   0718 22                 1477 	ret
                           1478 ;------------------------------------------------------------
                           1479 ;Allocation info for local variables in function 'doCalculation'
                           1480 ;------------------------------------------------------------
                           1481 ;type                      Allocated with name '_doCalculation_type_1_1'
                           1482 ;------------------------------------------------------------
                           1483 ;	../sm_test_calculator.c:194: uint8_t doCalculation(	uint8_t type)
                           1484 ;	-----------------------------------------
                           1485 ;	 function doCalculation
                           1486 ;	-----------------------------------------
   0719                    1487 _doCalculation:
   0719 E5 82              1488 	mov	a,dpl
   071B 90s00r18           1489 	mov	dptr,#_doCalculation_type_1_1
   071E F0                 1490 	movx	@dptr,a
                           1491 ;	../sm_test_calculator.c:196: switch(type)
   071F 90s00r18           1492 	mov	dptr,#_doCalculation_type_1_1
   0722 E0                 1493 	movx	a,@dptr
   0723 FA                 1494 	mov	r2,a
   0724 BA 2A 02           1495 	cjne	r2,#0x2A,00113$
   0727 80 17              1496 	sjmp	00103$
   0729                    1497 00113$:
   0729 BA 2B 02           1498 	cjne	r2,#0x2B,00114$
   072C 80 0A              1499 	sjmp	00101$
   072E                    1500 00114$:
   072E BA 2D 02           1501 	cjne	r2,#0x2D,00115$
   0731 80 09              1502 	sjmp	00102$
   0733                    1503 00115$:
                           1504 ;	../sm_test_calculator.c:198: case '+': { return true ; }
   0733 BA 2F 12           1505 	cjne	r2,#0x2F,00105$
   0736 80 0C              1506 	sjmp	00104$
   0738                    1507 00101$:
   0738 75 82 01           1508 	mov	dpl,#0x01
                           1509 ;	../sm_test_calculator.c:199: case '-': { return true ; }
   073B 22                 1510 	ret
   073C                    1511 00102$:
   073C 75 82 01           1512 	mov	dpl,#0x01
                           1513 ;	../sm_test_calculator.c:200: case '*': { return true ; }
   073F 22                 1514 	ret
   0740                    1515 00103$:
   0740 75 82 01           1516 	mov	dpl,#0x01
                           1517 ;	../sm_test_calculator.c:201: case '/': { return true ; }
   0743 22                 1518 	ret
   0744                    1519 00104$:
   0744 75 82 01           1520 	mov	dpl,#0x01
                           1521 ;	../sm_test_calculator.c:202: default:  { return false ; }
                           1522 ;	../sm_test_calculator.c:203: }
   0747 22                 1523 	ret
   0748                    1524 00105$:
   0748 75 82 00           1525 	mov	dpl,#0x00
   074B 22                 1526 	ret
                           1527 ;------------------------------------------------------------
                           1528 ;Allocation info for local variables in function 'calculator_operand2_handler'
                           1529 ;------------------------------------------------------------
                           1530 ;event                     Allocated to stack - offset -5
                           1531 ;self                      Allocated to stack - offset 1
                           1532 ;stateResponseCode         Allocated to registers 
                           1533 ;goodCalc                  Allocated to registers r2 
                           1534 ;sloc0                     Allocated to stack - offset 6
                           1535 ;------------------------------------------------------------
                           1536 ;	../sm_test_calculator.c:207: DEFINE_STATE(operand2)
                           1537 ;	-----------------------------------------
                           1538 ;	 function calculator_operand2_handler
                           1539 ;	-----------------------------------------
   074C                    1540 _calculator_operand2_handler:
   074C C0*00              1541 	push	_bp
   074E 85 81*00           1542 	mov	_bp,sp
   0751 C0 82              1543 	push	dpl
   0753 C0 83              1544 	push	dph
   0755 C0 F0              1545 	push	b
                           1546 ;	../sm_test_calculator.c:209: TRANSITION_ON(CLEAR_ENTRY,											TO(opEntered),			NO_ACTION) ;
   0757 E5*00              1547 	mov	a,_bp
   0759 24 FB              1548 	add	a,#0xfb
   075B F8                 1549 	mov	r0,a
   075C 86 05              1550 	mov	ar5,@r0
   075E 08                 1551 	inc	r0
   075F 86 06              1552 	mov	ar6,@r0
   0761 08                 1553 	inc	r0
   0762 86 07              1554 	mov	ar7,@r0
   0764 8D 82              1555 	mov	dpl,r5
   0766 8E 83              1556 	mov	dph,r6
   0768 8F F0              1557 	mov	b,r7
   076A 12s00r00           1558 	lcall	__gptrget
   076D FA                 1559 	mov	r2,a
   076E BA 09 2B           1560 	cjne	r2,#0x09,00102$
   0771 A8*00              1561 	mov	r0,_bp
   0773 08                 1562 	inc	r0
   0774 74 08              1563 	mov	a,#0x08
   0776 26                 1564 	add	a,@r0
   0777 FA                 1565 	mov	r2,a
   0778 E4                 1566 	clr	a
   0779 08                 1567 	inc	r0
   077A 36                 1568 	addc	a,@r0
   077B FB                 1569 	mov	r3,a
   077C 08                 1570 	inc	r0
   077D 86 04              1571 	mov	ar4,@r0
   077F 8A 82              1572 	mov	dpl,r2
   0781 8B 83              1573 	mov	dph,r3
   0783 8C F0              1574 	mov	b,r4
   0785 74r63              1575 	mov	a,#_calculator_opEntered
   0787 12s00r00           1576 	lcall	__gptrput
   078A A3                 1577 	inc	dptr
   078B 74s00              1578 	mov	a,#(_calculator_opEntered >> 8)
   078D 12s00r00           1579 	lcall	__gptrput
   0790 A3                 1580 	inc	dptr
   0791 74 80              1581 	mov	a,#0x80
   0793 12s00r00           1582 	lcall	__gptrput
   0796 75 82 02           1583 	mov	dpl,#0x02
   0799 02s08r67           1584 	ljmp	00114$
   079C                    1585 00102$:
                           1586 ;	../sm_test_calculator.c:211: HANDLE_STATE_EVENTS
   079C BA 0D 02           1587 	cjne	r2,#0x0D,00123$
   079F 80 08              1588 	sjmp	00104$
   07A1                    1589 00123$:
   07A1 BA 0E 02           1590 	cjne	r2,#0x0E,00124$
   07A4 80 03              1591 	sjmp	00125$
   07A6                    1592 00124$:
   07A6 02s08r64           1593 	ljmp	00113$
   07A9                    1594 00125$:
                           1595 ;	../sm_test_calculator.c:214: EVENT(EQUALS)
   07A9                    1596 00104$:
                           1597 ;	../sm_test_calculator.c:216: uint8_t goodCalc = doCalculation(CAST_EVENT(keyEvent_t)->key) ;
   07A9 74 02              1598 	mov	a,#0x02
   07AB 2D                 1599 	add	a,r5
   07AC FA                 1600 	mov	r2,a
   07AD E4                 1601 	clr	a
   07AE 3E                 1602 	addc	a,r6
   07AF FB                 1603 	mov	r3,a
   07B0 8F 04              1604 	mov	ar4,r7
   07B2 8A 82              1605 	mov	dpl,r2
   07B4 8B 83              1606 	mov	dph,r3
   07B6 8C F0              1607 	mov	b,r4
   07B8 12s00r00           1608 	lcall	__gptrget
   07BB F5 82              1609 	mov	dpl,a
   07BD C0 05              1610 	push	ar5
   07BF C0 06              1611 	push	ar6
   07C1 C0 07              1612 	push	ar7
   07C3 12s07r19           1613 	lcall	_doCalculation
   07C6 AA 82              1614 	mov	r2,dpl
   07C8 D0 07              1615 	pop	ar7
   07CA D0 06              1616 	pop	ar6
   07CC D0 05              1617 	pop	ar5
                           1618 ;	../sm_test_calculator.c:218: if(goodCalc)
   07CE EA                 1619 	mov	a,r2
   07CF 60 64              1620 	jz	00110$
                           1621 ;	../sm_test_calculator.c:220: TRANSITION_ON(OPERATION,								TO(opEntered),			NO_ACTION) ;
   07D1 8D 82              1622 	mov	dpl,r5
   07D3 8E 83              1623 	mov	dph,r6
   07D5 8F F0              1624 	mov	b,r7
   07D7 12s00r00           1625 	lcall	__gptrget
   07DA FA                 1626 	mov	r2,a
   07DB BA 0D 2A           1627 	cjne	r2,#0x0D,00106$
   07DE A8*00              1628 	mov	r0,_bp
   07E0 08                 1629 	inc	r0
   07E1 74 08              1630 	mov	a,#0x08
   07E3 26                 1631 	add	a,@r0
   07E4 FB                 1632 	mov	r3,a
   07E5 E4                 1633 	clr	a
   07E6 08                 1634 	inc	r0
   07E7 36                 1635 	addc	a,@r0
   07E8 FC                 1636 	mov	r4,a
   07E9 08                 1637 	inc	r0
   07EA 86 05              1638 	mov	ar5,@r0
   07EC 8B 82              1639 	mov	dpl,r3
   07EE 8C 83              1640 	mov	dph,r4
   07F0 8D F0              1641 	mov	b,r5
   07F2 74r63              1642 	mov	a,#_calculator_opEntered
   07F4 12s00r00           1643 	lcall	__gptrput
   07F7 A3                 1644 	inc	dptr
   07F8 74s00              1645 	mov	a,#(_calculator_opEntered >> 8)
   07FA 12s00r00           1646 	lcall	__gptrput
   07FD A3                 1647 	inc	dptr
   07FE 74 80              1648 	mov	a,#0x80
   0800 12s00r00           1649 	lcall	__gptrput
   0803 75 82 02           1650 	mov	dpl,#0x02
   0806 80 5F              1651 	sjmp	00114$
   0808                    1652 00106$:
                           1653 ;	../sm_test_calculator.c:221: TRANSITION_ON(EQUALS,									TO(result),				NO_ACTION) ;
   0808 BA 0E 54           1654 	cjne	r2,#0x0E,00111$
   080B A8*00              1655 	mov	r0,_bp
   080D 08                 1656 	inc	r0
   080E 74 08              1657 	mov	a,#0x08
   0810 26                 1658 	add	a,@r0
   0811 FA                 1659 	mov	r2,a
   0812 E4                 1660 	clr	a
   0813 08                 1661 	inc	r0
   0814 36                 1662 	addc	a,@r0
   0815 FB                 1663 	mov	r3,a
   0816 08                 1664 	inc	r0
   0817 86 04              1665 	mov	ar4,@r0
   0819 8A 82              1666 	mov	dpl,r2
   081B 8B 83              1667 	mov	dph,r3
   081D 8C F0              1668 	mov	b,r4
   081F 74r1B              1669 	mov	a,#_calculator_result
   0821 12s00r00           1670 	lcall	__gptrput
   0824 A3                 1671 	inc	dptr
   0825 74s00              1672 	mov	a,#(_calculator_result >> 8)
   0827 12s00r00           1673 	lcall	__gptrput
   082A A3                 1674 	inc	dptr
   082B 74 80              1675 	mov	a,#0x80
   082D 12s00r00           1676 	lcall	__gptrput
   0830 75 82 02           1677 	mov	dpl,#0x02
   0833 80 32              1678 	sjmp	00114$
   0835                    1679 00110$:
                           1680 ;	../sm_test_calculator.c:225: TRANSITION_TO(error, NO_ACTION) ;
   0835 A8*00              1681 	mov	r0,_bp
   0837 08                 1682 	inc	r0
   0838 74 08              1683 	mov	a,#0x08
   083A 26                 1684 	add	a,@r0
   083B FA                 1685 	mov	r2,a
   083C E4                 1686 	clr	a
   083D 08                 1687 	inc	r0
   083E 36                 1688 	addc	a,@r0
   083F FB                 1689 	mov	r3,a
   0840 08                 1690 	inc	r0
   0841 86 04              1691 	mov	ar4,@r0
   0843 8A 82              1692 	mov	dpl,r2
   0845 8B 83              1693 	mov	dph,r3
   0847 8C F0              1694 	mov	b,r4
   0849 74r5A              1695 	mov	a,#_calculator_error
   084B 12s00r00           1696 	lcall	__gptrput
   084E A3                 1697 	inc	dptr
   084F 74s00              1698 	mov	a,#(_calculator_error >> 8)
   0851 12s00r00           1699 	lcall	__gptrput
   0854 A3                 1700 	inc	dptr
   0855 74 80              1701 	mov	a,#0x80
   0857 12s00r00           1702 	lcall	__gptrput
   085A 75 82 02           1703 	mov	dpl,#0x02
   085D 80 08              1704 	sjmp	00114$
   085F                    1705 00111$:
                           1706 ;	../sm_test_calculator.c:228: EVENT_HANDLED
   085F 75 82 01           1707 	mov	dpl,#0x01
                           1708 ;	../sm_test_calculator.c:230: HANDLE_STATE_EVENTS_DONE
   0862 80 03              1709 	sjmp	00114$
   0864                    1710 00113$:
                           1711 ;	../sm_test_calculator.c:232: END_DEFINE_STATE()
   0864 75 82 00           1712 	mov	dpl,#0x00
   0867                    1713 00114$:
   0867 85*00 81           1714 	mov	sp,_bp
   086A D0*00              1715 	pop	_bp
   086C 22                 1716 	ret
                           1717 ;------------------------------------------------------------
                           1718 ;Allocation info for local variables in function 'calculator_zero2_handler'
                           1719 ;------------------------------------------------------------
                           1720 ;event                     Allocated to stack - offset -5
                           1721 ;self                      Allocated to stack - offset 1
                           1722 ;stateResponseCode         Allocated to registers 
                           1723 ;------------------------------------------------------------
                           1724 ;	../sm_test_calculator.c:235: DEFINE_STATE(zero2)
                           1725 ;	-----------------------------------------
                           1726 ;	 function calculator_zero2_handler
                           1727 ;	-----------------------------------------
   086D                    1728 _calculator_zero2_handler:
   086D C0*00              1729 	push	_bp
   086F 85 81*00           1730 	mov	_bp,sp
   0872 C0 82              1731 	push	dpl
   0874 C0 83              1732 	push	dph
   0876 C0 F0              1733 	push	b
                           1734 ;	../sm_test_calculator.c:237: INITIAL_TRANSITION(TO(negated1),															NO_ACTION) ;
   0878 E5*00              1735 	mov	a,_bp
   087A 24 FB              1736 	add	a,#0xfb
   087C F8                 1737 	mov	r0,a
   087D 86 05              1738 	mov	ar5,@r0
   087F 08                 1739 	inc	r0
   0880 86 06              1740 	mov	ar6,@r0
   0882 08                 1741 	inc	r0
   0883 86 07              1742 	mov	ar7,@r0
   0885 8D 82              1743 	mov	dpl,r5
   0887 8E 83              1744 	mov	dph,r6
   0889 8F F0              1745 	mov	b,r7
   088B 12s00r00           1746 	lcall	__gptrget
   088E FD                 1747 	mov	r5,a
   088F BD 02 2A           1748 	cjne	r5,#0x02,00102$
   0892 A8*00              1749 	mov	r0,_bp
   0894 08                 1750 	inc	r0
   0895 74 08              1751 	mov	a,#0x08
   0897 26                 1752 	add	a,@r0
   0898 FE                 1753 	mov	r6,a
   0899 E4                 1754 	clr	a
   089A 08                 1755 	inc	r0
   089B 36                 1756 	addc	a,@r0
   089C FF                 1757 	mov	r7,a
   089D 08                 1758 	inc	r0
   089E 86 02              1759 	mov	ar2,@r0
   08A0 8E 82              1760 	mov	dpl,r6
   08A2 8F 83              1761 	mov	dph,r7
   08A4 8A F0              1762 	mov	b,r2
   08A6 74r2D              1763 	mov	a,#_calculator_negated1
   08A8 12s00r00           1764 	lcall	__gptrput
   08AB A3                 1765 	inc	dptr
   08AC 74s00              1766 	mov	a,#(_calculator_negated1 >> 8)
   08AE 12s00r00           1767 	lcall	__gptrput
   08B1 A3                 1768 	inc	dptr
   08B2 74 80              1769 	mov	a,#0x80
   08B4 12s00r00           1770 	lcall	__gptrput
   08B7 75 82 02           1771 	mov	dpl,#0x02
   08BA 80 65              1772 	sjmp	00109$
   08BC                    1773 00102$:
                           1774 ;	../sm_test_calculator.c:238: CONSUME_EVENT(DIGIT_0,																		NO_ACTION) ;
   08BC BD 0A 05           1775 	cjne	r5,#0x0A,00104$
   08BF 75 82 01           1776 	mov	dpl,#0x01
   08C2 80 5D              1777 	sjmp	00109$
   08C4                    1778 00104$:
                           1779 ;	../sm_test_calculator.c:239: TRANSITION_ON(DIGIT_1_9,											TO(int2),				NO_ACTION) ;
   08C4 BD 0B 2A           1780 	cjne	r5,#0x0B,00106$
   08C7 A8*00              1781 	mov	r0,_bp
   08C9 08                 1782 	inc	r0
   08CA 74 08              1783 	mov	a,#0x08
   08CC 26                 1784 	add	a,@r0
   08CD FA                 1785 	mov	r2,a
   08CE E4                 1786 	clr	a
   08CF 08                 1787 	inc	r0
   08D0 36                 1788 	addc	a,@r0
   08D1 FB                 1789 	mov	r3,a
   08D2 08                 1790 	inc	r0
   08D3 86 04              1791 	mov	ar4,@r0
   08D5 8A 82              1792 	mov	dpl,r2
   08D7 8B 83              1793 	mov	dph,r3
   08D9 8C F0              1794 	mov	b,r4
   08DB 74r87              1795 	mov	a,#_calculator_int2
   08DD 12s00r00           1796 	lcall	__gptrput
   08E0 A3                 1797 	inc	dptr
   08E1 74s00              1798 	mov	a,#(_calculator_int2 >> 8)
   08E3 12s00r00           1799 	lcall	__gptrput
   08E6 A3                 1800 	inc	dptr
   08E7 74 80              1801 	mov	a,#0x80
   08E9 12s00r00           1802 	lcall	__gptrput
   08EC 75 82 02           1803 	mov	dpl,#0x02
   08EF 80 30              1804 	sjmp	00109$
   08F1                    1805 00106$:
                           1806 ;	../sm_test_calculator.c:240: TRANSITION_ON(POINT,												TO(frac2),				NO_ACTION) ;
   08F1 BD 0C 2A           1807 	cjne	r5,#0x0C,00108$
   08F4 A8*00              1808 	mov	r0,_bp
   08F6 08                 1809 	inc	r0
   08F7 74 08              1810 	mov	a,#0x08
   08F9 26                 1811 	add	a,@r0
   08FA FA                 1812 	mov	r2,a
   08FB E4                 1813 	clr	a
   08FC 08                 1814 	inc	r0
   08FD 36                 1815 	addc	a,@r0
   08FE FB                 1816 	mov	r3,a
   08FF 08                 1817 	inc	r0
   0900 86 04              1818 	mov	ar4,@r0
   0902 8A 82              1819 	mov	dpl,r2
   0904 8B 83              1820 	mov	dph,r3
   0906 8C F0              1821 	mov	b,r4
   0908 74r90              1822 	mov	a,#_calculator_frac2
   090A 12s00r00           1823 	lcall	__gptrput
   090D A3                 1824 	inc	dptr
   090E 74s00              1825 	mov	a,#(_calculator_frac2 >> 8)
   0910 12s00r00           1826 	lcall	__gptrput
   0913 A3                 1827 	inc	dptr
   0914 74 80              1828 	mov	a,#0x80
   0916 12s00r00           1829 	lcall	__gptrput
   0919 75 82 02           1830 	mov	dpl,#0x02
   091C 80 03              1831 	sjmp	00109$
   091E                    1832 00108$:
                           1833 ;	../sm_test_calculator.c:242: END_DEFINE_STATE()
   091E 75 82 00           1834 	mov	dpl,#0x00
   0921                    1835 00109$:
   0921 85*00 81           1836 	mov	sp,_bp
   0924 D0*00              1837 	pop	_bp
   0926 22                 1838 	ret
                           1839 ;------------------------------------------------------------
                           1840 ;Allocation info for local variables in function 'calculator_int2_handler'
                           1841 ;------------------------------------------------------------
                           1842 ;event                     Allocated to stack - offset -5
                           1843 ;self                      Allocated to registers r2 r3 r4 
                           1844 ;stateResponseCode         Allocated to registers 
                           1845 ;------------------------------------------------------------
                           1846 ;	../sm_test_calculator.c:245: DEFINE_STATE(int2)
                           1847 ;	-----------------------------------------
                           1848 ;	 function calculator_int2_handler
                           1849 ;	-----------------------------------------
   0927                    1850 _calculator_int2_handler:
   0927 C0*00              1851 	push	_bp
   0929 85 81*00           1852 	mov	_bp,sp
   092C AA 82              1853 	mov	r2,dpl
   092E AB 83              1854 	mov	r3,dph
   0930 AC F0              1855 	mov	r4,b
                           1856 ;	../sm_test_calculator.c:247: TRANSITION_ON(POINT,												TO(frac2),				NO_ACTION) ;
   0932 E5*00              1857 	mov	a,_bp
   0934 24 FB              1858 	add	a,#0xfb
   0936 F8                 1859 	mov	r0,a
   0937 86 05              1860 	mov	ar5,@r0
   0939 08                 1861 	inc	r0
   093A 86 06              1862 	mov	ar6,@r0
   093C 08                 1863 	inc	r0
   093D 86 07              1864 	mov	ar7,@r0
   093F 8D 82              1865 	mov	dpl,r5
   0941 8E 83              1866 	mov	dph,r6
   0943 8F F0              1867 	mov	b,r7
   0945 12s00r00           1868 	lcall	__gptrget
   0948 FD                 1869 	mov	r5,a
   0949 BD 0C 23           1870 	cjne	r5,#0x0C,00102$
   094C 74 08              1871 	mov	a,#0x08
   094E 2A                 1872 	add	a,r2
   094F FA                 1873 	mov	r2,a
   0950 E4                 1874 	clr	a
   0951 3B                 1875 	addc	a,r3
   0952 FB                 1876 	mov	r3,a
   0953 8A 82              1877 	mov	dpl,r2
   0955 8B 83              1878 	mov	dph,r3
   0957 8C F0              1879 	mov	b,r4
   0959 74r90              1880 	mov	a,#_calculator_frac2
   095B 12s00r00           1881 	lcall	__gptrput
   095E A3                 1882 	inc	dptr
   095F 74s00              1883 	mov	a,#(_calculator_frac2 >> 8)
   0961 12s00r00           1884 	lcall	__gptrput
   0964 A3                 1885 	inc	dptr
   0965 74 80              1886 	mov	a,#0x80
   0967 12s00r00           1887 	lcall	__gptrput
   096A 75 82 02           1888 	mov	dpl,#0x02
   096D 80 03              1889 	sjmp	00103$
   096F                    1890 00102$:
                           1891 ;	../sm_test_calculator.c:249: END_DEFINE_STATE()
   096F 75 82 00           1892 	mov	dpl,#0x00
   0972                    1893 00103$:
   0972 D0*00              1894 	pop	_bp
   0974 22                 1895 	ret
                           1896 ;------------------------------------------------------------
                           1897 ;Allocation info for local variables in function 'calculator_frac2_handler'
                           1898 ;------------------------------------------------------------
                           1899 ;event                     Allocated to stack - offset -5
                           1900 ;self                      Allocated to registers 
                           1901 ;stateResponseCode         Allocated to registers 
                           1902 ;------------------------------------------------------------
                           1903 ;	../sm_test_calculator.c:252: DEFINE_STATE(frac2)
                           1904 ;	-----------------------------------------
                           1905 ;	 function calculator_frac2_handler
                           1906 ;	-----------------------------------------
   0975                    1907 _calculator_frac2_handler:
   0975 C0*00              1908 	push	_bp
   0977 85 81*00           1909 	mov	_bp,sp
                           1910 ;	../sm_test_calculator.c:254: CONSUME_EVENT(POINT,																		NO_ACTION) ;
   097A E5*00              1911 	mov	a,_bp
   097C 24 FB              1912 	add	a,#0xfb
   097E F8                 1913 	mov	r0,a
   097F 86 02              1914 	mov	ar2,@r0
   0981 08                 1915 	inc	r0
   0982 86 03              1916 	mov	ar3,@r0
   0984 08                 1917 	inc	r0
   0985 86 04              1918 	mov	ar4,@r0
   0987 8A 82              1919 	mov	dpl,r2
   0989 8B 83              1920 	mov	dph,r3
   098B 8C F0              1921 	mov	b,r4
   098D 12s00r00           1922 	lcall	__gptrget
   0990 FA                 1923 	mov	r2,a
   0991 BA 0C 05           1924 	cjne	r2,#0x0C,00102$
   0994 75 82 01           1925 	mov	dpl,#0x01
   0997 80 03              1926 	sjmp	00103$
   0999                    1927 00102$:
                           1928 ;	../sm_test_calculator.c:256: END_DEFINE_STATE()
   0999 75 82 00           1929 	mov	dpl,#0x00
   099C                    1930 00103$:
   099C D0*00              1931 	pop	_bp
   099E 22                 1932 	ret
                           1933 	.area CSEG    (CODE)
                           1934 	.area CONST   (CODE)
   0000                    1935 _calculator_TOP:
                           1936 ; generic printIvalPtr
   0000 00 00 00           1937 	.byte #0x00,#0x00,#0x00
   0003 00                 1938 	.db #0x00
   0004r0As01              1939 	.byte _calculator_TOP_handler,(_calculator_TOP_handler >> 8)
   0006rA4s00 80           1940 	.byte _str_1,(_str_1 >> 8),#0x80
   0009                    1941 _calculator_on:
   0009r00s00 80           1942 	.byte _calculator_TOP,(_calculator_TOP >> 8),#0x80
   000C 00                 1943 	.db #0x00
   000Dr58s01              1944 	.byte _calculator_on_handler,(_calculator_on_handler >> 8)
   000FrB3s00 80           1945 	.byte _str_2,(_str_2 >> 8),#0x80
   0012                    1946 _calculator_ready:
   0012r09s00 80           1947 	.byte _calculator_on,(_calculator_on >> 8),#0x80
   0015 00                 1948 	.db #0x00
   0016r0As02              1949 	.byte _calculator_ready_handler,(_calculator_ready_handler >> 8)
   0018rC1s00 80           1950 	.byte _str_3,(_str_3 >> 8),#0x80
   001B                    1951 _calculator_result:
   001Br12s00 80           1952 	.byte _calculator_ready,(_calculator_ready >> 8),#0x80
   001E 00                 1953 	.db #0x00
   001Fr15s02              1954 	.byte _calculator_result_handler,(_calculator_result_handler >> 8)
   0021rD2s00 80           1955 	.byte _str_4,(_str_4 >> 8),#0x80
   0024                    1956 _calculator_begin:
   0024r12s00 80           1957 	.byte _calculator_ready,(_calculator_ready >> 8),#0x80
   0027 00                 1958 	.db #0x00
   0028r20s02              1959 	.byte _calculator_begin_handler,(_calculator_begin_handler >> 8)
   002ArE4s00 80           1960 	.byte _str_5,(_str_5 >> 8),#0x80
   002D                    1961 _calculator_negated1:
   002Dr09s00 80           1962 	.byte _calculator_on,(_calculator_on >> 8),#0x80
   0030 00                 1963 	.db #0x00
   0031r2Bs02              1964 	.byte _calculator_negated1_handler,(_calculator_negated1_handler >> 8)
   0033rF5s00 80           1965 	.byte _str_6,(_str_6 >> 8),#0x80
   0036                    1966 _calculator_operand1:
   0036r09s00 80           1967 	.byte _calculator_on,(_calculator_on >> 8),#0x80
   0039 00                 1968 	.db #0x00
   003Ar28s03              1969 	.byte _calculator_operand1_handler,(_calculator_operand1_handler >> 8)
   003Cr09s01 80           1970 	.byte _str_7,(_str_7 >> 8),#0x80
   003F                    1971 _calculator_zero1:
   003Fr36s00 80           1972 	.byte _calculator_operand1,(_calculator_operand1 >> 8),#0x80
   0042 00                 1973 	.db #0x00
   0043rADs03              1974 	.byte _calculator_zero1_handler,(_calculator_zero1_handler >> 8)
   0045r1Ds01 80           1975 	.byte _str_8,(_str_8 >> 8),#0x80
   0048                    1976 _calculator_int1:
   0048r36s00 80           1977 	.byte _calculator_operand1,(_calculator_operand1 >> 8),#0x80
   004B 00                 1978 	.db #0x00
   004Cr67s04              1979 	.byte _calculator_int1_handler,(_calculator_int1_handler >> 8)
   004Er2Es01 80           1980 	.byte _str_9,(_str_9 >> 8),#0x80
   0051                    1981 _calculator_frac1:
   0051r36s00 80           1982 	.byte _calculator_operand1,(_calculator_operand1 >> 8),#0x80
   0054 00                 1983 	.db #0x00
   0055rB5s04              1984 	.byte _calculator_frac1_handler,(_calculator_frac1_handler >> 8)
   0057r3Es01 80           1985 	.byte _str_10,(_str_10 >> 8),#0x80
   005A                    1986 _calculator_error:
   005Ar09s00 80           1987 	.byte _calculator_on,(_calculator_on >> 8),#0x80
   005D 00                 1988 	.db #0x00
   005ErDFs04              1989 	.byte _calculator_error_handler,(_calculator_error_handler >> 8)
   0060r4Fs01 80           1990 	.byte _str_11,(_str_11 >> 8),#0x80
   0063                    1991 _calculator_opEntered:
   0063r09s00 80           1992 	.byte _calculator_on,(_calculator_on >> 8),#0x80
   0066 00                 1993 	.db #0x00
   0067r2Ds05              1994 	.byte _calculator_opEntered_handler,(_calculator_opEntered_handler >> 8)
   0069r60s01 80           1995 	.byte _str_12,(_str_12 >> 8),#0x80
   006C                    1996 _calculator_negated2:
   006Cr09s00 80           1997 	.byte _calculator_on,(_calculator_on >> 8),#0x80
   006F 00                 1998 	.db #0x00
   0070r1Cs06              1999 	.byte _calculator_negated2_handler,(_calculator_negated2_handler >> 8)
   0072r75s01 80           2000 	.byte _str_13,(_str_13 >> 8),#0x80
   0075                    2001 _calculator_operand2:
   0075r09s00 80           2002 	.byte _calculator_on,(_calculator_on >> 8),#0x80
   0078 00                 2003 	.db #0x00
   0079r4Cs07              2004 	.byte _calculator_operand2_handler,(_calculator_operand2_handler >> 8)
   007Br89s01 80           2005 	.byte _str_14,(_str_14 >> 8),#0x80
   007E                    2006 _calculator_zero2:
   007Er75s00 80           2007 	.byte _calculator_operand2,(_calculator_operand2 >> 8),#0x80
   0081 00                 2008 	.db #0x00
   0082r6Ds08              2009 	.byte _calculator_zero2_handler,(_calculator_zero2_handler >> 8)
   0084r9Ds01 80           2010 	.byte _str_15,(_str_15 >> 8),#0x80
   0087                    2011 _calculator_int2:
   0087r75s00 80           2012 	.byte _calculator_operand2,(_calculator_operand2 >> 8),#0x80
   008A 00                 2013 	.db #0x00
   008Br27s09              2014 	.byte _calculator_int2_handler,(_calculator_int2_handler >> 8)
   008DrAEs01 80           2015 	.byte _str_16,(_str_16 >> 8),#0x80
   0090                    2016 _calculator_frac2:
   0090r75s00 80           2017 	.byte _calculator_operand2,(_calculator_operand2 >> 8),#0x80
   0093 00                 2018 	.db #0x00
   0094r75s09              2019 	.byte _calculator_frac2_handler,(_calculator_frac2_handler >> 8)
   0096rBEs01 80           2020 	.byte _str_17,(_str_17 >> 8),#0x80
   0099                    2021 __str_0:
   0099 63 61 6C 63 75 6C  2022 	.ascii "calculator"
        61 74 6F 72
   00A3 00                 2023 	.db 0x00
   00A4                    2024 _str_1:
   00A4 63 61 6C 63 75 6C  2025 	.ascii "calculator_TOP"
        61 74 6F 72 5F 54
        4F 50
   00B2 00                 2026 	.db 0x00
   00B3                    2027 _str_2:
   00B3 63 61 6C 63 75 6C  2028 	.ascii "calculator_on"
        61 74 6F 72 5F 6F
        6E
   00C0 00                 2029 	.db 0x00
   00C1                    2030 _str_3:
   00C1 63 61 6C 63 75 6C  2031 	.ascii "calculator_ready"
        61 74 6F 72 5F 72
        65 61 64 79
   00D1 00                 2032 	.db 0x00
   00D2                    2033 _str_4:
   00D2 63 61 6C 63 75 6C  2034 	.ascii "calculator_result"
        61 74 6F 72 5F 72
        65 73 75 6C 74
   00E3 00                 2035 	.db 0x00
   00E4                    2036 _str_5:
   00E4 63 61 6C 63 75 6C  2037 	.ascii "calculator_begin"
        61 74 6F 72 5F 62
        65 67 69 6E
   00F4 00                 2038 	.db 0x00
   00F5                    2039 _str_6:
   00F5 63 61 6C 63 75 6C  2040 	.ascii "calculator_negated1"
        61 74 6F 72 5F 6E
        65 67 61 74 65 64
        31
   0108 00                 2041 	.db 0x00
   0109                    2042 _str_7:
   0109 63 61 6C 63 75 6C  2043 	.ascii "calculator_operand1"
        61 74 6F 72 5F 6F
        70 65 72 61 6E 64
        31
   011C 00                 2044 	.db 0x00
   011D                    2045 _str_8:
   011D 63 61 6C 63 75 6C  2046 	.ascii "calculator_zero1"
        61 74 6F 72 5F 7A
        65 72 6F 31
   012D 00                 2047 	.db 0x00
   012E                    2048 _str_9:
   012E 63 61 6C 63 75 6C  2049 	.ascii "calculator_int1"
        61 74 6F 72 5F 69
        6E 74 31
   013D 00                 2050 	.db 0x00
   013E                    2051 _str_10:
   013E 63 61 6C 63 75 6C  2052 	.ascii "calculator_frac1"
        61 74 6F 72 5F 66
        72 61 63 31
   014E 00                 2053 	.db 0x00
   014F                    2054 _str_11:
   014F 63 61 6C 63 75 6C  2055 	.ascii "calculator_error"
        61 74 6F 72 5F 65
        72 72 6F 72
   015F 00                 2056 	.db 0x00
   0160                    2057 _str_12:
   0160 63 61 6C 63 75 6C  2058 	.ascii "calculator_opEntered"
        61 74 6F 72 5F 6F
        70 45 6E 74 65 72
        65 64
   0174 00                 2059 	.db 0x00
   0175                    2060 _str_13:
   0175 63 61 6C 63 75 6C  2061 	.ascii "calculator_negated2"
        61 74 6F 72 5F 6E
        65 67 61 74 65 64
        32
   0188 00                 2062 	.db 0x00
   0189                    2063 _str_14:
   0189 63 61 6C 63 75 6C  2064 	.ascii "calculator_operand2"
        61 74 6F 72 5F 6F
        70 65 72 61 6E 64
        32
   019C 00                 2065 	.db 0x00
   019D                    2066 _str_15:
   019D 63 61 6C 63 75 6C  2067 	.ascii "calculator_zero2"
        61 74 6F 72 5F 7A
        65 72 6F 32
   01AD 00                 2068 	.db 0x00
   01AE                    2069 _str_16:
   01AE 63 61 6C 63 75 6C  2070 	.ascii "calculator_int2"
        61 74 6F 72 5F 69
        6E 74 32
   01BD 00                 2071 	.db 0x00
   01BE                    2072 _str_17:
   01BE 63 61 6C 63 75 6C  2073 	.ascii "calculator_frac2"
        61 74 6F 72 5F 66
        72 61 63 32
   01CE 00                 2074 	.db 0x00
                           2075 	.area XINIT   (CODE)
   0000                    2076 __xinit__calculator_name:
   0000r99s00 80           2077 	.byte __str_0,(__str_0 >> 8),#0x80
                           2078 	.area CABS    (ABS,CODE)
