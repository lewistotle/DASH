                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.0 #5416 (Mar 22 2009) (MINGW32)
                              4 ; This file was generated Sat Jan 02 21:08:33 2010
                              5 ;--------------------------------------------------------
                              6 	.module main
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _vTimer2ISR
                             13 	.globl _addTickCounter
                             14 	.globl _IsFull
                             15 	.globl _IsEmpty
                             16 	.globl _main
                             17 	.globl _P7_7
                             18 	.globl _P7_6
                             19 	.globl _P7_5
                             20 	.globl _P7_4
                             21 	.globl _P7_3
                             22 	.globl _P7_2
                             23 	.globl _P7_1
                             24 	.globl _P7_0
                             25 	.globl _CANTEST
                             26 	.globl _CANCCE
                             27 	.globl _CANDAR
                             28 	.globl _CANIF
                             29 	.globl _CANEIE
                             30 	.globl _CANSIE
                             31 	.globl _CANIE
                             32 	.globl _CANINIT
                             33 	.globl _SPIF
                             34 	.globl _WCOL
                             35 	.globl _MODF
                             36 	.globl _RXOVRN
                             37 	.globl _NSSMD1
                             38 	.globl _NSSMD0
                             39 	.globl _TXBMT
                             40 	.globl _SPIEN
                             41 	.globl _P6_7
                             42 	.globl _P6_6
                             43 	.globl _P6_5
                             44 	.globl _P6_4
                             45 	.globl _P6_3
                             46 	.globl _P6_2
                             47 	.globl _P6_1
                             48 	.globl _P6_0
                             49 	.globl _AD2EN
                             50 	.globl _AD2TM
                             51 	.globl _AD2INT
                             52 	.globl _AD2BUSY
                             53 	.globl _AD2CM2
                             54 	.globl _AD2CM1
                             55 	.globl _AD2CM0
                             56 	.globl _AD2WINT
                             57 	.globl _AD0EN
                             58 	.globl _AD0TM
                             59 	.globl _AD0INT
                             60 	.globl _AD0BUSY
                             61 	.globl _AD0CM1
                             62 	.globl _AD0CM0
                             63 	.globl _AD0WINT
                             64 	.globl _AD0LJST
                             65 	.globl _P5_7
                             66 	.globl _P5_6
                             67 	.globl _P5_5
                             68 	.globl _P5_4
                             69 	.globl _P5_3
                             70 	.globl _P5_2
                             71 	.globl _P5_1
                             72 	.globl _P5_0
                             73 	.globl _CF
                             74 	.globl _CR
                             75 	.globl _CCF5
                             76 	.globl _CCF4
                             77 	.globl _CCF3
                             78 	.globl _CCF2
                             79 	.globl _CCF1
                             80 	.globl _CCF0
                             81 	.globl _CY
                             82 	.globl _AC
                             83 	.globl _F0
                             84 	.globl _RS1
                             85 	.globl _RS0
                             86 	.globl _OV
                             87 	.globl _F1
                             88 	.globl _P
                             89 	.globl _P4_7
                             90 	.globl _P4_6
                             91 	.globl _P4_5
                             92 	.globl _P4_4
                             93 	.globl _P4_3
                             94 	.globl _P4_2
                             95 	.globl _P4_1
                             96 	.globl _P4_0
                             97 	.globl _TF4
                             98 	.globl _EXF4
                             99 	.globl _EXEN4
                            100 	.globl _TR4
                            101 	.globl _CT4
                            102 	.globl _CPRL4
                            103 	.globl _TF3
                            104 	.globl _EXF3
                            105 	.globl _EXEN3
                            106 	.globl _TR3
                            107 	.globl _CT3
                            108 	.globl _CPRL3
                            109 	.globl _TF2
                            110 	.globl _EXF2
                            111 	.globl _EXEN2
                            112 	.globl _TR2
                            113 	.globl _CT2
                            114 	.globl _CPRL2
                            115 	.globl _CANBOFF
                            116 	.globl _CANEWARN
                            117 	.globl _CANEPASS
                            118 	.globl _CANRXOK
                            119 	.globl _CANTXOK
                            120 	.globl _BUSY
                            121 	.globl _ENSMB
                            122 	.globl _STA
                            123 	.globl _STO
                            124 	.globl _SI
                            125 	.globl _AA
                            126 	.globl _SMBFTE
                            127 	.globl _SMBTOE
                            128 	.globl _PT2
                            129 	.globl _PS
                            130 	.globl _PS0
                            131 	.globl _PT1
                            132 	.globl _PX1
                            133 	.globl _PT0
                            134 	.globl _PX0
                            135 	.globl _P3_7
                            136 	.globl _P3_6
                            137 	.globl _P3_5
                            138 	.globl _P3_4
                            139 	.globl _P3_3
                            140 	.globl _P3_2
                            141 	.globl _P3_1
                            142 	.globl _P3_0
                            143 	.globl _EA
                            144 	.globl _ET2
                            145 	.globl _ES
                            146 	.globl _ES0
                            147 	.globl _ET1
                            148 	.globl _EX1
                            149 	.globl _ET0
                            150 	.globl _EX0
                            151 	.globl _P2_7
                            152 	.globl _P2_6
                            153 	.globl _P2_5
                            154 	.globl _P2_4
                            155 	.globl _P2_3
                            156 	.globl _P2_2
                            157 	.globl _P2_1
                            158 	.globl _P2_0
                            159 	.globl _S1MODE
                            160 	.globl _MCE1
                            161 	.globl _REN1
                            162 	.globl _TB81
                            163 	.globl _RB81
                            164 	.globl _TI1
                            165 	.globl _RI1
                            166 	.globl _SM00
                            167 	.globl _SM10
                            168 	.globl _SM20
                            169 	.globl _REN
                            170 	.globl _REN0
                            171 	.globl _TB80
                            172 	.globl _RB80
                            173 	.globl _TI
                            174 	.globl _TI0
                            175 	.globl _RI
                            176 	.globl _RI0
                            177 	.globl _P1_7
                            178 	.globl _P1_6
                            179 	.globl _P1_5
                            180 	.globl _P1_4
                            181 	.globl _P1_3
                            182 	.globl _P1_2
                            183 	.globl _P1_1
                            184 	.globl _P1_0
                            185 	.globl _CP2EN
                            186 	.globl _CP2OUT
                            187 	.globl _CP2RIF
                            188 	.globl _CP2FIF
                            189 	.globl _CP2HYP1
                            190 	.globl _CP2HYP0
                            191 	.globl _CP2HYN1
                            192 	.globl _CP2HYN0
                            193 	.globl _CP1EN
                            194 	.globl _CP1OUT
                            195 	.globl _CP1RIF
                            196 	.globl _CP1FIF
                            197 	.globl _CP1HYP1
                            198 	.globl _CP1HYP0
                            199 	.globl _CP1HYN1
                            200 	.globl _CP1HYN0
                            201 	.globl _CP0EN
                            202 	.globl _CP0OUT
                            203 	.globl _CP0RIF
                            204 	.globl _CP0FIF
                            205 	.globl _CP0HYP1
                            206 	.globl _CP0HYP0
                            207 	.globl _CP0HYN1
                            208 	.globl _CP0HYN0
                            209 	.globl _TF1
                            210 	.globl _TR1
                            211 	.globl _TF0
                            212 	.globl _TR0
                            213 	.globl _IE1
                            214 	.globl _IT1
                            215 	.globl _IE0
                            216 	.globl _IT0
                            217 	.globl _P0_7
                            218 	.globl _P0_6
                            219 	.globl _P0_5
                            220 	.globl _P0_4
                            221 	.globl _P0_3
                            222 	.globl _P0_2
                            223 	.globl _P0_1
                            224 	.globl _P0_0
                            225 	.globl _P7
                            226 	.globl _P6
                            227 	.globl _XBR3
                            228 	.globl _XBR2
                            229 	.globl _XBR1
                            230 	.globl _XBR0
                            231 	.globl _P5
                            232 	.globl _P4
                            233 	.globl _FLACL
                            234 	.globl _P3MDIN
                            235 	.globl _P2MDIN
                            236 	.globl _P1MDIN
                            237 	.globl _P3MDOUT
                            238 	.globl _P2MDOUT
                            239 	.globl _P1MDOUT
                            240 	.globl _P0MDOUT
                            241 	.globl _P7MDOUT
                            242 	.globl _P6MDOUT
                            243 	.globl _P5MDOUT
                            244 	.globl _P4MDOUT
                            245 	.globl _CLKSEL
                            246 	.globl _SFRPGCN
                            247 	.globl _OSCXCN
                            248 	.globl _OSCICL
                            249 	.globl _OSCICN
                            250 	.globl _CPT2MD
                            251 	.globl _CPT2CN
                            252 	.globl _ADC2CN
                            253 	.globl _TMR4H
                            254 	.globl _TMR4L
                            255 	.globl _RCAP4H
                            256 	.globl _RCAP4L
                            257 	.globl _TMR4CF
                            258 	.globl _TMR4CN
                            259 	.globl _ADC2LT
                            260 	.globl _ADC2GT
                            261 	.globl _ADC2
                            262 	.globl _ADC2CF
                            263 	.globl _AMX2SL
                            264 	.globl _AMX2CF
                            265 	.globl _CPT1MD
                            266 	.globl _CPT1CN
                            267 	.globl _CAN0CN
                            268 	.globl _CAN0TST
                            269 	.globl _CAN0ADR
                            270 	.globl _CAN0DATH
                            271 	.globl _CAN0DATL
                            272 	.globl _DAC1CN
                            273 	.globl _DAC1H
                            274 	.globl _DAC1L
                            275 	.globl _TMR3H
                            276 	.globl _TMR3L
                            277 	.globl _RCAP3H
                            278 	.globl _RCAP3L
                            279 	.globl _TMR3CF
                            280 	.globl _TMR3CN
                            281 	.globl _CAN0STA
                            282 	.globl _SBUF1
                            283 	.globl _SCON1
                            284 	.globl _CPT0MD
                            285 	.globl _CPT0CN
                            286 	.globl _PCA0CPH1
                            287 	.globl _PCA0CPL1
                            288 	.globl _PCA0CPH0
                            289 	.globl _PCA0CPL0
                            290 	.globl _PCA0H
                            291 	.globl _PCA0L
                            292 	.globl _SPI0CN
                            293 	.globl _RSTSRC
                            294 	.globl _PCA0CPH4
                            295 	.globl _PCA0CPL4
                            296 	.globl _PCA0CPH3
                            297 	.globl _PCA0CPL3
                            298 	.globl _PCA0CPH2
                            299 	.globl _PCA0CPL2
                            300 	.globl _ADC0CN
                            301 	.globl _PCA0CPH5
                            302 	.globl _PCA0CPL5
                            303 	.globl _PCA0CPM5
                            304 	.globl _PCA0CPM4
                            305 	.globl _PCA0CPM3
                            306 	.globl _PCA0CPM2
                            307 	.globl _PCA0CPM1
                            308 	.globl _PCA0CPM0
                            309 	.globl _PCA0MD
                            310 	.globl _PCA0CN
                            311 	.globl _HVA0CN
                            312 	.globl _DAC0CN
                            313 	.globl _DAC0H
                            314 	.globl _DAC0L
                            315 	.globl _REF0CN
                            316 	.globl _SMB0CR
                            317 	.globl _TH2
                            318 	.globl _TMR2H
                            319 	.globl _TL2
                            320 	.globl _TMR2L
                            321 	.globl _RCAP2H
                            322 	.globl _RCAP2L
                            323 	.globl _TMR2CF
                            324 	.globl _TMR2CN
                            325 	.globl _ADC0LTH
                            326 	.globl _ADC0LTL
                            327 	.globl _ADC0GTH
                            328 	.globl _ADC0GTL
                            329 	.globl _SMB0ADR
                            330 	.globl _SMB0DAT
                            331 	.globl _SMB0STA
                            332 	.globl _SMB0CN
                            333 	.globl _ADC0H
                            334 	.globl _ADC0L
                            335 	.globl _AMX0PRT
                            336 	.globl _ADC0CF
                            337 	.globl _AMX0SL
                            338 	.globl _AMX0CF
                            339 	.globl _SADEN0
                            340 	.globl _FLSCL
                            341 	.globl _SADDR0
                            342 	.globl _EMI0CF
                            343 	.globl __XPAGE
                            344 	.globl _EMI0CN
                            345 	.globl _EMI0TC
                            346 	.globl _SPI0CKR
                            347 	.globl _SPI0DAT
                            348 	.globl _SPI0CFG
                            349 	.globl _SBUF
                            350 	.globl _SBUF0
                            351 	.globl _SCON
                            352 	.globl _SCON0
                            353 	.globl _SSTA0
                            354 	.globl _PSCTL
                            355 	.globl _CKCON
                            356 	.globl _TH1
                            357 	.globl _TH0
                            358 	.globl _TL1
                            359 	.globl _TL0
                            360 	.globl _TMOD
                            361 	.globl _TCON
                            362 	.globl _WDTCN
                            363 	.globl _EIP2
                            364 	.globl _EIP1
                            365 	.globl _B
                            366 	.globl _EIE2
                            367 	.globl _EIE1
                            368 	.globl _ACC
                            369 	.globl _PSW
                            370 	.globl _IP
                            371 	.globl _P3
                            372 	.globl _IE
                            373 	.globl _P2
                            374 	.globl _P1
                            375 	.globl _PCON
                            376 	.globl _SFRLAST
                            377 	.globl _SFRNEXT
                            378 	.globl _SFRPAGE
                            379 	.globl _DPH
                            380 	.globl _DPL
                            381 	.globl _SP
                            382 	.globl _P0
                            383 	.globl _tickCounterToIncrement
                            384 	.globl _task_UART_gets_projectSpecific_PARM_3
                            385 	.globl _task_UART_gets_projectSpecific_PARM_2
                            386 	.globl _task_UART_puts_projectSpecific_PARM_2
                            387 	.globl _task_UART_putchar_projectSpecific_PARM_2
                            388 	.globl _Succ_PARM_2
                            389 	.globl _UARTtempBuffer
                            390 	.globl _pwm_setDutyCycleAsPercentage_projectSpecific_PARM_2
                            391 	.globl _pwm_adjustDutyCycle_projectSpecific_PARM_2
                            392 	.globl _pwm_setDutyCycle_projectSpecific_PARM_2
                            393 	.globl _taskSwitcherTickHook
                            394 	.globl _gpio_init_projectSpecific
                            395 	.globl _pwm_init_projectSpecific
                            396 	.globl _pwm_incrementDutyCycle_projectSpecific
                            397 	.globl _pwm_decrementDutyCycle_projectSpecific
                            398 	.globl _pwm_getDutyCycle_projectSpecific
                            399 	.globl _pwm_setDutyCycle_projectSpecific
                            400 	.globl _pwm_adjustDutyCycle_projectSpecific
                            401 	.globl _pwm_setDutyCycleAsPercentage_projectSpecific
                            402 	.globl _pwm_getDutyCycleAsPercentage_projectSpecific
                            403 	.globl _task_UART_init_projectSpecific
                            404 	.globl _task_UART_core_projectSpecific
                            405 	.globl _task_UART_putchar_projectSpecific
                            406 	.globl _task_UART_puts_projectSpecific
                            407 	.globl _task_UART_getchar_projectSpecific
                            408 	.globl _task_UART_gets_projectSpecific
                            409 	.globl _task_UART_isLineReady
                            410 	.globl _UART0_Init
                            411 	.globl _UART1_Init
                            412 	.globl _putchar
                            413 ;--------------------------------------------------------
                            414 ; special function registers
                            415 ;--------------------------------------------------------
                            416 	.area RSEG    (DATA)
                    0080    417 _P0	=	0x0080
                    0081    418 _SP	=	0x0081
                    0082    419 _DPL	=	0x0082
                    0083    420 _DPH	=	0x0083
                    0084    421 _SFRPAGE	=	0x0084
                    0085    422 _SFRNEXT	=	0x0085
                    0086    423 _SFRLAST	=	0x0086
                    0087    424 _PCON	=	0x0087
                    0090    425 _P1	=	0x0090
                    00A0    426 _P2	=	0x00a0
                    00A8    427 _IE	=	0x00a8
                    00B0    428 _P3	=	0x00b0
                    00B8    429 _IP	=	0x00b8
                    00D0    430 _PSW	=	0x00d0
                    00E0    431 _ACC	=	0x00e0
                    00E6    432 _EIE1	=	0x00e6
                    00E7    433 _EIE2	=	0x00e7
                    00F0    434 _B	=	0x00f0
                    00F6    435 _EIP1	=	0x00f6
                    00F7    436 _EIP2	=	0x00f7
                    00FF    437 _WDTCN	=	0x00ff
                    0088    438 _TCON	=	0x0088
                    0089    439 _TMOD	=	0x0089
                    008A    440 _TL0	=	0x008a
                    008B    441 _TL1	=	0x008b
                    008C    442 _TH0	=	0x008c
                    008D    443 _TH1	=	0x008d
                    008E    444 _CKCON	=	0x008e
                    008F    445 _PSCTL	=	0x008f
                    0091    446 _SSTA0	=	0x0091
                    0098    447 _SCON0	=	0x0098
                    0098    448 _SCON	=	0x0098
                    0099    449 _SBUF0	=	0x0099
                    0099    450 _SBUF	=	0x0099
                    009A    451 _SPI0CFG	=	0x009a
                    009B    452 _SPI0DAT	=	0x009b
                    009D    453 _SPI0CKR	=	0x009d
                    00A1    454 _EMI0TC	=	0x00a1
                    00A2    455 _EMI0CN	=	0x00a2
                    00A2    456 __XPAGE	=	0x00a2
                    00A3    457 _EMI0CF	=	0x00a3
                    00A9    458 _SADDR0	=	0x00a9
                    00B7    459 _FLSCL	=	0x00b7
                    00B9    460 _SADEN0	=	0x00b9
                    00BA    461 _AMX0CF	=	0x00ba
                    00BB    462 _AMX0SL	=	0x00bb
                    00BC    463 _ADC0CF	=	0x00bc
                    00BD    464 _AMX0PRT	=	0x00bd
                    00BE    465 _ADC0L	=	0x00be
                    00BF    466 _ADC0H	=	0x00bf
                    00C0    467 _SMB0CN	=	0x00c0
                    00C1    468 _SMB0STA	=	0x00c1
                    00C2    469 _SMB0DAT	=	0x00c2
                    00C3    470 _SMB0ADR	=	0x00c3
                    00C4    471 _ADC0GTL	=	0x00c4
                    00C5    472 _ADC0GTH	=	0x00c5
                    00C6    473 _ADC0LTL	=	0x00c6
                    00C7    474 _ADC0LTH	=	0x00c7
                    00C8    475 _TMR2CN	=	0x00c8
                    00C9    476 _TMR2CF	=	0x00c9
                    00CA    477 _RCAP2L	=	0x00ca
                    00CB    478 _RCAP2H	=	0x00cb
                    00CC    479 _TMR2L	=	0x00cc
                    00CC    480 _TL2	=	0x00cc
                    00CD    481 _TMR2H	=	0x00cd
                    00CD    482 _TH2	=	0x00cd
                    00CF    483 _SMB0CR	=	0x00cf
                    00D1    484 _REF0CN	=	0x00d1
                    00D2    485 _DAC0L	=	0x00d2
                    00D3    486 _DAC0H	=	0x00d3
                    00D4    487 _DAC0CN	=	0x00d4
                    00D6    488 _HVA0CN	=	0x00d6
                    00D8    489 _PCA0CN	=	0x00d8
                    00D9    490 _PCA0MD	=	0x00d9
                    00DA    491 _PCA0CPM0	=	0x00da
                    00DB    492 _PCA0CPM1	=	0x00db
                    00DC    493 _PCA0CPM2	=	0x00dc
                    00DD    494 _PCA0CPM3	=	0x00dd
                    00DE    495 _PCA0CPM4	=	0x00de
                    00DF    496 _PCA0CPM5	=	0x00df
                    00E1    497 _PCA0CPL5	=	0x00e1
                    00E2    498 _PCA0CPH5	=	0x00e2
                    00E8    499 _ADC0CN	=	0x00e8
                    00E9    500 _PCA0CPL2	=	0x00e9
                    00EA    501 _PCA0CPH2	=	0x00ea
                    00EB    502 _PCA0CPL3	=	0x00eb
                    00EC    503 _PCA0CPH3	=	0x00ec
                    00ED    504 _PCA0CPL4	=	0x00ed
                    00EE    505 _PCA0CPH4	=	0x00ee
                    00EF    506 _RSTSRC	=	0x00ef
                    00F8    507 _SPI0CN	=	0x00f8
                    00F9    508 _PCA0L	=	0x00f9
                    00FA    509 _PCA0H	=	0x00fa
                    00FB    510 _PCA0CPL0	=	0x00fb
                    00FC    511 _PCA0CPH0	=	0x00fc
                    00FD    512 _PCA0CPL1	=	0x00fd
                    00FE    513 _PCA0CPH1	=	0x00fe
                    0088    514 _CPT0CN	=	0x0088
                    0089    515 _CPT0MD	=	0x0089
                    0098    516 _SCON1	=	0x0098
                    0099    517 _SBUF1	=	0x0099
                    00C0    518 _CAN0STA	=	0x00c0
                    00C8    519 _TMR3CN	=	0x00c8
                    00C9    520 _TMR3CF	=	0x00c9
                    00CA    521 _RCAP3L	=	0x00ca
                    00CB    522 _RCAP3H	=	0x00cb
                    00CC    523 _TMR3L	=	0x00cc
                    00CD    524 _TMR3H	=	0x00cd
                    00D2    525 _DAC1L	=	0x00d2
                    00D3    526 _DAC1H	=	0x00d3
                    00D4    527 _DAC1CN	=	0x00d4
                    00D8    528 _CAN0DATL	=	0x00d8
                    00D9    529 _CAN0DATH	=	0x00d9
                    00DA    530 _CAN0ADR	=	0x00da
                    00DB    531 _CAN0TST	=	0x00db
                    00F8    532 _CAN0CN	=	0x00f8
                    0088    533 _CPT1CN	=	0x0088
                    0089    534 _CPT1MD	=	0x0089
                    00BA    535 _AMX2CF	=	0x00ba
                    00BB    536 _AMX2SL	=	0x00bb
                    00BC    537 _ADC2CF	=	0x00bc
                    00BE    538 _ADC2	=	0x00be
                    00C4    539 _ADC2GT	=	0x00c4
                    00C6    540 _ADC2LT	=	0x00c6
                    00C8    541 _TMR4CN	=	0x00c8
                    00C9    542 _TMR4CF	=	0x00c9
                    00CA    543 _RCAP4L	=	0x00ca
                    00CB    544 _RCAP4H	=	0x00cb
                    00CC    545 _TMR4L	=	0x00cc
                    00CD    546 _TMR4H	=	0x00cd
                    00E8    547 _ADC2CN	=	0x00e8
                    0088    548 _CPT2CN	=	0x0088
                    0089    549 _CPT2MD	=	0x0089
                    008A    550 _OSCICN	=	0x008a
                    008B    551 _OSCICL	=	0x008b
                    008C    552 _OSCXCN	=	0x008c
                    0096    553 _SFRPGCN	=	0x0096
                    0097    554 _CLKSEL	=	0x0097
                    009C    555 _P4MDOUT	=	0x009c
                    009D    556 _P5MDOUT	=	0x009d
                    009E    557 _P6MDOUT	=	0x009e
                    009F    558 _P7MDOUT	=	0x009f
                    00A4    559 _P0MDOUT	=	0x00a4
                    00A5    560 _P1MDOUT	=	0x00a5
                    00A6    561 _P2MDOUT	=	0x00a6
                    00A7    562 _P3MDOUT	=	0x00a7
                    00AD    563 _P1MDIN	=	0x00ad
                    00AE    564 _P2MDIN	=	0x00ae
                    00AF    565 _P3MDIN	=	0x00af
                    00B7    566 _FLACL	=	0x00b7
                    00C8    567 _P4	=	0x00c8
                    00D8    568 _P5	=	0x00d8
                    00E1    569 _XBR0	=	0x00e1
                    00E2    570 _XBR1	=	0x00e2
                    00E3    571 _XBR2	=	0x00e3
                    00E4    572 _XBR3	=	0x00e4
                    00E8    573 _P6	=	0x00e8
                    00F8    574 _P7	=	0x00f8
                            575 ;--------------------------------------------------------
                            576 ; special function bits
                            577 ;--------------------------------------------------------
                            578 	.area RSEG    (DATA)
                    0080    579 _P0_0	=	0x0080
                    0081    580 _P0_1	=	0x0081
                    0082    581 _P0_2	=	0x0082
                    0083    582 _P0_3	=	0x0083
                    0084    583 _P0_4	=	0x0084
                    0085    584 _P0_5	=	0x0085
                    0086    585 _P0_6	=	0x0086
                    0087    586 _P0_7	=	0x0087
                    0088    587 _IT0	=	0x0088
                    0089    588 _IE0	=	0x0089
                    008A    589 _IT1	=	0x008a
                    008B    590 _IE1	=	0x008b
                    008C    591 _TR0	=	0x008c
                    008D    592 _TF0	=	0x008d
                    008E    593 _TR1	=	0x008e
                    008F    594 _TF1	=	0x008f
                    0088    595 _CP0HYN0	=	0x0088
                    0089    596 _CP0HYN1	=	0x0089
                    008A    597 _CP0HYP0	=	0x008a
                    008B    598 _CP0HYP1	=	0x008b
                    008C    599 _CP0FIF	=	0x008c
                    008D    600 _CP0RIF	=	0x008d
                    008E    601 _CP0OUT	=	0x008e
                    008F    602 _CP0EN	=	0x008f
                    0088    603 _CP1HYN0	=	0x0088
                    0089    604 _CP1HYN1	=	0x0089
                    008A    605 _CP1HYP0	=	0x008a
                    008B    606 _CP1HYP1	=	0x008b
                    008C    607 _CP1FIF	=	0x008c
                    008D    608 _CP1RIF	=	0x008d
                    008E    609 _CP1OUT	=	0x008e
                    008F    610 _CP1EN	=	0x008f
                    0088    611 _CP2HYN0	=	0x0088
                    0089    612 _CP2HYN1	=	0x0089
                    008A    613 _CP2HYP0	=	0x008a
                    008B    614 _CP2HYP1	=	0x008b
                    008C    615 _CP2FIF	=	0x008c
                    008D    616 _CP2RIF	=	0x008d
                    008E    617 _CP2OUT	=	0x008e
                    008F    618 _CP2EN	=	0x008f
                    0090    619 _P1_0	=	0x0090
                    0091    620 _P1_1	=	0x0091
                    0092    621 _P1_2	=	0x0092
                    0093    622 _P1_3	=	0x0093
                    0094    623 _P1_4	=	0x0094
                    0095    624 _P1_5	=	0x0095
                    0096    625 _P1_6	=	0x0096
                    0097    626 _P1_7	=	0x0097
                    0098    627 _RI0	=	0x0098
                    0098    628 _RI	=	0x0098
                    0099    629 _TI0	=	0x0099
                    0099    630 _TI	=	0x0099
                    009A    631 _RB80	=	0x009a
                    009B    632 _TB80	=	0x009b
                    009C    633 _REN0	=	0x009c
                    009C    634 _REN	=	0x009c
                    009D    635 _SM20	=	0x009d
                    009E    636 _SM10	=	0x009e
                    009F    637 _SM00	=	0x009f
                    0098    638 _RI1	=	0x0098
                    0099    639 _TI1	=	0x0099
                    009A    640 _RB81	=	0x009a
                    009B    641 _TB81	=	0x009b
                    009C    642 _REN1	=	0x009c
                    009D    643 _MCE1	=	0x009d
                    009F    644 _S1MODE	=	0x009f
                    00A0    645 _P2_0	=	0x00a0
                    00A1    646 _P2_1	=	0x00a1
                    00A2    647 _P2_2	=	0x00a2
                    00A3    648 _P2_3	=	0x00a3
                    00A4    649 _P2_4	=	0x00a4
                    00A5    650 _P2_5	=	0x00a5
                    00A6    651 _P2_6	=	0x00a6
                    00A7    652 _P2_7	=	0x00a7
                    00A8    653 _EX0	=	0x00a8
                    00A9    654 _ET0	=	0x00a9
                    00AA    655 _EX1	=	0x00aa
                    00AB    656 _ET1	=	0x00ab
                    00AC    657 _ES0	=	0x00ac
                    00AC    658 _ES	=	0x00ac
                    00AD    659 _ET2	=	0x00ad
                    00AF    660 _EA	=	0x00af
                    00B0    661 _P3_0	=	0x00b0
                    00B1    662 _P3_1	=	0x00b1
                    00B2    663 _P3_2	=	0x00b2
                    00B3    664 _P3_3	=	0x00b3
                    00B4    665 _P3_4	=	0x00b4
                    00B5    666 _P3_5	=	0x00b5
                    00B6    667 _P3_6	=	0x00b6
                    00B7    668 _P3_7	=	0x00b7
                    00B8    669 _PX0	=	0x00b8
                    00B9    670 _PT0	=	0x00b9
                    00BA    671 _PX1	=	0x00ba
                    00BB    672 _PT1	=	0x00bb
                    00BC    673 _PS0	=	0x00bc
                    00BC    674 _PS	=	0x00bc
                    00BD    675 _PT2	=	0x00bd
                    00C0    676 _SMBTOE	=	0x00c0
                    00C1    677 _SMBFTE	=	0x00c1
                    00C2    678 _AA	=	0x00c2
                    00C3    679 _SI	=	0x00c3
                    00C4    680 _STO	=	0x00c4
                    00C5    681 _STA	=	0x00c5
                    00C6    682 _ENSMB	=	0x00c6
                    00C7    683 _BUSY	=	0x00c7
                    00C3    684 _CANTXOK	=	0x00c3
                    00C4    685 _CANRXOK	=	0x00c4
                    00C5    686 _CANEPASS	=	0x00c5
                    00C6    687 _CANEWARN	=	0x00c6
                    00C7    688 _CANBOFF	=	0x00c7
                    00C8    689 _CPRL2	=	0x00c8
                    00C9    690 _CT2	=	0x00c9
                    00CA    691 _TR2	=	0x00ca
                    00CB    692 _EXEN2	=	0x00cb
                    00CE    693 _EXF2	=	0x00ce
                    00CF    694 _TF2	=	0x00cf
                    00C8    695 _CPRL3	=	0x00c8
                    00C9    696 _CT3	=	0x00c9
                    00CA    697 _TR3	=	0x00ca
                    00CB    698 _EXEN3	=	0x00cb
                    00CE    699 _EXF3	=	0x00ce
                    00CF    700 _TF3	=	0x00cf
                    00C8    701 _CPRL4	=	0x00c8
                    00C9    702 _CT4	=	0x00c9
                    00CA    703 _TR4	=	0x00ca
                    00CB    704 _EXEN4	=	0x00cb
                    00CE    705 _EXF4	=	0x00ce
                    00CF    706 _TF4	=	0x00cf
                    00C8    707 _P4_0	=	0x00c8
                    00C9    708 _P4_1	=	0x00c9
                    00CA    709 _P4_2	=	0x00ca
                    00CB    710 _P4_3	=	0x00cb
                    00CC    711 _P4_4	=	0x00cc
                    00CD    712 _P4_5	=	0x00cd
                    00CE    713 _P4_6	=	0x00ce
                    00CF    714 _P4_7	=	0x00cf
                    00D0    715 _P	=	0x00d0
                    00D1    716 _F1	=	0x00d1
                    00D2    717 _OV	=	0x00d2
                    00D3    718 _RS0	=	0x00d3
                    00D4    719 _RS1	=	0x00d4
                    00D5    720 _F0	=	0x00d5
                    00D6    721 _AC	=	0x00d6
                    00D7    722 _CY	=	0x00d7
                    00D8    723 _CCF0	=	0x00d8
                    00D9    724 _CCF1	=	0x00d9
                    00DA    725 _CCF2	=	0x00da
                    00DB    726 _CCF3	=	0x00db
                    00DC    727 _CCF4	=	0x00dc
                    00DD    728 _CCF5	=	0x00dd
                    00DE    729 _CR	=	0x00de
                    00DF    730 _CF	=	0x00df
                    00D8    731 _P5_0	=	0x00d8
                    00D9    732 _P5_1	=	0x00d9
                    00DA    733 _P5_2	=	0x00da
                    00DB    734 _P5_3	=	0x00db
                    00DC    735 _P5_4	=	0x00dc
                    00DD    736 _P5_5	=	0x00dd
                    00DE    737 _P5_6	=	0x00de
                    00DF    738 _P5_7	=	0x00df
                    00E8    739 _AD0LJST	=	0x00e8
                    00E9    740 _AD0WINT	=	0x00e9
                    00EA    741 _AD0CM0	=	0x00ea
                    00EB    742 _AD0CM1	=	0x00eb
                    00EC    743 _AD0BUSY	=	0x00ec
                    00ED    744 _AD0INT	=	0x00ed
                    00EE    745 _AD0TM	=	0x00ee
                    00EF    746 _AD0EN	=	0x00ef
                    00E8    747 _AD2WINT	=	0x00e8
                    00E9    748 _AD2CM0	=	0x00e9
                    00EA    749 _AD2CM1	=	0x00ea
                    00EB    750 _AD2CM2	=	0x00eb
                    00EC    751 _AD2BUSY	=	0x00ec
                    00ED    752 _AD2INT	=	0x00ed
                    00EE    753 _AD2TM	=	0x00ee
                    00EF    754 _AD2EN	=	0x00ef
                    00E8    755 _P6_0	=	0x00e8
                    00E9    756 _P6_1	=	0x00e9
                    00EA    757 _P6_2	=	0x00ea
                    00EB    758 _P6_3	=	0x00eb
                    00EC    759 _P6_4	=	0x00ec
                    00ED    760 _P6_5	=	0x00ed
                    00EE    761 _P6_6	=	0x00ee
                    00EF    762 _P6_7	=	0x00ef
                    00F8    763 _SPIEN	=	0x00f8
                    00F9    764 _TXBMT	=	0x00f9
                    00FA    765 _NSSMD0	=	0x00fa
                    00FB    766 _NSSMD1	=	0x00fb
                    00FC    767 _RXOVRN	=	0x00fc
                    00FD    768 _MODF	=	0x00fd
                    00FE    769 _WCOL	=	0x00fe
                    00FF    770 _SPIF	=	0x00ff
                    00F8    771 _CANINIT	=	0x00f8
                    00F9    772 _CANIE	=	0x00f9
                    00FA    773 _CANSIE	=	0x00fa
                    00FB    774 _CANEIE	=	0x00fb
                    00FC    775 _CANIF	=	0x00fc
                    00FD    776 _CANDAR	=	0x00fd
                    00FE    777 _CANCCE	=	0x00fe
                    00FF    778 _CANTEST	=	0x00ff
                    00F8    779 _P7_0	=	0x00f8
                    00F9    780 _P7_1	=	0x00f9
                    00FA    781 _P7_2	=	0x00fa
                    00FB    782 _P7_3	=	0x00fb
                    00FC    783 _P7_4	=	0x00fc
                    00FD    784 _P7_5	=	0x00fd
                    00FE    785 _P7_6	=	0x00fe
                    00FF    786 _P7_7	=	0x00ff
                            787 ;--------------------------------------------------------
                            788 ; overlayable register banks
                            789 ;--------------------------------------------------------
                            790 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     791 	.ds 8
                            792 ;--------------------------------------------------------
                            793 ; overlayable bit register bank
                            794 ;--------------------------------------------------------
                            795 	.area BIT_BANK	(REL,OVR,DATA)
   0000                     796 bits:
   0000                     797 	.ds 1
                    8000    798 	b0 = bits[0]
                    8100    799 	b1 = bits[1]
                    8200    800 	b2 = bits[2]
                    8300    801 	b3 = bits[3]
                    8400    802 	b4 = bits[4]
                    8500    803 	b5 = bits[5]
                    8600    804 	b6 = bits[6]
                    8700    805 	b7 = bits[7]
                            806 ;--------------------------------------------------------
                            807 ; internal ram data
                            808 ;--------------------------------------------------------
                            809 	.area DSEG    (DATA)
   0000                     810 _task_UART_core_projectSpecific_sloc0_1_0:
   0000                     811 	.ds 1
   0001                     812 _task_UART_core_projectSpecific_sloc1_1_0:
   0001                     813 	.ds 3
   0004                     814 _task_UART_core_projectSpecific_sloc2_1_0:
   0004                     815 	.ds 2
   0006                     816 _task_UART_core_projectSpecific_sloc3_1_0:
   0006                     817 	.ds 3
   0009                     818 _task_UART_getchar_projectSpecific_sloc0_1_0:
   0009                     819 	.ds 3
   000C                     820 _task_UART_getchar_projectSpecific_sloc1_1_0:
   000C                     821 	.ds 2
   000E                     822 _task_UART_getchar_projectSpecific_sloc2_1_0:
   000E                     823 	.ds 3
   0011                     824 _task_UART_gets_projectSpecific_sloc0_1_0:
   0011                     825 	.ds 1
   0012                     826 _task_UART_gets_projectSpecific_sloc1_1_0:
   0012                     827 	.ds 2
                            828 ;--------------------------------------------------------
                            829 ; overlayable items in internal ram 
                            830 ;--------------------------------------------------------
                            831 	.area	OSEG    (OVR,DATA)
   0000                     832 _addTickCounter_sloc0_1_0::
   0000                     833 	.ds 3
                            834 ;--------------------------------------------------------
                            835 ; Stack segment in internal ram 
                            836 ;--------------------------------------------------------
                            837 	.area	SSEG	(DATA)
   0000                     838 __start__stack:
   0000                     839 	.ds	1
                            840 
                            841 ;--------------------------------------------------------
                            842 ; indirectly addressable internal ram data
                            843 ;--------------------------------------------------------
                            844 	.area ISEG    (DATA)
                            845 ;--------------------------------------------------------
                            846 ; absolute internal ram data
                            847 ;--------------------------------------------------------
                            848 	.area IABS    (ABS,DATA)
                            849 	.area IABS    (ABS,DATA)
                            850 ;--------------------------------------------------------
                            851 ; bit data
                            852 ;--------------------------------------------------------
                            853 	.area BSEG    (BIT)
   0000                     854 _timeForTickProcessing:
   0000                     855 	.ds 1
   0001                     856 _main_ok_1_1:
   0001                     857 	.ds 1
   0002                     858 _pwm_init_projectSpecific_initialized_1_1:
   0002                     859 	.ds 1
   0003                     860 _task_UART_init_projectSpecific_timer1initialized_1_1:
   0003                     861 	.ds 1
   0004                     862 _task_UART_isLineReady_sloc0_1_0:
   0004                     863 	.ds 1
                            864 ;--------------------------------------------------------
                            865 ; paged external ram data
                            866 ;--------------------------------------------------------
                            867 	.area PSEG    (PAG,XDATA)
                            868 ;--------------------------------------------------------
                            869 ; external ram data
                            870 ;--------------------------------------------------------
                            871 	.area XSEG    (XDATA)
   0000                     872 _main_iterationMax_1_1:
   0000                     873 	.ds 2
   0002                     874 _pwm_init_projectSpecific_channelNumber_1_1:
   0002                     875 	.ds 1
   0003                     876 _pwm_setDutyCycle_projectSpecific_PARM_2:
   0003                     877 	.ds 1
   0004                     878 _pwm_adjustDutyCycle_projectSpecific_PARM_2:
   0004                     879 	.ds 1
   0005                     880 _pwm_setDutyCycleAsPercentage_projectSpecific_PARM_2:
   0005                     881 	.ds 1
   0006                     882 _UARTtempBuffer::
   0006                     883 	.ds 1100
   0452                     884 _IsEmpty_Q_1_1:
   0452                     885 	.ds 3
   0455                     886 _IsFull_Q_1_1:
   0455                     887 	.ds 3
   0458                     888 _Succ_PARM_2:
   0458                     889 	.ds 3
   045B                     890 _Succ_Value_1_1:
   045B                     891 	.ds 2
   045D                     892 _transmitBuffer:
   045D                     893 	.ds 1101
   08AA                     894 _receiveBuffer:
   08AA                     895 	.ds 11
   08B5                     896 _transmitBuffers:
   08B5                     897 	.ds 11
   08C0                     898 _receiveBuffers:
   08C0                     899 	.ds 11
   08CB                     900 _charSent:
   08CB                     901 	.ds 1
   08CC                     902 _lineReady:
   08CC                     903 	.ds 1
   08CD                     904 _task_UART_init_projectSpecific_channelNumber_1_1:
   08CD                     905 	.ds 1
   08CE                     906 _task_UART_core_projectSpecific_channelNumber_1_1:
   08CE                     907 	.ds 1
   08CF                     908 _task_UART_core_projectSpecific_Q_4_4:
   08CF                     909 	.ds 3
   08D2                     910 _task_UART_putchar_projectSpecific_PARM_2:
   08D2                     911 	.ds 1
   08D3                     912 _task_UART_putchar_projectSpecific_channelNumber_1_1:
   08D3                     913 	.ds 1
   08D4                     914 _task_UART_putchar_projectSpecific_Q_2_2:
   08D4                     915 	.ds 3
   08D7                     916 _task_UART_puts_projectSpecific_PARM_2:
   08D7                     917 	.ds 3
   08DA                     918 _task_UART_puts_projectSpecific_channelNumber_1_1:
   08DA                     919 	.ds 1
   08DB                     920 _task_UART_getchar_projectSpecific_channelNumber_1_1:
   08DB                     921 	.ds 1
   08DC                     922 _task_UART_getchar_projectSpecific_Q_2_2:
   08DC                     923 	.ds 3
   08DF                     924 _task_UART_gets_projectSpecific_PARM_2:
   08DF                     925 	.ds 3
   08E2                     926 _task_UART_gets_projectSpecific_PARM_3:
   08E2                     927 	.ds 2
   08E4                     928 _task_UART_gets_projectSpecific_channelNumber_1_1:
   08E4                     929 	.ds 1
   08E5                     930 _task_UART_isLineReady_channelNumber_1_1:
   08E5                     931 	.ds 1
   08E6                     932 _putchar_c_1_1:
   08E6                     933 	.ds 1
   08E7                     934 _prvSetupTimerInterrupt_ucOriginalSFRPage_1_1:
   08E7                     935 	.ds 1
   08E8                     936 _tickCounterToIncrement::
   08E8                     937 	.ds 30
   0906                     938 _addTickCounter_pointerToIncrement_1_1:
   0906                     939 	.ds 3
                            940 ;--------------------------------------------------------
                            941 ; absolute external ram data
                            942 ;--------------------------------------------------------
                            943 	.area XABS    (ABS,XDATA)
                            944 ;--------------------------------------------------------
                            945 ; external initialized ram data
                            946 ;--------------------------------------------------------
                            947 	.area XISEG   (XDATA)
   0000                     948 _countdown:
   0000                     949 	.ds 2
                            950 	.area HOME    (CODE)
                            951 	.area GSINIT0 (CODE)
                            952 	.area GSINIT1 (CODE)
                            953 	.area GSINIT2 (CODE)
                            954 	.area GSINIT3 (CODE)
                            955 	.area GSINIT4 (CODE)
                            956 	.area GSINIT5 (CODE)
                            957 	.area GSINIT  (CODE)
                            958 	.area GSFINAL (CODE)
                            959 	.area CSEG    (CODE)
                            960 ;--------------------------------------------------------
                            961 ; interrupt vector 
                            962 ;--------------------------------------------------------
                            963 	.area HOME    (CODE)
   0000                     964 __interrupt_vect:
   0000 02s00r00            965 	ljmp	__sdcc_gsinit_startup
   0003 32                  966 	reti
   0004                     967 	.ds	7
   000B 32                  968 	reti
   000C                     969 	.ds	7
   0013 32                  970 	reti
   0014                     971 	.ds	7
   001B 32                  972 	reti
   001C                     973 	.ds	7
   0023 32                  974 	reti
   0024                     975 	.ds	7
   002B 02s0Br8E            976 	ljmp	_vTimer2ISR
                            977 ;--------------------------------------------------------
                            978 ; global & static initialisations
                            979 ;--------------------------------------------------------
                            980 	.area HOME    (CODE)
                            981 	.area GSINIT  (CODE)
                            982 	.area GSFINAL (CODE)
                            983 	.area GSINIT  (CODE)
                            984 	.globl __sdcc_gsinit_startup
                            985 	.globl __sdcc_program_startup
                            986 	.globl __start__stack
                            987 	.globl __mcs51_genXINIT
                            988 	.globl __mcs51_genXRAMCLEAR
                            989 	.globl __mcs51_genRAMCLEAR
                            990 ;------------------------------------------------------------
                            991 ;Allocation info for local variables in function 'main'
                            992 ;------------------------------------------------------------
                            993 ;bomb                      Allocated with name '_main_bomb_1_1'
                            994 ;calculator                Allocated with name '_main_calculator_1_1'
                            995 ;iterationMax              Allocated with name '_main_iterationMax_1_1'
                            996 ;------------------------------------------------------------
                            997 ;	../main.c:94: static int iterationMax = 10 ;
   0000 90s00r00            998 	mov	dptr,#_main_iterationMax_1_1
   0003 74 0A               999 	mov	a,#0x0A
   0005 F0                 1000 	movx	@dptr,a
   0006 E4                 1001 	clr	a
   0007 A3                 1002 	inc	dptr
   0008 F0                 1003 	movx	@dptr,a
                           1004 ;------------------------------------------------------------
                           1005 ;Allocation info for local variables in function 'task_UART_init_projectSpecific'
                           1006 ;------------------------------------------------------------
                           1007 ;channelNumber             Allocated with name '_task_UART_init_projectSpecific_channelNumber_1_1'
                           1008 ;Q                         Allocated with name '_task_UART_init_projectSpecific_Q_1_1'
                           1009 ;SFRPAGE_SAVE              Allocated with name '_task_UART_init_projectSpecific_SFRPAGE_SAVE_3_3'
                           1010 ;------------------------------------------------------------
                           1011 ;	../projectSpecificHardwareInterface_C8051F040.c:323: static bool	timer1initialized = false ;
   0009 C2*03              1012 	clr	_task_UART_init_projectSpecific_timer1initialized_1_1
                           1013 	.area GSFINAL (CODE)
   0000 02s00r2E           1014 	ljmp	__sdcc_program_startup
                           1015 ;--------------------------------------------------------
                           1016 ; Home
                           1017 ;--------------------------------------------------------
                           1018 	.area HOME    (CODE)
                           1019 	.area HOME    (CODE)
   002E                    1020 __sdcc_program_startup:
   002E 12s00r00           1021 	lcall	_main
                           1022 ;	return from main will lock up
   0031 80 FE              1023 	sjmp .
                           1024 ;--------------------------------------------------------
                           1025 ; code
                           1026 ;--------------------------------------------------------
                           1027 	.area CSEG    (CODE)
                           1028 ;------------------------------------------------------------
                           1029 ;Allocation info for local variables in function 'main'
                           1030 ;------------------------------------------------------------
                           1031 ;bomb                      Allocated with name '_main_bomb_1_1'
                           1032 ;calculator                Allocated with name '_main_calculator_1_1'
                           1033 ;iterationMax              Allocated with name '_main_iterationMax_1_1'
                           1034 ;------------------------------------------------------------
                           1035 ;	../main.c:83: void main(	void)
                           1036 ;	-----------------------------------------
                           1037 ;	 function main
                           1038 ;	-----------------------------------------
   0000                    1039 _main:
                    0002   1040 	ar2 = 0x02
                    0003   1041 	ar3 = 0x03
                    0004   1042 	ar4 = 0x04
                    0005   1043 	ar5 = 0x05
                    0006   1044 	ar6 = 0x06
                    0007   1045 	ar7 = 0x07
                    0000   1046 	ar0 = 0x00
                    0001   1047 	ar1 = 0x01
                           1048 ;	../main.c:91: bool			ok = true ;
   0000 D2*01              1049 	setb	_main_ok_1_1
                           1050 ;	../main.c:96: puts("4th Generation state machine test started.") ;
   0002 90s00r00           1051 	mov	dptr,#__str_0
   0005 75 F0 80           1052 	mov	b,#0x80
   0008 12s00r00           1053 	lcall	_puts
                           1054 ;	../main.c:109: WDTCN = 0xDE ;	/* Disable the watchdog timer */
   000B 75 FF DE           1055 	mov	_WDTCN,#0xDE
                           1056 ;	../main.c:110: WDTCN = 0xAD ;
   000E 75 FF AD           1057 	mov	_WDTCN,#0xAD
                           1058 ;	../main.c:111: WDTCN = 0xFF ;	/* Disable any future ability to modify the watchdog timer */
   0011 75 FF FF           1059 	mov	_WDTCN,#0xFF
                           1060 ;	../main.c:113: prvSetupSystemClock() ;
   0014 12s0ArD2           1061 	lcall	_prvSetupSystemClock
                           1062 ;	../main.c:114: gpio_init() ;
   0017 12s01rD4           1063 	lcall	_gpio_init_projectSpecific
                           1064 ;	../main.c:115: pwm_init(ioMapping_PWM_TO_TICK_SYNCHRONIZER_CHANNEL) ;
   001A 75 82 00           1065 	mov	dpl,#0x00
   001D 12s00r00           1066 	lcall	_pwm_init
                           1067 ;	../main.c:116: prvSetupTimerInterrupt() ;
   0020 12s0ArF1           1068 	lcall	_prvSetupTimerInterrupt
                           1069 ;	../main.c:117: task_UART_init(0) ;
   0023 75 82 00           1070 	mov	dpl,#0x00
   0026 12s00r00           1071 	lcall	_task_UART_init
                           1072 ;	../main.c:119: portENABLE_INTERRUPTS() ;
   0029 D2 AF              1073 	setb	_EA
                           1074 ;	../main.c:122: puts("Generating timebomb") ;
   002B 90s00r2B           1075 	mov	dptr,#__str_1
   002E 75 F0 80           1076 	mov	b,#0x80
   0031 12s00r00           1077 	lcall	_puts
                           1078 ;	../main.c:124: bomb = STATE_MACHINE_CREATE_INSTANCE_OF(timeBomb) ;
   0034 12s00r00           1079 	lcall	_timeBomb_getEventQueueDepth
   0037 AA 82              1080 	mov	r2,dpl
   0039 AB 83              1081 	mov	r3,dph
   003B C0 02              1082 	push	ar2
   003D C0 03              1083 	push	ar3
   003F 12s00r00           1084 	lcall	_timeBomb_getHistoryArraySize
   0042 AC 82              1085 	mov	r4,dpl
   0044 AD 83              1086 	mov	r5,dph
   0046 D0 03              1087 	pop	ar3
   0048 D0 02              1088 	pop	ar2
   004A 90s00r00           1089 	mov	dptr,#_allocateStateMachineMemory_PARM_2
   004D EC                 1090 	mov	a,r4
   004E F0                 1091 	movx	@dptr,a
   004F A3                 1092 	inc	dptr
   0050 ED                 1093 	mov	a,r5
   0051 F0                 1094 	movx	@dptr,a
   0052 90s00r00           1095 	mov	dptr,#_allocateStateMachineMemory_PARM_3
   0055 74r00              1096 	mov	a,#_timeBomb_constructor
   0057 F0                 1097 	movx	@dptr,a
   0058 A3                 1098 	inc	dptr
   0059 74s00              1099 	mov	a,#(_timeBomb_constructor >> 8)
   005B F0                 1100 	movx	@dptr,a
   005C 8A 82              1101 	mov	dpl,r2
   005E 8B 83              1102 	mov	dph,r3
   0060 12s00r00           1103 	lcall	_allocateStateMachineMemory
   0063 AA 82              1104 	mov	r2,dpl
   0065 AB 83              1105 	mov	r3,dph
   0067 AC F0              1106 	mov	r4,b
                           1107 ;	../main.c:131: puts("Generating calculator") ;
   0069 90s00r3F           1108 	mov	dptr,#__str_2
   006C 75 F0 80           1109 	mov	b,#0x80
   006F C0 02              1110 	push	ar2
   0071 C0 03              1111 	push	ar3
   0073 C0 04              1112 	push	ar4
   0075 12s00r00           1113 	lcall	_puts
                           1114 ;	../main.c:133: calculator = STATE_MACHINE_CREATE_INSTANCE_OF(calculator) ;
   0078 12s00r00           1115 	lcall	_calculator_getEventQueueDepth
   007B AD 82              1116 	mov	r5,dpl
   007D AE 83              1117 	mov	r6,dph
   007F C0 05              1118 	push	ar5
   0081 C0 06              1119 	push	ar6
   0083 12s00r00           1120 	lcall	_calculator_getHistoryArraySize
   0086 AF 82              1121 	mov	r7,dpl
   0088 A8 83              1122 	mov	r0,dph
   008A D0 06              1123 	pop	ar6
   008C D0 05              1124 	pop	ar5
   008E 90s00r00           1125 	mov	dptr,#_allocateStateMachineMemory_PARM_2
   0091 EF                 1126 	mov	a,r7
   0092 F0                 1127 	movx	@dptr,a
   0093 A3                 1128 	inc	dptr
   0094 E8                 1129 	mov	a,r0
   0095 F0                 1130 	movx	@dptr,a
   0096 90s00r00           1131 	mov	dptr,#_allocateStateMachineMemory_PARM_3
   0099 74r00              1132 	mov	a,#_calculator_constructor
   009B F0                 1133 	movx	@dptr,a
   009C A3                 1134 	inc	dptr
   009D 74s00              1135 	mov	a,#(_calculator_constructor >> 8)
   009F F0                 1136 	movx	@dptr,a
   00A0 8D 82              1137 	mov	dpl,r5
   00A2 8E 83              1138 	mov	dph,r6
   00A4 12s00r00           1139 	lcall	_allocateStateMachineMemory
   00A7 AD 82              1140 	mov	r5,dpl
   00A9 AE 83              1141 	mov	r6,dph
   00AB AF F0              1142 	mov	r7,b
   00AD D0 04              1143 	pop	ar4
   00AF D0 03              1144 	pop	ar3
   00B1 D0 02              1145 	pop	ar2
                           1146 ;	../main.c:135: if(calculator)
   00B3 ED                 1147 	mov	a,r5
   00B4 4E                 1148 	orl	a,r6
   00B5 4F                 1149 	orl	a,r7
   00B6 60 36              1150 	jz	00102$
                           1151 ;	../main.c:137: puts("Registering calculator") ;
   00B8 90s00r55           1152 	mov	dptr,#__str_3
   00BB 75 F0 80           1153 	mov	b,#0x80
   00BE C0 02              1154 	push	ar2
   00C0 C0 03              1155 	push	ar3
   00C2 C0 04              1156 	push	ar4
   00C4 C0 05              1157 	push	ar5
   00C6 C0 06              1158 	push	ar6
   00C8 C0 07              1159 	push	ar7
   00CA 12s00r00           1160 	lcall	_puts
   00CD D0 07              1161 	pop	ar7
   00CF D0 06              1162 	pop	ar6
   00D1 D0 05              1163 	pop	ar5
                           1164 ;	../main.c:139: REGISTER_STATE_MACHINE(calculator) ;
   00D3 8D 82              1165 	mov	dpl,r5
   00D5 8E 83              1166 	mov	dph,r6
   00D7 8F F0              1167 	mov	b,r7
   00D9 C0 05              1168 	push	ar5
   00DB C0 06              1169 	push	ar6
   00DD C0 07              1170 	push	ar7
   00DF 12s00r00           1171 	lcall	_registerStateMachine
   00E2 D0 07              1172 	pop	ar7
   00E4 D0 06              1173 	pop	ar6
   00E6 D0 05              1174 	pop	ar5
   00E8 D0 04              1175 	pop	ar4
   00EA D0 03              1176 	pop	ar3
   00EC D0 02              1177 	pop	ar2
   00EE                    1178 00102$:
                           1179 ;	../main.c:142: puts("Iterating state machines") ;
   00EE 90s00r6C           1180 	mov	dptr,#__str_4
   00F1 75 F0 80           1181 	mov	b,#0x80
   00F4 C0 02              1182 	push	ar2
   00F6 C0 03              1183 	push	ar3
   00F8 C0 04              1184 	push	ar4
   00FA C0 05              1185 	push	ar5
   00FC C0 06              1186 	push	ar6
   00FE C0 07              1187 	push	ar7
   0100 12s00r00           1188 	lcall	_puts
   0103 D0 07              1189 	pop	ar7
   0105 D0 06              1190 	pop	ar6
   0107 D0 05              1191 	pop	ar5
   0109 D0 04              1192 	pop	ar4
   010B D0 03              1193 	pop	ar3
   010D D0 02              1194 	pop	ar2
                           1195 ;	../main.c:144: while(ok)
   010F                    1196 00105$:
   010F 30*01 50           1197 	jnb	_main_ok_1_1,00107$
                           1198 ;	../main.c:146: if(iterationMax-- == 0)
   0112 C0 02              1199 	push	ar2
   0114 C0 03              1200 	push	ar3
   0116 C0 04              1201 	push	ar4
   0118 90s00r00           1202 	mov	dptr,#_main_iterationMax_1_1
   011B E0                 1203 	movx	a,@dptr
   011C F8                 1204 	mov	r0,a
   011D A3                 1205 	inc	dptr
   011E E0                 1206 	movx	a,@dptr
   011F F9                 1207 	mov	r1,a
   0120 E8                 1208 	mov	a,r0
   0121 24 FF              1209 	add	a,#0xff
   0123 FA                 1210 	mov	r2,a
   0124 E9                 1211 	mov	a,r1
   0125 34 FF              1212 	addc	a,#0xff
   0127 FB                 1213 	mov	r3,a
   0128 90s00r00           1214 	mov	dptr,#_main_iterationMax_1_1
   012B EA                 1215 	mov	a,r2
   012C F0                 1216 	movx	@dptr,a
   012D A3                 1217 	inc	dptr
   012E EB                 1218 	mov	a,r3
   012F F0                 1219 	movx	@dptr,a
   0130 D0 04              1220 	pop	ar4
   0132 D0 03              1221 	pop	ar3
   0134 D0 02              1222 	pop	ar2
   0136 E8                 1223 	mov	a,r0
   0137 49                 1224 	orl	a,r1
   0138 70 02              1225 	jnz	00104$
                           1226 ;	../main.c:148: ok = false ;
   013A C2*01              1227 	clr	_main_ok_1_1
   013C                    1228 00104$:
                           1229 ;	../main.c:151: puts("loop") ;
   013C 90s00r85           1230 	mov	dptr,#__str_5
   013F 75 F0 80           1231 	mov	b,#0x80
   0142 C0 02              1232 	push	ar2
   0144 C0 03              1233 	push	ar3
   0146 C0 04              1234 	push	ar4
   0148 C0 05              1235 	push	ar5
   014A C0 06              1236 	push	ar6
   014C C0 07              1237 	push	ar7
   014E 12s00r00           1238 	lcall	_puts
                           1239 ;	../main.c:153: ITERATE_ALL_STATE_MACHINES() ;
   0151 12s00r00           1240 	lcall	_iterateAllStateMachines
   0154 D0 07              1241 	pop	ar7
   0156 D0 06              1242 	pop	ar6
   0158 D0 05              1243 	pop	ar5
   015A D0 04              1244 	pop	ar4
   015C D0 03              1245 	pop	ar3
   015E D0 02              1246 	pop	ar2
   0160 80 AD              1247 	sjmp	00105$
   0162                    1248 00107$:
                           1249 ;	../main.c:160: if(calculator)
   0162 ED                 1250 	mov	a,r5
   0163 4E                 1251 	orl	a,r6
   0164 4F                 1252 	orl	a,r7
   0165 60 34              1253 	jz	00109$
                           1254 ;	../main.c:162: UNREGISTER_STATE_MACHINE(calculator) ;
   0167 8D 82              1255 	mov	dpl,r5
   0169 8E 83              1256 	mov	dph,r6
   016B 8F F0              1257 	mov	b,r7
   016D C0 02              1258 	push	ar2
   016F C0 03              1259 	push	ar3
   0171 C0 04              1260 	push	ar4
   0173 C0 05              1261 	push	ar5
   0175 C0 06              1262 	push	ar6
   0177 C0 07              1263 	push	ar7
   0179 12s00r00           1264 	lcall	_unregisterStateMachine
   017C D0 07              1265 	pop	ar7
   017E D0 06              1266 	pop	ar6
   0180 D0 05              1267 	pop	ar5
                           1268 ;	../main.c:164: STATE_MACHINE_DESTROY_INSTANCE_OF(calculator, calculator) ;
   0182 90s00r00           1269 	mov	dptr,#_deallocateStateMachineMemory_PARM_2
   0185 74r00              1270 	mov	a,#_calculator_destructor
   0187 F0                 1271 	movx	@dptr,a
   0188 A3                 1272 	inc	dptr
   0189 74s00              1273 	mov	a,#(_calculator_destructor >> 8)
   018B F0                 1274 	movx	@dptr,a
   018C 8D 82              1275 	mov	dpl,r5
   018E 8E 83              1276 	mov	dph,r6
   0190 8F F0              1277 	mov	b,r7
   0192 12s00r00           1278 	lcall	_deallocateStateMachineMemory
   0195 D0 04              1279 	pop	ar4
   0197 D0 03              1280 	pop	ar3
   0199 D0 02              1281 	pop	ar2
                           1282 ;	../main.c:166: calculator = 0 ;
   019B                    1283 00109$:
                           1284 ;	../main.c:169: if(bomb)
   019B EA                 1285 	mov	a,r2
   019C 4B                 1286 	orl	a,r3
   019D 4C                 1287 	orl	a,r4
   019E 60 28              1288 	jz	00111$
                           1289 ;	../main.c:171: UNREGISTER_STATE_MACHINE(bomb) ;
   01A0 8A 82              1290 	mov	dpl,r2
   01A2 8B 83              1291 	mov	dph,r3
   01A4 8C F0              1292 	mov	b,r4
   01A6 C0 02              1293 	push	ar2
   01A8 C0 03              1294 	push	ar3
   01AA C0 04              1295 	push	ar4
   01AC 12s00r00           1296 	lcall	_unregisterStateMachine
   01AF D0 04              1297 	pop	ar4
   01B1 D0 03              1298 	pop	ar3
   01B3 D0 02              1299 	pop	ar2
                           1300 ;	../main.c:173: STATE_MACHINE_DESTROY_INSTANCE_OF(timeBomb, bomb) ;
   01B5 90s00r00           1301 	mov	dptr,#_deallocateStateMachineMemory_PARM_2
   01B8 74r00              1302 	mov	a,#_timeBomb_destructor
   01BA F0                 1303 	movx	@dptr,a
   01BB A3                 1304 	inc	dptr
   01BC 74s00              1305 	mov	a,#(_timeBomb_destructor >> 8)
   01BE F0                 1306 	movx	@dptr,a
   01BF 8A 82              1307 	mov	dpl,r2
   01C1 8B 83              1308 	mov	dph,r3
   01C3 8C F0              1309 	mov	b,r4
   01C5 12s00r00           1310 	lcall	_deallocateStateMachineMemory
                           1311 ;	../main.c:175: bomb = 0 ;
   01C8                    1312 00111$:
                           1313 ;	../main.c:178: puts("\n4th Generation state machine test done.") ;
   01C8 90s00r8A           1314 	mov	dptr,#__str_6
   01CB 75 F0 80           1315 	mov	b,#0x80
   01CE 02s00r00           1316 	ljmp	_puts
                           1317 ;------------------------------------------------------------
                           1318 ;Allocation info for local variables in function 'taskSwitcherTickHook'
                           1319 ;------------------------------------------------------------
                           1320 ;------------------------------------------------------------
                           1321 ;	../main.c:187: void taskSwitcherTickHook(	void)
                           1322 ;	-----------------------------------------
                           1323 ;	 function taskSwitcherTickHook
                           1324 ;	-----------------------------------------
   01D1                    1325 _taskSwitcherTickHook:
                           1326 ;	../main.c:189: timeForTickProcessing = true ;
   01D1 D2*00              1327 	setb	_timeForTickProcessing
   01D3 22                 1328 	ret
                           1329 ;------------------------------------------------------------
                           1330 ;Allocation info for local variables in function 'gpio_init_projectSpecific'
                           1331 ;------------------------------------------------------------
                           1332 ;SFRPAGE_SAVE              Allocated with name '_gpio_init_projectSpecific_SFRPAGE_SAVE_1_1'
                           1333 ;------------------------------------------------------------
                           1334 ;	../projectSpecificHardwareInterface_C8051F040.c:17: void gpio_init_projectSpecific(	void)
                           1335 ;	-----------------------------------------
                           1336 ;	 function gpio_init_projectSpecific
                           1337 ;	-----------------------------------------
   01D4                    1338 _gpio_init_projectSpecific:
                           1339 ;	../projectSpecificHardwareInterface_C8051F040.c:21: SFRPAGE_SAVE = SFRPAGE ;
   01D4 AA 84              1340 	mov	r2,_SFRPAGE
                           1341 ;	../projectSpecificHardwareInterface_C8051F040.c:23: SFRPAGE	 = SPI0_PAGE ;
   01D6 75 84 00           1342 	mov	_SFRPAGE,#0x00
                           1343 ;	../projectSpecificHardwareInterface_C8051F040.c:24: SPI0CN	 = 0x00 ;	// Set the SPI module into 3 pin mode so NSS doesn't get assigned to a pin in the crossbar setup below
   01D9 75 F8 00           1344 	mov	_SPI0CN,#0x00
                           1345 ;	../projectSpecificHardwareInterface_C8051F040.c:26: SFRPAGE	 = CONFIG_PAGE ;
   01DC 75 84 0F           1346 	mov	_SFRPAGE,#0x0F
                           1347 ;	../projectSpecificHardwareInterface_C8051F040.c:27: XBR0	 = 0x00 ;	// Start with a clean slate
   01DF 75 E1 00           1348 	mov	_XBR0,#0x00
                           1349 ;	../projectSpecificHardwareInterface_C8051F040.c:28: XBR1	 = 0x00 ;
   01E2 75 E2 00           1350 	mov	_XBR1,#0x00
                           1351 ;	../projectSpecificHardwareInterface_C8051F040.c:29: XBR2	 = 0x00 ;
   01E5 75 E3 00           1352 	mov	_XBR2,#0x00
                           1353 ;	../projectSpecificHardwareInterface_C8051F040.c:30: XBR3	 = 0x00 ;
   01E8 75 E4 00           1354 	mov	_XBR3,#0x00
                           1355 ;	../projectSpecificHardwareInterface_C8051F040.c:32: XBR0	|= 0x04 ;	// Route UART0 to P0.0-P0.1
   01EB 43 E1 04           1356 	orl	_XBR0,#0x04
                           1357 ;	../projectSpecificHardwareInterface_C8051F040.c:33: XBR0	|= 0x02 ;	// Route SPI0 to P0.2-P0.4
   01EE 43 E1 02           1358 	orl	_XBR0,#0x02
                           1359 ;	../projectSpecificHardwareInterface_C8051F040.c:34: XBR0	|= 0x01 ;	// Route SMB0 to P0.5-P0.6
   01F1 43 E1 01           1360 	orl	_XBR0,#0x01
                           1361 ;	../projectSpecificHardwareInterface_C8051F040.c:35: XBR2	|= 0x04 ;	// Route UART1 to P0.7-P1.0
   01F4 43 E3 04           1362 	orl	_XBR2,#0x04
                           1363 ;	../projectSpecificHardwareInterface_C8051F040.c:36: XBR0	|= 0x30 ;	// Route CEXn to P1.1-P1.6
   01F7 43 E1 30           1364 	orl	_XBR0,#0x30
                           1365 ;	../projectSpecificHardwareInterface_C8051F040.c:37: XBR0	|= 0x80 ;	// Route CP0 to P1.7
   01FA 43 E1 80           1366 	orl	_XBR0,#0x80
                           1367 ;	../projectSpecificHardwareInterface_C8051F040.c:38: XBR3	|= 0x08 ;	// Route CP2 to P2.0
   01FD 43 E4 08           1368 	orl	_XBR3,#0x08
                           1369 ;	../projectSpecificHardwareInterface_C8051F040.c:39: XBR1	|= 0x04 ;	// Route INT0# to P2.1
   0200 43 E2 04           1370 	orl	_XBR1,#0x04
                           1371 ;	../projectSpecificHardwareInterface_C8051F040.c:40: XBR1	|= 0x20 ;	// Route T2 from P2.2
   0203 43 E2 20           1372 	orl	_XBR1,#0x20
                           1373 ;	../projectSpecificHardwareInterface_C8051F040.c:41: XBR3	|= 0x01 ;	// Route T3 to P2.3
   0206 43 E4 01           1374 	orl	_XBR3,#0x01
                           1375 ;	../projectSpecificHardwareInterface_C8051F040.c:43: P0MDOUT |= 0x01 ;	// Set TX0 (P0.0) to push-pull
   0209 43 A4 01           1376 	orl	_P0MDOUT,#0x01
                           1377 ;	../projectSpecificHardwareInterface_C8051F040.c:45: P1MDOUT	|= 0x02 ;	// Set CEX0 (P1.1) to push-pull
   020C 43 A5 02           1378 	orl	_P1MDOUT,#0x02
                           1379 ;	../projectSpecificHardwareInterface_C8051F040.c:46: P1MDOUT	|= 0x04 ;	// Set CEX1 (P1.2) to push-pull
   020F 43 A5 04           1380 	orl	_P1MDOUT,#0x04
                           1381 ;	../projectSpecificHardwareInterface_C8051F040.c:47: P1MDOUT	|= 0x08 ;	// Set CEX2 (P1.3) to push-pull
   0212 43 A5 08           1382 	orl	_P1MDOUT,#0x08
                           1383 ;	../projectSpecificHardwareInterface_C8051F040.c:48: P1MDOUT	|= 0x10 ;	// Set CEX3 (P1.4) to push-pull
   0215 43 A5 10           1384 	orl	_P1MDOUT,#0x10
                           1385 ;	../projectSpecificHardwareInterface_C8051F040.c:49: P1MDOUT	|= 0x20 ;	// Set CEX4 (P1.5) to push-pull
   0218 43 A5 20           1386 	orl	_P1MDOUT,#0x20
                           1387 ;	../projectSpecificHardwareInterface_C8051F040.c:50: P1MDOUT |= 0x40 ;	// Set CEX5 (P1.6) to push-pull
   021B 43 A5 40           1388 	orl	_P1MDOUT,#0x40
                           1389 ;	../projectSpecificHardwareInterface_C8051F040.c:52: P1MDOUT |= 0x80 ;	// Set TX1 (P1.7) to push-pull
   021E 43 A5 80           1390 	orl	_P1MDOUT,#0x80
                           1391 ;	../projectSpecificHardwareInterface_C8051F040.c:53: P2MDOUT	&= ~0x02 ;	// Set INT0# (P2.1) to be a digital input
                           1392 ;	../projectSpecificHardwareInterface_C8051F040.c:54: P2MDOUT	&= ~0x04 ;	// Set T2 (P2.2) to be a digital input
   0221 53 A6 F9           1393 	anl	_P2MDOUT,#(0xFD&0xFB)
                           1394 ;	../projectSpecificHardwareInterface_C8051F040.c:55: P2MDOUT	|= 0x08 ;	// Set P2.3 to be the Timer3 output pin
   0224 43 A6 08           1395 	orl	_P2MDOUT,#0x08
                           1396 ;	../projectSpecificHardwareInterface_C8051F040.c:57: P3MDIN	 = 0x00 ;	// Configure as analog inputs. This forces the weak pullup for these pins to be disconnected
   0227 75 AF 00           1397 	mov	_P3MDIN,#0x00
                           1398 ;	../projectSpecificHardwareInterface_C8051F040.c:58: P3MDOUT	 = 0x00 ;	// Force the output driver for these pins to open drain output mode
   022A 75 A7 00           1399 	mov	_P3MDOUT,#0x00
                           1400 ;	../projectSpecificHardwareInterface_C8051F040.c:59: P3		 = 0xFF ;	// Force the input driver for these pins to high impedance
   022D 75 B0 FF           1401 	mov	_P3,#0xFF
                           1402 ;	../projectSpecificHardwareInterface_C8051F040.c:61: XBR3	|= 0x80 ;	// Configure CAN TX pin (CTX) as push-pull digital output
   0230 43 E4 80           1403 	orl	_XBR3,#0x80
                           1404 ;	../projectSpecificHardwareInterface_C8051F040.c:63: P4MDOUT	|= 0xFF ;	// Set LCD drive pins to push-pull
   0233 E5 9C              1405 	mov	a,_P4MDOUT
   0235 75 9C FF           1406 	mov	_P4MDOUT,#0xFF
                           1407 ;	../projectSpecificHardwareInterface_C8051F040.c:64: P5MDOUT	|= 0xFF ;	// Set state machine debug pins to push-pull
   0238 E5 9D              1408 	mov	a,_P5MDOUT
   023A 75 9D FF           1409 	mov	_P5MDOUT,#0xFF
                           1410 ;	../projectSpecificHardwareInterface_C8051F040.c:65: P6MDOUT	|= 0xFF ;	// Set general purpose debug pins to push-pull
   023D E5 9E              1411 	mov	a,_P6MDOUT
   023F 75 9E FF           1412 	mov	_P6MDOUT,#0xFF
                           1413 ;	../projectSpecificHardwareInterface_C8051F040.c:67: P4		 = 0x00 ;	// Set all debugging pins to low
   0242 75 C8 00           1414 	mov	_P4,#0x00
                           1415 ;	../projectSpecificHardwareInterface_C8051F040.c:68: P5		 = 0x00 ;
   0245 75 D8 00           1416 	mov	_P5,#0x00
                           1417 ;	../projectSpecificHardwareInterface_C8051F040.c:69: P6		 = 0x00 ;
   0248 75 E8 00           1418 	mov	_P6,#0x00
                           1419 ;	../projectSpecificHardwareInterface_C8051F040.c:71: P2MDIN	&= 0x0F ;	// set comparator analog inputs up as per Section 17.1.5 of the C8050F040 manual
   024B 53 AE 0F           1420 	anl	_P2MDIN,#0x0F
                           1421 ;	../projectSpecificHardwareInterface_C8051F040.c:72: P2MDOUT	&= 0x0F ;
   024E 53 A6 0F           1422 	anl	_P2MDOUT,#0x0F
                           1423 ;	../projectSpecificHardwareInterface_C8051F040.c:73: P2		|= 0xF0 ;
   0251 43 A0 F0           1424 	orl	_P2,#0xF0
                           1425 ;	../projectSpecificHardwareInterface_C8051F040.c:78: XBR2	|= 0x40 ;	// Enable Crossbar/low ports and turn on global weak pullups
   0254 43 E3 40           1426 	orl	_XBR2,#0x40
                           1427 ;	../projectSpecificHardwareInterface_C8051F040.c:79: SFRPAGE	 = SFRPAGE_SAVE ;
   0257 8A 84              1428 	mov	_SFRPAGE,r2
   0259 22                 1429 	ret
                           1430 ;------------------------------------------------------------
                           1431 ;Allocation info for local variables in function 'pwm_init_projectSpecific'
                           1432 ;------------------------------------------------------------
                           1433 ;channelNumber             Allocated with name '_pwm_init_projectSpecific_channelNumber_1_1'
                           1434 ;SFRPAGE_save              Allocated with name '_pwm_init_projectSpecific_SFRPAGE_save_1_1'
                           1435 ;------------------------------------------------------------
                           1436 ;	../projectSpecificHardwareInterface_C8051F040.c:83: void pwm_init_projectSpecific(								unsigned char channelNumber)
                           1437 ;	-----------------------------------------
                           1438 ;	 function pwm_init_projectSpecific
                           1439 ;	-----------------------------------------
   025A                    1440 _pwm_init_projectSpecific:
   025A E5 82              1441 	mov	a,dpl
   025C 90s00r02           1442 	mov	dptr,#_pwm_init_projectSpecific_channelNumber_1_1
   025F F0                 1443 	movx	@dptr,a
                           1444 ;	../projectSpecificHardwareInterface_C8051F040.c:132: char		SFRPAGE_save = SFRPAGE ;	// Save current SFR Page
   0260 AA 84              1445 	mov	r2,_SFRPAGE
                           1446 ;	../projectSpecificHardwareInterface_C8051F040.c:134: SFRPAGE = PCA0_PAGE ;
   0262 75 84 00           1447 	mov	_SFRPAGE,#0x00
                           1448 ;	../projectSpecificHardwareInterface_C8051F040.c:136: if(!initialized)
   0265 20*02 2A           1449 	jb	_pwm_init_projectSpecific_initialized_1_1,00102$
                           1450 ;	../projectSpecificHardwareInterface_C8051F040.c:138: PCA0CN = 0x00 ;				// Stop counter; clear all flags
   0268 75 D8 00           1451 	mov	_PCA0CN,#0x00
                           1452 ;	../projectSpecificHardwareInterface_C8051F040.c:139: PCA0MD = 0x08 ;				// Use SYSCLK as time base
   026B 75 D9 08           1453 	mov	_PCA0MD,#0x08
                           1454 ;	../projectSpecificHardwareInterface_C8051F040.c:141: PCA0CPM0 = 0x00 ;			// Module 0 = Off
   026E 75 DA 00           1455 	mov	_PCA0CPM0,#0x00
                           1456 ;	../projectSpecificHardwareInterface_C8051F040.c:142: PCA0CPH0 = 0x00 ;			// Configure initial PWM duty cycle = 100%. This will result in a continuously high output which, since it's active low, will disable any output.
   0271 75 FC 00           1457 	mov	_PCA0CPH0,#0x00
                           1458 ;	../projectSpecificHardwareInterface_C8051F040.c:144: PCA0CPM0 = 0x00 ;			// Module 1 = Off
   0274 75 DA 00           1459 	mov	_PCA0CPM0,#0x00
                           1460 ;	../projectSpecificHardwareInterface_C8051F040.c:145: PCA0CPH1 = 0x00 ;			// Configure initial PWM duty cycle = 100%. This will result in a continuously high output which, since it's active low, will disable any output.
   0277 75 FE 00           1461 	mov	_PCA0CPH1,#0x00
                           1462 ;	../projectSpecificHardwareInterface_C8051F040.c:147: PCA0CPM0 = 0x00 ;			// Module 2 = Off
   027A 75 DA 00           1463 	mov	_PCA0CPM0,#0x00
                           1464 ;	../projectSpecificHardwareInterface_C8051F040.c:148: PCA0CPH2 = 0x00 ;			// Configure initial PWM duty cycle = 100%. This will result in a continuously high output which, since it's active low, will disable any output.
   027D 75 EA 00           1465 	mov	_PCA0CPH2,#0x00
                           1466 ;	../projectSpecificHardwareInterface_C8051F040.c:150: PCA0CPM0 = 0x00 ;			// Module 3 = Off
   0280 75 DA 00           1467 	mov	_PCA0CPM0,#0x00
                           1468 ;	../projectSpecificHardwareInterface_C8051F040.c:151: PCA0CPH3 = 0x00 ;			// Configure initial PWM duty cycle = 100%. This will result in a continuously high output which, since it's active low, will disable any output.
   0283 75 EC 00           1469 	mov	_PCA0CPH3,#0x00
                           1470 ;	../projectSpecificHardwareInterface_C8051F040.c:153: PCA0CPM0 = 0x00 ;			// Module 4 = Off
   0286 75 DA 00           1471 	mov	_PCA0CPM0,#0x00
                           1472 ;	../projectSpecificHardwareInterface_C8051F040.c:154: PCA0CPH4 = 0x00 ;			// Configure initial PWM duty cycle = 100%. This will result in a continuously high output which, since it's active low, will disable any output.
   0289 75 EE 00           1473 	mov	_PCA0CPH4,#0x00
                           1474 ;	../projectSpecificHardwareInterface_C8051F040.c:156: PCA0CPM0 = 0x00 ;			// Module 5 = Off
   028C 75 DA 00           1475 	mov	_PCA0CPM0,#0x00
                           1476 ;	../projectSpecificHardwareInterface_C8051F040.c:157: PCA0CPH5 = 0x00 ;			// Configure initial PWM duty cycle = 100%. This will result in a continuously high output which, since it's active low, will disable any output.
   028F 75 E2 00           1477 	mov	_PCA0CPH5,#0x00
   0292                    1478 00102$:
                           1479 ;	../projectSpecificHardwareInterface_C8051F040.c:164: if(channelNumber == ioMapping_PWM_TO_TICK_SYNCHRONIZER_CHANNEL)
   0292 90s00r02           1480 	mov	dptr,#_pwm_init_projectSpecific_channelNumber_1_1
   0295 E0                 1481 	movx	a,@dptr
   0296 FB                 1482 	mov	r3,a
   0297 70 06              1483 	jnz	00104$
                           1484 ;	../projectSpecificHardwareInterface_C8051F040.c:170: PWM_B50_MODE		= 0x42 ;						// Module 1 = 8-bit PWM mode
   0299 75 DA 42           1485 	mov	_PCA0CPM0,#0x42
                           1486 ;	../projectSpecificHardwareInterface_C8051F040.c:171: PWM_B50_HIGH_BYTE	= FIFTY_PERCENT_DUTY_CYCLE ;	// Configure initial PWM duty cycle = 50%
   029C 75 FC 80           1487 	mov	_PCA0CPH0,#0x80
   029F                    1488 00104$:
                           1489 ;	../projectSpecificHardwareInterface_C8051F040.c:174: if(!initialized)
   029F 20*02 04           1490 	jb	_pwm_init_projectSpecific_initialized_1_1,00106$
                           1491 ;	../projectSpecificHardwareInterface_C8051F040.c:176: initialized = true ;
   02A2 D2*02              1492 	setb	_pwm_init_projectSpecific_initialized_1_1
                           1493 ;	../projectSpecificHardwareInterface_C8051F040.c:178: CR = 1 ;					// Start PCA counter
   02A4 D2 DE              1494 	setb	_CR
   02A6                    1495 00106$:
                           1496 ;	../projectSpecificHardwareInterface_C8051F040.c:181: SFRPAGE = SFRPAGE_save ;
   02A6 8A 84              1497 	mov	_SFRPAGE,r2
   02A8 22                 1498 	ret
                           1499 ;------------------------------------------------------------
                           1500 ;Allocation info for local variables in function 'pwm_incrementDutyCycle_projectSpecific'
                           1501 ;------------------------------------------------------------
                           1502 ;channelNumber             Allocated with name '_pwm_incrementDutyCycle_projectSpecific_channelNumber_1_1'
                           1503 ;------------------------------------------------------------
                           1504 ;	../projectSpecificHardwareInterface_C8051F040.c:185: void pwm_incrementDutyCycle_projectSpecific(				unsigned char channelNumber)
                           1505 ;	-----------------------------------------
                           1506 ;	 function pwm_incrementDutyCycle_projectSpecific
                           1507 ;	-----------------------------------------
   02A9                    1508 _pwm_incrementDutyCycle_projectSpecific:
                           1509 ;	../projectSpecificHardwareInterface_C8051F040.c:187: (void)channelNumber ;	// unused at this time
   02A9 22                 1510 	ret
                           1511 ;------------------------------------------------------------
                           1512 ;Allocation info for local variables in function 'pwm_decrementDutyCycle_projectSpecific'
                           1513 ;------------------------------------------------------------
                           1514 ;channelNumber             Allocated with name '_pwm_decrementDutyCycle_projectSpecific_channelNumber_1_1'
                           1515 ;------------------------------------------------------------
                           1516 ;	../projectSpecificHardwareInterface_C8051F040.c:191: void pwm_decrementDutyCycle_projectSpecific(				unsigned char channelNumber)
                           1517 ;	-----------------------------------------
                           1518 ;	 function pwm_decrementDutyCycle_projectSpecific
                           1519 ;	-----------------------------------------
   02AA                    1520 _pwm_decrementDutyCycle_projectSpecific:
                           1521 ;	../projectSpecificHardwareInterface_C8051F040.c:193: (void)channelNumber ;	// unused at this time
   02AA 22                 1522 	ret
                           1523 ;------------------------------------------------------------
                           1524 ;Allocation info for local variables in function 'pwm_getDutyCycle_projectSpecific'
                           1525 ;------------------------------------------------------------
                           1526 ;channelNumber             Allocated with name '_pwm_getDutyCycle_projectSpecific_channelNumber_1_1'
                           1527 ;------------------------------------------------------------
                           1528 ;	../projectSpecificHardwareInterface_C8051F040.c:197: uint8_t pwm_getDutyCycle_projectSpecific(					unsigned char channelNumber)
                           1529 ;	-----------------------------------------
                           1530 ;	 function pwm_getDutyCycle_projectSpecific
                           1531 ;	-----------------------------------------
   02AB                    1532 _pwm_getDutyCycle_projectSpecific:
                           1533 ;	../projectSpecificHardwareInterface_C8051F040.c:201: return 0 ;
   02AB 75 82 00           1534 	mov	dpl,#0x00
   02AE 22                 1535 	ret
                           1536 ;------------------------------------------------------------
                           1537 ;Allocation info for local variables in function 'pwm_setDutyCycle_projectSpecific'
                           1538 ;------------------------------------------------------------
                           1539 ;newDutyCycle              Allocated with name '_pwm_setDutyCycle_projectSpecific_PARM_2'
                           1540 ;channelNumber             Allocated with name '_pwm_setDutyCycle_projectSpecific_channelNumber_1_1'
                           1541 ;------------------------------------------------------------
                           1542 ;	../projectSpecificHardwareInterface_C8051F040.c:205: void pwm_setDutyCycle_projectSpecific(						unsigned char channelNumber, uint8_t newDutyCycle)
                           1543 ;	-----------------------------------------
                           1544 ;	 function pwm_setDutyCycle_projectSpecific
                           1545 ;	-----------------------------------------
   02AF                    1546 _pwm_setDutyCycle_projectSpecific:
                           1547 ;	../projectSpecificHardwareInterface_C8051F040.c:208: (void)newDutyCycle ;	// unused at this time
   02AF 22                 1548 	ret
                           1549 ;------------------------------------------------------------
                           1550 ;Allocation info for local variables in function 'pwm_adjustDutyCycle_projectSpecific'
                           1551 ;------------------------------------------------------------
                           1552 ;dutyCycleAdjustment       Allocated with name '_pwm_adjustDutyCycle_projectSpecific_PARM_2'
                           1553 ;channelNumber             Allocated with name '_pwm_adjustDutyCycle_projectSpecific_channelNumber_1_1'
                           1554 ;------------------------------------------------------------
                           1555 ;	../projectSpecificHardwareInterface_C8051F040.c:212: void pwm_adjustDutyCycle_projectSpecific(					unsigned char channelNumber, int8_t dutyCycleAdjustment)
                           1556 ;	-----------------------------------------
                           1557 ;	 function pwm_adjustDutyCycle_projectSpecific
                           1558 ;	-----------------------------------------
   02B0                    1559 _pwm_adjustDutyCycle_projectSpecific:
                           1560 ;	../projectSpecificHardwareInterface_C8051F040.c:215: (void)dutyCycleAdjustment ;	// unused at this time
   02B0 22                 1561 	ret
                           1562 ;------------------------------------------------------------
                           1563 ;Allocation info for local variables in function 'pwm_setDutyCycleAsPercentage_projectSpecific'
                           1564 ;------------------------------------------------------------
                           1565 ;newDutyCycle              Allocated with name '_pwm_setDutyCycleAsPercentage_projectSpecific_PARM_2'
                           1566 ;channelNumber             Allocated with name '_pwm_setDutyCycleAsPercentage_projectSpecific_channelNumber_1_1'
                           1567 ;------------------------------------------------------------
                           1568 ;	../projectSpecificHardwareInterface_C8051F040.c:219: void pwm_setDutyCycleAsPercentage_projectSpecific(			unsigned char channelNumber, unsigned char newDutyCycle)
                           1569 ;	-----------------------------------------
                           1570 ;	 function pwm_setDutyCycleAsPercentage_projectSpecific
                           1571 ;	-----------------------------------------
   02B1                    1572 _pwm_setDutyCycleAsPercentage_projectSpecific:
                           1573 ;	../projectSpecificHardwareInterface_C8051F040.c:222: (void)newDutyCycle ;		// unused at this time
   02B1 22                 1574 	ret
                           1575 ;------------------------------------------------------------
                           1576 ;Allocation info for local variables in function 'pwm_getDutyCycleAsPercentage_projectSpecific'
                           1577 ;------------------------------------------------------------
                           1578 ;channelNumber             Allocated with name '_pwm_getDutyCycleAsPercentage_projectSpecific_channelNumber_1_1'
                           1579 ;currentPercentage         Allocated with name '_pwm_getDutyCycleAsPercentage_projectSpecific_currentPercentage_1_1'
                           1580 ;divisor                   Allocated with name '_pwm_getDutyCycleAsPercentage_projectSpecific_divisor_1_1'
                           1581 ;------------------------------------------------------------
                           1582 ;	../projectSpecificHardwareInterface_C8051F040.c:226: unsigned char pwm_getDutyCycleAsPercentage_projectSpecific(	unsigned char channelNumber)
                           1583 ;	-----------------------------------------
                           1584 ;	 function pwm_getDutyCycleAsPercentage_projectSpecific
                           1585 ;	-----------------------------------------
   02B2                    1586 _pwm_getDutyCycleAsPercentage_projectSpecific:
                           1587 ;	../projectSpecificHardwareInterface_C8051F040.c:237: return (unsigned char)0 ;//min(currentPercentage, 100) ;
   02B2 75 82 00           1588 	mov	dpl,#0x00
   02B5 22                 1589 	ret
                           1590 ;------------------------------------------------------------
                           1591 ;Allocation info for local variables in function 'IsEmpty'
                           1592 ;------------------------------------------------------------
                           1593 ;Q                         Allocated with name '_IsEmpty_Q_1_1'
                           1594 ;------------------------------------------------------------
                           1595 ;	../projectSpecificHardwareInterface_C8051F040.c:273: unsigned char IsEmpty(QUEUE_TYPE* Q)
                           1596 ;	-----------------------------------------
                           1597 ;	 function IsEmpty
                           1598 ;	-----------------------------------------
   02B6                    1599 _IsEmpty:
   02B6 AA F0              1600 	mov	r2,b
   02B8 AB 83              1601 	mov	r3,dph
   02BA E5 82              1602 	mov	a,dpl
   02BC 90s04r52           1603 	mov	dptr,#_IsEmpty_Q_1_1
   02BF F0                 1604 	movx	@dptr,a
   02C0 A3                 1605 	inc	dptr
   02C1 EB                 1606 	mov	a,r3
   02C2 F0                 1607 	movx	@dptr,a
   02C3 A3                 1608 	inc	dptr
   02C4 EA                 1609 	mov	a,r2
   02C5 F0                 1610 	movx	@dptr,a
                           1611 ;	../projectSpecificHardwareInterface_C8051F040.c:275: return Q->Size == 0 ;
   02C6 90s04r52           1612 	mov	dptr,#_IsEmpty_Q_1_1
   02C9 E0                 1613 	movx	a,@dptr
   02CA FA                 1614 	mov	r2,a
   02CB A3                 1615 	inc	dptr
   02CC E0                 1616 	movx	a,@dptr
   02CD FB                 1617 	mov	r3,a
   02CE A3                 1618 	inc	dptr
   02CF E0                 1619 	movx	a,@dptr
   02D0 FC                 1620 	mov	r4,a
   02D1 74 06              1621 	mov	a,#0x06
   02D3 2A                 1622 	add	a,r2
   02D4 FA                 1623 	mov	r2,a
   02D5 E4                 1624 	clr	a
   02D6 3B                 1625 	addc	a,r3
   02D7 FB                 1626 	mov	r3,a
   02D8 8A 82              1627 	mov	dpl,r2
   02DA 8B 83              1628 	mov	dph,r3
   02DC 8C F0              1629 	mov	b,r4
   02DE 12s00r00           1630 	lcall	__gptrget
   02E1 FA                 1631 	mov	r2,a
   02E2 A3                 1632 	inc	dptr
   02E3 12s00r00           1633 	lcall	__gptrget
   02E6 FB                 1634 	mov	r3,a
   02E7 E4                 1635 	clr	a
   02E8 BA 00 04           1636 	cjne	r2,#0x00,00103$
   02EB BB 00 01           1637 	cjne	r3,#0x00,00103$
   02EE 04                 1638 	inc	a
   02EF                    1639 00103$:
   02EF F5 82              1640 	mov	dpl,a
   02F1 22                 1641 	ret
                           1642 ;------------------------------------------------------------
                           1643 ;Allocation info for local variables in function 'IsFull'
                           1644 ;------------------------------------------------------------
                           1645 ;Q                         Allocated with name '_IsFull_Q_1_1'
                           1646 ;------------------------------------------------------------
                           1647 ;	../projectSpecificHardwareInterface_C8051F040.c:278: unsigned char IsFull(QUEUE_TYPE* Q)
                           1648 ;	-----------------------------------------
                           1649 ;	 function IsFull
                           1650 ;	-----------------------------------------
   02F2                    1651 _IsFull:
   02F2 AA F0              1652 	mov	r2,b
   02F4 AB 83              1653 	mov	r3,dph
   02F6 E5 82              1654 	mov	a,dpl
   02F8 90s04r55           1655 	mov	dptr,#_IsFull_Q_1_1
   02FB F0                 1656 	movx	@dptr,a
   02FC A3                 1657 	inc	dptr
   02FD EB                 1658 	mov	a,r3
   02FE F0                 1659 	movx	@dptr,a
   02FF A3                 1660 	inc	dptr
   0300 EA                 1661 	mov	a,r2
   0301 F0                 1662 	movx	@dptr,a
                           1663 ;	../projectSpecificHardwareInterface_C8051F040.c:280: return Q->Size == Q->Capacity ;
   0302 90s04r55           1664 	mov	dptr,#_IsFull_Q_1_1
   0305 E0                 1665 	movx	a,@dptr
   0306 FA                 1666 	mov	r2,a
   0307 A3                 1667 	inc	dptr
   0308 E0                 1668 	movx	a,@dptr
   0309 FB                 1669 	mov	r3,a
   030A A3                 1670 	inc	dptr
   030B E0                 1671 	movx	a,@dptr
   030C FC                 1672 	mov	r4,a
   030D 74 06              1673 	mov	a,#0x06
   030F 2A                 1674 	add	a,r2
   0310 FD                 1675 	mov	r5,a
   0311 E4                 1676 	clr	a
   0312 3B                 1677 	addc	a,r3
   0313 FE                 1678 	mov	r6,a
   0314 8C 07              1679 	mov	ar7,r4
   0316 8D 82              1680 	mov	dpl,r5
   0318 8E 83              1681 	mov	dph,r6
   031A 8F F0              1682 	mov	b,r7
   031C 12s00r00           1683 	lcall	__gptrget
   031F FD                 1684 	mov	r5,a
   0320 A3                 1685 	inc	dptr
   0321 12s00r00           1686 	lcall	__gptrget
   0324 FE                 1687 	mov	r6,a
   0325 8A 82              1688 	mov	dpl,r2
   0327 8B 83              1689 	mov	dph,r3
   0329 8C F0              1690 	mov	b,r4
   032B 12s00r00           1691 	lcall	__gptrget
   032E FA                 1692 	mov	r2,a
   032F A3                 1693 	inc	dptr
   0330 12s00r00           1694 	lcall	__gptrget
   0333 FB                 1695 	mov	r3,a
   0334 ED                 1696 	mov	a,r5
   0335 B5 02 08           1697 	cjne	a,ar2,00103$
   0338 EE                 1698 	mov	a,r6
   0339 B5 03 04           1699 	cjne	a,ar3,00103$
   033C 74 01              1700 	mov	a,#0x01
   033E 80 01              1701 	sjmp	00104$
   0340                    1702 00103$:
   0340 E4                 1703 	clr	a
   0341                    1704 00104$:
   0341 F5 82              1705 	mov	dpl,a
   0343 22                 1706 	ret
                           1707 ;------------------------------------------------------------
                           1708 ;Allocation info for local variables in function 'Succ'
                           1709 ;------------------------------------------------------------
                           1710 ;Q                         Allocated with name '_Succ_PARM_2'
                           1711 ;Value                     Allocated with name '_Succ_Value_1_1'
                           1712 ;------------------------------------------------------------
                           1713 ;	../projectSpecificHardwareInterface_C8051F040.c:283: static unsigned short Succ(unsigned short Value, QUEUE_TYPE* Q)
                           1714 ;	-----------------------------------------
                           1715 ;	 function Succ
                           1716 ;	-----------------------------------------
   0344                    1717 _Succ:
   0344 AA 83              1718 	mov	r2,dph
   0346 E5 82              1719 	mov	a,dpl
   0348 90s04r5B           1720 	mov	dptr,#_Succ_Value_1_1
   034B F0                 1721 	movx	@dptr,a
   034C A3                 1722 	inc	dptr
   034D EA                 1723 	mov	a,r2
   034E F0                 1724 	movx	@dptr,a
                           1725 ;	../projectSpecificHardwareInterface_C8051F040.c:285: if(++Value == Q->Capacity)
   034F 90s04r5B           1726 	mov	dptr,#_Succ_Value_1_1
   0352 E0                 1727 	movx	a,@dptr
   0353 24 01              1728 	add	a,#0x01
   0355 F0                 1729 	movx	@dptr,a
   0356 A3                 1730 	inc	dptr
   0357 E0                 1731 	movx	a,@dptr
   0358 34 00              1732 	addc	a,#0x00
   035A F0                 1733 	movx	@dptr,a
   035B 90s04r58           1734 	mov	dptr,#_Succ_PARM_2
   035E E0                 1735 	movx	a,@dptr
   035F FA                 1736 	mov	r2,a
   0360 A3                 1737 	inc	dptr
   0361 E0                 1738 	movx	a,@dptr
   0362 FB                 1739 	mov	r3,a
   0363 A3                 1740 	inc	dptr
   0364 E0                 1741 	movx	a,@dptr
   0365 FC                 1742 	mov	r4,a
   0366 8A 82              1743 	mov	dpl,r2
   0368 8B 83              1744 	mov	dph,r3
   036A 8C F0              1745 	mov	b,r4
   036C 12s00r00           1746 	lcall	__gptrget
   036F FA                 1747 	mov	r2,a
   0370 A3                 1748 	inc	dptr
   0371 12s00r00           1749 	lcall	__gptrget
   0374 FB                 1750 	mov	r3,a
   0375 90s04r5B           1751 	mov	dptr,#_Succ_Value_1_1
   0378 E0                 1752 	movx	a,@dptr
   0379 FC                 1753 	mov	r4,a
   037A A3                 1754 	inc	dptr
   037B E0                 1755 	movx	a,@dptr
   037C FD                 1756 	mov	r5,a
   037D EC                 1757 	mov	a,r4
   037E B5 02 0B           1758 	cjne	a,ar2,00102$
   0381 ED                 1759 	mov	a,r5
   0382 B5 03 07           1760 	cjne	a,ar3,00102$
                           1761 ;	../projectSpecificHardwareInterface_C8051F040.c:287: Value = 0 ;
   0385 90s04r5B           1762 	mov	dptr,#_Succ_Value_1_1
   0388 E4                 1763 	clr	a
   0389 F0                 1764 	movx	@dptr,a
   038A A3                 1765 	inc	dptr
   038B F0                 1766 	movx	@dptr,a
   038C                    1767 00102$:
                           1768 ;	../projectSpecificHardwareInterface_C8051F040.c:290: return Value ;
   038C 90s04r5B           1769 	mov	dptr,#_Succ_Value_1_1
   038F E0                 1770 	movx	a,@dptr
   0390 FA                 1771 	mov	r2,a
   0391 A3                 1772 	inc	dptr
   0392 E0                 1773 	movx	a,@dptr
   0393 8A 82              1774 	mov	dpl,r2
   0395 F5 83              1775 	mov	dph,a
   0397 22                 1776 	ret
                           1777 ;------------------------------------------------------------
                           1778 ;Allocation info for local variables in function 'task_UART_init_projectSpecific'
                           1779 ;------------------------------------------------------------
                           1780 ;channelNumber             Allocated with name '_task_UART_init_projectSpecific_channelNumber_1_1'
                           1781 ;Q                         Allocated with name '_task_UART_init_projectSpecific_Q_1_1'
                           1782 ;SFRPAGE_SAVE              Allocated with name '_task_UART_init_projectSpecific_SFRPAGE_SAVE_3_3'
                           1783 ;------------------------------------------------------------
                           1784 ;	../projectSpecificHardwareInterface_C8051F040.c:321: void task_UART_init_projectSpecific(	unsigned char channelNumber)
                           1785 ;	-----------------------------------------
                           1786 ;	 function task_UART_init_projectSpecific
                           1787 ;	-----------------------------------------
   0398                    1788 _task_UART_init_projectSpecific:
   0398 E5 82              1789 	mov	a,dpl
   039A 90s08rCD           1790 	mov	dptr,#_task_UART_init_projectSpecific_channelNumber_1_1
   039D F0                 1791 	movx	@dptr,a
                           1792 ;	../projectSpecificHardwareInterface_C8051F040.c:325: QUEUE_TYPE*	Q = &transmitBuffers[channelNumber] ;
   039E 90s08rCD           1793 	mov	dptr,#_task_UART_init_projectSpecific_channelNumber_1_1
   03A1 E0                 1794 	movx	a,@dptr
   03A2 FA                 1795 	mov	r2,a
   03A3 75 F0 0B           1796 	mov	b,#0x0B
   03A6 A4                 1797 	mul	ab
   03A7 FB                 1798 	mov	r3,a
   03A8 24rB5              1799 	add	a,#_transmitBuffers
   03AA FC                 1800 	mov	r4,a
   03AB E4                 1801 	clr	a
   03AC 34s08              1802 	addc	a,#(_transmitBuffers >> 8)
   03AE FD                 1803 	mov	r5,a
   03AF 7E 00              1804 	mov	r6,#0x00
                           1805 ;	../projectSpecificHardwareInterface_C8051F040.c:327: Q->Capacity	= TRANSMIT_BUFFER_SIZE ;
   03B1 8C 82              1806 	mov	dpl,r4
   03B3 8D 83              1807 	mov	dph,r5
   03B5 8E F0              1808 	mov	b,r6
   03B7 74 4C              1809 	mov	a,#0x4C
   03B9 12s00r00           1810 	lcall	__gptrput
   03BC A3                 1811 	inc	dptr
   03BD 74 04              1812 	mov	a,#0x04
   03BF 12s00r00           1813 	lcall	__gptrput
                           1814 ;	../projectSpecificHardwareInterface_C8051F040.c:328: Q->Size		= 0 ;
   03C2 74 06              1815 	mov	a,#0x06
   03C4 2C                 1816 	add	a,r4
   03C5 FF                 1817 	mov	r7,a
   03C6 E4                 1818 	clr	a
   03C7 3D                 1819 	addc	a,r5
   03C8 F8                 1820 	mov	r0,a
   03C9 8E 01              1821 	mov	ar1,r6
   03CB 8F 82              1822 	mov	dpl,r7
   03CD 88 83              1823 	mov	dph,r0
   03CF 89 F0              1824 	mov	b,r1
   03D1 E4                 1825 	clr	a
   03D2 12s00r00           1826 	lcall	__gptrput
   03D5 A3                 1827 	inc	dptr
   03D6 E4                 1828 	clr	a
   03D7 12s00r00           1829 	lcall	__gptrput
                           1830 ;	../projectSpecificHardwareInterface_C8051F040.c:329: Q->Front	= 1 ;
   03DA 74 02              1831 	mov	a,#0x02
   03DC 2C                 1832 	add	a,r4
   03DD FF                 1833 	mov	r7,a
   03DE E4                 1834 	clr	a
   03DF 3D                 1835 	addc	a,r5
   03E0 F8                 1836 	mov	r0,a
   03E1 8E 01              1837 	mov	ar1,r6
   03E3 8F 82              1838 	mov	dpl,r7
   03E5 88 83              1839 	mov	dph,r0
   03E7 89 F0              1840 	mov	b,r1
   03E9 74 01              1841 	mov	a,#0x01
   03EB 12s00r00           1842 	lcall	__gptrput
   03EE A3                 1843 	inc	dptr
   03EF E4                 1844 	clr	a
   03F0 12s00r00           1845 	lcall	__gptrput
                           1846 ;	../projectSpecificHardwareInterface_C8051F040.c:330: Q->Rear		= 0 ;
   03F3 74 04              1847 	mov	a,#0x04
   03F5 2C                 1848 	add	a,r4
   03F6 FF                 1849 	mov	r7,a
   03F7 E4                 1850 	clr	a
   03F8 3D                 1851 	addc	a,r5
   03F9 F8                 1852 	mov	r0,a
   03FA 8E 01              1853 	mov	ar1,r6
   03FC 8F 82              1854 	mov	dpl,r7
   03FE 88 83              1855 	mov	dph,r0
   0400 89 F0              1856 	mov	b,r1
   0402 E4                 1857 	clr	a
   0403 12s00r00           1858 	lcall	__gptrput
   0406 A3                 1859 	inc	dptr
   0407 E4                 1860 	clr	a
   0408 12s00r00           1861 	lcall	__gptrput
                           1862 ;	../projectSpecificHardwareInterface_C8051F040.c:331: Q->Array	= transmitBuffer[0] ;
   040B 74 08              1863 	mov	a,#0x08
   040D 2C                 1864 	add	a,r4
   040E FC                 1865 	mov	r4,a
   040F E4                 1866 	clr	a
   0410 3D                 1867 	addc	a,r5
   0411 FD                 1868 	mov	r5,a
   0412 8C 82              1869 	mov	dpl,r4
   0414 8D 83              1870 	mov	dph,r5
   0416 8E F0              1871 	mov	b,r6
   0418 74r5D              1872 	mov	a,#_transmitBuffer
   041A 12s00r00           1873 	lcall	__gptrput
   041D A3                 1874 	inc	dptr
   041E 74s04              1875 	mov	a,#(_transmitBuffer >> 8)
   0420 12s00r00           1876 	lcall	__gptrput
   0423 A3                 1877 	inc	dptr
   0424 E4                 1878 	clr	a
   0425 12s00r00           1879 	lcall	__gptrput
                           1880 ;	../projectSpecificHardwareInterface_C8051F040.c:333: Q = &receiveBuffers[channelNumber] ;
   0428 EB                 1881 	mov	a,r3
   0429 24rC0              1882 	add	a,#_receiveBuffers
   042B FB                 1883 	mov	r3,a
   042C E4                 1884 	clr	a
   042D 34s08              1885 	addc	a,#(_receiveBuffers >> 8)
   042F FC                 1886 	mov	r4,a
   0430 7D 00              1887 	mov	r5,#0x00
                           1888 ;	../projectSpecificHardwareInterface_C8051F040.c:335: Q->Capacity	= RECEIVE_BUFFER_SIZE ;
   0432 8B 82              1889 	mov	dpl,r3
   0434 8C 83              1890 	mov	dph,r4
   0436 8D F0              1891 	mov	b,r5
   0438 74 0A              1892 	mov	a,#0x0A
   043A 12s00r00           1893 	lcall	__gptrput
   043D A3                 1894 	inc	dptr
   043E E4                 1895 	clr	a
   043F 12s00r00           1896 	lcall	__gptrput
                           1897 ;	../projectSpecificHardwareInterface_C8051F040.c:336: Q->Size		= 0 ;
   0442 74 06              1898 	mov	a,#0x06
   0444 2B                 1899 	add	a,r3
   0445 FE                 1900 	mov	r6,a
   0446 E4                 1901 	clr	a
   0447 3C                 1902 	addc	a,r4
   0448 FF                 1903 	mov	r7,a
   0449 8D 00              1904 	mov	ar0,r5
   044B 8E 82              1905 	mov	dpl,r6
   044D 8F 83              1906 	mov	dph,r7
   044F 88 F0              1907 	mov	b,r0
   0451 E4                 1908 	clr	a
   0452 12s00r00           1909 	lcall	__gptrput
   0455 A3                 1910 	inc	dptr
   0456 E4                 1911 	clr	a
   0457 12s00r00           1912 	lcall	__gptrput
                           1913 ;	../projectSpecificHardwareInterface_C8051F040.c:337: Q->Front	= 1 ;
   045A 74 02              1914 	mov	a,#0x02
   045C 2B                 1915 	add	a,r3
   045D FE                 1916 	mov	r6,a
   045E E4                 1917 	clr	a
   045F 3C                 1918 	addc	a,r4
   0460 FF                 1919 	mov	r7,a
   0461 8D 00              1920 	mov	ar0,r5
   0463 8E 82              1921 	mov	dpl,r6
   0465 8F 83              1922 	mov	dph,r7
   0467 88 F0              1923 	mov	b,r0
   0469 74 01              1924 	mov	a,#0x01
   046B 12s00r00           1925 	lcall	__gptrput
   046E A3                 1926 	inc	dptr
   046F E4                 1927 	clr	a
   0470 12s00r00           1928 	lcall	__gptrput
                           1929 ;	../projectSpecificHardwareInterface_C8051F040.c:338: Q->Rear		= 0 ;
   0473 74 04              1930 	mov	a,#0x04
   0475 2B                 1931 	add	a,r3
   0476 FE                 1932 	mov	r6,a
   0477 E4                 1933 	clr	a
   0478 3C                 1934 	addc	a,r4
   0479 FF                 1935 	mov	r7,a
   047A 8D 00              1936 	mov	ar0,r5
   047C 8E 82              1937 	mov	dpl,r6
   047E 8F 83              1938 	mov	dph,r7
   0480 88 F0              1939 	mov	b,r0
   0482 E4                 1940 	clr	a
   0483 12s00r00           1941 	lcall	__gptrput
   0486 A3                 1942 	inc	dptr
   0487 E4                 1943 	clr	a
   0488 12s00r00           1944 	lcall	__gptrput
                           1945 ;	../projectSpecificHardwareInterface_C8051F040.c:339: Q->Array	= receiveBuffer[0] ;
   048B 74 08              1946 	mov	a,#0x08
   048D 2B                 1947 	add	a,r3
   048E FB                 1948 	mov	r3,a
   048F E4                 1949 	clr	a
   0490 3C                 1950 	addc	a,r4
   0491 FC                 1951 	mov	r4,a
   0492 8B 82              1952 	mov	dpl,r3
   0494 8C 83              1953 	mov	dph,r4
   0496 8D F0              1954 	mov	b,r5
   0498 74rAA              1955 	mov	a,#_receiveBuffer
   049A 12s00r00           1956 	lcall	__gptrput
   049D A3                 1957 	inc	dptr
   049E 74s08              1958 	mov	a,#(_receiveBuffer >> 8)
   04A0 12s00r00           1959 	lcall	__gptrput
   04A3 A3                 1960 	inc	dptr
   04A4 E4                 1961 	clr	a
   04A5 12s00r00           1962 	lcall	__gptrput
                           1963 ;	../projectSpecificHardwareInterface_C8051F040.c:341: charSent[channelNumber]		= false ;
   04A8 EA                 1964 	mov	a,r2
   04A9 24rCB              1965 	add	a,#_charSent
   04AB F5 82              1966 	mov	dpl,a
   04AD E4                 1967 	clr	a
   04AE 34s08              1968 	addc	a,#(_charSent >> 8)
   04B0 F5 83              1969 	mov	dph,a
   04B2 E4                 1970 	clr	a
   04B3 F0                 1971 	movx	@dptr,a
                           1972 ;	../projectSpecificHardwareInterface_C8051F040.c:342: lineReady[channelNumber]	= false ;
   04B4 EA                 1973 	mov	a,r2
   04B5 24rCC              1974 	add	a,#_lineReady
   04B7 F5 82              1975 	mov	dpl,a
   04B9 E4                 1976 	clr	a
   04BA 34s08              1977 	addc	a,#(_lineReady >> 8)
   04BC F5 83              1978 	mov	dph,a
   04BE E4                 1979 	clr	a
   04BF F0                 1980 	movx	@dptr,a
                           1981 ;	../projectSpecificHardwareInterface_C8051F040.c:344: if(!timer1initialized)
   04C0 20*03 20           1982 	jb	_task_UART_init_projectSpecific_timer1initialized_1_1,00102$
                           1983 ;	../projectSpecificHardwareInterface_C8051F040.c:346: timer1initialized = true ;
   04C3 D2*03              1984 	setb	_task_UART_init_projectSpecific_timer1initialized_1_1
                           1985 ;	../projectSpecificHardwareInterface_C8051F040.c:348: portSET_REGISTER_GROUP(TIMER01_PAGE)
   04C5 AA 84              1986 	mov	r2,_SFRPAGE
   04C7 75 84 00           1987 	mov	_SFRPAGE,#0x00
                           1988 ;	../projectSpecificHardwareInterface_C8051F040.c:351: TMOD &= 0x08 ;
   04CA 53 89 08           1989 	anl	_TMOD,#0x08
                           1990 ;	../projectSpecificHardwareInterface_C8051F040.c:352: TMOD |= ser8BIT_WITH_RELOAD ;
   04CD 43 89 20           1991 	orl	_TMOD,#0x20
                           1992 ;	../projectSpecificHardwareInterface_C8051F040.c:353: SSTA0 |= serSMOD ;
   04D0 43 91 10           1993 	orl	_SSTA0,#0x10
                           1994 ;	../projectSpecificHardwareInterface_C8051F040.c:354: CKCON |= 0x10 ;
   04D3 43 8E 10           1995 	orl	_CKCON,#0x10
                           1996 ;	../projectSpecificHardwareInterface_C8051F040.c:357: TL1 = ( unsigned char ) 0xB2 ;	// B8 = 9600 BAUD on unmoded eval boards, B2 = 9615 on 24MHz systems
   04D6 75 8B B2           1997 	mov	_TL1,#0xB2
                           1998 ;	../projectSpecificHardwareInterface_C8051F040.c:358: TH1 = ( unsigned char ) 0xB2 ;
   04D9 75 8D B2           1999 	mov	_TH1,#0xB2
                           2000 ;	../projectSpecificHardwareInterface_C8051F040.c:360: SCON = ser8_BIT_MODE | serRX_ENABLE ;	/* Setup the control register for standard n, 8, 1 - variable baud rate. */
   04DC 75 98 50           2001 	mov	_SCON,#0x50
                           2002 ;	../projectSpecificHardwareInterface_C8051F040.c:362: TR1 = 1 ;							/* Start the timer. */
   04DF D2 8E              2003 	setb	_TR1
                           2004 ;	../projectSpecificHardwareInterface_C8051F040.c:364: portRESTORE_REGISTER_GROUP()
   04E1 8A 84              2005 	mov	_SFRPAGE,r2
   04E3                    2006 00102$:
                           2007 ;	../projectSpecificHardwareInterface_C8051F040.c:367: if(channelNumber == 0)
   04E3 90s08rCD           2008 	mov	dptr,#_task_UART_init_projectSpecific_channelNumber_1_1
   04E6 E0                 2009 	movx	a,@dptr
   04E7 FA                 2010 	mov	r2,a
   04E8 70 03              2011 	jnz	00106$
                           2012 ;	../projectSpecificHardwareInterface_C8051F040.c:369: UART0_Init() ;
   04EA 02s0Ar91           2013 	ljmp	_UART0_Init
   04ED                    2014 00106$:
                           2015 ;	../projectSpecificHardwareInterface_C8051F040.c:371: else if(channelNumber == 1)
   04ED BA 01 03           2016 	cjne	r2,#0x01,00108$
                           2017 ;	../projectSpecificHardwareInterface_C8051F040.c:373: UART1_Init() ;
   04F0 02s0Ar9F           2018 	ljmp	_UART1_Init
   04F3                    2019 00108$:
   04F3 22                 2020 	ret
                           2021 ;------------------------------------------------------------
                           2022 ;Allocation info for local variables in function 'task_UART_core_projectSpecific'
                           2023 ;------------------------------------------------------------
                           2024 ;sloc0                     Allocated with name '_task_UART_core_projectSpecific_sloc0_1_0'
                           2025 ;sloc1                     Allocated with name '_task_UART_core_projectSpecific_sloc1_1_0'
                           2026 ;sloc2                     Allocated with name '_task_UART_core_projectSpecific_sloc2_1_0'
                           2027 ;sloc3                     Allocated with name '_task_UART_core_projectSpecific_sloc3_1_0'
                           2028 ;channelNumber             Allocated with name '_task_UART_core_projectSpecific_channelNumber_1_1'
                           2029 ;SFRPAGE_SAVE              Allocated with name '_task_UART_core_projectSpecific_SFRPAGE_SAVE_3_3'
                           2030 ;Q                         Allocated with name '_task_UART_core_projectSpecific_Q_4_4'
                           2031 ;charReceived              Allocated with name '_task_UART_core_projectSpecific_charReceived_6_6'
                           2032 ;byteToSend                Allocated with name '_task_UART_core_projectSpecific_byteToSend_5_10'
                           2033 ;------------------------------------------------------------
                           2034 ;	../projectSpecificHardwareInterface_C8051F040.c:382: void task_UART_core_projectSpecific(	unsigned char channelNumber)
                           2035 ;	-----------------------------------------
                           2036 ;	 function task_UART_core_projectSpecific
                           2037 ;	-----------------------------------------
   04F4                    2038 _task_UART_core_projectSpecific:
   04F4 E5 82              2039 	mov	a,dpl
   04F6 90s08rCE           2040 	mov	dptr,#_task_UART_core_projectSpecific_channelNumber_1_1
   04F9 F0                 2041 	movx	@dptr,a
                           2042 ;	../projectSpecificHardwareInterface_C8051F040.c:384: if(channelNumber < NUMBER_OF_UARTS)
   04FA 90s08rCE           2043 	mov	dptr,#_task_UART_core_projectSpecific_channelNumber_1_1
   04FD E0                 2044 	movx	a,@dptr
   04FE FA                 2045 	mov	r2,a
   04FF BA 01 00           2046 	cjne	r2,#0x01,00125$
   0502                    2047 00125$:
   0502 40 01              2048 	jc	00126$
   0504 22                 2049 	ret
   0505                    2050 00126$:
                           2051 ;	../projectSpecificHardwareInterface_C8051F040.c:386: portSET_REGISTER_GROUP(UART0_PAGE)
   0505 AB 84              2052 	mov	r3,_SFRPAGE
   0507 75 84 00           2053 	mov	_SFRPAGE,#0x00
                           2054 ;	../projectSpecificHardwareInterface_C8051F040.c:388: QUEUE_TYPE*	Q = &receiveBuffers[channelNumber] ;
   050A EA                 2055 	mov	a,r2
   050B 75 F0 0B           2056 	mov	b,#0x0B
   050E A4                 2057 	mul	ab
   050F 24rC0              2058 	add	a,#_receiveBuffers
   0511 FC                 2059 	mov	r4,a
   0512 E4                 2060 	clr	a
   0513 34s08              2061 	addc	a,#(_receiveBuffers >> 8)
   0515 FD                 2062 	mov	r5,a
   0516 7E 00              2063 	mov	r6,#0x00
   0518 90s08rCF           2064 	mov	dptr,#_task_UART_core_projectSpecific_Q_4_4
   051B EC                 2065 	mov	a,r4
   051C F0                 2066 	movx	@dptr,a
   051D A3                 2067 	inc	dptr
   051E ED                 2068 	mov	a,r5
   051F F0                 2069 	movx	@dptr,a
   0520 A3                 2070 	inc	dptr
   0521 EE                 2071 	mov	a,r6
   0522 F0                 2072 	movx	@dptr,a
                           2073 ;	../projectSpecificHardwareInterface_C8051F040.c:390: if(RI0)
   0523 20 98 03           2074 	jb	_RI0,00127$
   0526 02s06r39           2075 	ljmp	00106$
   0529                    2076 00127$:
                           2077 ;	../projectSpecificHardwareInterface_C8051F040.c:392: if(!IsFull(Q))
   0529 8C 82              2078 	mov	dpl,r4
   052B 8D 83              2079 	mov	dph,r5
   052D 8E F0              2080 	mov	b,r6
   052F C0 02              2081 	push	ar2
   0531 C0 03              2082 	push	ar3
   0533 12s02rF2           2083 	lcall	_IsFull
   0536 E5 82              2084 	mov	a,dpl
   0538 D0 03              2085 	pop	ar3
   053A D0 02              2086 	pop	ar2
   053C 60 03              2087 	jz	00128$
   053E 02s06r37           2088 	ljmp	00104$
   0541                    2089 00128$:
                           2090 ;	../projectSpecificHardwareInterface_C8051F040.c:394: char	charReceived = SBUF0 ;
   0541 C0 03              2091 	push	ar3
   0543 85 99*00           2092 	mov	_task_UART_core_projectSpecific_sloc0_1_0,_SBUF0
                           2093 ;	../projectSpecificHardwareInterface_C8051F040.c:396: Q->Size++ ;
   0546 90s08rCF           2094 	mov	dptr,#_task_UART_core_projectSpecific_Q_4_4
   0549 E0                 2095 	movx	a,@dptr
   054A FD                 2096 	mov	r5,a
   054B A3                 2097 	inc	dptr
   054C E0                 2098 	movx	a,@dptr
   054D FE                 2099 	mov	r6,a
   054E A3                 2100 	inc	dptr
   054F E0                 2101 	movx	a,@dptr
   0550 FF                 2102 	mov	r7,a
   0551 74 06              2103 	mov	a,#0x06
   0553 2D                 2104 	add	a,r5
   0554 F5*01              2105 	mov	_task_UART_core_projectSpecific_sloc1_1_0,a
   0556 E4                 2106 	clr	a
   0557 3E                 2107 	addc	a,r6
   0558 F5*02              2108 	mov	(_task_UART_core_projectSpecific_sloc1_1_0 + 1),a
   055A 8F*03              2109 	mov	(_task_UART_core_projectSpecific_sloc1_1_0 + 2),r7
   055C 85*01 82           2110 	mov	dpl,_task_UART_core_projectSpecific_sloc1_1_0
   055F 85*02 83           2111 	mov	dph,(_task_UART_core_projectSpecific_sloc1_1_0 + 1)
   0562 85*03 F0           2112 	mov	b,(_task_UART_core_projectSpecific_sloc1_1_0 + 2)
   0565 12s00r00           2113 	lcall	__gptrget
   0568 FC                 2114 	mov	r4,a
   0569 A3                 2115 	inc	dptr
   056A 12s00r00           2116 	lcall	__gptrget
   056D FB                 2117 	mov	r3,a
   056E 0C                 2118 	inc	r4
   056F BC 00 01           2119 	cjne	r4,#0x00,00129$
   0572 0B                 2120 	inc	r3
   0573                    2121 00129$:
   0573 85*01 82           2122 	mov	dpl,_task_UART_core_projectSpecific_sloc1_1_0
   0576 85*02 83           2123 	mov	dph,(_task_UART_core_projectSpecific_sloc1_1_0 + 1)
   0579 85*03 F0           2124 	mov	b,(_task_UART_core_projectSpecific_sloc1_1_0 + 2)
   057C EC                 2125 	mov	a,r4
   057D 12s00r00           2126 	lcall	__gptrput
   0580 A3                 2127 	inc	dptr
   0581 EB                 2128 	mov	a,r3
   0582 12s00r00           2129 	lcall	__gptrput
                           2130 ;	../projectSpecificHardwareInterface_C8051F040.c:397: Q->Rear = Succ(Q->Rear, Q) ;
   0585 74 04              2131 	mov	a,#0x04
   0587 2D                 2132 	add	a,r5
   0588 F5*01              2133 	mov	_task_UART_core_projectSpecific_sloc1_1_0,a
   058A E4                 2134 	clr	a
   058B 3E                 2135 	addc	a,r6
   058C F5*02              2136 	mov	(_task_UART_core_projectSpecific_sloc1_1_0 + 1),a
   058E 8F*03              2137 	mov	(_task_UART_core_projectSpecific_sloc1_1_0 + 2),r7
   0590 85*01 82           2138 	mov	dpl,_task_UART_core_projectSpecific_sloc1_1_0
   0593 85*02 83           2139 	mov	dph,(_task_UART_core_projectSpecific_sloc1_1_0 + 1)
   0596 85*03 F0           2140 	mov	b,(_task_UART_core_projectSpecific_sloc1_1_0 + 2)
   0599 12s00r00           2141 	lcall	__gptrget
   059C F9                 2142 	mov	r1,a
   059D A3                 2143 	inc	dptr
   059E 12s00r00           2144 	lcall	__gptrget
   05A1 FB                 2145 	mov	r3,a
   05A2 90s04r58           2146 	mov	dptr,#_Succ_PARM_2
   05A5 ED                 2147 	mov	a,r5
   05A6 F0                 2148 	movx	@dptr,a
   05A7 A3                 2149 	inc	dptr
   05A8 EE                 2150 	mov	a,r6
   05A9 F0                 2151 	movx	@dptr,a
   05AA A3                 2152 	inc	dptr
   05AB EF                 2153 	mov	a,r7
   05AC F0                 2154 	movx	@dptr,a
   05AD 89 82              2155 	mov	dpl,r1
   05AF 8B 83              2156 	mov	dph,r3
   05B1 C0 02              2157 	push	ar2
   05B3 12s03r44           2158 	lcall	_Succ
   05B6 AB 82              2159 	mov	r3,dpl
   05B8 AC 83              2160 	mov	r4,dph
   05BA D0 02              2161 	pop	ar2
   05BC 85*01 82           2162 	mov	dpl,_task_UART_core_projectSpecific_sloc1_1_0
   05BF 85*02 83           2163 	mov	dph,(_task_UART_core_projectSpecific_sloc1_1_0 + 1)
   05C2 85*03 F0           2164 	mov	b,(_task_UART_core_projectSpecific_sloc1_1_0 + 2)
   05C5 EB                 2165 	mov	a,r3
   05C6 12s00r00           2166 	lcall	__gptrput
   05C9 A3                 2167 	inc	dptr
   05CA EC                 2168 	mov	a,r4
   05CB 12s00r00           2169 	lcall	__gptrput
                           2170 ;	../projectSpecificHardwareInterface_C8051F040.c:398: Q->Array[Q->Rear] = charReceived ;
   05CE 90s08rCF           2171 	mov	dptr,#_task_UART_core_projectSpecific_Q_4_4
   05D1 E0                 2172 	movx	a,@dptr
   05D2 FB                 2173 	mov	r3,a
   05D3 A3                 2174 	inc	dptr
   05D4 E0                 2175 	movx	a,@dptr
   05D5 FC                 2176 	mov	r4,a
   05D6 A3                 2177 	inc	dptr
   05D7 E0                 2178 	movx	a,@dptr
   05D8 FD                 2179 	mov	r5,a
   05D9 74 08              2180 	mov	a,#0x08
   05DB 2B                 2181 	add	a,r3
   05DC FE                 2182 	mov	r6,a
   05DD E4                 2183 	clr	a
   05DE 3C                 2184 	addc	a,r4
   05DF FF                 2185 	mov	r7,a
   05E0 8D 00              2186 	mov	ar0,r5
   05E2 8E 82              2187 	mov	dpl,r6
   05E4 8F 83              2188 	mov	dph,r7
   05E6 88 F0              2189 	mov	b,r0
   05E8 12s00r00           2190 	lcall	__gptrget
   05EB FE                 2191 	mov	r6,a
   05EC A3                 2192 	inc	dptr
   05ED 12s00r00           2193 	lcall	__gptrget
   05F0 FF                 2194 	mov	r7,a
   05F1 A3                 2195 	inc	dptr
   05F2 12s00r00           2196 	lcall	__gptrget
   05F5 F8                 2197 	mov	r0,a
   05F6 74 04              2198 	mov	a,#0x04
   05F8 2B                 2199 	add	a,r3
   05F9 FB                 2200 	mov	r3,a
   05FA E4                 2201 	clr	a
   05FB 3C                 2202 	addc	a,r4
   05FC FC                 2203 	mov	r4,a
   05FD 8B 82              2204 	mov	dpl,r3
   05FF 8C 83              2205 	mov	dph,r4
   0601 8D F0              2206 	mov	b,r5
   0603 12s00r00           2207 	lcall	__gptrget
   0606 FB                 2208 	mov	r3,a
   0607 A3                 2209 	inc	dptr
   0608 12s00r00           2210 	lcall	__gptrget
   060B FC                 2211 	mov	r4,a
   060C EB                 2212 	mov	a,r3
   060D 2E                 2213 	add	a,r6
   060E FE                 2214 	mov	r6,a
   060F EC                 2215 	mov	a,r4
   0610 3F                 2216 	addc	a,r7
   0611 FF                 2217 	mov	r7,a
   0612 8E 82              2218 	mov	dpl,r6
   0614 8F 83              2219 	mov	dph,r7
   0616 88 F0              2220 	mov	b,r0
   0618 E5*00              2221 	mov	a,_task_UART_core_projectSpecific_sloc0_1_0
   061A 12s00r00           2222 	lcall	__gptrput
                           2223 ;	../projectSpecificHardwareInterface_C8051F040.c:400: if(charReceived == '\n')
   061D 74 0A              2224 	mov	a,#0x0A
   061F B5*00 02           2225 	cjne	a,_task_UART_core_projectSpecific_sloc0_1_0,00130$
   0622 80 04              2226 	sjmp	00131$
   0624                    2227 00130$:
   0624 D0 03              2228 	pop	ar3
   0626 80 0F              2229 	sjmp	00104$
   0628                    2230 00131$:
   0628 D0 03              2231 	pop	ar3
                           2232 ;	../projectSpecificHardwareInterface_C8051F040.c:402: lineReady[channelNumber] = true ;
   062A EA                 2233 	mov	a,r2
   062B 24rCC              2234 	add	a,#_lineReady
   062D F5 82              2235 	mov	dpl,a
   062F E4                 2236 	clr	a
   0630 34s08              2237 	addc	a,#(_lineReady >> 8)
   0632 F5 83              2238 	mov	dph,a
   0634 74 01              2239 	mov	a,#0x01
   0636 F0                 2240 	movx	@dptr,a
   0637                    2241 00104$:
                           2242 ;	../projectSpecificHardwareInterface_C8051F040.c:406: RI0 = 0 ;
   0637 C2 98              2243 	clr	_RI0
   0639                    2244 00106$:
                           2245 ;	../projectSpecificHardwareInterface_C8051F040.c:409: Q = &transmitBuffers[channelNumber] ;
   0639 90s08rCE           2246 	mov	dptr,#_task_UART_core_projectSpecific_channelNumber_1_1
   063C E0                 2247 	movx	a,@dptr
   063D FA                 2248 	mov	r2,a
   063E 75 F0 0B           2249 	mov	b,#0x0B
   0641 A4                 2250 	mul	ab
   0642 24rB5              2251 	add	a,#_transmitBuffers
   0644 FC                 2252 	mov	r4,a
   0645 E4                 2253 	clr	a
   0646 34s08              2254 	addc	a,#(_transmitBuffers >> 8)
   0648 FD                 2255 	mov	r5,a
   0649 7E 00              2256 	mov	r6,#0x00
   064B 90s08rCF           2257 	mov	dptr,#_task_UART_core_projectSpecific_Q_4_4
   064E EC                 2258 	mov	a,r4
   064F F0                 2259 	movx	@dptr,a
   0650 A3                 2260 	inc	dptr
   0651 ED                 2261 	mov	a,r5
   0652 F0                 2262 	movx	@dptr,a
   0653 A3                 2263 	inc	dptr
   0654 EE                 2264 	mov	a,r6
   0655 F0                 2265 	movx	@dptr,a
                           2266 ;	../projectSpecificHardwareInterface_C8051F040.c:411: if(charSent[channelNumber] == true)
   0656 EA                 2267 	mov	a,r2
   0657 24rCB              2268 	add	a,#_charSent
   0659 FA                 2269 	mov	r2,a
   065A E4                 2270 	clr	a
   065B 34s08              2271 	addc	a,#(_charSent >> 8)
   065D FF                 2272 	mov	r7,a
   065E 8A 82              2273 	mov	dpl,r2
   0660 8F 83              2274 	mov	dph,r7
   0662 E0                 2275 	movx	a,@dptr
   0663 F8                 2276 	mov	r0,a
   0664 B8 01 09           2277 	cjne	r0,#0x01,00111$
                           2278 ;	../projectSpecificHardwareInterface_C8051F040.c:413: charSent[channelNumber] = false ;
   0667 8A 82              2279 	mov	dpl,r2
   0669 8F 83              2280 	mov	dph,r7
   066B E4                 2281 	clr	a
   066C F0                 2282 	movx	@dptr,a
                           2283 ;	../projectSpecificHardwareInterface_C8051F040.c:417: while(TI0 == 0) { /* empty loop */} ;
   066D                    2284 00107$:
   066D 30 99 FD           2285 	jnb	_TI0,00107$
   0670                    2286 00111$:
                           2287 ;	../projectSpecificHardwareInterface_C8051F040.c:420: if(!IsEmpty(Q))
   0670 8C 82              2288 	mov	dpl,r4
   0672 8D 83              2289 	mov	dph,r5
   0674 8E F0              2290 	mov	b,r6
   0676 C0 03              2291 	push	ar3
   0678 12s02rB6           2292 	lcall	_IsEmpty
   067B E5 82              2293 	mov	a,dpl
   067D D0 03              2294 	pop	ar3
   067F 60 03              2295 	jz	00135$
   0681 02s07r55           2296 	ljmp	00113$
   0684                    2297 00135$:
                           2298 ;	../projectSpecificHardwareInterface_C8051F040.c:422: unsigned char byteToSend = Q->Array[Q->Front] ;
   0684 C0 03              2299 	push	ar3
   0686 90s08rCF           2300 	mov	dptr,#_task_UART_core_projectSpecific_Q_4_4
   0689 E0                 2301 	movx	a,@dptr
   068A FA                 2302 	mov	r2,a
   068B A3                 2303 	inc	dptr
   068C E0                 2304 	movx	a,@dptr
   068D FC                 2305 	mov	r4,a
   068E A3                 2306 	inc	dptr
   068F E0                 2307 	movx	a,@dptr
   0690 FD                 2308 	mov	r5,a
   0691 74 08              2309 	mov	a,#0x08
   0693 2A                 2310 	add	a,r2
   0694 FE                 2311 	mov	r6,a
   0695 E4                 2312 	clr	a
   0696 3C                 2313 	addc	a,r4
   0697 FF                 2314 	mov	r7,a
   0698 8D 00              2315 	mov	ar0,r5
   069A 8E 82              2316 	mov	dpl,r6
   069C 8F 83              2317 	mov	dph,r7
   069E 88 F0              2318 	mov	b,r0
   06A0 12s00r00           2319 	lcall	__gptrget
   06A3 F5*01              2320 	mov	_task_UART_core_projectSpecific_sloc1_1_0,a
   06A5 A3                 2321 	inc	dptr
   06A6 12s00r00           2322 	lcall	__gptrget
   06A9 F5*02              2323 	mov	(_task_UART_core_projectSpecific_sloc1_1_0 + 1),a
   06AB A3                 2324 	inc	dptr
   06AC 12s00r00           2325 	lcall	__gptrget
   06AF F5*03              2326 	mov	(_task_UART_core_projectSpecific_sloc1_1_0 + 2),a
   06B1 74 02              2327 	mov	a,#0x02
   06B3 2A                 2328 	add	a,r2
   06B4 F5*06              2329 	mov	_task_UART_core_projectSpecific_sloc3_1_0,a
   06B6 E4                 2330 	clr	a
   06B7 3C                 2331 	addc	a,r4
   06B8 F5*07              2332 	mov	(_task_UART_core_projectSpecific_sloc3_1_0 + 1),a
   06BA 8D*08              2333 	mov	(_task_UART_core_projectSpecific_sloc3_1_0 + 2),r5
   06BC 85*06 82           2334 	mov	dpl,_task_UART_core_projectSpecific_sloc3_1_0
   06BF 85*07 83           2335 	mov	dph,(_task_UART_core_projectSpecific_sloc3_1_0 + 1)
   06C2 85*08 F0           2336 	mov	b,(_task_UART_core_projectSpecific_sloc3_1_0 + 2)
   06C5 12s00r00           2337 	lcall	__gptrget
   06C8 F5*04              2338 	mov	_task_UART_core_projectSpecific_sloc2_1_0,a
   06CA A3                 2339 	inc	dptr
   06CB 12s00r00           2340 	lcall	__gptrget
   06CE F5*05              2341 	mov	(_task_UART_core_projectSpecific_sloc2_1_0 + 1),a
   06D0 E5*04              2342 	mov	a,_task_UART_core_projectSpecific_sloc2_1_0
   06D2 25*01              2343 	add	a,_task_UART_core_projectSpecific_sloc1_1_0
   06D4 FF                 2344 	mov	r7,a
   06D5 E5*05              2345 	mov	a,(_task_UART_core_projectSpecific_sloc2_1_0 + 1)
   06D7 35*02              2346 	addc	a,(_task_UART_core_projectSpecific_sloc1_1_0 + 1)
   06D9 F8                 2347 	mov	r0,a
   06DA AB*03              2348 	mov	r3,(_task_UART_core_projectSpecific_sloc1_1_0 + 2)
   06DC 8F 82              2349 	mov	dpl,r7
   06DE 88 83              2350 	mov	dph,r0
   06E0 8B F0              2351 	mov	b,r3
   06E2 12s00r00           2352 	lcall	__gptrget
   06E5 F5*01              2353 	mov	_task_UART_core_projectSpecific_sloc1_1_0,a
                           2354 ;	../projectSpecificHardwareInterface_C8051F040.c:424: Q->Size-- ;
   06E7 74 06              2355 	mov	a,#0x06
   06E9 2A                 2356 	add	a,r2
   06EA FB                 2357 	mov	r3,a
   06EB E4                 2358 	clr	a
   06EC 3C                 2359 	addc	a,r4
   06ED FE                 2360 	mov	r6,a
   06EE 8D 00              2361 	mov	ar0,r5
   06F0 8B 82              2362 	mov	dpl,r3
   06F2 8E 83              2363 	mov	dph,r6
   06F4 88 F0              2364 	mov	b,r0
   06F6 12s00r00           2365 	lcall	__gptrget
   06F9 F9                 2366 	mov	r1,a
   06FA A3                 2367 	inc	dptr
   06FB 12s00r00           2368 	lcall	__gptrget
   06FE FF                 2369 	mov	r7,a
   06FF 19                 2370 	dec	r1
   0700 B9 FF 01           2371 	cjne	r1,#0xff,00136$
   0703 1F                 2372 	dec	r7
   0704                    2373 00136$:
   0704 8B 82              2374 	mov	dpl,r3
   0706 8E 83              2375 	mov	dph,r6
   0708 88 F0              2376 	mov	b,r0
   070A E9                 2377 	mov	a,r1
   070B 12s00r00           2378 	lcall	__gptrput
   070E A3                 2379 	inc	dptr
   070F EF                 2380 	mov	a,r7
   0710 12s00r00           2381 	lcall	__gptrput
                           2382 ;	../projectSpecificHardwareInterface_C8051F040.c:425: Q->Front = Succ(Q->Front, Q) ;
   0713 90s04r58           2383 	mov	dptr,#_Succ_PARM_2
   0716 EA                 2384 	mov	a,r2
   0717 F0                 2385 	movx	@dptr,a
   0718 A3                 2386 	inc	dptr
   0719 EC                 2387 	mov	a,r4
   071A F0                 2388 	movx	@dptr,a
   071B A3                 2389 	inc	dptr
   071C ED                 2390 	mov	a,r5
   071D F0                 2391 	movx	@dptr,a
   071E 85*04 82           2392 	mov	dpl,_task_UART_core_projectSpecific_sloc2_1_0
   0721 85*05 83           2393 	mov	dph,(_task_UART_core_projectSpecific_sloc2_1_0 + 1)
   0724 12s03r44           2394 	lcall	_Succ
   0727 AA 82              2395 	mov	r2,dpl
   0729 AB 83              2396 	mov	r3,dph
   072B 85*06 82           2397 	mov	dpl,_task_UART_core_projectSpecific_sloc3_1_0
   072E 85*07 83           2398 	mov	dph,(_task_UART_core_projectSpecific_sloc3_1_0 + 1)
   0731 85*08 F0           2399 	mov	b,(_task_UART_core_projectSpecific_sloc3_1_0 + 2)
   0734 EA                 2400 	mov	a,r2
   0735 12s00r00           2401 	lcall	__gptrput
   0738 A3                 2402 	inc	dptr
   0739 EB                 2403 	mov	a,r3
   073A 12s00r00           2404 	lcall	__gptrput
                           2405 ;	../projectSpecificHardwareInterface_C8051F040.c:427: TI0 = 0 ;	// clear it and send the next character
   073D C2 99              2406 	clr	_TI0
                           2407 ;	../projectSpecificHardwareInterface_C8051F040.c:429: SBUF0 = byteToSend ;
   073F 85*01 99           2408 	mov	_SBUF0,_task_UART_core_projectSpecific_sloc1_1_0
                           2409 ;	../projectSpecificHardwareInterface_C8051F040.c:431: charSent[channelNumber] = true ;
   0742 90s08rCE           2410 	mov	dptr,#_task_UART_core_projectSpecific_channelNumber_1_1
   0745 E0                 2411 	movx	a,@dptr
   0746 FA                 2412 	mov	r2,a
   0747 24rCB              2413 	add	a,#_charSent
   0749 F5 82              2414 	mov	dpl,a
   074B E4                 2415 	clr	a
   074C 34s08              2416 	addc	a,#(_charSent >> 8)
   074E F5 83              2417 	mov	dph,a
   0750 74 01              2418 	mov	a,#0x01
   0752 F0                 2419 	movx	@dptr,a
                           2420 ;	../projectSpecificHardwareInterface_C8051F040.c:434: portRESTORE_REGISTER_GROUP()
   0753 D0 03              2421 	pop	ar3
                           2422 ;	../projectSpecificHardwareInterface_C8051F040.c:431: charSent[channelNumber] = true ;
   0755                    2423 00113$:
                           2424 ;	../projectSpecificHardwareInterface_C8051F040.c:434: portRESTORE_REGISTER_GROUP()
   0755 8B 84              2425 	mov	_SFRPAGE,r3
   0757 22                 2426 	ret
                           2427 ;------------------------------------------------------------
                           2428 ;Allocation info for local variables in function 'task_UART_putchar_projectSpecific'
                           2429 ;------------------------------------------------------------
                           2430 ;charToSend                Allocated with name '_task_UART_putchar_projectSpecific_PARM_2'
                           2431 ;channelNumber             Allocated with name '_task_UART_putchar_projectSpecific_channelNumber_1_1'
                           2432 ;Q                         Allocated with name '_task_UART_putchar_projectSpecific_Q_2_2'
                           2433 ;------------------------------------------------------------
                           2434 ;	../projectSpecificHardwareInterface_C8051F040.c:439: bool task_UART_putchar_projectSpecific(	unsigned char channelNumber, char charToSend)
                           2435 ;	-----------------------------------------
                           2436 ;	 function task_UART_putchar_projectSpecific
                           2437 ;	-----------------------------------------
   0758                    2438 _task_UART_putchar_projectSpecific:
   0758 E5 82              2439 	mov	a,dpl
   075A 90s08rD3           2440 	mov	dptr,#_task_UART_putchar_projectSpecific_channelNumber_1_1
   075D F0                 2441 	movx	@dptr,a
                           2442 ;	../projectSpecificHardwareInterface_C8051F040.c:441: task_UART_core(0) ;
   075E 75 82 00           2443 	mov	dpl,#0x00
   0761 12s00r00           2444 	lcall	_task_UART_core
                           2445 ;	../projectSpecificHardwareInterface_C8051F040.c:443: portDISABLE_INTERRUPTS() ;
   0764 C2 AF              2446 	clr	_EA
                           2447 ;	../projectSpecificHardwareInterface_C8051F040.c:445: if(channelNumber < NUMBER_OF_UARTS)
   0766 90s08rD3           2448 	mov	dptr,#_task_UART_putchar_projectSpecific_channelNumber_1_1
   0769 E0                 2449 	movx	a,@dptr
   076A FA                 2450 	mov	r2,a
   076B BA 01 00           2451 	cjne	r2,#0x01,00109$
   076E                    2452 00109$:
   076E 40 03              2453 	jc	00110$
   0770 02s08r71           2454 	ljmp	00104$
   0773                    2455 00110$:
                           2456 ;	../projectSpecificHardwareInterface_C8051F040.c:447: QUEUE_TYPE*	Q = &transmitBuffers[channelNumber] ;
   0773 EA                 2457 	mov	a,r2
   0774 75 F0 0B           2458 	mov	b,#0x0B
   0777 A4                 2459 	mul	ab
   0778 24rB5              2460 	add	a,#_transmitBuffers
   077A FA                 2461 	mov	r2,a
   077B E4                 2462 	clr	a
   077C 34s08              2463 	addc	a,#(_transmitBuffers >> 8)
   077E FB                 2464 	mov	r3,a
   077F 7C 00              2465 	mov	r4,#0x00
   0781 90s08rD4           2466 	mov	dptr,#_task_UART_putchar_projectSpecific_Q_2_2
   0784 EA                 2467 	mov	a,r2
   0785 F0                 2468 	movx	@dptr,a
   0786 A3                 2469 	inc	dptr
   0787 EB                 2470 	mov	a,r3
   0788 F0                 2471 	movx	@dptr,a
   0789 A3                 2472 	inc	dptr
   078A EC                 2473 	mov	a,r4
   078B F0                 2474 	movx	@dptr,a
                           2475 ;	../projectSpecificHardwareInterface_C8051F040.c:449: if(!IsFull(Q))
   078C 8A 82              2476 	mov	dpl,r2
   078E 8B 83              2477 	mov	dph,r3
   0790 8C F0              2478 	mov	b,r4
   0792 12s02rF2           2479 	lcall	_IsFull
   0795 E5 82              2480 	mov	a,dpl
   0797 60 03              2481 	jz	00111$
   0799 02s08r71           2482 	ljmp	00104$
   079C                    2483 00111$:
                           2484 ;	../projectSpecificHardwareInterface_C8051F040.c:451: Q->Size++ ;
   079C 90s08rD4           2485 	mov	dptr,#_task_UART_putchar_projectSpecific_Q_2_2
   079F E0                 2486 	movx	a,@dptr
   07A0 FA                 2487 	mov	r2,a
   07A1 A3                 2488 	inc	dptr
   07A2 E0                 2489 	movx	a,@dptr
   07A3 FB                 2490 	mov	r3,a
   07A4 A3                 2491 	inc	dptr
   07A5 E0                 2492 	movx	a,@dptr
   07A6 FC                 2493 	mov	r4,a
   07A7 74 06              2494 	mov	a,#0x06
   07A9 2A                 2495 	add	a,r2
   07AA FD                 2496 	mov	r5,a
   07AB E4                 2497 	clr	a
   07AC 3B                 2498 	addc	a,r3
   07AD FE                 2499 	mov	r6,a
   07AE 8C 07              2500 	mov	ar7,r4
   07B0 8D 82              2501 	mov	dpl,r5
   07B2 8E 83              2502 	mov	dph,r6
   07B4 8F F0              2503 	mov	b,r7
   07B6 12s00r00           2504 	lcall	__gptrget
   07B9 F8                 2505 	mov	r0,a
   07BA A3                 2506 	inc	dptr
   07BB 12s00r00           2507 	lcall	__gptrget
   07BE F9                 2508 	mov	r1,a
   07BF 08                 2509 	inc	r0
   07C0 B8 00 01           2510 	cjne	r0,#0x00,00112$
   07C3 09                 2511 	inc	r1
   07C4                    2512 00112$:
   07C4 8D 82              2513 	mov	dpl,r5
   07C6 8E 83              2514 	mov	dph,r6
   07C8 8F F0              2515 	mov	b,r7
   07CA E8                 2516 	mov	a,r0
   07CB 12s00r00           2517 	lcall	__gptrput
   07CE A3                 2518 	inc	dptr
   07CF E9                 2519 	mov	a,r1
   07D0 12s00r00           2520 	lcall	__gptrput
                           2521 ;	../projectSpecificHardwareInterface_C8051F040.c:452: Q->Rear = Succ(Q->Rear, Q) ;
   07D3 74 04              2522 	mov	a,#0x04
   07D5 2A                 2523 	add	a,r2
   07D6 FD                 2524 	mov	r5,a
   07D7 E4                 2525 	clr	a
   07D8 3B                 2526 	addc	a,r3
   07D9 FE                 2527 	mov	r6,a
   07DA 8C 07              2528 	mov	ar7,r4
   07DC 8D 82              2529 	mov	dpl,r5
   07DE 8E 83              2530 	mov	dph,r6
   07E0 8F F0              2531 	mov	b,r7
   07E2 12s00r00           2532 	lcall	__gptrget
   07E5 F8                 2533 	mov	r0,a
   07E6 A3                 2534 	inc	dptr
   07E7 12s00r00           2535 	lcall	__gptrget
   07EA F9                 2536 	mov	r1,a
   07EB 90s04r58           2537 	mov	dptr,#_Succ_PARM_2
   07EE EA                 2538 	mov	a,r2
   07EF F0                 2539 	movx	@dptr,a
   07F0 A3                 2540 	inc	dptr
   07F1 EB                 2541 	mov	a,r3
   07F2 F0                 2542 	movx	@dptr,a
   07F3 A3                 2543 	inc	dptr
   07F4 EC                 2544 	mov	a,r4
   07F5 F0                 2545 	movx	@dptr,a
   07F6 88 82              2546 	mov	dpl,r0
   07F8 89 83              2547 	mov	dph,r1
   07FA C0 05              2548 	push	ar5
   07FC C0 06              2549 	push	ar6
   07FE C0 07              2550 	push	ar7
   0800 12s03r44           2551 	lcall	_Succ
   0803 AA 82              2552 	mov	r2,dpl
   0805 AB 83              2553 	mov	r3,dph
   0807 D0 07              2554 	pop	ar7
   0809 D0 06              2555 	pop	ar6
   080B D0 05              2556 	pop	ar5
   080D 8D 82              2557 	mov	dpl,r5
   080F 8E 83              2558 	mov	dph,r6
   0811 8F F0              2559 	mov	b,r7
   0813 EA                 2560 	mov	a,r2
   0814 12s00r00           2561 	lcall	__gptrput
   0817 A3                 2562 	inc	dptr
   0818 EB                 2563 	mov	a,r3
   0819 12s00r00           2564 	lcall	__gptrput
                           2565 ;	../projectSpecificHardwareInterface_C8051F040.c:453: Q->Array[Q->Rear] = charToSend ;
   081C 90s08rD4           2566 	mov	dptr,#_task_UART_putchar_projectSpecific_Q_2_2
   081F E0                 2567 	movx	a,@dptr
   0820 FA                 2568 	mov	r2,a
   0821 A3                 2569 	inc	dptr
   0822 E0                 2570 	movx	a,@dptr
   0823 FB                 2571 	mov	r3,a
   0824 A3                 2572 	inc	dptr
   0825 E0                 2573 	movx	a,@dptr
   0826 FC                 2574 	mov	r4,a
   0827 74 08              2575 	mov	a,#0x08
   0829 2A                 2576 	add	a,r2
   082A FD                 2577 	mov	r5,a
   082B E4                 2578 	clr	a
   082C 3B                 2579 	addc	a,r3
   082D FE                 2580 	mov	r6,a
   082E 8C 07              2581 	mov	ar7,r4
   0830 8D 82              2582 	mov	dpl,r5
   0832 8E 83              2583 	mov	dph,r6
   0834 8F F0              2584 	mov	b,r7
   0836 12s00r00           2585 	lcall	__gptrget
   0839 FD                 2586 	mov	r5,a
   083A A3                 2587 	inc	dptr
   083B 12s00r00           2588 	lcall	__gptrget
   083E FE                 2589 	mov	r6,a
   083F A3                 2590 	inc	dptr
   0840 12s00r00           2591 	lcall	__gptrget
   0843 FF                 2592 	mov	r7,a
   0844 74 04              2593 	mov	a,#0x04
   0846 2A                 2594 	add	a,r2
   0847 FA                 2595 	mov	r2,a
   0848 E4                 2596 	clr	a
   0849 3B                 2597 	addc	a,r3
   084A FB                 2598 	mov	r3,a
   084B 8A 82              2599 	mov	dpl,r2
   084D 8B 83              2600 	mov	dph,r3
   084F 8C F0              2601 	mov	b,r4
   0851 12s00r00           2602 	lcall	__gptrget
   0854 FA                 2603 	mov	r2,a
   0855 A3                 2604 	inc	dptr
   0856 12s00r00           2605 	lcall	__gptrget
   0859 FB                 2606 	mov	r3,a
   085A EA                 2607 	mov	a,r2
   085B 2D                 2608 	add	a,r5
   085C FD                 2609 	mov	r5,a
   085D EB                 2610 	mov	a,r3
   085E 3E                 2611 	addc	a,r6
   085F FE                 2612 	mov	r6,a
   0860 90s08rD2           2613 	mov	dptr,#_task_UART_putchar_projectSpecific_PARM_2
   0863 E0                 2614 	movx	a,@dptr
   0864 8D 82              2615 	mov	dpl,r5
   0866 8E 83              2616 	mov	dph,r6
   0868 8F F0              2617 	mov	b,r7
   086A 12s00r00           2618 	lcall	__gptrput
                           2619 ;	../projectSpecificHardwareInterface_C8051F040.c:455: portENABLE_INTERRUPTS() ;
   086D D2 AF              2620 	setb	_EA
                           2621 ;	../projectSpecificHardwareInterface_C8051F040.c:457: return true ;
   086F D3                 2622 	setb	c
   0870 22                 2623 	ret
   0871                    2624 00104$:
                           2625 ;	../projectSpecificHardwareInterface_C8051F040.c:461: portENABLE_INTERRUPTS() ;
   0871 D2 AF              2626 	setb	_EA
                           2627 ;	../projectSpecificHardwareInterface_C8051F040.c:465: return false ;
   0873 C3                 2628 	clr	c
   0874 22                 2629 	ret
                           2630 ;------------------------------------------------------------
                           2631 ;Allocation info for local variables in function 'task_UART_puts_projectSpecific'
                           2632 ;------------------------------------------------------------
                           2633 ;buffer                    Allocated with name '_task_UART_puts_projectSpecific_PARM_2'
                           2634 ;channelNumber             Allocated with name '_task_UART_puts_projectSpecific_channelNumber_1_1'
                           2635 ;myBuffer                  Allocated with name '_task_UART_puts_projectSpecific_myBuffer_2_2'
                           2636 ;------------------------------------------------------------
                           2637 ;	../projectSpecificHardwareInterface_C8051F040.c:469: void task_UART_puts_projectSpecific(	unsigned char channelNumber, const char *buffer)
                           2638 ;	-----------------------------------------
                           2639 ;	 function task_UART_puts_projectSpecific
                           2640 ;	-----------------------------------------
   0875                    2641 _task_UART_puts_projectSpecific:
   0875 E5 82              2642 	mov	a,dpl
   0877 90s08rDA           2643 	mov	dptr,#_task_UART_puts_projectSpecific_channelNumber_1_1
   087A F0                 2644 	movx	@dptr,a
                           2645 ;	../projectSpecificHardwareInterface_C8051F040.c:471: if(channelNumber < NUMBER_OF_UARTS)
   087B 90s08rDA           2646 	mov	dptr,#_task_UART_puts_projectSpecific_channelNumber_1_1
   087E E0                 2647 	movx	a,@dptr
   087F FA                 2648 	mov	r2,a
   0880 BA 01 00           2649 	cjne	r2,#0x01,00119$
   0883                    2650 00119$:
   0883 50 6C              2651 	jnc	00112$
                           2652 ;	../projectSpecificHardwareInterface_C8051F040.c:473: unsigned char* myBuffer = buffer ;
   0885 90s08rD7           2653 	mov	dptr,#_task_UART_puts_projectSpecific_PARM_2
   0888 E0                 2654 	movx	a,@dptr
   0889 FB                 2655 	mov	r3,a
   088A A3                 2656 	inc	dptr
   088B E0                 2657 	movx	a,@dptr
   088C FC                 2658 	mov	r4,a
   088D A3                 2659 	inc	dptr
   088E E0                 2660 	movx	a,@dptr
   088F FD                 2661 	mov	r5,a
                           2662 ;	../projectSpecificHardwareInterface_C8051F040.c:475: while(*myBuffer)
   0890 8A 06              2663 	mov	ar6,r2
   0892                    2664 00107$:
   0892 8B 82              2665 	mov	dpl,r3
   0894 8C 83              2666 	mov	dph,r4
   0896 8D F0              2667 	mov	b,r5
   0898 12s00r00           2668 	lcall	__gptrget
   089B FF                 2669 	mov	r7,a
   089C 60 53              2670 	jz	00112$
                           2671 ;	../projectSpecificHardwareInterface_C8051F040.c:477: if((*myBuffer) == '\n')
   089E BF 0A 21           2672 	cjne	r7,#0x0A,00104$
                           2673 ;	../projectSpecificHardwareInterface_C8051F040.c:479: if(!task_UART_putchar(channelNumber, '\r'))
   08A1 90s00r00           2674 	mov	dptr,#_task_UART_putchar_PARM_2
   08A4 74 0D              2675 	mov	a,#0x0D
   08A6 F0                 2676 	movx	@dptr,a
   08A7 8E 82              2677 	mov	dpl,r6
   08A9 C0 02              2678 	push	ar2
   08AB C0 03              2679 	push	ar3
   08AD C0 04              2680 	push	ar4
   08AF C0 05              2681 	push	ar5
   08B1 C0 06              2682 	push	ar6
   08B3 12s00r00           2683 	lcall	_task_UART_putchar
   08B6 D0 06              2684 	pop	ar6
   08B8 D0 05              2685 	pop	ar5
   08BA D0 04              2686 	pop	ar4
   08BC D0 03              2687 	pop	ar3
   08BE D0 02              2688 	pop	ar2
   08C0 50 2F              2689 	jnc	00112$
                           2690 ;	../projectSpecificHardwareInterface_C8051F040.c:481: break ;
   08C2                    2691 00104$:
                           2692 ;	../projectSpecificHardwareInterface_C8051F040.c:485: if(!task_UART_putchar(channelNumber, *myBuffer++))
   08C2 8B 82              2693 	mov	dpl,r3
   08C4 8C 83              2694 	mov	dph,r4
   08C6 8D F0              2695 	mov	b,r5
   08C8 12s00r00           2696 	lcall	__gptrget
   08CB FF                 2697 	mov	r7,a
   08CC A3                 2698 	inc	dptr
   08CD AB 82              2699 	mov	r3,dpl
   08CF AC 83              2700 	mov	r4,dph
   08D1 90s00r00           2701 	mov	dptr,#_task_UART_putchar_PARM_2
   08D4 EF                 2702 	mov	a,r7
   08D5 F0                 2703 	movx	@dptr,a
   08D6 8A 82              2704 	mov	dpl,r2
   08D8 C0 02              2705 	push	ar2
   08DA C0 03              2706 	push	ar3
   08DC C0 04              2707 	push	ar4
   08DE C0 05              2708 	push	ar5
   08E0 C0 06              2709 	push	ar6
   08E2 12s00r00           2710 	lcall	_task_UART_putchar
   08E5 D0 06              2711 	pop	ar6
   08E7 D0 05              2712 	pop	ar5
   08E9 D0 04              2713 	pop	ar4
   08EB D0 03              2714 	pop	ar3
   08ED D0 02              2715 	pop	ar2
   08EF 40 A1              2716 	jc	00107$
                           2717 ;	../projectSpecificHardwareInterface_C8051F040.c:487: break ;
   08F1                    2718 00112$:
   08F1 22                 2719 	ret
                           2720 ;------------------------------------------------------------
                           2721 ;Allocation info for local variables in function 'task_UART_getchar_projectSpecific'
                           2722 ;------------------------------------------------------------
                           2723 ;sloc0                     Allocated with name '_task_UART_getchar_projectSpecific_sloc0_1_0'
                           2724 ;sloc1                     Allocated with name '_task_UART_getchar_projectSpecific_sloc1_1_0'
                           2725 ;sloc2                     Allocated with name '_task_UART_getchar_projectSpecific_sloc2_1_0'
                           2726 ;channelNumber             Allocated with name '_task_UART_getchar_projectSpecific_channelNumber_1_1'
                           2727 ;Q                         Allocated with name '_task_UART_getchar_projectSpecific_Q_2_2'
                           2728 ;byteReceived              Allocated with name '_task_UART_getchar_projectSpecific_byteReceived_3_3'
                           2729 ;------------------------------------------------------------
                           2730 ;	../projectSpecificHardwareInterface_C8051F040.c:494: char task_UART_getchar_projectSpecific(	unsigned char channelNumber)
                           2731 ;	-----------------------------------------
                           2732 ;	 function task_UART_getchar_projectSpecific
                           2733 ;	-----------------------------------------
   08F2                    2734 _task_UART_getchar_projectSpecific:
   08F2 E5 82              2735 	mov	a,dpl
   08F4 90s08rDB           2736 	mov	dptr,#_task_UART_getchar_projectSpecific_channelNumber_1_1
   08F7 F0                 2737 	movx	@dptr,a
                           2738 ;	../projectSpecificHardwareInterface_C8051F040.c:496: if(channelNumber < NUMBER_OF_UARTS)
   08F8 90s08rDB           2739 	mov	dptr,#_task_UART_getchar_projectSpecific_channelNumber_1_1
   08FB E0                 2740 	movx	a,@dptr
   08FC FA                 2741 	mov	r2,a
   08FD BA 01 00           2742 	cjne	r2,#0x01,00109$
   0900                    2743 00109$:
   0900 40 03              2744 	jc	00110$
   0902 02s09rE9           2745 	ljmp	00104$
   0905                    2746 00110$:
                           2747 ;	../projectSpecificHardwareInterface_C8051F040.c:498: QUEUE_TYPE*	Q = &receiveBuffers[channelNumber] ;
   0905 EA                 2748 	mov	a,r2
   0906 75 F0 0B           2749 	mov	b,#0x0B
   0909 A4                 2750 	mul	ab
   090A 24rC0              2751 	add	a,#_receiveBuffers
   090C FA                 2752 	mov	r2,a
   090D E4                 2753 	clr	a
   090E 34s08              2754 	addc	a,#(_receiveBuffers >> 8)
   0910 FB                 2755 	mov	r3,a
   0911 7C 00              2756 	mov	r4,#0x00
   0913 90s08rDC           2757 	mov	dptr,#_task_UART_getchar_projectSpecific_Q_2_2
   0916 EA                 2758 	mov	a,r2
   0917 F0                 2759 	movx	@dptr,a
   0918 A3                 2760 	inc	dptr
   0919 EB                 2761 	mov	a,r3
   091A F0                 2762 	movx	@dptr,a
   091B A3                 2763 	inc	dptr
   091C EC                 2764 	mov	a,r4
   091D F0                 2765 	movx	@dptr,a
                           2766 ;	../projectSpecificHardwareInterface_C8051F040.c:500: if(!IsEmpty(Q))
   091E 8A 82              2767 	mov	dpl,r2
   0920 8B 83              2768 	mov	dph,r3
   0922 8C F0              2769 	mov	b,r4
   0924 12s02rB6           2770 	lcall	_IsEmpty
   0927 E5 82              2771 	mov	a,dpl
   0929 60 03              2772 	jz	00111$
   092B 02s09rE9           2773 	ljmp	00104$
   092E                    2774 00111$:
                           2775 ;	../projectSpecificHardwareInterface_C8051F040.c:502: unsigned char byteReceived = Q->Array[Q->Front] ;
   092E 90s08rDC           2776 	mov	dptr,#_task_UART_getchar_projectSpecific_Q_2_2
   0931 E0                 2777 	movx	a,@dptr
   0932 FA                 2778 	mov	r2,a
   0933 A3                 2779 	inc	dptr
   0934 E0                 2780 	movx	a,@dptr
   0935 FB                 2781 	mov	r3,a
   0936 A3                 2782 	inc	dptr
   0937 E0                 2783 	movx	a,@dptr
   0938 FC                 2784 	mov	r4,a
   0939 74 08              2785 	mov	a,#0x08
   093B 2A                 2786 	add	a,r2
   093C FD                 2787 	mov	r5,a
   093D E4                 2788 	clr	a
   093E 3B                 2789 	addc	a,r3
   093F FE                 2790 	mov	r6,a
   0940 8C 07              2791 	mov	ar7,r4
   0942 8D 82              2792 	mov	dpl,r5
   0944 8E 83              2793 	mov	dph,r6
   0946 8F F0              2794 	mov	b,r7
   0948 12s00r00           2795 	lcall	__gptrget
   094B F5*09              2796 	mov	_task_UART_getchar_projectSpecific_sloc0_1_0,a
   094D A3                 2797 	inc	dptr
   094E 12s00r00           2798 	lcall	__gptrget
   0951 F5*0A              2799 	mov	(_task_UART_getchar_projectSpecific_sloc0_1_0 + 1),a
   0953 A3                 2800 	inc	dptr
   0954 12s00r00           2801 	lcall	__gptrget
   0957 F5*0B              2802 	mov	(_task_UART_getchar_projectSpecific_sloc0_1_0 + 2),a
   0959 74 02              2803 	mov	a,#0x02
   095B 2A                 2804 	add	a,r2
   095C F5*0E              2805 	mov	_task_UART_getchar_projectSpecific_sloc2_1_0,a
   095E E4                 2806 	clr	a
   095F 3B                 2807 	addc	a,r3
   0960 F5*0F              2808 	mov	(_task_UART_getchar_projectSpecific_sloc2_1_0 + 1),a
   0962 8C*10              2809 	mov	(_task_UART_getchar_projectSpecific_sloc2_1_0 + 2),r4
   0964 85*0E 82           2810 	mov	dpl,_task_UART_getchar_projectSpecific_sloc2_1_0
   0967 85*0F 83           2811 	mov	dph,(_task_UART_getchar_projectSpecific_sloc2_1_0 + 1)
   096A 85*10 F0           2812 	mov	b,(_task_UART_getchar_projectSpecific_sloc2_1_0 + 2)
   096D 12s00r00           2813 	lcall	__gptrget
   0970 F5*0C              2814 	mov	_task_UART_getchar_projectSpecific_sloc1_1_0,a
   0972 A3                 2815 	inc	dptr
   0973 12s00r00           2816 	lcall	__gptrget
   0976 F5*0D              2817 	mov	(_task_UART_getchar_projectSpecific_sloc1_1_0 + 1),a
   0978 E5*0C              2818 	mov	a,_task_UART_getchar_projectSpecific_sloc1_1_0
   097A 25*09              2819 	add	a,_task_UART_getchar_projectSpecific_sloc0_1_0
   097C FE                 2820 	mov	r6,a
   097D E5*0D              2821 	mov	a,(_task_UART_getchar_projectSpecific_sloc1_1_0 + 1)
   097F 35*0A              2822 	addc	a,(_task_UART_getchar_projectSpecific_sloc0_1_0 + 1)
   0981 FF                 2823 	mov	r7,a
   0982 AD*0B              2824 	mov	r5,(_task_UART_getchar_projectSpecific_sloc0_1_0 + 2)
   0984 8E 82              2825 	mov	dpl,r6
   0986 8F 83              2826 	mov	dph,r7
   0988 8D F0              2827 	mov	b,r5
   098A 12s00r00           2828 	lcall	__gptrget
   098D F5*09              2829 	mov	_task_UART_getchar_projectSpecific_sloc0_1_0,a
                           2830 ;	../projectSpecificHardwareInterface_C8051F040.c:504: Q->Size-- ;
   098F 74 06              2831 	mov	a,#0x06
   0991 2A                 2832 	add	a,r2
   0992 FD                 2833 	mov	r5,a
   0993 E4                 2834 	clr	a
   0994 3B                 2835 	addc	a,r3
   0995 FF                 2836 	mov	r7,a
   0996 8C 00              2837 	mov	ar0,r4
   0998 8D 82              2838 	mov	dpl,r5
   099A 8F 83              2839 	mov	dph,r7
   099C 88 F0              2840 	mov	b,r0
   099E 12s00r00           2841 	lcall	__gptrget
   09A1 F9                 2842 	mov	r1,a
   09A2 A3                 2843 	inc	dptr
   09A3 12s00r00           2844 	lcall	__gptrget
   09A6 FE                 2845 	mov	r6,a
   09A7 19                 2846 	dec	r1
   09A8 B9 FF 01           2847 	cjne	r1,#0xff,00112$
   09AB 1E                 2848 	dec	r6
   09AC                    2849 00112$:
   09AC 8D 82              2850 	mov	dpl,r5
   09AE 8F 83              2851 	mov	dph,r7
   09B0 88 F0              2852 	mov	b,r0
   09B2 E9                 2853 	mov	a,r1
   09B3 12s00r00           2854 	lcall	__gptrput
   09B6 A3                 2855 	inc	dptr
   09B7 EE                 2856 	mov	a,r6
   09B8 12s00r00           2857 	lcall	__gptrput
                           2858 ;	../projectSpecificHardwareInterface_C8051F040.c:505: Q->Front = Succ(Q->Front, Q) ;
   09BB 90s04r58           2859 	mov	dptr,#_Succ_PARM_2
   09BE EA                 2860 	mov	a,r2
   09BF F0                 2861 	movx	@dptr,a
   09C0 A3                 2862 	inc	dptr
   09C1 EB                 2863 	mov	a,r3
   09C2 F0                 2864 	movx	@dptr,a
   09C3 A3                 2865 	inc	dptr
   09C4 EC                 2866 	mov	a,r4
   09C5 F0                 2867 	movx	@dptr,a
   09C6 85*0C 82           2868 	mov	dpl,_task_UART_getchar_projectSpecific_sloc1_1_0
   09C9 85*0D 83           2869 	mov	dph,(_task_UART_getchar_projectSpecific_sloc1_1_0 + 1)
   09CC 12s03r44           2870 	lcall	_Succ
   09CF AA 82              2871 	mov	r2,dpl
   09D1 AB 83              2872 	mov	r3,dph
   09D3 85*0E 82           2873 	mov	dpl,_task_UART_getchar_projectSpecific_sloc2_1_0
   09D6 85*0F 83           2874 	mov	dph,(_task_UART_getchar_projectSpecific_sloc2_1_0 + 1)
   09D9 85*10 F0           2875 	mov	b,(_task_UART_getchar_projectSpecific_sloc2_1_0 + 2)
   09DC EA                 2876 	mov	a,r2
   09DD 12s00r00           2877 	lcall	__gptrput
   09E0 A3                 2878 	inc	dptr
   09E1 EB                 2879 	mov	a,r3
   09E2 12s00r00           2880 	lcall	__gptrput
                           2881 ;	../projectSpecificHardwareInterface_C8051F040.c:507: return byteReceived ;
   09E5 85*09 82           2882 	mov	dpl,_task_UART_getchar_projectSpecific_sloc0_1_0
                           2883 ;	../projectSpecificHardwareInterface_C8051F040.c:511: return -1 ;
   09E8 22                 2884 	ret
   09E9                    2885 00104$:
   09E9 75 82 FF           2886 	mov	dpl,#0xFF
   09EC 22                 2887 	ret
                           2888 ;------------------------------------------------------------
                           2889 ;Allocation info for local variables in function 'task_UART_gets_projectSpecific'
                           2890 ;------------------------------------------------------------
                           2891 ;sloc0                     Allocated with name '_task_UART_gets_projectSpecific_sloc0_1_0'
                           2892 ;sloc1                     Allocated with name '_task_UART_gets_projectSpecific_sloc1_1_0'
                           2893 ;buffer                    Allocated with name '_task_UART_gets_projectSpecific_PARM_2'
                           2894 ;maxBufferLength           Allocated with name '_task_UART_gets_projectSpecific_PARM_3'
                           2895 ;channelNumber             Allocated with name '_task_UART_gets_projectSpecific_channelNumber_1_1'
                           2896 ;charsReturned             Allocated with name '_task_UART_gets_projectSpecific_charsReturned_2_2'
                           2897 ;latestCharInBuffer        Allocated with name '_task_UART_gets_projectSpecific_latestCharInBuffer_3_3'
                           2898 ;------------------------------------------------------------
                           2899 ;	../projectSpecificHardwareInterface_C8051F040.c:515: char* task_UART_gets_projectSpecific(	unsigned char channelNumber, char* buffer, unsigned short maxBufferLength)
                           2900 ;	-----------------------------------------
                           2901 ;	 function task_UART_gets_projectSpecific
                           2902 ;	-----------------------------------------
   09ED                    2903 _task_UART_gets_projectSpecific:
   09ED E5 82              2904 	mov	a,dpl
   09EF 90s08rE4           2905 	mov	dptr,#_task_UART_gets_projectSpecific_channelNumber_1_1
   09F2 F0                 2906 	movx	@dptr,a
                           2907 ;	../projectSpecificHardwareInterface_C8051F040.c:517: if(channelNumber < NUMBER_OF_UARTS)
   09F3 90s08rE4           2908 	mov	dptr,#_task_UART_gets_projectSpecific_channelNumber_1_1
   09F6 E0                 2909 	movx	a,@dptr
   09F7 FA                 2910 	mov	r2,a
   09F8 BA 01 00           2911 	cjne	r2,#0x01,00119$
   09FB                    2912 00119$:
   09FB 50 74              2913 	jnc	00110$
                           2914 ;	../projectSpecificHardwareInterface_C8051F040.c:521: while(charsReturned < maxBufferLength)
   09FD 90s08rE2           2915 	mov	dptr,#_task_UART_gets_projectSpecific_PARM_3
   0A00 E0                 2916 	movx	a,@dptr
   0A01 F5*12              2917 	mov	_task_UART_gets_projectSpecific_sloc1_1_0,a
   0A03 A3                 2918 	inc	dptr
   0A04 E0                 2919 	movx	a,@dptr
   0A05 F5*13              2920 	mov	(_task_UART_gets_projectSpecific_sloc1_1_0 + 1),a
   0A07 90s08rDF           2921 	mov	dptr,#_task_UART_gets_projectSpecific_PARM_2
   0A0A E0                 2922 	movx	a,@dptr
   0A0B FD                 2923 	mov	r5,a
   0A0C A3                 2924 	inc	dptr
   0A0D E0                 2925 	movx	a,@dptr
   0A0E FE                 2926 	mov	r6,a
   0A0F A3                 2927 	inc	dptr
   0A10 E0                 2928 	movx	a,@dptr
   0A11 FF                 2929 	mov	r7,a
   0A12 78 00              2930 	mov	r0,#0x00
   0A14 79 00              2931 	mov	r1,#0x00
   0A16                    2932 00106$:
   0A16 C3                 2933 	clr	c
   0A17 E8                 2934 	mov	a,r0
   0A18 95*12              2935 	subb	a,_task_UART_gets_projectSpecific_sloc1_1_0
   0A1A E9                 2936 	mov	a,r1
   0A1B 95*13              2937 	subb	a,(_task_UART_gets_projectSpecific_sloc1_1_0 + 1)
   0A1D 50 52              2938 	jnc	00110$
                           2939 ;	../projectSpecificHardwareInterface_C8051F040.c:523: char latestCharInBuffer = task_UART_getchar(channelNumber) ;
   0A1F 8A 82              2940 	mov	dpl,r2
   0A21 C0 02              2941 	push	ar2
   0A23 C0 05              2942 	push	ar5
   0A25 C0 06              2943 	push	ar6
   0A27 C0 07              2944 	push	ar7
   0A29 C0 00              2945 	push	ar0
   0A2B C0 01              2946 	push	ar1
   0A2D 12s00r00           2947 	lcall	_task_UART_getchar
   0A30 85 82*11           2948 	mov	_task_UART_gets_projectSpecific_sloc0_1_0,dpl
   0A33 D0 01              2949 	pop	ar1
   0A35 D0 00              2950 	pop	ar0
   0A37 D0 07              2951 	pop	ar7
   0A39 D0 06              2952 	pop	ar6
   0A3B D0 05              2953 	pop	ar5
   0A3D D0 02              2954 	pop	ar2
                           2955 ;	../projectSpecificHardwareInterface_C8051F040.c:525: if(latestCharInBuffer <= 0)	// break on a NULL or a -1
   0A3F C3                 2956 	clr	c
   0A40 74 80              2957 	mov	a,#(0x00 ^ 0x80)
   0A42 85*11 F0           2958 	mov	b,_task_UART_gets_projectSpecific_sloc0_1_0
   0A45 63 F0 80           2959 	xrl	b,#0x80
   0A48 95 F0              2960 	subb	a,b
   0A4A 50 25              2961 	jnc	00110$
                           2962 ;	../projectSpecificHardwareInterface_C8051F040.c:529: else if(latestCharInBuffer == '\r')	// Skip carriage returns
   0A4C 74 0D              2963 	mov	a,#0x0D
   0A4E B5*11 02           2964 	cjne	a,_task_UART_gets_projectSpecific_sloc0_1_0,00123$
   0A51 80 C3              2965 	sjmp	00106$
   0A53                    2966 00123$:
                           2967 ;	../projectSpecificHardwareInterface_C8051F040.c:534: buffer[charsReturned] = latestCharInBuffer ;
   0A53 C0 02              2968 	push	ar2
   0A55 E8                 2969 	mov	a,r0
   0A56 2D                 2970 	add	a,r5
   0A57 FA                 2971 	mov	r2,a
   0A58 E9                 2972 	mov	a,r1
   0A59 3E                 2973 	addc	a,r6
   0A5A FB                 2974 	mov	r3,a
   0A5B 8F 04              2975 	mov	ar4,r7
   0A5D 8A 82              2976 	mov	dpl,r2
   0A5F 8B 83              2977 	mov	dph,r3
   0A61 8C F0              2978 	mov	b,r4
   0A63 E5*11              2979 	mov	a,_task_UART_gets_projectSpecific_sloc0_1_0
   0A65 12s00r00           2980 	lcall	__gptrput
                           2981 ;	../projectSpecificHardwareInterface_C8051F040.c:536: charsReturned++ ;
   0A68 08                 2982 	inc	r0
   0A69 B8 00 01           2983 	cjne	r0,#0x00,00124$
   0A6C 09                 2984 	inc	r1
   0A6D                    2985 00124$:
   0A6D D0 02              2986 	pop	ar2
   0A6F 80 A5              2987 	sjmp	00106$
   0A71                    2988 00110$:
                           2989 ;	../projectSpecificHardwareInterface_C8051F040.c:540: return 0 ;
   0A71 90 00 00           2990 	mov	dptr,#0x0000
   0A74 75 F0 00           2991 	mov	b,#0x00
   0A77 22                 2992 	ret
                           2993 ;------------------------------------------------------------
                           2994 ;Allocation info for local variables in function 'task_UART_isLineReady'
                           2995 ;------------------------------------------------------------
                           2996 ;channelNumber             Allocated with name '_task_UART_isLineReady_channelNumber_1_1'
                           2997 ;------------------------------------------------------------
                           2998 ;	../projectSpecificHardwareInterface_C8051F040.c:544: bool task_UART_isLineReady(	unsigned char channelNumber)
                           2999 ;	-----------------------------------------
                           3000 ;	 function task_UART_isLineReady
                           3001 ;	-----------------------------------------
   0A78                    3002 _task_UART_isLineReady:
   0A78 E5 82              3003 	mov	a,dpl
   0A7A 90s08rE5           3004 	mov	dptr,#_task_UART_isLineReady_channelNumber_1_1
   0A7D F0                 3005 	movx	@dptr,a
                           3006 ;	../projectSpecificHardwareInterface_C8051F040.c:546: return lineReady[channelNumber] ;
   0A7E 90s08rE5           3007 	mov	dptr,#_task_UART_isLineReady_channelNumber_1_1
   0A81 E0                 3008 	movx	a,@dptr
   0A82 24rCC              3009 	add	a,#_lineReady
   0A84 F5 82              3010 	mov	dpl,a
   0A86 E4                 3011 	clr	a
   0A87 34s08              3012 	addc	a,#(_lineReady >> 8)
   0A89 F5 83              3013 	mov	dph,a
   0A8B E0                 3014 	movx	a,@dptr
   0A8C 24 FF              3015 	add	a,#0xff
   0A8E 92*04              3016 	mov  _task_UART_isLineReady_sloc0_1_0,c
   0A90 22                 3017 	ret
                           3018 ;------------------------------------------------------------
                           3019 ;Allocation info for local variables in function 'UART0_Init'
                           3020 ;------------------------------------------------------------
                           3021 ;SFRPAGE_SAVE              Allocated with name '_UART0_Init_SFRPAGE_SAVE_1_1'
                           3022 ;------------------------------------------------------------
                           3023 ;	../projectSpecificHardwareInterface_C8051F040.c:550: void UART0_Init(void)
                           3024 ;	-----------------------------------------
                           3025 ;	 function UART0_Init
                           3026 ;	-----------------------------------------
   0A91                    3027 _UART0_Init:
                           3028 ;	../projectSpecificHardwareInterface_C8051F040.c:554: SFRPAGE_SAVE = SFRPAGE;             // Preserve SFRPAGE
   0A91 AA 84              3029 	mov	r2,_SFRPAGE
                           3030 ;	../projectSpecificHardwareInterface_C8051F040.c:556: SFRPAGE = UART0_PAGE;
   0A93 75 84 00           3031 	mov	_SFRPAGE,#0x00
                           3032 ;	../projectSpecificHardwareInterface_C8051F040.c:558: SCON0 = 0x52;                       // 8-bit variable baud rate;
   0A96 75 98 52           3033 	mov	_SCON0,#0x52
                           3034 ;	../projectSpecificHardwareInterface_C8051F040.c:561: SSTA0 = 0x10;                       // Clear all flags; enable baud rate
   0A99 75 91 10           3035 	mov	_SSTA0,#0x10
                           3036 ;	../projectSpecificHardwareInterface_C8051F040.c:568: SFRPAGE = SFRPAGE_SAVE;
   0A9C 8A 84              3037 	mov	_SFRPAGE,r2
   0A9E 22                 3038 	ret
                           3039 ;------------------------------------------------------------
                           3040 ;Allocation info for local variables in function 'UART1_Init'
                           3041 ;------------------------------------------------------------
                           3042 ;SFRPAGE_SAVE              Allocated with name '_UART1_Init_SFRPAGE_SAVE_2_2'
                           3043 ;------------------------------------------------------------
                           3044 ;	../projectSpecificHardwareInterface_C8051F040.c:589: void UART1_Init(void)
                           3045 ;	-----------------------------------------
                           3046 ;	 function UART1_Init
                           3047 ;	-----------------------------------------
   0A9F                    3048 _UART1_Init:
                           3049 ;	../projectSpecificHardwareInterface_C8051F040.c:591: portSET_REGISTER_GROUP(UART1_PAGE)
   0A9F AA 84              3050 	mov	r2,_SFRPAGE
   0AA1 75 84 01           3051 	mov	_SFRPAGE,#0x01
                           3052 ;	../projectSpecificHardwareInterface_C8051F040.c:593: SCON1 = 0x10 ;	// 8-bit variable baud rate;
   0AA4 75 98 10           3053 	mov	_SCON1,#0x10
                           3054 ;	../projectSpecificHardwareInterface_C8051F040.c:599: portRESTORE_REGISTER_GROUP()
   0AA7 8A 84              3055 	mov	_SFRPAGE,r2
   0AA9 22                 3056 	ret
                           3057 ;------------------------------------------------------------
                           3058 ;Allocation info for local variables in function 'putchar'
                           3059 ;------------------------------------------------------------
                           3060 ;c                         Allocated with name '_putchar_c_1_1'
                           3061 ;------------------------------------------------------------
                           3062 ;	../projectSpecificHardwareInterface_C8051F040.c:603: void putchar(char c)
                           3063 ;	-----------------------------------------
                           3064 ;	 function putchar
                           3065 ;	-----------------------------------------
   0AAA                    3066 _putchar:
   0AAA E5 82              3067 	mov	a,dpl
   0AAC 90s08rE6           3068 	mov	dptr,#_putchar_c_1_1
   0AAF F0                 3069 	movx	@dptr,a
                           3070 ;	../projectSpecificHardwareInterface_C8051F040.c:605: if(c == '\n')
   0AB0 90s08rE6           3071 	mov	dptr,#_putchar_c_1_1
   0AB3 E0                 3072 	movx	a,@dptr
   0AB4 FA                 3073 	mov	r2,a
   0AB5 BA 0A 0C           3074 	cjne	r2,#0x0A,00102$
                           3075 ;	../projectSpecificHardwareInterface_C8051F040.c:607: task_UART_putchar(0, '\r') ;
   0AB8 90s00r00           3076 	mov	dptr,#_task_UART_putchar_PARM_2
   0ABB 74 0D              3077 	mov	a,#0x0D
   0ABD F0                 3078 	movx	@dptr,a
   0ABE 75 82 00           3079 	mov	dpl,#0x00
   0AC1 12s00r00           3080 	lcall	_task_UART_putchar
   0AC4                    3081 00102$:
                           3082 ;	../projectSpecificHardwareInterface_C8051F040.c:610: task_UART_putchar(0, c) ;
   0AC4 90s08rE6           3083 	mov	dptr,#_putchar_c_1_1
   0AC7 E0                 3084 	movx	a,@dptr
   0AC8 90s00r00           3085 	mov	dptr,#_task_UART_putchar_PARM_2
   0ACB F0                 3086 	movx	@dptr,a
   0ACC 75 82 00           3087 	mov	dpl,#0x00
   0ACF 02s00r00           3088 	ljmp	_task_UART_putchar
                           3089 ;------------------------------------------------------------
                           3090 ;Allocation info for local variables in function 'prvSetupSystemClock'
                           3091 ;------------------------------------------------------------
                           3092 ;n                         Allocated with name '_prvSetupSystemClock_n_1_1'
                           3093 ;------------------------------------------------------------
                           3094 ;	../projectSpecificHardwareInterface_C8051F040.c:632: static void prvSetupSystemClock( void )
                           3095 ;	-----------------------------------------
                           3096 ;	 function prvSetupSystemClock
                           3097 ;	-----------------------------------------
   0AD2                    3098 _prvSetupSystemClock:
                           3099 ;	../projectSpecificHardwareInterface_C8051F040.c:635: SFRPAGE = CONFIG_PAGE ;			// switch to config page to config oscillator
   0AD2 75 84 0F           3100 	mov	_SFRPAGE,#0x0F
                           3101 ;	../projectSpecificHardwareInterface_C8051F040.c:637: OSCXCN = 0x77 ;					// start external oscillator; 24 MHz Crystal
   0AD5 75 8C 77           3102 	mov	_OSCXCN,#0x77
                           3103 ;	../projectSpecificHardwareInterface_C8051F040.c:641: for( n = 0 ; n < 255 ; n++ ) ;	// delay about 1ms
   0AD8 7A FF              3104 	mov	r2,#0xFF
   0ADA 7B 00              3105 	mov	r3,#0x00
   0ADC                    3106 00106$:
   0ADC 1A                 3107 	dec	r2
   0ADD BA FF 01           3108 	cjne	r2,#0xff,00114$
   0AE0 1B                 3109 	dec	r3
   0AE1                    3110 00114$:
   0AE1 EA                 3111 	mov	a,r2
   0AE2 4B                 3112 	orl	a,r3
   0AE3 70 F7              3113 	jnz	00106$
                           3114 ;	../projectSpecificHardwareInterface_C8051F040.c:642: while((OSCXCN & 0x80) == 0) ;	// wait for oscillator to stabilize
   0AE5                    3115 00101$:
   0AE5 E5 8C              3116 	mov	a,_OSCXCN
   0AE7 30 E7 FB           3117 	jnb	acc.7,00101$
                           3118 ;	../projectSpecificHardwareInterface_C8051F040.c:644: CLKSEL |= 0x01 ;				// switch to external oscillator
   0AEA 43 97 01           3119 	orl	_CLKSEL,#0x01
                           3120 ;	../projectSpecificHardwareInterface_C8051F040.c:646: OSCICN = 0xC2 ;					// Turn off the internal oscillator to save a little power
   0AED 75 8A C2           3121 	mov	_OSCICN,#0xC2
   0AF0 22                 3122 	ret
                           3123 ;------------------------------------------------------------
                           3124 ;Allocation info for local variables in function 'prvSetupTimerInterrupt'
                           3125 ;------------------------------------------------------------
                           3126 ;ucOriginalSFRPage         Allocated with name '_prvSetupTimerInterrupt_ucOriginalSFRPage_1_1'
                           3127 ;ulTicksPerSecond          Allocated with name '_prvSetupTimerInterrupt_ulTicksPerSecond_1_1'
                           3128 ;ulCaptureTime             Allocated with name '_prvSetupTimerInterrupt_ulCaptureTime_1_1'
                           3129 ;ulCaptureValue            Allocated with name '_prvSetupTimerInterrupt_ulCaptureValue_1_1'
                           3130 ;ucLowCaptureByte          Allocated with name '_prvSetupTimerInterrupt_ucLowCaptureByte_1_1'
                           3131 ;ucHighCaptureByte         Allocated with name '_prvSetupTimerInterrupt_ucHighCaptureByte_1_1'
                           3132 ;------------------------------------------------------------
                           3133 ;	../projectSpecificHardwareInterface_C8051F040.c:650: static void prvSetupTimerInterrupt( void )
                           3134 ;	-----------------------------------------
                           3135 ;	 function prvSetupTimerInterrupt
                           3136 ;	-----------------------------------------
   0AF1                    3137 _prvSetupTimerInterrupt:
                           3138 ;	../projectSpecificHardwareInterface_C8051F040.c:664: ucOriginalSFRPage = SFRPAGE;
   0AF1 90s08rE7           3139 	mov	dptr,#_prvSetupTimerInterrupt_ucOriginalSFRPage_1_1
   0AF4 E5 84              3140 	mov	a,_SFRPAGE
   0AF6 F0                 3141 	movx	@dptr,a
                           3142 ;	../projectSpecificHardwareInterface_C8051F040.c:665: SFRPAGE = 0;
   0AF7 75 84 00           3143 	mov	_SFRPAGE,#0x00
                           3144 ;	../projectSpecificHardwareInterface_C8051F040.c:668: TMR2CF = ( unsigned char ) 0;
   0AFA 75 C9 00           3145 	mov	_TMR2CF,#0x00
                           3146 ;	../projectSpecificHardwareInterface_C8051F040.c:671: RCAP2L = ucLowCaptureByte;
   0AFD 75 CA D1           3147 	mov	_RCAP2L,#0xD1
                           3148 ;	../projectSpecificHardwareInterface_C8051F040.c:672: RCAP2H = ucHighCaptureByte;
   0B00 75 CB FF           3149 	mov	_RCAP2H,#0xFF
                           3150 ;	../projectSpecificHardwareInterface_C8051F040.c:675: TMR2L = ucLowCaptureByte;
   0B03 75 CC D1           3151 	mov	_TMR2L,#0xD1
                           3152 ;	../projectSpecificHardwareInterface_C8051F040.c:676: TMR2H = ucHighCaptureByte;
   0B06 75 CD FF           3153 	mov	_TMR2H,#0xFF
                           3154 ;	../projectSpecificHardwareInterface_C8051F040.c:679: IE |= portTIMER_2_INTERRUPT_ENABLE;
   0B09 43 A8 20           3155 	orl	_IE,#0x20
                           3156 ;	../projectSpecificHardwareInterface_C8051F040.c:682: TMR2CN = portENABLE_TIMER ;
   0B0C 75 C8 06           3157 	mov	_TMR2CN,#0x06
                           3158 ;	../projectSpecificHardwareInterface_C8051F040.c:685: SFRPAGE	= 1 ;
   0B0F 75 84 01           3159 	mov	_SFRPAGE,#0x01
                           3160 ;	../projectSpecificHardwareInterface_C8051F040.c:686: TMR3CF	= 0x0A ;
   0B12 75 C9 0A           3161 	mov	_TMR3CF,#0x0A
                           3162 ;	../projectSpecificHardwareInterface_C8051F040.c:688: RCAP3L	= 0xCE ;	// 120kHz on boost boards
   0B15 75 CA CE           3163 	mov	_RCAP3L,#0xCE
                           3164 ;	../projectSpecificHardwareInterface_C8051F040.c:689: RCAP3H	= 0xFF ;	// 120kHz on boost boards
   0B18 75 CB FF           3165 	mov	_RCAP3H,#0xFF
                           3166 ;	../projectSpecificHardwareInterface_C8051F040.c:691: TMR3L	= 0xF0 ;
   0B1B 75 CC F0           3167 	mov	_TMR3L,#0xF0
                           3168 ;	../projectSpecificHardwareInterface_C8051F040.c:692: TMR3H	= 0xFF ;
   0B1E 75 CD FF           3169 	mov	_TMR3H,#0xFF
                           3170 ;	../projectSpecificHardwareInterface_C8051F040.c:693: TMR3CN	= 0x04 ;
   0B21 75 C8 04           3171 	mov	_TMR3CN,#0x04
                           3172 ;	../projectSpecificHardwareInterface_C8051F040.c:697: SFRPAGE = ucOriginalSFRPage;
   0B24 90s08rE7           3173 	mov	dptr,#_prvSetupTimerInterrupt_ucOriginalSFRPage_1_1
   0B27 E0                 3174 	movx	a,@dptr
   0B28 F5 84              3175 	mov	_SFRPAGE,a
   0B2A 22                 3176 	ret
                           3177 ;------------------------------------------------------------
                           3178 ;Allocation info for local variables in function 'addTickCounter'
                           3179 ;------------------------------------------------------------
                           3180 ;pointerToIncrement        Allocated with name '_addTickCounter_pointerToIncrement_1_1'
                           3181 ;i                         Allocated with name '_addTickCounter_i_1_1'
                           3182 ;sloc0                     Allocated with name '_addTickCounter_sloc0_1_0'
                           3183 ;------------------------------------------------------------
                           3184 ;	../projectSpecificHardwareInterface_C8051F040.c:705: void addTickCounter(							unsigned short* pointerToIncrement)
                           3185 ;	-----------------------------------------
                           3186 ;	 function addTickCounter
                           3187 ;	-----------------------------------------
   0B2B                    3188 _addTickCounter:
   0B2B AA F0              3189 	mov	r2,b
   0B2D AB 83              3190 	mov	r3,dph
   0B2F E5 82              3191 	mov	a,dpl
   0B31 90s09r06           3192 	mov	dptr,#_addTickCounter_pointerToIncrement_1_1
   0B34 F0                 3193 	movx	@dptr,a
   0B35 A3                 3194 	inc	dptr
   0B36 EB                 3195 	mov	a,r3
   0B37 F0                 3196 	movx	@dptr,a
   0B38 A3                 3197 	inc	dptr
   0B39 EA                 3198 	mov	a,r2
   0B3A F0                 3199 	movx	@dptr,a
                           3200 ;	../projectSpecificHardwareInterface_C8051F040.c:709: for( i = 0 ; i < configNUMBER_OF_TICK_COUNTERS ; i++ )
   0B3B 7A 00              3201 	mov	r2,#0x00
   0B3D                    3202 00105$:
   0B3D BA 0A 00           3203 	cjne	r2,#0x0A,00115$
   0B40                    3204 00115$:
   0B40 50 4B              3205 	jnc	00109$
                           3206 ;	../projectSpecificHardwareInterface_C8051F040.c:713: if(tickCounterToIncrement[i] == pointerToIncrement)
   0B42 EA                 3207 	mov	a,r2
   0B43 75 F0 03           3208 	mov	b,#0x03
   0B46 A4                 3209 	mul	ab
   0B47 24rE8              3210 	add	a,#_tickCounterToIncrement
   0B49 FB                 3211 	mov	r3,a
   0B4A E4                 3212 	clr	a
   0B4B 34s08              3213 	addc	a,#(_tickCounterToIncrement >> 8)
   0B4D FC                 3214 	mov	r4,a
   0B4E 8B 82              3215 	mov	dpl,r3
   0B50 8C 83              3216 	mov	dph,r4
   0B52 E0                 3217 	movx	a,@dptr
   0B53 FD                 3218 	mov	r5,a
   0B54 A3                 3219 	inc	dptr
   0B55 E0                 3220 	movx	a,@dptr
   0B56 FE                 3221 	mov	r6,a
   0B57 A3                 3222 	inc	dptr
   0B58 E0                 3223 	movx	a,@dptr
   0B59 FF                 3224 	mov	r7,a
   0B5A 90s09r06           3225 	mov	dptr,#_addTickCounter_pointerToIncrement_1_1
   0B5D E0                 3226 	movx	a,@dptr
   0B5E F5*00              3227 	mov	_addTickCounter_sloc0_1_0,a
   0B60 A3                 3228 	inc	dptr
   0B61 E0                 3229 	movx	a,@dptr
   0B62 F5*01              3230 	mov	(_addTickCounter_sloc0_1_0 + 1),a
   0B64 A3                 3231 	inc	dptr
   0B65 E0                 3232 	movx	a,@dptr
   0B66 F5*02              3233 	mov	(_addTickCounter_sloc0_1_0 + 2),a
   0B68 ED                 3234 	mov	a,r5
   0B69 B5*00 09           3235 	cjne	a,_addTickCounter_sloc0_1_0,00117$
   0B6C EE                 3236 	mov	a,r6
   0B6D B5*01 05           3237 	cjne	a,(_addTickCounter_sloc0_1_0 + 1),00117$
   0B70 EF                 3238 	mov	a,r7
   0B71 B5*02 01           3239 	cjne	a,(_addTickCounter_sloc0_1_0 + 2),00117$
   0B74 22                 3240 	ret
   0B75                    3241 00117$:
                           3242 ;	../projectSpecificHardwareInterface_C8051F040.c:718: if(tickCounterToIncrement[i] == 0)
   0B75 ED                 3243 	mov	a,r5
   0B76 4E                 3244 	orl	a,r6
   0B77 4F                 3245 	orl	a,r7
   0B78 70 10              3246 	jnz	00107$
                           3247 ;	../projectSpecificHardwareInterface_C8051F040.c:720: tickCounterToIncrement[i] = pointerToIncrement ;
   0B7A 8B 82              3248 	mov	dpl,r3
   0B7C 8C 83              3249 	mov	dph,r4
   0B7E E5*00              3250 	mov	a,_addTickCounter_sloc0_1_0
   0B80 F0                 3251 	movx	@dptr,a
   0B81 A3                 3252 	inc	dptr
   0B82 E5*01              3253 	mov	a,(_addTickCounter_sloc0_1_0 + 1)
   0B84 F0                 3254 	movx	@dptr,a
   0B85 A3                 3255 	inc	dptr
   0B86 E5*02              3256 	mov	a,(_addTickCounter_sloc0_1_0 + 2)
   0B88 F0                 3257 	movx	@dptr,a
                           3258 ;	../projectSpecificHardwareInterface_C8051F040.c:722: break ;
   0B89 22                 3259 	ret
   0B8A                    3260 00107$:
                           3261 ;	../projectSpecificHardwareInterface_C8051F040.c:709: for( i = 0 ; i < configNUMBER_OF_TICK_COUNTERS ; i++ )
   0B8A 0A                 3262 	inc	r2
   0B8B 80 B0              3263 	sjmp	00105$
   0B8D                    3264 00109$:
   0B8D 22                 3265 	ret
                           3266 ;------------------------------------------------------------
                           3267 ;Allocation info for local variables in function 'vTimer2ISR'
                           3268 ;------------------------------------------------------------
                           3269 ;i                         Allocated with name '_vTimer2ISR_i_1_1'
                           3270 ;------------------------------------------------------------
                           3271 ;	../projectSpecificHardwareInterface_C8051F040.c:731: void vTimer2ISR( void ) interrupt 5
                           3272 ;	-----------------------------------------
                           3273 ;	 function vTimer2ISR
                           3274 ;	-----------------------------------------
   0B8E                    3275 _vTimer2ISR:
   0B8E C0*00              3276 	push	bits
   0B90 C0 E0              3277 	push	acc
   0B92 C0 F0              3278 	push	b
   0B94 C0 82              3279 	push	dpl
   0B96 C0 83              3280 	push	dph
   0B98 C0 02              3281 	push	(0+2)
   0B9A C0 03              3282 	push	(0+3)
   0B9C C0 04              3283 	push	(0+4)
   0B9E C0 05              3284 	push	(0+5)
   0BA0 C0 06              3285 	push	(0+6)
   0BA2 C0 07              3286 	push	(0+7)
   0BA4 C0 00              3287 	push	(0+0)
   0BA6 C0 01              3288 	push	(0+1)
   0BA8 C0 D0              3289 	push	psw
   0BAA 75 D0 00           3290 	mov	psw,#0x00
                           3291 ;	../projectSpecificHardwareInterface_C8051F040.c:735: for( i = 0 ; i < configNUMBER_OF_TICK_COUNTERS ; i++ )
   0BAD 7A 00              3292 	mov	r2,#0x00
   0BAF                    3293 00103$:
   0BAF BA 0A 00           3294 	cjne	r2,#0x0A,00113$
   0BB2                    3295 00113$:
   0BB2 50 41              3296 	jnc	00106$
                           3297 ;	../projectSpecificHardwareInterface_C8051F040.c:737: if(tickCounterToIncrement[i])
   0BB4 EA                 3298 	mov	a,r2
   0BB5 75 F0 03           3299 	mov	b,#0x03
   0BB8 A4                 3300 	mul	ab
   0BB9 24rE8              3301 	add	a,#_tickCounterToIncrement
   0BBB F5 82              3302 	mov	dpl,a
   0BBD E4                 3303 	clr	a
   0BBE 34s08              3304 	addc	a,#(_tickCounterToIncrement >> 8)
   0BC0 F5 83              3305 	mov	dph,a
   0BC2 E0                 3306 	movx	a,@dptr
   0BC3 FB                 3307 	mov	r3,a
   0BC4 A3                 3308 	inc	dptr
   0BC5 E0                 3309 	movx	a,@dptr
   0BC6 FC                 3310 	mov	r4,a
   0BC7 A3                 3311 	inc	dptr
   0BC8 E0                 3312 	movx	a,@dptr
   0BC9 FD                 3313 	mov	r5,a
   0BCA EB                 3314 	mov	a,r3
   0BCB 4C                 3315 	orl	a,r4
   0BCC 4D                 3316 	orl	a,r5
   0BCD 60 23              3317 	jz	00105$
                           3318 ;	../projectSpecificHardwareInterface_C8051F040.c:739: *tickCounterToIncrement[i] += 1 ;
   0BCF 8B 82              3319 	mov	dpl,r3
   0BD1 8C 83              3320 	mov	dph,r4
   0BD3 8D F0              3321 	mov	b,r5
   0BD5 12s00r00           3322 	lcall	__gptrget
   0BD8 FE                 3323 	mov	r6,a
   0BD9 A3                 3324 	inc	dptr
   0BDA 12s00r00           3325 	lcall	__gptrget
   0BDD FF                 3326 	mov	r7,a
   0BDE 0E                 3327 	inc	r6
   0BDF BE 00 01           3328 	cjne	r6,#0x00,00116$
   0BE2 0F                 3329 	inc	r7
   0BE3                    3330 00116$:
   0BE3 8B 82              3331 	mov	dpl,r3
   0BE5 8C 83              3332 	mov	dph,r4
   0BE7 8D F0              3333 	mov	b,r5
   0BE9 EE                 3334 	mov	a,r6
   0BEA 12s00r00           3335 	lcall	__gptrput
   0BED A3                 3336 	inc	dptr
   0BEE EF                 3337 	mov	a,r7
   0BEF 12s00r00           3338 	lcall	__gptrput
   0BF2                    3339 00105$:
                           3340 ;	../projectSpecificHardwareInterface_C8051F040.c:735: for( i = 0 ; i < configNUMBER_OF_TICK_COUNTERS ; i++ )
   0BF2 0A                 3341 	inc	r2
   0BF3 80 BA              3342 	sjmp	00103$
   0BF5                    3343 00106$:
                           3344 ;	../projectSpecificHardwareInterface_C8051F040.c:743: taskSwitcherTickHook() ;
   0BF5 12s01rD1           3345 	lcall	_taskSwitcherTickHook
                           3346 ;	../projectSpecificHardwareInterface_C8051F040.c:745: portCLEAR_INTERRUPT_FLAG() ;
   0BF8 53 C8 7F           3347 	anl	_TMR2CN,#0x7F
   0BFB D0 D0              3348 	pop	psw
   0BFD D0 01              3349 	pop	(0+1)
   0BFF D0 00              3350 	pop	(0+0)
   0C01 D0 07              3351 	pop	(0+7)
   0C03 D0 06              3352 	pop	(0+6)
   0C05 D0 05              3353 	pop	(0+5)
   0C07 D0 04              3354 	pop	(0+4)
   0C09 D0 03              3355 	pop	(0+3)
   0C0B D0 02              3356 	pop	(0+2)
   0C0D D0 83              3357 	pop	dph
   0C0F D0 82              3358 	pop	dpl
   0C11 D0 F0              3359 	pop	b
   0C13 D0 E0              3360 	pop	acc
   0C15 D0*00              3361 	pop	bits
   0C17 32                 3362 	reti
                           3363 	.area CSEG    (CODE)
                           3364 	.area CONST   (CODE)
   0000                    3365 __str_0:
   0000 34 74 68 20 47 65  3366 	.ascii "4th Generation state machine test started."
        6E 65 72 61 74 69
        6F 6E 20 73 74 61
        74 65 20 6D 61 63
        68 69 6E 65 20 74
        65 73 74 20 73 74
        61 72 74 65 64 2E
   002A 00                 3367 	.db 0x00
   002B                    3368 __str_1:
   002B 47 65 6E 65 72 61  3369 	.ascii "Generating timebomb"
        74 69 6E 67 20 74
        69 6D 65 62 6F 6D
        62
   003E 00                 3370 	.db 0x00
   003F                    3371 __str_2:
   003F 47 65 6E 65 72 61  3372 	.ascii "Generating calculator"
        74 69 6E 67 20 63
        61 6C 63 75 6C 61
        74 6F 72
   0054 00                 3373 	.db 0x00
   0055                    3374 __str_3:
   0055 52 65 67 69 73 74  3375 	.ascii "Registering calculator"
        65 72 69 6E 67 20
        63 61 6C 63 75 6C
        61 74 6F 72
   006B 00                 3376 	.db 0x00
   006C                    3377 __str_4:
   006C 49 74 65 72 61 74  3378 	.ascii "Iterating state machines"
        69 6E 67 20 73 74
        61 74 65 20 6D 61
        63 68 69 6E 65 73
   0084 00                 3379 	.db 0x00
   0085                    3380 __str_5:
   0085 6C 6F 6F 70        3381 	.ascii "loop"
   0089 00                 3382 	.db 0x00
   008A                    3383 __str_6:
   008A 0A                 3384 	.db 0x0A
   008B 34 74 68 20 47 65  3385 	.ascii "4th Generation state machine test done."
        6E 65 72 61 74 69
        6F 6E 20 73 74 61
        74 65 20 6D 61 63
        68 69 6E 65 20 74
        65 73 74 20 64 6F
        6E 65 2E
   00B2 00                 3386 	.db 0x00
                           3387 	.area XINIT   (CODE)
   0000                    3388 __xinit__countdown:
   0000 05 00              3389 	.byte #0x05,#0x00
                           3390 	.area CABS    (ABS,CODE)
