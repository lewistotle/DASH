                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.0 #5416 (Mar 22 2009) (MINGW32)
                              4 ; This file was generated Mon Dec 28 02:58:58 2009
                              5 ;--------------------------------------------------------
                              6 	.module main_C8051F040
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _vTimer2ISR
                             13 	.globl _addTickCounter
                             14 	.globl _IsFull
                             15 	.globl _IsEmpty
                             16 	.globl _main
                             17 	.globl _P7_7
                             18 	.globl _P7_6
                             19 	.globl _P7_5
                             20 	.globl _P7_4
                             21 	.globl _P7_3
                             22 	.globl _P7_2
                             23 	.globl _P7_1
                             24 	.globl _P7_0
                             25 	.globl _CANTEST
                             26 	.globl _CANCCE
                             27 	.globl _CANDAR
                             28 	.globl _CANIF
                             29 	.globl _CANEIE
                             30 	.globl _CANSIE
                             31 	.globl _CANIE
                             32 	.globl _CANINIT
                             33 	.globl _SPIF
                             34 	.globl _WCOL
                             35 	.globl _MODF
                             36 	.globl _RXOVRN
                             37 	.globl _NSSMD1
                             38 	.globl _NSSMD0
                             39 	.globl _TXBMT
                             40 	.globl _SPIEN
                             41 	.globl _P6_7
                             42 	.globl _P6_6
                             43 	.globl _P6_5
                             44 	.globl _P6_4
                             45 	.globl _P6_3
                             46 	.globl _P6_2
                             47 	.globl _P6_1
                             48 	.globl _P6_0
                             49 	.globl _AD2EN
                             50 	.globl _AD2TM
                             51 	.globl _AD2INT
                             52 	.globl _AD2BUSY
                             53 	.globl _AD2CM2
                             54 	.globl _AD2CM1
                             55 	.globl _AD2CM0
                             56 	.globl _AD2WINT
                             57 	.globl _AD0EN
                             58 	.globl _AD0TM
                             59 	.globl _AD0INT
                             60 	.globl _AD0BUSY
                             61 	.globl _AD0CM1
                             62 	.globl _AD0CM0
                             63 	.globl _AD0WINT
                             64 	.globl _AD0LJST
                             65 	.globl _P5_7
                             66 	.globl _P5_6
                             67 	.globl _P5_5
                             68 	.globl _P5_4
                             69 	.globl _P5_3
                             70 	.globl _P5_2
                             71 	.globl _P5_1
                             72 	.globl _P5_0
                             73 	.globl _CF
                             74 	.globl _CR
                             75 	.globl _CCF5
                             76 	.globl _CCF4
                             77 	.globl _CCF3
                             78 	.globl _CCF2
                             79 	.globl _CCF1
                             80 	.globl _CCF0
                             81 	.globl _CY
                             82 	.globl _AC
                             83 	.globl _F0
                             84 	.globl _RS1
                             85 	.globl _RS0
                             86 	.globl _OV
                             87 	.globl _F1
                             88 	.globl _P
                             89 	.globl _P4_7
                             90 	.globl _P4_6
                             91 	.globl _P4_5
                             92 	.globl _P4_4
                             93 	.globl _P4_3
                             94 	.globl _P4_2
                             95 	.globl _P4_1
                             96 	.globl _P4_0
                             97 	.globl _TF4
                             98 	.globl _EXF4
                             99 	.globl _EXEN4
                            100 	.globl _TR4
                            101 	.globl _CT4
                            102 	.globl _CPRL4
                            103 	.globl _TF3
                            104 	.globl _EXF3
                            105 	.globl _EXEN3
                            106 	.globl _TR3
                            107 	.globl _CT3
                            108 	.globl _CPRL3
                            109 	.globl _TF2
                            110 	.globl _EXF2
                            111 	.globl _EXEN2
                            112 	.globl _TR2
                            113 	.globl _CT2
                            114 	.globl _CPRL2
                            115 	.globl _CANBOFF
                            116 	.globl _CANEWARN
                            117 	.globl _CANEPASS
                            118 	.globl _CANRXOK
                            119 	.globl _CANTXOK
                            120 	.globl _BUSY
                            121 	.globl _ENSMB
                            122 	.globl _STA
                            123 	.globl _STO
                            124 	.globl _SI
                            125 	.globl _AA
                            126 	.globl _SMBFTE
                            127 	.globl _SMBTOE
                            128 	.globl _PT2
                            129 	.globl _PS
                            130 	.globl _PS0
                            131 	.globl _PT1
                            132 	.globl _PX1
                            133 	.globl _PT0
                            134 	.globl _PX0
                            135 	.globl _P3_7
                            136 	.globl _P3_6
                            137 	.globl _P3_5
                            138 	.globl _P3_4
                            139 	.globl _P3_3
                            140 	.globl _P3_2
                            141 	.globl _P3_1
                            142 	.globl _P3_0
                            143 	.globl _EA
                            144 	.globl _ET2
                            145 	.globl _ES
                            146 	.globl _ES0
                            147 	.globl _ET1
                            148 	.globl _EX1
                            149 	.globl _ET0
                            150 	.globl _EX0
                            151 	.globl _P2_7
                            152 	.globl _P2_6
                            153 	.globl _P2_5
                            154 	.globl _P2_4
                            155 	.globl _P2_3
                            156 	.globl _P2_2
                            157 	.globl _P2_1
                            158 	.globl _P2_0
                            159 	.globl _S1MODE
                            160 	.globl _MCE1
                            161 	.globl _REN1
                            162 	.globl _TB81
                            163 	.globl _RB81
                            164 	.globl _TI1
                            165 	.globl _RI1
                            166 	.globl _SM00
                            167 	.globl _SM10
                            168 	.globl _SM20
                            169 	.globl _REN
                            170 	.globl _REN0
                            171 	.globl _TB80
                            172 	.globl _RB80
                            173 	.globl _TI
                            174 	.globl _TI0
                            175 	.globl _RI
                            176 	.globl _RI0
                            177 	.globl _P1_7
                            178 	.globl _P1_6
                            179 	.globl _P1_5
                            180 	.globl _P1_4
                            181 	.globl _P1_3
                            182 	.globl _P1_2
                            183 	.globl _P1_1
                            184 	.globl _P1_0
                            185 	.globl _CP2EN
                            186 	.globl _CP2OUT
                            187 	.globl _CP2RIF
                            188 	.globl _CP2FIF
                            189 	.globl _CP2HYP1
                            190 	.globl _CP2HYP0
                            191 	.globl _CP2HYN1
                            192 	.globl _CP2HYN0
                            193 	.globl _CP1EN
                            194 	.globl _CP1OUT
                            195 	.globl _CP1RIF
                            196 	.globl _CP1FIF
                            197 	.globl _CP1HYP1
                            198 	.globl _CP1HYP0
                            199 	.globl _CP1HYN1
                            200 	.globl _CP1HYN0
                            201 	.globl _CP0EN
                            202 	.globl _CP0OUT
                            203 	.globl _CP0RIF
                            204 	.globl _CP0FIF
                            205 	.globl _CP0HYP1
                            206 	.globl _CP0HYP0
                            207 	.globl _CP0HYN1
                            208 	.globl _CP0HYN0
                            209 	.globl _TF1
                            210 	.globl _TR1
                            211 	.globl _TF0
                            212 	.globl _TR0
                            213 	.globl _IE1
                            214 	.globl _IT1
                            215 	.globl _IE0
                            216 	.globl _IT0
                            217 	.globl _P0_7
                            218 	.globl _P0_6
                            219 	.globl _P0_5
                            220 	.globl _P0_4
                            221 	.globl _P0_3
                            222 	.globl _P0_2
                            223 	.globl _P0_1
                            224 	.globl _P0_0
                            225 	.globl _P7
                            226 	.globl _P6
                            227 	.globl _XBR3
                            228 	.globl _XBR2
                            229 	.globl _XBR1
                            230 	.globl _XBR0
                            231 	.globl _P5
                            232 	.globl _P4
                            233 	.globl _FLACL
                            234 	.globl _P3MDIN
                            235 	.globl _P2MDIN
                            236 	.globl _P1MDIN
                            237 	.globl _P3MDOUT
                            238 	.globl _P2MDOUT
                            239 	.globl _P1MDOUT
                            240 	.globl _P0MDOUT
                            241 	.globl _P7MDOUT
                            242 	.globl _P6MDOUT
                            243 	.globl _P5MDOUT
                            244 	.globl _P4MDOUT
                            245 	.globl _CLKSEL
                            246 	.globl _SFRPGCN
                            247 	.globl _OSCXCN
                            248 	.globl _OSCICL
                            249 	.globl _OSCICN
                            250 	.globl _CPT2MD
                            251 	.globl _CPT2CN
                            252 	.globl _ADC2CN
                            253 	.globl _TMR4H
                            254 	.globl _TMR4L
                            255 	.globl _RCAP4H
                            256 	.globl _RCAP4L
                            257 	.globl _TMR4CF
                            258 	.globl _TMR4CN
                            259 	.globl _ADC2LT
                            260 	.globl _ADC2GT
                            261 	.globl _ADC2
                            262 	.globl _ADC2CF
                            263 	.globl _AMX2SL
                            264 	.globl _AMX2CF
                            265 	.globl _CPT1MD
                            266 	.globl _CPT1CN
                            267 	.globl _CAN0CN
                            268 	.globl _CAN0TST
                            269 	.globl _CAN0ADR
                            270 	.globl _CAN0DATH
                            271 	.globl _CAN0DATL
                            272 	.globl _DAC1CN
                            273 	.globl _DAC1H
                            274 	.globl _DAC1L
                            275 	.globl _TMR3H
                            276 	.globl _TMR3L
                            277 	.globl _RCAP3H
                            278 	.globl _RCAP3L
                            279 	.globl _TMR3CF
                            280 	.globl _TMR3CN
                            281 	.globl _CAN0STA
                            282 	.globl _SBUF1
                            283 	.globl _SCON1
                            284 	.globl _CPT0MD
                            285 	.globl _CPT0CN
                            286 	.globl _PCA0CPH1
                            287 	.globl _PCA0CPL1
                            288 	.globl _PCA0CPH0
                            289 	.globl _PCA0CPL0
                            290 	.globl _PCA0H
                            291 	.globl _PCA0L
                            292 	.globl _SPI0CN
                            293 	.globl _RSTSRC
                            294 	.globl _PCA0CPH4
                            295 	.globl _PCA0CPL4
                            296 	.globl _PCA0CPH3
                            297 	.globl _PCA0CPL3
                            298 	.globl _PCA0CPH2
                            299 	.globl _PCA0CPL2
                            300 	.globl _ADC0CN
                            301 	.globl _PCA0CPH5
                            302 	.globl _PCA0CPL5
                            303 	.globl _PCA0CPM5
                            304 	.globl _PCA0CPM4
                            305 	.globl _PCA0CPM3
                            306 	.globl _PCA0CPM2
                            307 	.globl _PCA0CPM1
                            308 	.globl _PCA0CPM0
                            309 	.globl _PCA0MD
                            310 	.globl _PCA0CN
                            311 	.globl _HVA0CN
                            312 	.globl _DAC0CN
                            313 	.globl _DAC0H
                            314 	.globl _DAC0L
                            315 	.globl _REF0CN
                            316 	.globl _SMB0CR
                            317 	.globl _TH2
                            318 	.globl _TMR2H
                            319 	.globl _TL2
                            320 	.globl _TMR2L
                            321 	.globl _RCAP2H
                            322 	.globl _RCAP2L
                            323 	.globl _TMR2CF
                            324 	.globl _TMR2CN
                            325 	.globl _ADC0LTH
                            326 	.globl _ADC0LTL
                            327 	.globl _ADC0GTH
                            328 	.globl _ADC0GTL
                            329 	.globl _SMB0ADR
                            330 	.globl _SMB0DAT
                            331 	.globl _SMB0STA
                            332 	.globl _SMB0CN
                            333 	.globl _ADC0H
                            334 	.globl _ADC0L
                            335 	.globl _AMX0PRT
                            336 	.globl _ADC0CF
                            337 	.globl _AMX0SL
                            338 	.globl _AMX0CF
                            339 	.globl _SADEN0
                            340 	.globl _FLSCL
                            341 	.globl _SADDR0
                            342 	.globl _EMI0CF
                            343 	.globl __XPAGE
                            344 	.globl _EMI0CN
                            345 	.globl _EMI0TC
                            346 	.globl _SPI0CKR
                            347 	.globl _SPI0DAT
                            348 	.globl _SPI0CFG
                            349 	.globl _SBUF
                            350 	.globl _SBUF0
                            351 	.globl _SCON
                            352 	.globl _SCON0
                            353 	.globl _SSTA0
                            354 	.globl _PSCTL
                            355 	.globl _CKCON
                            356 	.globl _TH1
                            357 	.globl _TH0
                            358 	.globl _TL1
                            359 	.globl _TL0
                            360 	.globl _TMOD
                            361 	.globl _TCON
                            362 	.globl _WDTCN
                            363 	.globl _EIP2
                            364 	.globl _EIP1
                            365 	.globl _B
                            366 	.globl _EIE2
                            367 	.globl _EIE1
                            368 	.globl _ACC
                            369 	.globl _PSW
                            370 	.globl _IP
                            371 	.globl _P3
                            372 	.globl _IE
                            373 	.globl _P2
                            374 	.globl _P1
                            375 	.globl _PCON
                            376 	.globl _SFRLAST
                            377 	.globl _SFRNEXT
                            378 	.globl _SFRPAGE
                            379 	.globl _DPH
                            380 	.globl _DPL
                            381 	.globl _SP
                            382 	.globl _P0
                            383 	.globl _tickCounterToIncrement
                            384 	.globl _task_UART_gets_projectSpecific_PARM_3
                            385 	.globl _task_UART_gets_projectSpecific_PARM_2
                            386 	.globl _task_UART_puts_projectSpecific_PARM_2
                            387 	.globl _task_UART_putchar_projectSpecific_PARM_2
                            388 	.globl _Succ_PARM_2
                            389 	.globl _UARTtempBuffer
                            390 	.globl _pwm_setDutyCycleAsPercentage_projectSpecific_PARM_2
                            391 	.globl _pwm_adjustDutyCycle_projectSpecific_PARM_2
                            392 	.globl _pwm_setDutyCycle_projectSpecific_PARM_2
                            393 	.globl _taskSwitcherTickHook
                            394 	.globl _gpio_init_projectSpecific
                            395 	.globl _pwm_init_projectSpecific
                            396 	.globl _pwm_incrementDutyCycle_projectSpecific
                            397 	.globl _pwm_decrementDutyCycle_projectSpecific
                            398 	.globl _pwm_getDutyCycle_projectSpecific
                            399 	.globl _pwm_setDutyCycle_projectSpecific
                            400 	.globl _pwm_adjustDutyCycle_projectSpecific
                            401 	.globl _pwm_setDutyCycleAsPercentage_projectSpecific
                            402 	.globl _pwm_getDutyCycleAsPercentage_projectSpecific
                            403 	.globl _task_UART_init_projectSpecific
                            404 	.globl _task_UART_core_projectSpecific
                            405 	.globl _task_UART_putchar_projectSpecific
                            406 	.globl _task_UART_puts_projectSpecific
                            407 	.globl _task_UART_getchar_projectSpecific
                            408 	.globl _task_UART_gets_projectSpecific
                            409 	.globl _task_UART_isLineReady
                            410 	.globl _UART0_Init
                            411 	.globl _UART1_Init
                            412 	.globl _putchar
                            413 ;--------------------------------------------------------
                            414 ; special function registers
                            415 ;--------------------------------------------------------
                            416 	.area RSEG    (DATA)
                    0080    417 _P0	=	0x0080
                    0081    418 _SP	=	0x0081
                    0082    419 _DPL	=	0x0082
                    0083    420 _DPH	=	0x0083
                    0084    421 _SFRPAGE	=	0x0084
                    0085    422 _SFRNEXT	=	0x0085
                    0086    423 _SFRLAST	=	0x0086
                    0087    424 _PCON	=	0x0087
                    0090    425 _P1	=	0x0090
                    00A0    426 _P2	=	0x00a0
                    00A8    427 _IE	=	0x00a8
                    00B0    428 _P3	=	0x00b0
                    00B8    429 _IP	=	0x00b8
                    00D0    430 _PSW	=	0x00d0
                    00E0    431 _ACC	=	0x00e0
                    00E6    432 _EIE1	=	0x00e6
                    00E7    433 _EIE2	=	0x00e7
                    00F0    434 _B	=	0x00f0
                    00F6    435 _EIP1	=	0x00f6
                    00F7    436 _EIP2	=	0x00f7
                    00FF    437 _WDTCN	=	0x00ff
                    0088    438 _TCON	=	0x0088
                    0089    439 _TMOD	=	0x0089
                    008A    440 _TL0	=	0x008a
                    008B    441 _TL1	=	0x008b
                    008C    442 _TH0	=	0x008c
                    008D    443 _TH1	=	0x008d
                    008E    444 _CKCON	=	0x008e
                    008F    445 _PSCTL	=	0x008f
                    0091    446 _SSTA0	=	0x0091
                    0098    447 _SCON0	=	0x0098
                    0098    448 _SCON	=	0x0098
                    0099    449 _SBUF0	=	0x0099
                    0099    450 _SBUF	=	0x0099
                    009A    451 _SPI0CFG	=	0x009a
                    009B    452 _SPI0DAT	=	0x009b
                    009D    453 _SPI0CKR	=	0x009d
                    00A1    454 _EMI0TC	=	0x00a1
                    00A2    455 _EMI0CN	=	0x00a2
                    00A2    456 __XPAGE	=	0x00a2
                    00A3    457 _EMI0CF	=	0x00a3
                    00A9    458 _SADDR0	=	0x00a9
                    00B7    459 _FLSCL	=	0x00b7
                    00B9    460 _SADEN0	=	0x00b9
                    00BA    461 _AMX0CF	=	0x00ba
                    00BB    462 _AMX0SL	=	0x00bb
                    00BC    463 _ADC0CF	=	0x00bc
                    00BD    464 _AMX0PRT	=	0x00bd
                    00BE    465 _ADC0L	=	0x00be
                    00BF    466 _ADC0H	=	0x00bf
                    00C0    467 _SMB0CN	=	0x00c0
                    00C1    468 _SMB0STA	=	0x00c1
                    00C2    469 _SMB0DAT	=	0x00c2
                    00C3    470 _SMB0ADR	=	0x00c3
                    00C4    471 _ADC0GTL	=	0x00c4
                    00C5    472 _ADC0GTH	=	0x00c5
                    00C6    473 _ADC0LTL	=	0x00c6
                    00C7    474 _ADC0LTH	=	0x00c7
                    00C8    475 _TMR2CN	=	0x00c8
                    00C9    476 _TMR2CF	=	0x00c9
                    00CA    477 _RCAP2L	=	0x00ca
                    00CB    478 _RCAP2H	=	0x00cb
                    00CC    479 _TMR2L	=	0x00cc
                    00CC    480 _TL2	=	0x00cc
                    00CD    481 _TMR2H	=	0x00cd
                    00CD    482 _TH2	=	0x00cd
                    00CF    483 _SMB0CR	=	0x00cf
                    00D1    484 _REF0CN	=	0x00d1
                    00D2    485 _DAC0L	=	0x00d2
                    00D3    486 _DAC0H	=	0x00d3
                    00D4    487 _DAC0CN	=	0x00d4
                    00D6    488 _HVA0CN	=	0x00d6
                    00D8    489 _PCA0CN	=	0x00d8
                    00D9    490 _PCA0MD	=	0x00d9
                    00DA    491 _PCA0CPM0	=	0x00da
                    00DB    492 _PCA0CPM1	=	0x00db
                    00DC    493 _PCA0CPM2	=	0x00dc
                    00DD    494 _PCA0CPM3	=	0x00dd
                    00DE    495 _PCA0CPM4	=	0x00de
                    00DF    496 _PCA0CPM5	=	0x00df
                    00E1    497 _PCA0CPL5	=	0x00e1
                    00E2    498 _PCA0CPH5	=	0x00e2
                    00E8    499 _ADC0CN	=	0x00e8
                    00E9    500 _PCA0CPL2	=	0x00e9
                    00EA    501 _PCA0CPH2	=	0x00ea
                    00EB    502 _PCA0CPL3	=	0x00eb
                    00EC    503 _PCA0CPH3	=	0x00ec
                    00ED    504 _PCA0CPL4	=	0x00ed
                    00EE    505 _PCA0CPH4	=	0x00ee
                    00EF    506 _RSTSRC	=	0x00ef
                    00F8    507 _SPI0CN	=	0x00f8
                    00F9    508 _PCA0L	=	0x00f9
                    00FA    509 _PCA0H	=	0x00fa
                    00FB    510 _PCA0CPL0	=	0x00fb
                    00FC    511 _PCA0CPH0	=	0x00fc
                    00FD    512 _PCA0CPL1	=	0x00fd
                    00FE    513 _PCA0CPH1	=	0x00fe
                    0088    514 _CPT0CN	=	0x0088
                    0089    515 _CPT0MD	=	0x0089
                    0098    516 _SCON1	=	0x0098
                    0099    517 _SBUF1	=	0x0099
                    00C0    518 _CAN0STA	=	0x00c0
                    00C8    519 _TMR3CN	=	0x00c8
                    00C9    520 _TMR3CF	=	0x00c9
                    00CA    521 _RCAP3L	=	0x00ca
                    00CB    522 _RCAP3H	=	0x00cb
                    00CC    523 _TMR3L	=	0x00cc
                    00CD    524 _TMR3H	=	0x00cd
                    00D2    525 _DAC1L	=	0x00d2
                    00D3    526 _DAC1H	=	0x00d3
                    00D4    527 _DAC1CN	=	0x00d4
                    00D8    528 _CAN0DATL	=	0x00d8
                    00D9    529 _CAN0DATH	=	0x00d9
                    00DA    530 _CAN0ADR	=	0x00da
                    00DB    531 _CAN0TST	=	0x00db
                    00F8    532 _CAN0CN	=	0x00f8
                    0088    533 _CPT1CN	=	0x0088
                    0089    534 _CPT1MD	=	0x0089
                    00BA    535 _AMX2CF	=	0x00ba
                    00BB    536 _AMX2SL	=	0x00bb
                    00BC    537 _ADC2CF	=	0x00bc
                    00BE    538 _ADC2	=	0x00be
                    00C4    539 _ADC2GT	=	0x00c4
                    00C6    540 _ADC2LT	=	0x00c6
                    00C8    541 _TMR4CN	=	0x00c8
                    00C9    542 _TMR4CF	=	0x00c9
                    00CA    543 _RCAP4L	=	0x00ca
                    00CB    544 _RCAP4H	=	0x00cb
                    00CC    545 _TMR4L	=	0x00cc
                    00CD    546 _TMR4H	=	0x00cd
                    00E8    547 _ADC2CN	=	0x00e8
                    0088    548 _CPT2CN	=	0x0088
                    0089    549 _CPT2MD	=	0x0089
                    008A    550 _OSCICN	=	0x008a
                    008B    551 _OSCICL	=	0x008b
                    008C    552 _OSCXCN	=	0x008c
                    0096    553 _SFRPGCN	=	0x0096
                    0097    554 _CLKSEL	=	0x0097
                    009C    555 _P4MDOUT	=	0x009c
                    009D    556 _P5MDOUT	=	0x009d
                    009E    557 _P6MDOUT	=	0x009e
                    009F    558 _P7MDOUT	=	0x009f
                    00A4    559 _P0MDOUT	=	0x00a4
                    00A5    560 _P1MDOUT	=	0x00a5
                    00A6    561 _P2MDOUT	=	0x00a6
                    00A7    562 _P3MDOUT	=	0x00a7
                    00AD    563 _P1MDIN	=	0x00ad
                    00AE    564 _P2MDIN	=	0x00ae
                    00AF    565 _P3MDIN	=	0x00af
                    00B7    566 _FLACL	=	0x00b7
                    00C8    567 _P4	=	0x00c8
                    00D8    568 _P5	=	0x00d8
                    00E1    569 _XBR0	=	0x00e1
                    00E2    570 _XBR1	=	0x00e2
                    00E3    571 _XBR2	=	0x00e3
                    00E4    572 _XBR3	=	0x00e4
                    00E8    573 _P6	=	0x00e8
                    00F8    574 _P7	=	0x00f8
                            575 ;--------------------------------------------------------
                            576 ; special function bits
                            577 ;--------------------------------------------------------
                            578 	.area RSEG    (DATA)
                    0080    579 _P0_0	=	0x0080
                    0081    580 _P0_1	=	0x0081
                    0082    581 _P0_2	=	0x0082
                    0083    582 _P0_3	=	0x0083
                    0084    583 _P0_4	=	0x0084
                    0085    584 _P0_5	=	0x0085
                    0086    585 _P0_6	=	0x0086
                    0087    586 _P0_7	=	0x0087
                    0088    587 _IT0	=	0x0088
                    0089    588 _IE0	=	0x0089
                    008A    589 _IT1	=	0x008a
                    008B    590 _IE1	=	0x008b
                    008C    591 _TR0	=	0x008c
                    008D    592 _TF0	=	0x008d
                    008E    593 _TR1	=	0x008e
                    008F    594 _TF1	=	0x008f
                    0088    595 _CP0HYN0	=	0x0088
                    0089    596 _CP0HYN1	=	0x0089
                    008A    597 _CP0HYP0	=	0x008a
                    008B    598 _CP0HYP1	=	0x008b
                    008C    599 _CP0FIF	=	0x008c
                    008D    600 _CP0RIF	=	0x008d
                    008E    601 _CP0OUT	=	0x008e
                    008F    602 _CP0EN	=	0x008f
                    0088    603 _CP1HYN0	=	0x0088
                    0089    604 _CP1HYN1	=	0x0089
                    008A    605 _CP1HYP0	=	0x008a
                    008B    606 _CP1HYP1	=	0x008b
                    008C    607 _CP1FIF	=	0x008c
                    008D    608 _CP1RIF	=	0x008d
                    008E    609 _CP1OUT	=	0x008e
                    008F    610 _CP1EN	=	0x008f
                    0088    611 _CP2HYN0	=	0x0088
                    0089    612 _CP2HYN1	=	0x0089
                    008A    613 _CP2HYP0	=	0x008a
                    008B    614 _CP2HYP1	=	0x008b
                    008C    615 _CP2FIF	=	0x008c
                    008D    616 _CP2RIF	=	0x008d
                    008E    617 _CP2OUT	=	0x008e
                    008F    618 _CP2EN	=	0x008f
                    0090    619 _P1_0	=	0x0090
                    0091    620 _P1_1	=	0x0091
                    0092    621 _P1_2	=	0x0092
                    0093    622 _P1_3	=	0x0093
                    0094    623 _P1_4	=	0x0094
                    0095    624 _P1_5	=	0x0095
                    0096    625 _P1_6	=	0x0096
                    0097    626 _P1_7	=	0x0097
                    0098    627 _RI0	=	0x0098
                    0098    628 _RI	=	0x0098
                    0099    629 _TI0	=	0x0099
                    0099    630 _TI	=	0x0099
                    009A    631 _RB80	=	0x009a
                    009B    632 _TB80	=	0x009b
                    009C    633 _REN0	=	0x009c
                    009C    634 _REN	=	0x009c
                    009D    635 _SM20	=	0x009d
                    009E    636 _SM10	=	0x009e
                    009F    637 _SM00	=	0x009f
                    0098    638 _RI1	=	0x0098
                    0099    639 _TI1	=	0x0099
                    009A    640 _RB81	=	0x009a
                    009B    641 _TB81	=	0x009b
                    009C    642 _REN1	=	0x009c
                    009D    643 _MCE1	=	0x009d
                    009F    644 _S1MODE	=	0x009f
                    00A0    645 _P2_0	=	0x00a0
                    00A1    646 _P2_1	=	0x00a1
                    00A2    647 _P2_2	=	0x00a2
                    00A3    648 _P2_3	=	0x00a3
                    00A4    649 _P2_4	=	0x00a4
                    00A5    650 _P2_5	=	0x00a5
                    00A6    651 _P2_6	=	0x00a6
                    00A7    652 _P2_7	=	0x00a7
                    00A8    653 _EX0	=	0x00a8
                    00A9    654 _ET0	=	0x00a9
                    00AA    655 _EX1	=	0x00aa
                    00AB    656 _ET1	=	0x00ab
                    00AC    657 _ES0	=	0x00ac
                    00AC    658 _ES	=	0x00ac
                    00AD    659 _ET2	=	0x00ad
                    00AF    660 _EA	=	0x00af
                    00B0    661 _P3_0	=	0x00b0
                    00B1    662 _P3_1	=	0x00b1
                    00B2    663 _P3_2	=	0x00b2
                    00B3    664 _P3_3	=	0x00b3
                    00B4    665 _P3_4	=	0x00b4
                    00B5    666 _P3_5	=	0x00b5
                    00B6    667 _P3_6	=	0x00b6
                    00B7    668 _P3_7	=	0x00b7
                    00B8    669 _PX0	=	0x00b8
                    00B9    670 _PT0	=	0x00b9
                    00BA    671 _PX1	=	0x00ba
                    00BB    672 _PT1	=	0x00bb
                    00BC    673 _PS0	=	0x00bc
                    00BC    674 _PS	=	0x00bc
                    00BD    675 _PT2	=	0x00bd
                    00C0    676 _SMBTOE	=	0x00c0
                    00C1    677 _SMBFTE	=	0x00c1
                    00C2    678 _AA	=	0x00c2
                    00C3    679 _SI	=	0x00c3
                    00C4    680 _STO	=	0x00c4
                    00C5    681 _STA	=	0x00c5
                    00C6    682 _ENSMB	=	0x00c6
                    00C7    683 _BUSY	=	0x00c7
                    00C3    684 _CANTXOK	=	0x00c3
                    00C4    685 _CANRXOK	=	0x00c4
                    00C5    686 _CANEPASS	=	0x00c5
                    00C6    687 _CANEWARN	=	0x00c6
                    00C7    688 _CANBOFF	=	0x00c7
                    00C8    689 _CPRL2	=	0x00c8
                    00C9    690 _CT2	=	0x00c9
                    00CA    691 _TR2	=	0x00ca
                    00CB    692 _EXEN2	=	0x00cb
                    00CE    693 _EXF2	=	0x00ce
                    00CF    694 _TF2	=	0x00cf
                    00C8    695 _CPRL3	=	0x00c8
                    00C9    696 _CT3	=	0x00c9
                    00CA    697 _TR3	=	0x00ca
                    00CB    698 _EXEN3	=	0x00cb
                    00CE    699 _EXF3	=	0x00ce
                    00CF    700 _TF3	=	0x00cf
                    00C8    701 _CPRL4	=	0x00c8
                    00C9    702 _CT4	=	0x00c9
                    00CA    703 _TR4	=	0x00ca
                    00CB    704 _EXEN4	=	0x00cb
                    00CE    705 _EXF4	=	0x00ce
                    00CF    706 _TF4	=	0x00cf
                    00C8    707 _P4_0	=	0x00c8
                    00C9    708 _P4_1	=	0x00c9
                    00CA    709 _P4_2	=	0x00ca
                    00CB    710 _P4_3	=	0x00cb
                    00CC    711 _P4_4	=	0x00cc
                    00CD    712 _P4_5	=	0x00cd
                    00CE    713 _P4_6	=	0x00ce
                    00CF    714 _P4_7	=	0x00cf
                    00D0    715 _P	=	0x00d0
                    00D1    716 _F1	=	0x00d1
                    00D2    717 _OV	=	0x00d2
                    00D3    718 _RS0	=	0x00d3
                    00D4    719 _RS1	=	0x00d4
                    00D5    720 _F0	=	0x00d5
                    00D6    721 _AC	=	0x00d6
                    00D7    722 _CY	=	0x00d7
                    00D8    723 _CCF0	=	0x00d8
                    00D9    724 _CCF1	=	0x00d9
                    00DA    725 _CCF2	=	0x00da
                    00DB    726 _CCF3	=	0x00db
                    00DC    727 _CCF4	=	0x00dc
                    00DD    728 _CCF5	=	0x00dd
                    00DE    729 _CR	=	0x00de
                    00DF    730 _CF	=	0x00df
                    00D8    731 _P5_0	=	0x00d8
                    00D9    732 _P5_1	=	0x00d9
                    00DA    733 _P5_2	=	0x00da
                    00DB    734 _P5_3	=	0x00db
                    00DC    735 _P5_4	=	0x00dc
                    00DD    736 _P5_5	=	0x00dd
                    00DE    737 _P5_6	=	0x00de
                    00DF    738 _P5_7	=	0x00df
                    00E8    739 _AD0LJST	=	0x00e8
                    00E9    740 _AD0WINT	=	0x00e9
                    00EA    741 _AD0CM0	=	0x00ea
                    00EB    742 _AD0CM1	=	0x00eb
                    00EC    743 _AD0BUSY	=	0x00ec
                    00ED    744 _AD0INT	=	0x00ed
                    00EE    745 _AD0TM	=	0x00ee
                    00EF    746 _AD0EN	=	0x00ef
                    00E8    747 _AD2WINT	=	0x00e8
                    00E9    748 _AD2CM0	=	0x00e9
                    00EA    749 _AD2CM1	=	0x00ea
                    00EB    750 _AD2CM2	=	0x00eb
                    00EC    751 _AD2BUSY	=	0x00ec
                    00ED    752 _AD2INT	=	0x00ed
                    00EE    753 _AD2TM	=	0x00ee
                    00EF    754 _AD2EN	=	0x00ef
                    00E8    755 _P6_0	=	0x00e8
                    00E9    756 _P6_1	=	0x00e9
                    00EA    757 _P6_2	=	0x00ea
                    00EB    758 _P6_3	=	0x00eb
                    00EC    759 _P6_4	=	0x00ec
                    00ED    760 _P6_5	=	0x00ed
                    00EE    761 _P6_6	=	0x00ee
                    00EF    762 _P6_7	=	0x00ef
                    00F8    763 _SPIEN	=	0x00f8
                    00F9    764 _TXBMT	=	0x00f9
                    00FA    765 _NSSMD0	=	0x00fa
                    00FB    766 _NSSMD1	=	0x00fb
                    00FC    767 _RXOVRN	=	0x00fc
                    00FD    768 _MODF	=	0x00fd
                    00FE    769 _WCOL	=	0x00fe
                    00FF    770 _SPIF	=	0x00ff
                    00F8    771 _CANINIT	=	0x00f8
                    00F9    772 _CANIE	=	0x00f9
                    00FA    773 _CANSIE	=	0x00fa
                    00FB    774 _CANEIE	=	0x00fb
                    00FC    775 _CANIF	=	0x00fc
                    00FD    776 _CANDAR	=	0x00fd
                    00FE    777 _CANCCE	=	0x00fe
                    00FF    778 _CANTEST	=	0x00ff
                    00F8    779 _P7_0	=	0x00f8
                    00F9    780 _P7_1	=	0x00f9
                    00FA    781 _P7_2	=	0x00fa
                    00FB    782 _P7_3	=	0x00fb
                    00FC    783 _P7_4	=	0x00fc
                    00FD    784 _P7_5	=	0x00fd
                    00FE    785 _P7_6	=	0x00fe
                    00FF    786 _P7_7	=	0x00ff
                            787 ;--------------------------------------------------------
                            788 ; overlayable register banks
                            789 ;--------------------------------------------------------
                            790 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     791 	.ds 8
                            792 ;--------------------------------------------------------
                            793 ; overlayable bit register bank
                            794 ;--------------------------------------------------------
                            795 	.area BIT_BANK	(REL,OVR,DATA)
   0022                     796 bits:
   0022                     797 	.ds 1
                    8000    798 	b0 = bits[0]
                    8100    799 	b1 = bits[1]
                    8200    800 	b2 = bits[2]
                    8300    801 	b3 = bits[3]
                    8400    802 	b4 = bits[4]
                    8500    803 	b5 = bits[5]
                    8600    804 	b6 = bits[6]
                    8700    805 	b7 = bits[7]
                            806 ;--------------------------------------------------------
                            807 ; internal ram data
                            808 ;--------------------------------------------------------
                            809 	.area DSEG    (DATA)
   0048                     810 _task_UART_core_projectSpecific_sloc0_1_0:
   0048                     811 	.ds 1
   0049                     812 _task_UART_core_projectSpecific_sloc1_1_0:
   0049                     813 	.ds 3
   004C                     814 _task_UART_core_projectSpecific_sloc2_1_0:
   004C                     815 	.ds 2
   004E                     816 _task_UART_core_projectSpecific_sloc3_1_0:
   004E                     817 	.ds 3
   0051                     818 _task_UART_getchar_projectSpecific_sloc0_1_0:
   0051                     819 	.ds 3
   0054                     820 _task_UART_getchar_projectSpecific_sloc1_1_0:
   0054                     821 	.ds 2
   0056                     822 _task_UART_getchar_projectSpecific_sloc2_1_0:
   0056                     823 	.ds 3
   0059                     824 _task_UART_gets_projectSpecific_sloc0_1_0:
   0059                     825 	.ds 1
   005A                     826 _task_UART_gets_projectSpecific_sloc1_1_0:
   005A                     827 	.ds 2
                            828 ;--------------------------------------------------------
                            829 ; overlayable items in internal ram 
                            830 ;--------------------------------------------------------
                            831 	.area	OSEG    (OVR,DATA)
   0018                     832 _addTickCounter_sloc0_1_0::
   0018                     833 	.ds 3
                            834 ;--------------------------------------------------------
                            835 ; Stack segment in internal ram 
                            836 ;--------------------------------------------------------
                            837 	.area	SSEG	(DATA)
   005C                     838 __start__stack:
   005C                     839 	.ds	1
                            840 
                            841 ;--------------------------------------------------------
                            842 ; indirectly addressable internal ram data
                            843 ;--------------------------------------------------------
                            844 	.area ISEG    (DATA)
                            845 ;--------------------------------------------------------
                            846 ; absolute internal ram data
                            847 ;--------------------------------------------------------
                            848 	.area IABS    (ABS,DATA)
                            849 	.area IABS    (ABS,DATA)
                            850 ;--------------------------------------------------------
                            851 ; bit data
                            852 ;--------------------------------------------------------
                            853 	.area BSEG    (BIT)
   0000                     854 _timeForTickProcessing:
   0000                     855 	.ds 1
   0001                     856 _pwm_init_projectSpecific_initialized_1_1:
   0001                     857 	.ds 1
   0002                     858 _task_UART_init_projectSpecific_timer1initialized_1_1:
   0002                     859 	.ds 1
   0003                     860 _task_UART_isLineReady_sloc0_1_0:
   0003                     861 	.ds 1
                            862 ;--------------------------------------------------------
                            863 ; paged external ram data
                            864 ;--------------------------------------------------------
                            865 	.area PSEG    (PAG,XDATA)
                            866 ;--------------------------------------------------------
                            867 ; external ram data
                            868 ;--------------------------------------------------------
                            869 	.area XSEG    (XDATA)
   013E                     870 _main_delayTimer_2_4:
   013E                     871 	.ds 2
   0140                     872 _pwm_init_projectSpecific_channelNumber_1_1:
   0140                     873 	.ds 1
   0141                     874 _pwm_setDutyCycle_projectSpecific_PARM_2:
   0141                     875 	.ds 1
   0142                     876 _pwm_adjustDutyCycle_projectSpecific_PARM_2:
   0142                     877 	.ds 1
   0143                     878 _pwm_setDutyCycleAsPercentage_projectSpecific_PARM_2:
   0143                     879 	.ds 1
   0144                     880 _UARTtempBuffer::
   0144                     881 	.ds 1100
   0590                     882 _IsEmpty_Q_1_1:
   0590                     883 	.ds 3
   0593                     884 _IsFull_Q_1_1:
   0593                     885 	.ds 3
   0596                     886 _Succ_PARM_2:
   0596                     887 	.ds 3
   0599                     888 _Succ_Value_1_1:
   0599                     889 	.ds 2
   059B                     890 _transmitBuffer:
   059B                     891 	.ds 1101
   09E8                     892 _receiveBuffer:
   09E8                     893 	.ds 11
   09F3                     894 _transmitBuffers:
   09F3                     895 	.ds 11
   09FE                     896 _receiveBuffers:
   09FE                     897 	.ds 11
   0A09                     898 _charSent:
   0A09                     899 	.ds 1
   0A0A                     900 _lineReady:
   0A0A                     901 	.ds 1
   0A0B                     902 _task_UART_init_projectSpecific_channelNumber_1_1:
   0A0B                     903 	.ds 1
   0A0C                     904 _task_UART_core_projectSpecific_channelNumber_1_1:
   0A0C                     905 	.ds 1
   0A0D                     906 _task_UART_core_projectSpecific_Q_4_4:
   0A0D                     907 	.ds 3
   0A10                     908 _task_UART_putchar_projectSpecific_PARM_2:
   0A10                     909 	.ds 1
   0A11                     910 _task_UART_putchar_projectSpecific_channelNumber_1_1:
   0A11                     911 	.ds 1
   0A12                     912 _task_UART_putchar_projectSpecific_Q_2_2:
   0A12                     913 	.ds 3
   0A15                     914 _task_UART_puts_projectSpecific_PARM_2:
   0A15                     915 	.ds 3
   0A18                     916 _task_UART_puts_projectSpecific_channelNumber_1_1:
   0A18                     917 	.ds 1
   0A19                     918 _task_UART_getchar_projectSpecific_channelNumber_1_1:
   0A19                     919 	.ds 1
   0A1A                     920 _task_UART_getchar_projectSpecific_Q_2_2:
   0A1A                     921 	.ds 3
   0A1D                     922 _task_UART_gets_projectSpecific_PARM_2:
   0A1D                     923 	.ds 3
   0A20                     924 _task_UART_gets_projectSpecific_PARM_3:
   0A20                     925 	.ds 2
   0A22                     926 _task_UART_gets_projectSpecific_channelNumber_1_1:
   0A22                     927 	.ds 1
   0A23                     928 _task_UART_isLineReady_channelNumber_1_1:
   0A23                     929 	.ds 1
   0A24                     930 _putchar_c_1_1:
   0A24                     931 	.ds 1
   0A25                     932 _prvSetupTimerInterrupt_ucOriginalSFRPage_1_1:
   0A25                     933 	.ds 1
   0A26                     934 _tickCounterToIncrement::
   0A26                     935 	.ds 30
   0A44                     936 _addTickCounter_pointerToIncrement_1_1:
   0A44                     937 	.ds 3
                            938 ;--------------------------------------------------------
                            939 ; absolute external ram data
                            940 ;--------------------------------------------------------
                            941 	.area XABS    (ABS,XDATA)
                            942 ;--------------------------------------------------------
                            943 ; external initialized ram data
                            944 ;--------------------------------------------------------
                            945 	.area XISEG   (XDATA)
   0F2B                     946 _countdown:
   0F2B                     947 	.ds 2
                            948 	.area HOME    (CODE)
                            949 	.area GSINIT0 (CODE)
                            950 	.area GSINIT1 (CODE)
                            951 	.area GSINIT2 (CODE)
                            952 	.area GSINIT3 (CODE)
                            953 	.area GSINIT4 (CODE)
                            954 	.area GSINIT5 (CODE)
                            955 	.area GSINIT  (CODE)
                            956 	.area GSFINAL (CODE)
                            957 	.area CSEG    (CODE)
                            958 ;--------------------------------------------------------
                            959 ; interrupt vector 
                            960 ;--------------------------------------------------------
                            961 	.area HOME    (CODE)
   0000                     962 __interrupt_vect:
   0000 02 00 33            963 	ljmp	__sdcc_gsinit_startup
   0003 32                  964 	reti
   0004                     965 	.ds	7
   000B 32                  966 	reti
   000C                     967 	.ds	7
   0013 32                  968 	reti
   0014                     969 	.ds	7
   001B 32                  970 	reti
   001C                     971 	.ds	7
   0023 32                  972 	reti
   0024                     973 	.ds	7
   002B 02 21 89            974 	ljmp	_vTimer2ISR
                            975 ;--------------------------------------------------------
                            976 ; global & static initialisations
                            977 ;--------------------------------------------------------
                            978 	.area HOME    (CODE)
                            979 	.area GSINIT  (CODE)
                            980 	.area GSFINAL (CODE)
                            981 	.area GSINIT  (CODE)
                            982 	.globl __sdcc_gsinit_startup
                            983 	.globl __sdcc_program_startup
                            984 	.globl __start__stack
                            985 	.globl __mcs51_genXINIT
                            986 	.globl __mcs51_genXRAMCLEAR
                            987 	.globl __mcs51_genRAMCLEAR
                            988 ;------------------------------------------------------------
                            989 ;Allocation info for local variables in function 'task_UART_init_projectSpecific'
                            990 ;------------------------------------------------------------
                            991 ;channelNumber             Allocated with name '_task_UART_init_projectSpecific_channelNumber_1_1'
                            992 ;Q                         Allocated with name '_task_UART_init_projectSpecific_Q_1_1'
                            993 ;SFRPAGE_SAVE              Allocated with name '_task_UART_init_projectSpecific_SFRPAGE_SAVE_3_3'
                            994 ;------------------------------------------------------------
                            995 ;	../src/projectSpecificHardwareInterface_C8051F040.c:323: static bool	timer1initialized = false ;
   00A7 C2 02               996 	clr	_task_UART_init_projectSpecific_timer1initialized_1_1
                            997 	.area GSFINAL (CODE)
   00A9 02 00 2E            998 	ljmp	__sdcc_program_startup
                            999 ;--------------------------------------------------------
                           1000 ; Home
                           1001 ;--------------------------------------------------------
                           1002 	.area HOME    (CODE)
                           1003 	.area HOME    (CODE)
   002E                    1004 __sdcc_program_startup:
   002E 12 17 4D           1005 	lcall	_main
                           1006 ;	return from main will lock up
   0031 80 FE              1007 	sjmp .
                           1008 ;--------------------------------------------------------
                           1009 ; code
                           1010 ;--------------------------------------------------------
                           1011 	.area CSEG    (CODE)
                           1012 ;------------------------------------------------------------
                           1013 ;Allocation info for local variables in function 'main'
                           1014 ;------------------------------------------------------------
                           1015 ;bomb                      Allocated with name '_main_bomb_1_1'
                           1016 ;calculator                Allocated with name '_main_calculator_1_1'
                           1017 ;delayTimer                Allocated with name '_main_delayTimer_2_4'
                           1018 ;------------------------------------------------------------
                           1019 ;	../src/main_C8051F040.c:27: void main(	void)
                           1020 ;	-----------------------------------------
                           1021 ;	 function main
                           1022 ;	-----------------------------------------
   174D                    1023 _main:
                    0002   1024 	ar2 = 0x02
                    0003   1025 	ar3 = 0x03
                    0004   1026 	ar4 = 0x04
                    0005   1027 	ar5 = 0x05
                    0006   1028 	ar6 = 0x06
                    0007   1029 	ar7 = 0x07
                    0000   1030 	ar0 = 0x00
                    0001   1031 	ar1 = 0x01
                           1032 ;	../src/main_C8051F040.c:33: WDTCN = 0xDE ;	// Disable the watchdog timer
   174D 75 FF DE           1033 	mov	_WDTCN,#0xDE
                           1034 ;	../src/main_C8051F040.c:34: WDTCN = 0xAD ;
   1750 75 FF AD           1035 	mov	_WDTCN,#0xAD
                           1036 ;	../src/main_C8051F040.c:35: WDTCN = 0xFF ;	// Disable any future ability to modify the watchdog timer
   1753 75 FF FF           1037 	mov	_WDTCN,#0xFF
                           1038 ;	../src/main_C8051F040.c:37: prvSetupSystemClock() ;
   1756 12 20 CD           1039 	lcall	_prvSetupSystemClock
                           1040 ;	../src/main_C8051F040.c:38: gpio_init() ;
   1759 12 17 CF           1041 	lcall	_gpio_init_projectSpecific
                           1042 ;	../src/main_C8051F040.c:39: pwm_init(ioMapping_PWM_TO_TICK_SYNCHRONIZER_CHANNEL) ;
   175C 75 82 00           1043 	mov	dpl,#0x00
   175F 12 2E 81           1044 	lcall	_pwm_init
                           1045 ;	../src/main_C8051F040.c:40: prvSetupTimerInterrupt() ;
   1762 12 20 EC           1046 	lcall	_prvSetupTimerInterrupt
                           1047 ;	../src/main_C8051F040.c:41: task_UART_init(0) ;
   1765 75 82 00           1048 	mov	dpl,#0x00
   1768 12 2F 14           1049 	lcall	_task_UART_init
                           1050 ;	../src/main_C8051F040.c:43: portENABLE_INTERRUPTS() ;
   176B D2 AF              1051 	setb	_EA
                           1052 ;	../src/main_C8051F040.c:45: puts("4th Generation state machine test started.") ;
   176D 90 40 BA           1053 	mov	dptr,#__str_0
   1770 75 F0 80           1054 	mov	b,#0x80
   1773 12 34 4C           1055 	lcall	_puts
                           1056 ;	../src/main_C8051F040.c:47: bomb = STATE_MACHINE_CREATE_INSTANCE_OF(timeBomb) ;
   1776 12 2B 18           1057 	lcall	_createInstanceOf_timeBomb
                           1058 ;	../src/main_C8051F040.c:54: calculator = STATE_MACHINE_CREATE_INSTANCE_OF(calculator) ;
   1779 12 22 13           1059 	lcall	_createInstanceOf_calculator
   177C AA 82              1060 	mov	r2,dpl
   177E AB 83              1061 	mov	r3,dph
   1780 AC F0              1062 	mov	r4,b
                           1063 ;	../src/main_C8051F040.c:56: if(calculator)
   1782 EA                 1064 	mov	a,r2
   1783 4B                 1065 	orl	a,r3
   1784 4C                 1066 	orl	a,r4
   1785 60 09              1067 	jz	00108$
                           1068 ;	../src/main_C8051F040.c:58: REGISTER_STATE_MACHINE(calculator) ;
   1787 8A 82              1069 	mov	dpl,r2
   1789 8B 83              1070 	mov	dph,r3
   178B 8C F0              1071 	mov	b,r4
   178D 12 05 CE           1072 	lcall	_registerStateMachine
                           1073 ;	../src/main_C8051F040.c:61: while(true)
   1790                    1074 00108$:
                           1075 ;	../src/main_C8051F040.c:65: if(timeForTickProcessing)
                           1076 ;	../src/main_C8051F040.c:67: timeForTickProcessing = false ;
   1790 10 00 02           1077 	jbc	_timeForTickProcessing,00121$
   1793 80 FB              1078 	sjmp	00108$
   1795                    1079 00121$:
                           1080 ;	../src/main_C8051F040.c:71: if(delayTimer++ > 500)
   1795 90 01 3E           1081 	mov	dptr,#_main_delayTimer_2_4
   1798 E0                 1082 	movx	a,@dptr
   1799 FA                 1083 	mov	r2,a
   179A A3                 1084 	inc	dptr
   179B E0                 1085 	movx	a,@dptr
   179C FB                 1086 	mov	r3,a
   179D 90 01 3E           1087 	mov	dptr,#_main_delayTimer_2_4
   17A0 74 01              1088 	mov	a,#0x01
   17A2 2A                 1089 	add	a,r2
   17A3 F0                 1090 	movx	@dptr,a
   17A4 E4                 1091 	clr	a
   17A5 3B                 1092 	addc	a,r3
   17A6 A3                 1093 	inc	dptr
   17A7 F0                 1094 	movx	@dptr,a
   17A8 C3                 1095 	clr	c
   17A9 74 F4              1096 	mov	a,#0xF4
   17AB 9A                 1097 	subb	a,r2
   17AC 74 81              1098 	mov	a,#(0x01 ^ 0x80)
   17AE 8B F0              1099 	mov	b,r3
   17B0 63 F0 80           1100 	xrl	b,#0x80
   17B3 95 F0              1101 	subb	a,b
   17B5 50 D9              1102 	jnc	00108$
                           1103 ;	../src/main_C8051F040.c:73: delayTimer = 0 ;
   17B7 90 01 3E           1104 	mov	dptr,#_main_delayTimer_2_4
   17BA E4                 1105 	clr	a
   17BB F0                 1106 	movx	@dptr,a
   17BC A3                 1107 	inc	dptr
   17BD F0                 1108 	movx	@dptr,a
                           1109 ;	../src/main_C8051F040.c:75: puts("loop") ;
   17BE 90 40 E5           1110 	mov	dptr,#__str_1
   17C1 75 F0 80           1111 	mov	b,#0x80
   17C4 12 34 4C           1112 	lcall	_puts
                           1113 ;	../src/main_C8051F040.c:77: ITERATE_ALL_STATE_MACHINES() ;
   17C7 12 06 9A           1114 	lcall	_iterateAllStateMachines
                           1115 ;	../src/main_C8051F040.c:100: puts("\n4th Generation state machine test done.") ;
   17CA 80 C4              1116 	sjmp	00108$
                           1117 ;------------------------------------------------------------
                           1118 ;Allocation info for local variables in function 'taskSwitcherTickHook'
                           1119 ;------------------------------------------------------------
                           1120 ;------------------------------------------------------------
                           1121 ;	../src/main_C8051F040.c:104: void taskSwitcherTickHook(	void)
                           1122 ;	-----------------------------------------
                           1123 ;	 function taskSwitcherTickHook
                           1124 ;	-----------------------------------------
   17CC                    1125 _taskSwitcherTickHook:
                           1126 ;	../src/main_C8051F040.c:106: timeForTickProcessing = true ;
   17CC D2 00              1127 	setb	_timeForTickProcessing
   17CE 22                 1128 	ret
                           1129 ;------------------------------------------------------------
                           1130 ;Allocation info for local variables in function 'gpio_init_projectSpecific'
                           1131 ;------------------------------------------------------------
                           1132 ;SFRPAGE_SAVE              Allocated with name '_gpio_init_projectSpecific_SFRPAGE_SAVE_1_1'
                           1133 ;------------------------------------------------------------
                           1134 ;	../src/projectSpecificHardwareInterface_C8051F040.c:17: void gpio_init_projectSpecific(	void)
                           1135 ;	-----------------------------------------
                           1136 ;	 function gpio_init_projectSpecific
                           1137 ;	-----------------------------------------
   17CF                    1138 _gpio_init_projectSpecific:
                           1139 ;	../src/projectSpecificHardwareInterface_C8051F040.c:21: SFRPAGE_SAVE = SFRPAGE ;
   17CF AA 84              1140 	mov	r2,_SFRPAGE
                           1141 ;	../src/projectSpecificHardwareInterface_C8051F040.c:23: SFRPAGE	 = SPI0_PAGE ;
   17D1 75 84 00           1142 	mov	_SFRPAGE,#0x00
                           1143 ;	../src/projectSpecificHardwareInterface_C8051F040.c:24: SPI0CN	 = 0x00 ;	// Set the SPI module into 3 pin mode so NSS doesn't get assigned to a pin in the crossbar setup below
   17D4 75 F8 00           1144 	mov	_SPI0CN,#0x00
                           1145 ;	../src/projectSpecificHardwareInterface_C8051F040.c:26: SFRPAGE	 = CONFIG_PAGE ;
   17D7 75 84 0F           1146 	mov	_SFRPAGE,#0x0F
                           1147 ;	../src/projectSpecificHardwareInterface_C8051F040.c:27: XBR0	 = 0x00 ;	// Start with a clean slate
   17DA 75 E1 00           1148 	mov	_XBR0,#0x00
                           1149 ;	../src/projectSpecificHardwareInterface_C8051F040.c:28: XBR1	 = 0x00 ;
   17DD 75 E2 00           1150 	mov	_XBR1,#0x00
                           1151 ;	../src/projectSpecificHardwareInterface_C8051F040.c:29: XBR2	 = 0x00 ;
   17E0 75 E3 00           1152 	mov	_XBR2,#0x00
                           1153 ;	../src/projectSpecificHardwareInterface_C8051F040.c:30: XBR3	 = 0x00 ;
   17E3 75 E4 00           1154 	mov	_XBR3,#0x00
                           1155 ;	../src/projectSpecificHardwareInterface_C8051F040.c:32: XBR0	|= 0x04 ;	// Route UART0 to P0.0-P0.1
   17E6 43 E1 04           1156 	orl	_XBR0,#0x04
                           1157 ;	../src/projectSpecificHardwareInterface_C8051F040.c:33: XBR0	|= 0x02 ;	// Route SPI0 to P0.2-P0.4
   17E9 43 E1 02           1158 	orl	_XBR0,#0x02
                           1159 ;	../src/projectSpecificHardwareInterface_C8051F040.c:34: XBR0	|= 0x01 ;	// Route SMB0 to P0.5-P0.6
   17EC 43 E1 01           1160 	orl	_XBR0,#0x01
                           1161 ;	../src/projectSpecificHardwareInterface_C8051F040.c:35: XBR2	|= 0x04 ;	// Route UART1 to P0.7-P1.0
   17EF 43 E3 04           1162 	orl	_XBR2,#0x04
                           1163 ;	../src/projectSpecificHardwareInterface_C8051F040.c:36: XBR0	|= 0x30 ;	// Route CEXn to P1.1-P1.6
   17F2 43 E1 30           1164 	orl	_XBR0,#0x30
                           1165 ;	../src/projectSpecificHardwareInterface_C8051F040.c:37: XBR0	|= 0x80 ;	// Route CP0 to P1.7
   17F5 43 E1 80           1166 	orl	_XBR0,#0x80
                           1167 ;	../src/projectSpecificHardwareInterface_C8051F040.c:38: XBR3	|= 0x08 ;	// Route CP2 to P2.0
   17F8 43 E4 08           1168 	orl	_XBR3,#0x08
                           1169 ;	../src/projectSpecificHardwareInterface_C8051F040.c:39: XBR1	|= 0x04 ;	// Route INT0# to P2.1
   17FB 43 E2 04           1170 	orl	_XBR1,#0x04
                           1171 ;	../src/projectSpecificHardwareInterface_C8051F040.c:40: XBR1	|= 0x20 ;	// Route T2 from P2.2
   17FE 43 E2 20           1172 	orl	_XBR1,#0x20
                           1173 ;	../src/projectSpecificHardwareInterface_C8051F040.c:41: XBR3	|= 0x01 ;	// Route T3 to P2.3
   1801 43 E4 01           1174 	orl	_XBR3,#0x01
                           1175 ;	../src/projectSpecificHardwareInterface_C8051F040.c:43: P0MDOUT |= 0x01 ;	// Set TX0 (P0.0) to push-pull
   1804 43 A4 01           1176 	orl	_P0MDOUT,#0x01
                           1177 ;	../src/projectSpecificHardwareInterface_C8051F040.c:45: P1MDOUT	|= 0x02 ;	// Set CEX0 (P1.1) to push-pull
   1807 43 A5 02           1178 	orl	_P1MDOUT,#0x02
                           1179 ;	../src/projectSpecificHardwareInterface_C8051F040.c:46: P1MDOUT	|= 0x04 ;	// Set CEX1 (P1.2) to push-pull
   180A 43 A5 04           1180 	orl	_P1MDOUT,#0x04
                           1181 ;	../src/projectSpecificHardwareInterface_C8051F040.c:47: P1MDOUT	|= 0x08 ;	// Set CEX2 (P1.3) to push-pull
   180D 43 A5 08           1182 	orl	_P1MDOUT,#0x08
                           1183 ;	../src/projectSpecificHardwareInterface_C8051F040.c:48: P1MDOUT	|= 0x10 ;	// Set CEX3 (P1.4) to push-pull
   1810 43 A5 10           1184 	orl	_P1MDOUT,#0x10
                           1185 ;	../src/projectSpecificHardwareInterface_C8051F040.c:49: P1MDOUT	|= 0x20 ;	// Set CEX4 (P1.5) to push-pull
   1813 43 A5 20           1186 	orl	_P1MDOUT,#0x20
                           1187 ;	../src/projectSpecificHardwareInterface_C8051F040.c:50: P1MDOUT |= 0x40 ;	// Set CEX5 (P1.6) to push-pull
   1816 43 A5 40           1188 	orl	_P1MDOUT,#0x40
                           1189 ;	../src/projectSpecificHardwareInterface_C8051F040.c:52: P1MDOUT |= 0x80 ;	// Set TX1 (P1.7) to push-pull
   1819 43 A5 80           1190 	orl	_P1MDOUT,#0x80
                           1191 ;	../src/projectSpecificHardwareInterface_C8051F040.c:53: P2MDOUT	&= ~0x02 ;	// Set INT0# (P2.1) to be a digital input
                           1192 ;	../src/projectSpecificHardwareInterface_C8051F040.c:54: P2MDOUT	&= ~0x04 ;	// Set T2 (P2.2) to be a digital input
   181C 53 A6 F9           1193 	anl	_P2MDOUT,#(0xFD&0xFB)
                           1194 ;	../src/projectSpecificHardwareInterface_C8051F040.c:55: P2MDOUT	|= 0x08 ;	// Set P2.3 to be the Timer3 output pin
   181F 43 A6 08           1195 	orl	_P2MDOUT,#0x08
                           1196 ;	../src/projectSpecificHardwareInterface_C8051F040.c:57: P3MDIN	 = 0x00 ;	// Configure as analog inputs. This forces the weak pullup for these pins to be disconnected
   1822 75 AF 00           1197 	mov	_P3MDIN,#0x00
                           1198 ;	../src/projectSpecificHardwareInterface_C8051F040.c:58: P3MDOUT	 = 0x00 ;	// Force the output driver for these pins to open drain output mode
   1825 75 A7 00           1199 	mov	_P3MDOUT,#0x00
                           1200 ;	../src/projectSpecificHardwareInterface_C8051F040.c:59: P3		 = 0xFF ;	// Force the input driver for these pins to high impedance
   1828 75 B0 FF           1201 	mov	_P3,#0xFF
                           1202 ;	../src/projectSpecificHardwareInterface_C8051F040.c:61: XBR3	|= 0x80 ;	// Configure CAN TX pin (CTX) as push-pull digital output
   182B 43 E4 80           1203 	orl	_XBR3,#0x80
                           1204 ;	../src/projectSpecificHardwareInterface_C8051F040.c:63: P4MDOUT	|= 0xFF ;	// Set LCD drive pins to push-pull
   182E E5 9C              1205 	mov	a,_P4MDOUT
   1830 75 9C FF           1206 	mov	_P4MDOUT,#0xFF
                           1207 ;	../src/projectSpecificHardwareInterface_C8051F040.c:64: P5MDOUT	|= 0xFF ;	// Set state machine debug pins to push-pull
   1833 E5 9D              1208 	mov	a,_P5MDOUT
   1835 75 9D FF           1209 	mov	_P5MDOUT,#0xFF
                           1210 ;	../src/projectSpecificHardwareInterface_C8051F040.c:65: P6MDOUT	|= 0xFF ;	// Set general purpose debug pins to push-pull
   1838 E5 9E              1211 	mov	a,_P6MDOUT
   183A 75 9E FF           1212 	mov	_P6MDOUT,#0xFF
                           1213 ;	../src/projectSpecificHardwareInterface_C8051F040.c:67: P4		 = 0x00 ;	// Set all debugging pins to low
   183D 75 C8 00           1214 	mov	_P4,#0x00
                           1215 ;	../src/projectSpecificHardwareInterface_C8051F040.c:68: P5		 = 0x00 ;
   1840 75 D8 00           1216 	mov	_P5,#0x00
                           1217 ;	../src/projectSpecificHardwareInterface_C8051F040.c:69: P6		 = 0x00 ;
   1843 75 E8 00           1218 	mov	_P6,#0x00
                           1219 ;	../src/projectSpecificHardwareInterface_C8051F040.c:71: P2MDIN	&= 0x0F ;	// set comparator analog inputs up as per Section 17.1.5 of the C8050F040 manual
   1846 53 AE 0F           1220 	anl	_P2MDIN,#0x0F
                           1221 ;	../src/projectSpecificHardwareInterface_C8051F040.c:72: P2MDOUT	&= 0x0F ;
   1849 53 A6 0F           1222 	anl	_P2MDOUT,#0x0F
                           1223 ;	../src/projectSpecificHardwareInterface_C8051F040.c:73: P2		|= 0xF0 ;
   184C 43 A0 F0           1224 	orl	_P2,#0xF0
                           1225 ;	../src/projectSpecificHardwareInterface_C8051F040.c:78: XBR2	|= 0x40 ;	// Enable Crossbar/low ports and turn on global weak pullups
   184F 43 E3 40           1226 	orl	_XBR2,#0x40
                           1227 ;	../src/projectSpecificHardwareInterface_C8051F040.c:79: SFRPAGE	 = SFRPAGE_SAVE ;
   1852 8A 84              1228 	mov	_SFRPAGE,r2
   1854 22                 1229 	ret
                           1230 ;------------------------------------------------------------
                           1231 ;Allocation info for local variables in function 'pwm_init_projectSpecific'
                           1232 ;------------------------------------------------------------
                           1233 ;channelNumber             Allocated with name '_pwm_init_projectSpecific_channelNumber_1_1'
                           1234 ;SFRPAGE_save              Allocated with name '_pwm_init_projectSpecific_SFRPAGE_save_1_1'
                           1235 ;------------------------------------------------------------
                           1236 ;	../src/projectSpecificHardwareInterface_C8051F040.c:83: void pwm_init_projectSpecific(								unsigned char channelNumber)
                           1237 ;	-----------------------------------------
                           1238 ;	 function pwm_init_projectSpecific
                           1239 ;	-----------------------------------------
   1855                    1240 _pwm_init_projectSpecific:
   1855 E5 82              1241 	mov	a,dpl
   1857 90 01 40           1242 	mov	dptr,#_pwm_init_projectSpecific_channelNumber_1_1
   185A F0                 1243 	movx	@dptr,a
                           1244 ;	../src/projectSpecificHardwareInterface_C8051F040.c:132: char		SFRPAGE_save = SFRPAGE ;	// Save current SFR Page
   185B AA 84              1245 	mov	r2,_SFRPAGE
                           1246 ;	../src/projectSpecificHardwareInterface_C8051F040.c:134: SFRPAGE = PCA0_PAGE ;
   185D 75 84 00           1247 	mov	_SFRPAGE,#0x00
                           1248 ;	../src/projectSpecificHardwareInterface_C8051F040.c:136: if(!initialized)
   1860 20 01 2A           1249 	jb	_pwm_init_projectSpecific_initialized_1_1,00102$
                           1250 ;	../src/projectSpecificHardwareInterface_C8051F040.c:138: PCA0CN = 0x00 ;				// Stop counter; clear all flags
   1863 75 D8 00           1251 	mov	_PCA0CN,#0x00
                           1252 ;	../src/projectSpecificHardwareInterface_C8051F040.c:139: PCA0MD = 0x08 ;				// Use SYSCLK as time base
   1866 75 D9 08           1253 	mov	_PCA0MD,#0x08
                           1254 ;	../src/projectSpecificHardwareInterface_C8051F040.c:141: PCA0CPM0 = 0x00 ;			// Module 0 = Off
   1869 75 DA 00           1255 	mov	_PCA0CPM0,#0x00
                           1256 ;	../src/projectSpecificHardwareInterface_C8051F040.c:142: PCA0CPH0 = 0x00 ;			// Configure initial PWM duty cycle = 100%. This will result in a continuously high output which, since it's active low, will disable any output.
   186C 75 FC 00           1257 	mov	_PCA0CPH0,#0x00
                           1258 ;	../src/projectSpecificHardwareInterface_C8051F040.c:144: PCA0CPM0 = 0x00 ;			// Module 1 = Off
   186F 75 DA 00           1259 	mov	_PCA0CPM0,#0x00
                           1260 ;	../src/projectSpecificHardwareInterface_C8051F040.c:145: PCA0CPH1 = 0x00 ;			// Configure initial PWM duty cycle = 100%. This will result in a continuously high output which, since it's active low, will disable any output.
   1872 75 FE 00           1261 	mov	_PCA0CPH1,#0x00
                           1262 ;	../src/projectSpecificHardwareInterface_C8051F040.c:147: PCA0CPM0 = 0x00 ;			// Module 2 = Off
   1875 75 DA 00           1263 	mov	_PCA0CPM0,#0x00
                           1264 ;	../src/projectSpecificHardwareInterface_C8051F040.c:148: PCA0CPH2 = 0x00 ;			// Configure initial PWM duty cycle = 100%. This will result in a continuously high output which, since it's active low, will disable any output.
   1878 75 EA 00           1265 	mov	_PCA0CPH2,#0x00
                           1266 ;	../src/projectSpecificHardwareInterface_C8051F040.c:150: PCA0CPM0 = 0x00 ;			// Module 3 = Off
   187B 75 DA 00           1267 	mov	_PCA0CPM0,#0x00
                           1268 ;	../src/projectSpecificHardwareInterface_C8051F040.c:151: PCA0CPH3 = 0x00 ;			// Configure initial PWM duty cycle = 100%. This will result in a continuously high output which, since it's active low, will disable any output.
   187E 75 EC 00           1269 	mov	_PCA0CPH3,#0x00
                           1270 ;	../src/projectSpecificHardwareInterface_C8051F040.c:153: PCA0CPM0 = 0x00 ;			// Module 4 = Off
   1881 75 DA 00           1271 	mov	_PCA0CPM0,#0x00
                           1272 ;	../src/projectSpecificHardwareInterface_C8051F040.c:154: PCA0CPH4 = 0x00 ;			// Configure initial PWM duty cycle = 100%. This will result in a continuously high output which, since it's active low, will disable any output.
   1884 75 EE 00           1273 	mov	_PCA0CPH4,#0x00
                           1274 ;	../src/projectSpecificHardwareInterface_C8051F040.c:156: PCA0CPM0 = 0x00 ;			// Module 5 = Off
   1887 75 DA 00           1275 	mov	_PCA0CPM0,#0x00
                           1276 ;	../src/projectSpecificHardwareInterface_C8051F040.c:157: PCA0CPH5 = 0x00 ;			// Configure initial PWM duty cycle = 100%. This will result in a continuously high output which, since it's active low, will disable any output.
   188A 75 E2 00           1277 	mov	_PCA0CPH5,#0x00
   188D                    1278 00102$:
                           1279 ;	../src/projectSpecificHardwareInterface_C8051F040.c:164: if(channelNumber == ioMapping_PWM_TO_TICK_SYNCHRONIZER_CHANNEL)
   188D 90 01 40           1280 	mov	dptr,#_pwm_init_projectSpecific_channelNumber_1_1
   1890 E0                 1281 	movx	a,@dptr
   1891 FB                 1282 	mov	r3,a
   1892 70 06              1283 	jnz	00104$
                           1284 ;	../src/projectSpecificHardwareInterface_C8051F040.c:170: PWM_B50_MODE		= 0x42 ;						// Module 1 = 8-bit PWM mode
   1894 75 DA 42           1285 	mov	_PCA0CPM0,#0x42
                           1286 ;	../src/projectSpecificHardwareInterface_C8051F040.c:171: PWM_B50_HIGH_BYTE	= FIFTY_PERCENT_DUTY_CYCLE ;	// Configure initial PWM duty cycle = 50%
   1897 75 FC 80           1287 	mov	_PCA0CPH0,#0x80
   189A                    1288 00104$:
                           1289 ;	../src/projectSpecificHardwareInterface_C8051F040.c:174: if(!initialized)
   189A 20 01 04           1290 	jb	_pwm_init_projectSpecific_initialized_1_1,00106$
                           1291 ;	../src/projectSpecificHardwareInterface_C8051F040.c:176: initialized = true ;
   189D D2 01              1292 	setb	_pwm_init_projectSpecific_initialized_1_1
                           1293 ;	../src/projectSpecificHardwareInterface_C8051F040.c:178: CR = 1 ;					// Start PCA counter
   189F D2 DE              1294 	setb	_CR
   18A1                    1295 00106$:
                           1296 ;	../src/projectSpecificHardwareInterface_C8051F040.c:181: SFRPAGE = SFRPAGE_save ;
   18A1 8A 84              1297 	mov	_SFRPAGE,r2
   18A3 22                 1298 	ret
                           1299 ;------------------------------------------------------------
                           1300 ;Allocation info for local variables in function 'pwm_incrementDutyCycle_projectSpecific'
                           1301 ;------------------------------------------------------------
                           1302 ;channelNumber             Allocated with name '_pwm_incrementDutyCycle_projectSpecific_channelNumber_1_1'
                           1303 ;------------------------------------------------------------
                           1304 ;	../src/projectSpecificHardwareInterface_C8051F040.c:185: void pwm_incrementDutyCycle_projectSpecific(				unsigned char channelNumber)
                           1305 ;	-----------------------------------------
                           1306 ;	 function pwm_incrementDutyCycle_projectSpecific
                           1307 ;	-----------------------------------------
   18A4                    1308 _pwm_incrementDutyCycle_projectSpecific:
                           1309 ;	../src/projectSpecificHardwareInterface_C8051F040.c:187: (void)channelNumber ;	// unused at this time
   18A4 22                 1310 	ret
                           1311 ;------------------------------------------------------------
                           1312 ;Allocation info for local variables in function 'pwm_decrementDutyCycle_projectSpecific'
                           1313 ;------------------------------------------------------------
                           1314 ;channelNumber             Allocated with name '_pwm_decrementDutyCycle_projectSpecific_channelNumber_1_1'
                           1315 ;------------------------------------------------------------
                           1316 ;	../src/projectSpecificHardwareInterface_C8051F040.c:191: void pwm_decrementDutyCycle_projectSpecific(				unsigned char channelNumber)
                           1317 ;	-----------------------------------------
                           1318 ;	 function pwm_decrementDutyCycle_projectSpecific
                           1319 ;	-----------------------------------------
   18A5                    1320 _pwm_decrementDutyCycle_projectSpecific:
                           1321 ;	../src/projectSpecificHardwareInterface_C8051F040.c:193: (void)channelNumber ;	// unused at this time
   18A5 22                 1322 	ret
                           1323 ;------------------------------------------------------------
                           1324 ;Allocation info for local variables in function 'pwm_getDutyCycle_projectSpecific'
                           1325 ;------------------------------------------------------------
                           1326 ;channelNumber             Allocated with name '_pwm_getDutyCycle_projectSpecific_channelNumber_1_1'
                           1327 ;------------------------------------------------------------
                           1328 ;	../src/projectSpecificHardwareInterface_C8051F040.c:197: uint8_t pwm_getDutyCycle_projectSpecific(					unsigned char channelNumber)
                           1329 ;	-----------------------------------------
                           1330 ;	 function pwm_getDutyCycle_projectSpecific
                           1331 ;	-----------------------------------------
   18A6                    1332 _pwm_getDutyCycle_projectSpecific:
                           1333 ;	../src/projectSpecificHardwareInterface_C8051F040.c:201: return 0 ;
   18A6 75 82 00           1334 	mov	dpl,#0x00
   18A9 22                 1335 	ret
                           1336 ;------------------------------------------------------------
                           1337 ;Allocation info for local variables in function 'pwm_setDutyCycle_projectSpecific'
                           1338 ;------------------------------------------------------------
                           1339 ;newDutyCycle              Allocated with name '_pwm_setDutyCycle_projectSpecific_PARM_2'
                           1340 ;channelNumber             Allocated with name '_pwm_setDutyCycle_projectSpecific_channelNumber_1_1'
                           1341 ;------------------------------------------------------------
                           1342 ;	../src/projectSpecificHardwareInterface_C8051F040.c:205: void pwm_setDutyCycle_projectSpecific(						unsigned char channelNumber, uint8_t newDutyCycle)
                           1343 ;	-----------------------------------------
                           1344 ;	 function pwm_setDutyCycle_projectSpecific
                           1345 ;	-----------------------------------------
   18AA                    1346 _pwm_setDutyCycle_projectSpecific:
                           1347 ;	../src/projectSpecificHardwareInterface_C8051F040.c:208: (void)newDutyCycle ;	// unused at this time
   18AA 22                 1348 	ret
                           1349 ;------------------------------------------------------------
                           1350 ;Allocation info for local variables in function 'pwm_adjustDutyCycle_projectSpecific'
                           1351 ;------------------------------------------------------------
                           1352 ;dutyCycleAdjustment       Allocated with name '_pwm_adjustDutyCycle_projectSpecific_PARM_2'
                           1353 ;channelNumber             Allocated with name '_pwm_adjustDutyCycle_projectSpecific_channelNumber_1_1'
                           1354 ;------------------------------------------------------------
                           1355 ;	../src/projectSpecificHardwareInterface_C8051F040.c:212: void pwm_adjustDutyCycle_projectSpecific(					unsigned char channelNumber, int8_t dutyCycleAdjustment)
                           1356 ;	-----------------------------------------
                           1357 ;	 function pwm_adjustDutyCycle_projectSpecific
                           1358 ;	-----------------------------------------
   18AB                    1359 _pwm_adjustDutyCycle_projectSpecific:
                           1360 ;	../src/projectSpecificHardwareInterface_C8051F040.c:215: (void)dutyCycleAdjustment ;	// unused at this time
   18AB 22                 1361 	ret
                           1362 ;------------------------------------------------------------
                           1363 ;Allocation info for local variables in function 'pwm_setDutyCycleAsPercentage_projectSpecific'
                           1364 ;------------------------------------------------------------
                           1365 ;newDutyCycle              Allocated with name '_pwm_setDutyCycleAsPercentage_projectSpecific_PARM_2'
                           1366 ;channelNumber             Allocated with name '_pwm_setDutyCycleAsPercentage_projectSpecific_channelNumber_1_1'
                           1367 ;------------------------------------------------------------
                           1368 ;	../src/projectSpecificHardwareInterface_C8051F040.c:219: void pwm_setDutyCycleAsPercentage_projectSpecific(			unsigned char channelNumber, unsigned char newDutyCycle)
                           1369 ;	-----------------------------------------
                           1370 ;	 function pwm_setDutyCycleAsPercentage_projectSpecific
                           1371 ;	-----------------------------------------
   18AC                    1372 _pwm_setDutyCycleAsPercentage_projectSpecific:
                           1373 ;	../src/projectSpecificHardwareInterface_C8051F040.c:222: (void)newDutyCycle ;		// unused at this time
   18AC 22                 1374 	ret
                           1375 ;------------------------------------------------------------
                           1376 ;Allocation info for local variables in function 'pwm_getDutyCycleAsPercentage_projectSpecific'
                           1377 ;------------------------------------------------------------
                           1378 ;channelNumber             Allocated with name '_pwm_getDutyCycleAsPercentage_projectSpecific_channelNumber_1_1'
                           1379 ;currentPercentage         Allocated with name '_pwm_getDutyCycleAsPercentage_projectSpecific_currentPercentage_1_1'
                           1380 ;divisor                   Allocated with name '_pwm_getDutyCycleAsPercentage_projectSpecific_divisor_1_1'
                           1381 ;------------------------------------------------------------
                           1382 ;	../src/projectSpecificHardwareInterface_C8051F040.c:226: unsigned char pwm_getDutyCycleAsPercentage_projectSpecific(	unsigned char channelNumber)
                           1383 ;	-----------------------------------------
                           1384 ;	 function pwm_getDutyCycleAsPercentage_projectSpecific
                           1385 ;	-----------------------------------------
   18AD                    1386 _pwm_getDutyCycleAsPercentage_projectSpecific:
                           1387 ;	../src/projectSpecificHardwareInterface_C8051F040.c:237: return (unsigned char)0 ;//min(currentPercentage, 100) ;
   18AD 75 82 00           1388 	mov	dpl,#0x00
   18B0 22                 1389 	ret
                           1390 ;------------------------------------------------------------
                           1391 ;Allocation info for local variables in function 'IsEmpty'
                           1392 ;------------------------------------------------------------
                           1393 ;Q                         Allocated with name '_IsEmpty_Q_1_1'
                           1394 ;------------------------------------------------------------
                           1395 ;	../src/projectSpecificHardwareInterface_C8051F040.c:273: unsigned char IsEmpty(QUEUE_TYPE* Q)
                           1396 ;	-----------------------------------------
                           1397 ;	 function IsEmpty
                           1398 ;	-----------------------------------------
   18B1                    1399 _IsEmpty:
   18B1 AA F0              1400 	mov	r2,b
   18B3 AB 83              1401 	mov	r3,dph
   18B5 E5 82              1402 	mov	a,dpl
   18B7 90 05 90           1403 	mov	dptr,#_IsEmpty_Q_1_1
   18BA F0                 1404 	movx	@dptr,a
   18BB A3                 1405 	inc	dptr
   18BC EB                 1406 	mov	a,r3
   18BD F0                 1407 	movx	@dptr,a
   18BE A3                 1408 	inc	dptr
   18BF EA                 1409 	mov	a,r2
   18C0 F0                 1410 	movx	@dptr,a
                           1411 ;	../src/projectSpecificHardwareInterface_C8051F040.c:275: return Q->Size == 0 ;
   18C1 90 05 90           1412 	mov	dptr,#_IsEmpty_Q_1_1
   18C4 E0                 1413 	movx	a,@dptr
   18C5 FA                 1414 	mov	r2,a
   18C6 A3                 1415 	inc	dptr
   18C7 E0                 1416 	movx	a,@dptr
   18C8 FB                 1417 	mov	r3,a
   18C9 A3                 1418 	inc	dptr
   18CA E0                 1419 	movx	a,@dptr
   18CB FC                 1420 	mov	r4,a
   18CC 74 06              1421 	mov	a,#0x06
   18CE 2A                 1422 	add	a,r2
   18CF FA                 1423 	mov	r2,a
   18D0 E4                 1424 	clr	a
   18D1 3B                 1425 	addc	a,r3
   18D2 FB                 1426 	mov	r3,a
   18D3 8A 82              1427 	mov	dpl,r2
   18D5 8B 83              1428 	mov	dph,r3
   18D7 8C F0              1429 	mov	b,r4
   18D9 12 3D 60           1430 	lcall	__gptrget
   18DC FA                 1431 	mov	r2,a
   18DD A3                 1432 	inc	dptr
   18DE 12 3D 60           1433 	lcall	__gptrget
   18E1 FB                 1434 	mov	r3,a
   18E2 E4                 1435 	clr	a
   18E3 BA 00 04           1436 	cjne	r2,#0x00,00103$
   18E6 BB 00 01           1437 	cjne	r3,#0x00,00103$
   18E9 04                 1438 	inc	a
   18EA                    1439 00103$:
   18EA F5 82              1440 	mov	dpl,a
   18EC 22                 1441 	ret
                           1442 ;------------------------------------------------------------
                           1443 ;Allocation info for local variables in function 'IsFull'
                           1444 ;------------------------------------------------------------
                           1445 ;Q                         Allocated with name '_IsFull_Q_1_1'
                           1446 ;------------------------------------------------------------
                           1447 ;	../src/projectSpecificHardwareInterface_C8051F040.c:278: unsigned char IsFull(QUEUE_TYPE* Q)
                           1448 ;	-----------------------------------------
                           1449 ;	 function IsFull
                           1450 ;	-----------------------------------------
   18ED                    1451 _IsFull:
   18ED AA F0              1452 	mov	r2,b
   18EF AB 83              1453 	mov	r3,dph
   18F1 E5 82              1454 	mov	a,dpl
   18F3 90 05 93           1455 	mov	dptr,#_IsFull_Q_1_1
   18F6 F0                 1456 	movx	@dptr,a
   18F7 A3                 1457 	inc	dptr
   18F8 EB                 1458 	mov	a,r3
   18F9 F0                 1459 	movx	@dptr,a
   18FA A3                 1460 	inc	dptr
   18FB EA                 1461 	mov	a,r2
   18FC F0                 1462 	movx	@dptr,a
                           1463 ;	../src/projectSpecificHardwareInterface_C8051F040.c:280: return Q->Size == Q->Capacity ;
   18FD 90 05 93           1464 	mov	dptr,#_IsFull_Q_1_1
   1900 E0                 1465 	movx	a,@dptr
   1901 FA                 1466 	mov	r2,a
   1902 A3                 1467 	inc	dptr
   1903 E0                 1468 	movx	a,@dptr
   1904 FB                 1469 	mov	r3,a
   1905 A3                 1470 	inc	dptr
   1906 E0                 1471 	movx	a,@dptr
   1907 FC                 1472 	mov	r4,a
   1908 74 06              1473 	mov	a,#0x06
   190A 2A                 1474 	add	a,r2
   190B FD                 1475 	mov	r5,a
   190C E4                 1476 	clr	a
   190D 3B                 1477 	addc	a,r3
   190E FE                 1478 	mov	r6,a
   190F 8C 07              1479 	mov	ar7,r4
   1911 8D 82              1480 	mov	dpl,r5
   1913 8E 83              1481 	mov	dph,r6
   1915 8F F0              1482 	mov	b,r7
   1917 12 3D 60           1483 	lcall	__gptrget
   191A FD                 1484 	mov	r5,a
   191B A3                 1485 	inc	dptr
   191C 12 3D 60           1486 	lcall	__gptrget
   191F FE                 1487 	mov	r6,a
   1920 8A 82              1488 	mov	dpl,r2
   1922 8B 83              1489 	mov	dph,r3
   1924 8C F0              1490 	mov	b,r4
   1926 12 3D 60           1491 	lcall	__gptrget
   1929 FA                 1492 	mov	r2,a
   192A A3                 1493 	inc	dptr
   192B 12 3D 60           1494 	lcall	__gptrget
   192E FB                 1495 	mov	r3,a
   192F ED                 1496 	mov	a,r5
   1930 B5 02 08           1497 	cjne	a,ar2,00103$
   1933 EE                 1498 	mov	a,r6
   1934 B5 03 04           1499 	cjne	a,ar3,00103$
   1937 74 01              1500 	mov	a,#0x01
   1939 80 01              1501 	sjmp	00104$
   193B                    1502 00103$:
   193B E4                 1503 	clr	a
   193C                    1504 00104$:
   193C F5 82              1505 	mov	dpl,a
   193E 22                 1506 	ret
                           1507 ;------------------------------------------------------------
                           1508 ;Allocation info for local variables in function 'Succ'
                           1509 ;------------------------------------------------------------
                           1510 ;Q                         Allocated with name '_Succ_PARM_2'
                           1511 ;Value                     Allocated with name '_Succ_Value_1_1'
                           1512 ;------------------------------------------------------------
                           1513 ;	../src/projectSpecificHardwareInterface_C8051F040.c:283: static unsigned short Succ(unsigned short Value, QUEUE_TYPE* Q)
                           1514 ;	-----------------------------------------
                           1515 ;	 function Succ
                           1516 ;	-----------------------------------------
   193F                    1517 _Succ:
   193F AA 83              1518 	mov	r2,dph
   1941 E5 82              1519 	mov	a,dpl
   1943 90 05 99           1520 	mov	dptr,#_Succ_Value_1_1
   1946 F0                 1521 	movx	@dptr,a
   1947 A3                 1522 	inc	dptr
   1948 EA                 1523 	mov	a,r2
   1949 F0                 1524 	movx	@dptr,a
                           1525 ;	../src/projectSpecificHardwareInterface_C8051F040.c:285: if(++Value == Q->Capacity)
   194A 90 05 99           1526 	mov	dptr,#_Succ_Value_1_1
   194D E0                 1527 	movx	a,@dptr
   194E 24 01              1528 	add	a,#0x01
   1950 F0                 1529 	movx	@dptr,a
   1951 A3                 1530 	inc	dptr
   1952 E0                 1531 	movx	a,@dptr
   1953 34 00              1532 	addc	a,#0x00
   1955 F0                 1533 	movx	@dptr,a
   1956 90 05 96           1534 	mov	dptr,#_Succ_PARM_2
   1959 E0                 1535 	movx	a,@dptr
   195A FA                 1536 	mov	r2,a
   195B A3                 1537 	inc	dptr
   195C E0                 1538 	movx	a,@dptr
   195D FB                 1539 	mov	r3,a
   195E A3                 1540 	inc	dptr
   195F E0                 1541 	movx	a,@dptr
   1960 FC                 1542 	mov	r4,a
   1961 8A 82              1543 	mov	dpl,r2
   1963 8B 83              1544 	mov	dph,r3
   1965 8C F0              1545 	mov	b,r4
   1967 12 3D 60           1546 	lcall	__gptrget
   196A FA                 1547 	mov	r2,a
   196B A3                 1548 	inc	dptr
   196C 12 3D 60           1549 	lcall	__gptrget
   196F FB                 1550 	mov	r3,a
   1970 90 05 99           1551 	mov	dptr,#_Succ_Value_1_1
   1973 E0                 1552 	movx	a,@dptr
   1974 FC                 1553 	mov	r4,a
   1975 A3                 1554 	inc	dptr
   1976 E0                 1555 	movx	a,@dptr
   1977 FD                 1556 	mov	r5,a
   1978 EC                 1557 	mov	a,r4
   1979 B5 02 0B           1558 	cjne	a,ar2,00102$
   197C ED                 1559 	mov	a,r5
   197D B5 03 07           1560 	cjne	a,ar3,00102$
                           1561 ;	../src/projectSpecificHardwareInterface_C8051F040.c:287: Value = 0 ;
   1980 90 05 99           1562 	mov	dptr,#_Succ_Value_1_1
   1983 E4                 1563 	clr	a
   1984 F0                 1564 	movx	@dptr,a
   1985 A3                 1565 	inc	dptr
   1986 F0                 1566 	movx	@dptr,a
   1987                    1567 00102$:
                           1568 ;	../src/projectSpecificHardwareInterface_C8051F040.c:290: return Value ;
   1987 90 05 99           1569 	mov	dptr,#_Succ_Value_1_1
   198A E0                 1570 	movx	a,@dptr
   198B FA                 1571 	mov	r2,a
   198C A3                 1572 	inc	dptr
   198D E0                 1573 	movx	a,@dptr
   198E 8A 82              1574 	mov	dpl,r2
   1990 F5 83              1575 	mov	dph,a
   1992 22                 1576 	ret
                           1577 ;------------------------------------------------------------
                           1578 ;Allocation info for local variables in function 'task_UART_init_projectSpecific'
                           1579 ;------------------------------------------------------------
                           1580 ;channelNumber             Allocated with name '_task_UART_init_projectSpecific_channelNumber_1_1'
                           1581 ;Q                         Allocated with name '_task_UART_init_projectSpecific_Q_1_1'
                           1582 ;SFRPAGE_SAVE              Allocated with name '_task_UART_init_projectSpecific_SFRPAGE_SAVE_3_3'
                           1583 ;------------------------------------------------------------
                           1584 ;	../src/projectSpecificHardwareInterface_C8051F040.c:321: void task_UART_init_projectSpecific(	unsigned char channelNumber)
                           1585 ;	-----------------------------------------
                           1586 ;	 function task_UART_init_projectSpecific
                           1587 ;	-----------------------------------------
   1993                    1588 _task_UART_init_projectSpecific:
   1993 E5 82              1589 	mov	a,dpl
   1995 90 0A 0B           1590 	mov	dptr,#_task_UART_init_projectSpecific_channelNumber_1_1
   1998 F0                 1591 	movx	@dptr,a
                           1592 ;	../src/projectSpecificHardwareInterface_C8051F040.c:325: QUEUE_TYPE*	Q = &transmitBuffers[channelNumber] ;
   1999 90 0A 0B           1593 	mov	dptr,#_task_UART_init_projectSpecific_channelNumber_1_1
   199C E0                 1594 	movx	a,@dptr
   199D FA                 1595 	mov	r2,a
   199E 75 F0 0B           1596 	mov	b,#0x0B
   19A1 A4                 1597 	mul	ab
   19A2 FB                 1598 	mov	r3,a
   19A3 24 F3              1599 	add	a,#_transmitBuffers
   19A5 FC                 1600 	mov	r4,a
   19A6 E4                 1601 	clr	a
   19A7 34 09              1602 	addc	a,#(_transmitBuffers >> 8)
   19A9 FD                 1603 	mov	r5,a
   19AA 7E 00              1604 	mov	r6,#0x00
                           1605 ;	../src/projectSpecificHardwareInterface_C8051F040.c:327: Q->Capacity	= TRANSMIT_BUFFER_SIZE ;
   19AC 8C 82              1606 	mov	dpl,r4
   19AE 8D 83              1607 	mov	dph,r5
   19B0 8E F0              1608 	mov	b,r6
   19B2 74 4C              1609 	mov	a,#0x4C
   19B4 12 31 54           1610 	lcall	__gptrput
   19B7 A3                 1611 	inc	dptr
   19B8 74 04              1612 	mov	a,#0x04
   19BA 12 31 54           1613 	lcall	__gptrput
                           1614 ;	../src/projectSpecificHardwareInterface_C8051F040.c:328: Q->Size		= 0 ;
   19BD 74 06              1615 	mov	a,#0x06
   19BF 2C                 1616 	add	a,r4
   19C0 FF                 1617 	mov	r7,a
   19C1 E4                 1618 	clr	a
   19C2 3D                 1619 	addc	a,r5
   19C3 F8                 1620 	mov	r0,a
   19C4 8E 01              1621 	mov	ar1,r6
   19C6 8F 82              1622 	mov	dpl,r7
   19C8 88 83              1623 	mov	dph,r0
   19CA 89 F0              1624 	mov	b,r1
   19CC E4                 1625 	clr	a
   19CD 12 31 54           1626 	lcall	__gptrput
   19D0 A3                 1627 	inc	dptr
   19D1 E4                 1628 	clr	a
   19D2 12 31 54           1629 	lcall	__gptrput
                           1630 ;	../src/projectSpecificHardwareInterface_C8051F040.c:329: Q->Front	= 1 ;
   19D5 74 02              1631 	mov	a,#0x02
   19D7 2C                 1632 	add	a,r4
   19D8 FF                 1633 	mov	r7,a
   19D9 E4                 1634 	clr	a
   19DA 3D                 1635 	addc	a,r5
   19DB F8                 1636 	mov	r0,a
   19DC 8E 01              1637 	mov	ar1,r6
   19DE 8F 82              1638 	mov	dpl,r7
   19E0 88 83              1639 	mov	dph,r0
   19E2 89 F0              1640 	mov	b,r1
   19E4 74 01              1641 	mov	a,#0x01
   19E6 12 31 54           1642 	lcall	__gptrput
   19E9 A3                 1643 	inc	dptr
   19EA E4                 1644 	clr	a
   19EB 12 31 54           1645 	lcall	__gptrput
                           1646 ;	../src/projectSpecificHardwareInterface_C8051F040.c:330: Q->Rear		= 0 ;
   19EE 74 04              1647 	mov	a,#0x04
   19F0 2C                 1648 	add	a,r4
   19F1 FF                 1649 	mov	r7,a
   19F2 E4                 1650 	clr	a
   19F3 3D                 1651 	addc	a,r5
   19F4 F8                 1652 	mov	r0,a
   19F5 8E 01              1653 	mov	ar1,r6
   19F7 8F 82              1654 	mov	dpl,r7
   19F9 88 83              1655 	mov	dph,r0
   19FB 89 F0              1656 	mov	b,r1
   19FD E4                 1657 	clr	a
   19FE 12 31 54           1658 	lcall	__gptrput
   1A01 A3                 1659 	inc	dptr
   1A02 E4                 1660 	clr	a
   1A03 12 31 54           1661 	lcall	__gptrput
                           1662 ;	../src/projectSpecificHardwareInterface_C8051F040.c:331: Q->Array	= transmitBuffer[0] ;
   1A06 74 08              1663 	mov	a,#0x08
   1A08 2C                 1664 	add	a,r4
   1A09 FC                 1665 	mov	r4,a
   1A0A E4                 1666 	clr	a
   1A0B 3D                 1667 	addc	a,r5
   1A0C FD                 1668 	mov	r5,a
   1A0D 8C 82              1669 	mov	dpl,r4
   1A0F 8D 83              1670 	mov	dph,r5
   1A11 8E F0              1671 	mov	b,r6
   1A13 74 9B              1672 	mov	a,#_transmitBuffer
   1A15 12 31 54           1673 	lcall	__gptrput
   1A18 A3                 1674 	inc	dptr
   1A19 74 05              1675 	mov	a,#(_transmitBuffer >> 8)
   1A1B 12 31 54           1676 	lcall	__gptrput
   1A1E A3                 1677 	inc	dptr
   1A1F E4                 1678 	clr	a
   1A20 12 31 54           1679 	lcall	__gptrput
                           1680 ;	../src/projectSpecificHardwareInterface_C8051F040.c:333: Q = &receiveBuffers[channelNumber] ;
   1A23 EB                 1681 	mov	a,r3
   1A24 24 FE              1682 	add	a,#_receiveBuffers
   1A26 FB                 1683 	mov	r3,a
   1A27 E4                 1684 	clr	a
   1A28 34 09              1685 	addc	a,#(_receiveBuffers >> 8)
   1A2A FC                 1686 	mov	r4,a
   1A2B 7D 00              1687 	mov	r5,#0x00
                           1688 ;	../src/projectSpecificHardwareInterface_C8051F040.c:335: Q->Capacity	= RECEIVE_BUFFER_SIZE ;
   1A2D 8B 82              1689 	mov	dpl,r3
   1A2F 8C 83              1690 	mov	dph,r4
   1A31 8D F0              1691 	mov	b,r5
   1A33 74 0A              1692 	mov	a,#0x0A
   1A35 12 31 54           1693 	lcall	__gptrput
   1A38 A3                 1694 	inc	dptr
   1A39 E4                 1695 	clr	a
   1A3A 12 31 54           1696 	lcall	__gptrput
                           1697 ;	../src/projectSpecificHardwareInterface_C8051F040.c:336: Q->Size		= 0 ;
   1A3D 74 06              1698 	mov	a,#0x06
   1A3F 2B                 1699 	add	a,r3
   1A40 FE                 1700 	mov	r6,a
   1A41 E4                 1701 	clr	a
   1A42 3C                 1702 	addc	a,r4
   1A43 FF                 1703 	mov	r7,a
   1A44 8D 00              1704 	mov	ar0,r5
   1A46 8E 82              1705 	mov	dpl,r6
   1A48 8F 83              1706 	mov	dph,r7
   1A4A 88 F0              1707 	mov	b,r0
   1A4C E4                 1708 	clr	a
   1A4D 12 31 54           1709 	lcall	__gptrput
   1A50 A3                 1710 	inc	dptr
   1A51 E4                 1711 	clr	a
   1A52 12 31 54           1712 	lcall	__gptrput
                           1713 ;	../src/projectSpecificHardwareInterface_C8051F040.c:337: Q->Front	= 1 ;
   1A55 74 02              1714 	mov	a,#0x02
   1A57 2B                 1715 	add	a,r3
   1A58 FE                 1716 	mov	r6,a
   1A59 E4                 1717 	clr	a
   1A5A 3C                 1718 	addc	a,r4
   1A5B FF                 1719 	mov	r7,a
   1A5C 8D 00              1720 	mov	ar0,r5
   1A5E 8E 82              1721 	mov	dpl,r6
   1A60 8F 83              1722 	mov	dph,r7
   1A62 88 F0              1723 	mov	b,r0
   1A64 74 01              1724 	mov	a,#0x01
   1A66 12 31 54           1725 	lcall	__gptrput
   1A69 A3                 1726 	inc	dptr
   1A6A E4                 1727 	clr	a
   1A6B 12 31 54           1728 	lcall	__gptrput
                           1729 ;	../src/projectSpecificHardwareInterface_C8051F040.c:338: Q->Rear		= 0 ;
   1A6E 74 04              1730 	mov	a,#0x04
   1A70 2B                 1731 	add	a,r3
   1A71 FE                 1732 	mov	r6,a
   1A72 E4                 1733 	clr	a
   1A73 3C                 1734 	addc	a,r4
   1A74 FF                 1735 	mov	r7,a
   1A75 8D 00              1736 	mov	ar0,r5
   1A77 8E 82              1737 	mov	dpl,r6
   1A79 8F 83              1738 	mov	dph,r7
   1A7B 88 F0              1739 	mov	b,r0
   1A7D E4                 1740 	clr	a
   1A7E 12 31 54           1741 	lcall	__gptrput
   1A81 A3                 1742 	inc	dptr
   1A82 E4                 1743 	clr	a
   1A83 12 31 54           1744 	lcall	__gptrput
                           1745 ;	../src/projectSpecificHardwareInterface_C8051F040.c:339: Q->Array	= receiveBuffer[0] ;
   1A86 74 08              1746 	mov	a,#0x08
   1A88 2B                 1747 	add	a,r3
   1A89 FB                 1748 	mov	r3,a
   1A8A E4                 1749 	clr	a
   1A8B 3C                 1750 	addc	a,r4
   1A8C FC                 1751 	mov	r4,a
   1A8D 8B 82              1752 	mov	dpl,r3
   1A8F 8C 83              1753 	mov	dph,r4
   1A91 8D F0              1754 	mov	b,r5
   1A93 74 E8              1755 	mov	a,#_receiveBuffer
   1A95 12 31 54           1756 	lcall	__gptrput
   1A98 A3                 1757 	inc	dptr
   1A99 74 09              1758 	mov	a,#(_receiveBuffer >> 8)
   1A9B 12 31 54           1759 	lcall	__gptrput
   1A9E A3                 1760 	inc	dptr
   1A9F E4                 1761 	clr	a
   1AA0 12 31 54           1762 	lcall	__gptrput
                           1763 ;	../src/projectSpecificHardwareInterface_C8051F040.c:341: charSent[channelNumber]		= false ;
   1AA3 EA                 1764 	mov	a,r2
   1AA4 24 09              1765 	add	a,#_charSent
   1AA6 F5 82              1766 	mov	dpl,a
   1AA8 E4                 1767 	clr	a
   1AA9 34 0A              1768 	addc	a,#(_charSent >> 8)
   1AAB F5 83              1769 	mov	dph,a
   1AAD E4                 1770 	clr	a
   1AAE F0                 1771 	movx	@dptr,a
                           1772 ;	../src/projectSpecificHardwareInterface_C8051F040.c:342: lineReady[channelNumber]	= false ;
   1AAF EA                 1773 	mov	a,r2
   1AB0 24 0A              1774 	add	a,#_lineReady
   1AB2 F5 82              1775 	mov	dpl,a
   1AB4 E4                 1776 	clr	a
   1AB5 34 0A              1777 	addc	a,#(_lineReady >> 8)
   1AB7 F5 83              1778 	mov	dph,a
   1AB9 E4                 1779 	clr	a
   1ABA F0                 1780 	movx	@dptr,a
                           1781 ;	../src/projectSpecificHardwareInterface_C8051F040.c:344: if(!timer1initialized)
   1ABB 20 02 20           1782 	jb	_task_UART_init_projectSpecific_timer1initialized_1_1,00102$
                           1783 ;	../src/projectSpecificHardwareInterface_C8051F040.c:346: timer1initialized = true ;
   1ABE D2 02              1784 	setb	_task_UART_init_projectSpecific_timer1initialized_1_1
                           1785 ;	../src/projectSpecificHardwareInterface_C8051F040.c:348: portSET_REGISTER_GROUP(TIMER01_PAGE)
   1AC0 AA 84              1786 	mov	r2,_SFRPAGE
   1AC2 75 84 00           1787 	mov	_SFRPAGE,#0x00
                           1788 ;	../src/projectSpecificHardwareInterface_C8051F040.c:351: TMOD &= 0x08 ;
   1AC5 53 89 08           1789 	anl	_TMOD,#0x08
                           1790 ;	../src/projectSpecificHardwareInterface_C8051F040.c:352: TMOD |= ser8BIT_WITH_RELOAD ;
   1AC8 43 89 20           1791 	orl	_TMOD,#0x20
                           1792 ;	../src/projectSpecificHardwareInterface_C8051F040.c:353: SSTA0 |= serSMOD ;
   1ACB 43 91 10           1793 	orl	_SSTA0,#0x10
                           1794 ;	../src/projectSpecificHardwareInterface_C8051F040.c:354: CKCON |= 0x10 ;
   1ACE 43 8E 10           1795 	orl	_CKCON,#0x10
                           1796 ;	../src/projectSpecificHardwareInterface_C8051F040.c:357: TL1 = ( unsigned char ) 0xB2 ;	// B8 = 9600 BAUD on unmoded eval boards, B2 = 9615 on 24MHz systems
   1AD1 75 8B B2           1797 	mov	_TL1,#0xB2
                           1798 ;	../src/projectSpecificHardwareInterface_C8051F040.c:358: TH1 = ( unsigned char ) 0xB2 ;
   1AD4 75 8D B2           1799 	mov	_TH1,#0xB2
                           1800 ;	../src/projectSpecificHardwareInterface_C8051F040.c:360: SCON = ser8_BIT_MODE | serRX_ENABLE ;	/* Setup the control register for standard n, 8, 1 - variable baud rate. */
   1AD7 75 98 50           1801 	mov	_SCON,#0x50
                           1802 ;	../src/projectSpecificHardwareInterface_C8051F040.c:362: TR1 = 1 ;							/* Start the timer. */
   1ADA D2 8E              1803 	setb	_TR1
                           1804 ;	../src/projectSpecificHardwareInterface_C8051F040.c:364: portRESTORE_REGISTER_GROUP()
   1ADC 8A 84              1805 	mov	_SFRPAGE,r2
   1ADE                    1806 00102$:
                           1807 ;	../src/projectSpecificHardwareInterface_C8051F040.c:367: if(channelNumber == 0)
   1ADE 90 0A 0B           1808 	mov	dptr,#_task_UART_init_projectSpecific_channelNumber_1_1
   1AE1 E0                 1809 	movx	a,@dptr
   1AE2 FA                 1810 	mov	r2,a
   1AE3 70 03              1811 	jnz	00106$
                           1812 ;	../src/projectSpecificHardwareInterface_C8051F040.c:369: UART0_Init() ;
   1AE5 02 20 8C           1813 	ljmp	_UART0_Init
   1AE8                    1814 00106$:
                           1815 ;	../src/projectSpecificHardwareInterface_C8051F040.c:371: else if(channelNumber == 1)
   1AE8 BA 01 03           1816 	cjne	r2,#0x01,00108$
                           1817 ;	../src/projectSpecificHardwareInterface_C8051F040.c:373: UART1_Init() ;
   1AEB 02 20 9A           1818 	ljmp	_UART1_Init
   1AEE                    1819 00108$:
   1AEE 22                 1820 	ret
                           1821 ;------------------------------------------------------------
                           1822 ;Allocation info for local variables in function 'task_UART_core_projectSpecific'
                           1823 ;------------------------------------------------------------
                           1824 ;sloc0                     Allocated with name '_task_UART_core_projectSpecific_sloc0_1_0'
                           1825 ;sloc1                     Allocated with name '_task_UART_core_projectSpecific_sloc1_1_0'
                           1826 ;sloc2                     Allocated with name '_task_UART_core_projectSpecific_sloc2_1_0'
                           1827 ;sloc3                     Allocated with name '_task_UART_core_projectSpecific_sloc3_1_0'
                           1828 ;channelNumber             Allocated with name '_task_UART_core_projectSpecific_channelNumber_1_1'
                           1829 ;SFRPAGE_SAVE              Allocated with name '_task_UART_core_projectSpecific_SFRPAGE_SAVE_3_3'
                           1830 ;Q                         Allocated with name '_task_UART_core_projectSpecific_Q_4_4'
                           1831 ;charReceived              Allocated with name '_task_UART_core_projectSpecific_charReceived_6_6'
                           1832 ;byteToSend                Allocated with name '_task_UART_core_projectSpecific_byteToSend_5_10'
                           1833 ;------------------------------------------------------------
                           1834 ;	../src/projectSpecificHardwareInterface_C8051F040.c:382: void task_UART_core_projectSpecific(	unsigned char channelNumber)
                           1835 ;	-----------------------------------------
                           1836 ;	 function task_UART_core_projectSpecific
                           1837 ;	-----------------------------------------
   1AEF                    1838 _task_UART_core_projectSpecific:
   1AEF E5 82              1839 	mov	a,dpl
   1AF1 90 0A 0C           1840 	mov	dptr,#_task_UART_core_projectSpecific_channelNumber_1_1
   1AF4 F0                 1841 	movx	@dptr,a
                           1842 ;	../src/projectSpecificHardwareInterface_C8051F040.c:384: if(channelNumber < NUMBER_OF_UARTS)
   1AF5 90 0A 0C           1843 	mov	dptr,#_task_UART_core_projectSpecific_channelNumber_1_1
   1AF8 E0                 1844 	movx	a,@dptr
   1AF9 FA                 1845 	mov	r2,a
   1AFA BA 01 00           1846 	cjne	r2,#0x01,00125$
   1AFD                    1847 00125$:
   1AFD 40 01              1848 	jc	00126$
   1AFF 22                 1849 	ret
   1B00                    1850 00126$:
                           1851 ;	../src/projectSpecificHardwareInterface_C8051F040.c:386: portSET_REGISTER_GROUP(UART0_PAGE)
   1B00 AB 84              1852 	mov	r3,_SFRPAGE
   1B02 75 84 00           1853 	mov	_SFRPAGE,#0x00
                           1854 ;	../src/projectSpecificHardwareInterface_C8051F040.c:388: QUEUE_TYPE*	Q = &receiveBuffers[channelNumber] ;
   1B05 EA                 1855 	mov	a,r2
   1B06 75 F0 0B           1856 	mov	b,#0x0B
   1B09 A4                 1857 	mul	ab
   1B0A 24 FE              1858 	add	a,#_receiveBuffers
   1B0C FC                 1859 	mov	r4,a
   1B0D E4                 1860 	clr	a
   1B0E 34 09              1861 	addc	a,#(_receiveBuffers >> 8)
   1B10 FD                 1862 	mov	r5,a
   1B11 7E 00              1863 	mov	r6,#0x00
   1B13 90 0A 0D           1864 	mov	dptr,#_task_UART_core_projectSpecific_Q_4_4
   1B16 EC                 1865 	mov	a,r4
   1B17 F0                 1866 	movx	@dptr,a
   1B18 A3                 1867 	inc	dptr
   1B19 ED                 1868 	mov	a,r5
   1B1A F0                 1869 	movx	@dptr,a
   1B1B A3                 1870 	inc	dptr
   1B1C EE                 1871 	mov	a,r6
   1B1D F0                 1872 	movx	@dptr,a
                           1873 ;	../src/projectSpecificHardwareInterface_C8051F040.c:390: if(RI0)
   1B1E 20 98 03           1874 	jb	_RI0,00127$
   1B21 02 1C 34           1875 	ljmp	00106$
   1B24                    1876 00127$:
                           1877 ;	../src/projectSpecificHardwareInterface_C8051F040.c:392: if(!IsFull(Q))
   1B24 8C 82              1878 	mov	dpl,r4
   1B26 8D 83              1879 	mov	dph,r5
   1B28 8E F0              1880 	mov	b,r6
   1B2A C0 02              1881 	push	ar2
   1B2C C0 03              1882 	push	ar3
   1B2E 12 18 ED           1883 	lcall	_IsFull
   1B31 E5 82              1884 	mov	a,dpl
   1B33 D0 03              1885 	pop	ar3
   1B35 D0 02              1886 	pop	ar2
   1B37 60 03              1887 	jz	00128$
   1B39 02 1C 32           1888 	ljmp	00104$
   1B3C                    1889 00128$:
                           1890 ;	../src/projectSpecificHardwareInterface_C8051F040.c:394: char	charReceived = SBUF0 ;
   1B3C C0 03              1891 	push	ar3
   1B3E 85 99 48           1892 	mov	_task_UART_core_projectSpecific_sloc0_1_0,_SBUF0
                           1893 ;	../src/projectSpecificHardwareInterface_C8051F040.c:396: Q->Size++ ;
   1B41 90 0A 0D           1894 	mov	dptr,#_task_UART_core_projectSpecific_Q_4_4
   1B44 E0                 1895 	movx	a,@dptr
   1B45 FD                 1896 	mov	r5,a
   1B46 A3                 1897 	inc	dptr
   1B47 E0                 1898 	movx	a,@dptr
   1B48 FE                 1899 	mov	r6,a
   1B49 A3                 1900 	inc	dptr
   1B4A E0                 1901 	movx	a,@dptr
   1B4B FF                 1902 	mov	r7,a
   1B4C 74 06              1903 	mov	a,#0x06
   1B4E 2D                 1904 	add	a,r5
   1B4F F5 49              1905 	mov	_task_UART_core_projectSpecific_sloc1_1_0,a
   1B51 E4                 1906 	clr	a
   1B52 3E                 1907 	addc	a,r6
   1B53 F5 4A              1908 	mov	(_task_UART_core_projectSpecific_sloc1_1_0 + 1),a
   1B55 8F 4B              1909 	mov	(_task_UART_core_projectSpecific_sloc1_1_0 + 2),r7
   1B57 85 49 82           1910 	mov	dpl,_task_UART_core_projectSpecific_sloc1_1_0
   1B5A 85 4A 83           1911 	mov	dph,(_task_UART_core_projectSpecific_sloc1_1_0 + 1)
   1B5D 85 4B F0           1912 	mov	b,(_task_UART_core_projectSpecific_sloc1_1_0 + 2)
   1B60 12 3D 60           1913 	lcall	__gptrget
   1B63 FC                 1914 	mov	r4,a
   1B64 A3                 1915 	inc	dptr
   1B65 12 3D 60           1916 	lcall	__gptrget
   1B68 FB                 1917 	mov	r3,a
   1B69 0C                 1918 	inc	r4
   1B6A BC 00 01           1919 	cjne	r4,#0x00,00129$
   1B6D 0B                 1920 	inc	r3
   1B6E                    1921 00129$:
   1B6E 85 49 82           1922 	mov	dpl,_task_UART_core_projectSpecific_sloc1_1_0
   1B71 85 4A 83           1923 	mov	dph,(_task_UART_core_projectSpecific_sloc1_1_0 + 1)
   1B74 85 4B F0           1924 	mov	b,(_task_UART_core_projectSpecific_sloc1_1_0 + 2)
   1B77 EC                 1925 	mov	a,r4
   1B78 12 31 54           1926 	lcall	__gptrput
   1B7B A3                 1927 	inc	dptr
   1B7C EB                 1928 	mov	a,r3
   1B7D 12 31 54           1929 	lcall	__gptrput
                           1930 ;	../src/projectSpecificHardwareInterface_C8051F040.c:397: Q->Rear = Succ(Q->Rear, Q) ;
   1B80 74 04              1931 	mov	a,#0x04
   1B82 2D                 1932 	add	a,r5
   1B83 F5 49              1933 	mov	_task_UART_core_projectSpecific_sloc1_1_0,a
   1B85 E4                 1934 	clr	a
   1B86 3E                 1935 	addc	a,r6
   1B87 F5 4A              1936 	mov	(_task_UART_core_projectSpecific_sloc1_1_0 + 1),a
   1B89 8F 4B              1937 	mov	(_task_UART_core_projectSpecific_sloc1_1_0 + 2),r7
   1B8B 85 49 82           1938 	mov	dpl,_task_UART_core_projectSpecific_sloc1_1_0
   1B8E 85 4A 83           1939 	mov	dph,(_task_UART_core_projectSpecific_sloc1_1_0 + 1)
   1B91 85 4B F0           1940 	mov	b,(_task_UART_core_projectSpecific_sloc1_1_0 + 2)
   1B94 12 3D 60           1941 	lcall	__gptrget
   1B97 F9                 1942 	mov	r1,a
   1B98 A3                 1943 	inc	dptr
   1B99 12 3D 60           1944 	lcall	__gptrget
   1B9C FB                 1945 	mov	r3,a
   1B9D 90 05 96           1946 	mov	dptr,#_Succ_PARM_2
   1BA0 ED                 1947 	mov	a,r5
   1BA1 F0                 1948 	movx	@dptr,a
   1BA2 A3                 1949 	inc	dptr
   1BA3 EE                 1950 	mov	a,r6
   1BA4 F0                 1951 	movx	@dptr,a
   1BA5 A3                 1952 	inc	dptr
   1BA6 EF                 1953 	mov	a,r7
   1BA7 F0                 1954 	movx	@dptr,a
   1BA8 89 82              1955 	mov	dpl,r1
   1BAA 8B 83              1956 	mov	dph,r3
   1BAC C0 02              1957 	push	ar2
   1BAE 12 19 3F           1958 	lcall	_Succ
   1BB1 AB 82              1959 	mov	r3,dpl
   1BB3 AC 83              1960 	mov	r4,dph
   1BB5 D0 02              1961 	pop	ar2
   1BB7 85 49 82           1962 	mov	dpl,_task_UART_core_projectSpecific_sloc1_1_0
   1BBA 85 4A 83           1963 	mov	dph,(_task_UART_core_projectSpecific_sloc1_1_0 + 1)
   1BBD 85 4B F0           1964 	mov	b,(_task_UART_core_projectSpecific_sloc1_1_0 + 2)
   1BC0 EB                 1965 	mov	a,r3
   1BC1 12 31 54           1966 	lcall	__gptrput
   1BC4 A3                 1967 	inc	dptr
   1BC5 EC                 1968 	mov	a,r4
   1BC6 12 31 54           1969 	lcall	__gptrput
                           1970 ;	../src/projectSpecificHardwareInterface_C8051F040.c:398: Q->Array[Q->Rear] = charReceived ;
   1BC9 90 0A 0D           1971 	mov	dptr,#_task_UART_core_projectSpecific_Q_4_4
   1BCC E0                 1972 	movx	a,@dptr
   1BCD FB                 1973 	mov	r3,a
   1BCE A3                 1974 	inc	dptr
   1BCF E0                 1975 	movx	a,@dptr
   1BD0 FC                 1976 	mov	r4,a
   1BD1 A3                 1977 	inc	dptr
   1BD2 E0                 1978 	movx	a,@dptr
   1BD3 FD                 1979 	mov	r5,a
   1BD4 74 08              1980 	mov	a,#0x08
   1BD6 2B                 1981 	add	a,r3
   1BD7 FE                 1982 	mov	r6,a
   1BD8 E4                 1983 	clr	a
   1BD9 3C                 1984 	addc	a,r4
   1BDA FF                 1985 	mov	r7,a
   1BDB 8D 00              1986 	mov	ar0,r5
   1BDD 8E 82              1987 	mov	dpl,r6
   1BDF 8F 83              1988 	mov	dph,r7
   1BE1 88 F0              1989 	mov	b,r0
   1BE3 12 3D 60           1990 	lcall	__gptrget
   1BE6 FE                 1991 	mov	r6,a
   1BE7 A3                 1992 	inc	dptr
   1BE8 12 3D 60           1993 	lcall	__gptrget
   1BEB FF                 1994 	mov	r7,a
   1BEC A3                 1995 	inc	dptr
   1BED 12 3D 60           1996 	lcall	__gptrget
   1BF0 F8                 1997 	mov	r0,a
   1BF1 74 04              1998 	mov	a,#0x04
   1BF3 2B                 1999 	add	a,r3
   1BF4 FB                 2000 	mov	r3,a
   1BF5 E4                 2001 	clr	a
   1BF6 3C                 2002 	addc	a,r4
   1BF7 FC                 2003 	mov	r4,a
   1BF8 8B 82              2004 	mov	dpl,r3
   1BFA 8C 83              2005 	mov	dph,r4
   1BFC 8D F0              2006 	mov	b,r5
   1BFE 12 3D 60           2007 	lcall	__gptrget
   1C01 FB                 2008 	mov	r3,a
   1C02 A3                 2009 	inc	dptr
   1C03 12 3D 60           2010 	lcall	__gptrget
   1C06 FC                 2011 	mov	r4,a
   1C07 EB                 2012 	mov	a,r3
   1C08 2E                 2013 	add	a,r6
   1C09 FE                 2014 	mov	r6,a
   1C0A EC                 2015 	mov	a,r4
   1C0B 3F                 2016 	addc	a,r7
   1C0C FF                 2017 	mov	r7,a
   1C0D 8E 82              2018 	mov	dpl,r6
   1C0F 8F 83              2019 	mov	dph,r7
   1C11 88 F0              2020 	mov	b,r0
   1C13 E5 48              2021 	mov	a,_task_UART_core_projectSpecific_sloc0_1_0
   1C15 12 31 54           2022 	lcall	__gptrput
                           2023 ;	../src/projectSpecificHardwareInterface_C8051F040.c:400: if(charReceived == '\n')
   1C18 74 0A              2024 	mov	a,#0x0A
   1C1A B5 48 02           2025 	cjne	a,_task_UART_core_projectSpecific_sloc0_1_0,00130$
   1C1D 80 04              2026 	sjmp	00131$
   1C1F                    2027 00130$:
   1C1F D0 03              2028 	pop	ar3
   1C21 80 0F              2029 	sjmp	00104$
   1C23                    2030 00131$:
   1C23 D0 03              2031 	pop	ar3
                           2032 ;	../src/projectSpecificHardwareInterface_C8051F040.c:402: lineReady[channelNumber] = true ;
   1C25 EA                 2033 	mov	a,r2
   1C26 24 0A              2034 	add	a,#_lineReady
   1C28 F5 82              2035 	mov	dpl,a
   1C2A E4                 2036 	clr	a
   1C2B 34 0A              2037 	addc	a,#(_lineReady >> 8)
   1C2D F5 83              2038 	mov	dph,a
   1C2F 74 01              2039 	mov	a,#0x01
   1C31 F0                 2040 	movx	@dptr,a
   1C32                    2041 00104$:
                           2042 ;	../src/projectSpecificHardwareInterface_C8051F040.c:406: RI0 = 0 ;
   1C32 C2 98              2043 	clr	_RI0
   1C34                    2044 00106$:
                           2045 ;	../src/projectSpecificHardwareInterface_C8051F040.c:409: Q = &transmitBuffers[channelNumber] ;
   1C34 90 0A 0C           2046 	mov	dptr,#_task_UART_core_projectSpecific_channelNumber_1_1
   1C37 E0                 2047 	movx	a,@dptr
   1C38 FA                 2048 	mov	r2,a
   1C39 75 F0 0B           2049 	mov	b,#0x0B
   1C3C A4                 2050 	mul	ab
   1C3D 24 F3              2051 	add	a,#_transmitBuffers
   1C3F FC                 2052 	mov	r4,a
   1C40 E4                 2053 	clr	a
   1C41 34 09              2054 	addc	a,#(_transmitBuffers >> 8)
   1C43 FD                 2055 	mov	r5,a
   1C44 7E 00              2056 	mov	r6,#0x00
   1C46 90 0A 0D           2057 	mov	dptr,#_task_UART_core_projectSpecific_Q_4_4
   1C49 EC                 2058 	mov	a,r4
   1C4A F0                 2059 	movx	@dptr,a
   1C4B A3                 2060 	inc	dptr
   1C4C ED                 2061 	mov	a,r5
   1C4D F0                 2062 	movx	@dptr,a
   1C4E A3                 2063 	inc	dptr
   1C4F EE                 2064 	mov	a,r6
   1C50 F0                 2065 	movx	@dptr,a
                           2066 ;	../src/projectSpecificHardwareInterface_C8051F040.c:411: if(charSent[channelNumber] == true)
   1C51 EA                 2067 	mov	a,r2
   1C52 24 09              2068 	add	a,#_charSent
   1C54 FA                 2069 	mov	r2,a
   1C55 E4                 2070 	clr	a
   1C56 34 0A              2071 	addc	a,#(_charSent >> 8)
   1C58 FF                 2072 	mov	r7,a
   1C59 8A 82              2073 	mov	dpl,r2
   1C5B 8F 83              2074 	mov	dph,r7
   1C5D E0                 2075 	movx	a,@dptr
   1C5E F8                 2076 	mov	r0,a
   1C5F B8 01 09           2077 	cjne	r0,#0x01,00111$
                           2078 ;	../src/projectSpecificHardwareInterface_C8051F040.c:413: charSent[channelNumber] = false ;
   1C62 8A 82              2079 	mov	dpl,r2
   1C64 8F 83              2080 	mov	dph,r7
   1C66 E4                 2081 	clr	a
   1C67 F0                 2082 	movx	@dptr,a
                           2083 ;	../src/projectSpecificHardwareInterface_C8051F040.c:417: while(TI0 == 0) { /* empty loop */} ;
   1C68                    2084 00107$:
   1C68 30 99 FD           2085 	jnb	_TI0,00107$
   1C6B                    2086 00111$:
                           2087 ;	../src/projectSpecificHardwareInterface_C8051F040.c:420: if(!IsEmpty(Q))
   1C6B 8C 82              2088 	mov	dpl,r4
   1C6D 8D 83              2089 	mov	dph,r5
   1C6F 8E F0              2090 	mov	b,r6
   1C71 C0 03              2091 	push	ar3
   1C73 12 18 B1           2092 	lcall	_IsEmpty
   1C76 E5 82              2093 	mov	a,dpl
   1C78 D0 03              2094 	pop	ar3
   1C7A 60 03              2095 	jz	00135$
   1C7C 02 1D 50           2096 	ljmp	00113$
   1C7F                    2097 00135$:
                           2098 ;	../src/projectSpecificHardwareInterface_C8051F040.c:422: unsigned char byteToSend = Q->Array[Q->Front] ;
   1C7F C0 03              2099 	push	ar3
   1C81 90 0A 0D           2100 	mov	dptr,#_task_UART_core_projectSpecific_Q_4_4
   1C84 E0                 2101 	movx	a,@dptr
   1C85 FA                 2102 	mov	r2,a
   1C86 A3                 2103 	inc	dptr
   1C87 E0                 2104 	movx	a,@dptr
   1C88 FC                 2105 	mov	r4,a
   1C89 A3                 2106 	inc	dptr
   1C8A E0                 2107 	movx	a,@dptr
   1C8B FD                 2108 	mov	r5,a
   1C8C 74 08              2109 	mov	a,#0x08
   1C8E 2A                 2110 	add	a,r2
   1C8F FE                 2111 	mov	r6,a
   1C90 E4                 2112 	clr	a
   1C91 3C                 2113 	addc	a,r4
   1C92 FF                 2114 	mov	r7,a
   1C93 8D 00              2115 	mov	ar0,r5
   1C95 8E 82              2116 	mov	dpl,r6
   1C97 8F 83              2117 	mov	dph,r7
   1C99 88 F0              2118 	mov	b,r0
   1C9B 12 3D 60           2119 	lcall	__gptrget
   1C9E F5 49              2120 	mov	_task_UART_core_projectSpecific_sloc1_1_0,a
   1CA0 A3                 2121 	inc	dptr
   1CA1 12 3D 60           2122 	lcall	__gptrget
   1CA4 F5 4A              2123 	mov	(_task_UART_core_projectSpecific_sloc1_1_0 + 1),a
   1CA6 A3                 2124 	inc	dptr
   1CA7 12 3D 60           2125 	lcall	__gptrget
   1CAA F5 4B              2126 	mov	(_task_UART_core_projectSpecific_sloc1_1_0 + 2),a
   1CAC 74 02              2127 	mov	a,#0x02
   1CAE 2A                 2128 	add	a,r2
   1CAF F5 4E              2129 	mov	_task_UART_core_projectSpecific_sloc3_1_0,a
   1CB1 E4                 2130 	clr	a
   1CB2 3C                 2131 	addc	a,r4
   1CB3 F5 4F              2132 	mov	(_task_UART_core_projectSpecific_sloc3_1_0 + 1),a
   1CB5 8D 50              2133 	mov	(_task_UART_core_projectSpecific_sloc3_1_0 + 2),r5
   1CB7 85 4E 82           2134 	mov	dpl,_task_UART_core_projectSpecific_sloc3_1_0
   1CBA 85 4F 83           2135 	mov	dph,(_task_UART_core_projectSpecific_sloc3_1_0 + 1)
   1CBD 85 50 F0           2136 	mov	b,(_task_UART_core_projectSpecific_sloc3_1_0 + 2)
   1CC0 12 3D 60           2137 	lcall	__gptrget
   1CC3 F5 4C              2138 	mov	_task_UART_core_projectSpecific_sloc2_1_0,a
   1CC5 A3                 2139 	inc	dptr
   1CC6 12 3D 60           2140 	lcall	__gptrget
   1CC9 F5 4D              2141 	mov	(_task_UART_core_projectSpecific_sloc2_1_0 + 1),a
   1CCB E5 4C              2142 	mov	a,_task_UART_core_projectSpecific_sloc2_1_0
   1CCD 25 49              2143 	add	a,_task_UART_core_projectSpecific_sloc1_1_0
   1CCF FF                 2144 	mov	r7,a
   1CD0 E5 4D              2145 	mov	a,(_task_UART_core_projectSpecific_sloc2_1_0 + 1)
   1CD2 35 4A              2146 	addc	a,(_task_UART_core_projectSpecific_sloc1_1_0 + 1)
   1CD4 F8                 2147 	mov	r0,a
   1CD5 AB 4B              2148 	mov	r3,(_task_UART_core_projectSpecific_sloc1_1_0 + 2)
   1CD7 8F 82              2149 	mov	dpl,r7
   1CD9 88 83              2150 	mov	dph,r0
   1CDB 8B F0              2151 	mov	b,r3
   1CDD 12 3D 60           2152 	lcall	__gptrget
   1CE0 F5 49              2153 	mov	_task_UART_core_projectSpecific_sloc1_1_0,a
                           2154 ;	../src/projectSpecificHardwareInterface_C8051F040.c:424: Q->Size-- ;
   1CE2 74 06              2155 	mov	a,#0x06
   1CE4 2A                 2156 	add	a,r2
   1CE5 FB                 2157 	mov	r3,a
   1CE6 E4                 2158 	clr	a
   1CE7 3C                 2159 	addc	a,r4
   1CE8 FE                 2160 	mov	r6,a
   1CE9 8D 00              2161 	mov	ar0,r5
   1CEB 8B 82              2162 	mov	dpl,r3
   1CED 8E 83              2163 	mov	dph,r6
   1CEF 88 F0              2164 	mov	b,r0
   1CF1 12 3D 60           2165 	lcall	__gptrget
   1CF4 F9                 2166 	mov	r1,a
   1CF5 A3                 2167 	inc	dptr
   1CF6 12 3D 60           2168 	lcall	__gptrget
   1CF9 FF                 2169 	mov	r7,a
   1CFA 19                 2170 	dec	r1
   1CFB B9 FF 01           2171 	cjne	r1,#0xff,00136$
   1CFE 1F                 2172 	dec	r7
   1CFF                    2173 00136$:
   1CFF 8B 82              2174 	mov	dpl,r3
   1D01 8E 83              2175 	mov	dph,r6
   1D03 88 F0              2176 	mov	b,r0
   1D05 E9                 2177 	mov	a,r1
   1D06 12 31 54           2178 	lcall	__gptrput
   1D09 A3                 2179 	inc	dptr
   1D0A EF                 2180 	mov	a,r7
   1D0B 12 31 54           2181 	lcall	__gptrput
                           2182 ;	../src/projectSpecificHardwareInterface_C8051F040.c:425: Q->Front = Succ(Q->Front, Q) ;
   1D0E 90 05 96           2183 	mov	dptr,#_Succ_PARM_2
   1D11 EA                 2184 	mov	a,r2
   1D12 F0                 2185 	movx	@dptr,a
   1D13 A3                 2186 	inc	dptr
   1D14 EC                 2187 	mov	a,r4
   1D15 F0                 2188 	movx	@dptr,a
   1D16 A3                 2189 	inc	dptr
   1D17 ED                 2190 	mov	a,r5
   1D18 F0                 2191 	movx	@dptr,a
   1D19 85 4C 82           2192 	mov	dpl,_task_UART_core_projectSpecific_sloc2_1_0
   1D1C 85 4D 83           2193 	mov	dph,(_task_UART_core_projectSpecific_sloc2_1_0 + 1)
   1D1F 12 19 3F           2194 	lcall	_Succ
   1D22 AA 82              2195 	mov	r2,dpl
   1D24 AB 83              2196 	mov	r3,dph
   1D26 85 4E 82           2197 	mov	dpl,_task_UART_core_projectSpecific_sloc3_1_0
   1D29 85 4F 83           2198 	mov	dph,(_task_UART_core_projectSpecific_sloc3_1_0 + 1)
   1D2C 85 50 F0           2199 	mov	b,(_task_UART_core_projectSpecific_sloc3_1_0 + 2)
   1D2F EA                 2200 	mov	a,r2
   1D30 12 31 54           2201 	lcall	__gptrput
   1D33 A3                 2202 	inc	dptr
   1D34 EB                 2203 	mov	a,r3
   1D35 12 31 54           2204 	lcall	__gptrput
                           2205 ;	../src/projectSpecificHardwareInterface_C8051F040.c:427: TI0 = 0 ;	// clear it and send the next character
   1D38 C2 99              2206 	clr	_TI0
                           2207 ;	../src/projectSpecificHardwareInterface_C8051F040.c:429: SBUF0 = byteToSend ;
   1D3A 85 49 99           2208 	mov	_SBUF0,_task_UART_core_projectSpecific_sloc1_1_0
                           2209 ;	../src/projectSpecificHardwareInterface_C8051F040.c:431: charSent[channelNumber] = true ;
   1D3D 90 0A 0C           2210 	mov	dptr,#_task_UART_core_projectSpecific_channelNumber_1_1
   1D40 E0                 2211 	movx	a,@dptr
   1D41 FA                 2212 	mov	r2,a
   1D42 24 09              2213 	add	a,#_charSent
   1D44 F5 82              2214 	mov	dpl,a
   1D46 E4                 2215 	clr	a
   1D47 34 0A              2216 	addc	a,#(_charSent >> 8)
   1D49 F5 83              2217 	mov	dph,a
   1D4B 74 01              2218 	mov	a,#0x01
   1D4D F0                 2219 	movx	@dptr,a
                           2220 ;	../src/projectSpecificHardwareInterface_C8051F040.c:434: portRESTORE_REGISTER_GROUP()
   1D4E D0 03              2221 	pop	ar3
                           2222 ;	../src/projectSpecificHardwareInterface_C8051F040.c:431: charSent[channelNumber] = true ;
   1D50                    2223 00113$:
                           2224 ;	../src/projectSpecificHardwareInterface_C8051F040.c:434: portRESTORE_REGISTER_GROUP()
   1D50 8B 84              2225 	mov	_SFRPAGE,r3
   1D52 22                 2226 	ret
                           2227 ;------------------------------------------------------------
                           2228 ;Allocation info for local variables in function 'task_UART_putchar_projectSpecific'
                           2229 ;------------------------------------------------------------
                           2230 ;charToSend                Allocated with name '_task_UART_putchar_projectSpecific_PARM_2'
                           2231 ;channelNumber             Allocated with name '_task_UART_putchar_projectSpecific_channelNumber_1_1'
                           2232 ;Q                         Allocated with name '_task_UART_putchar_projectSpecific_Q_2_2'
                           2233 ;------------------------------------------------------------
                           2234 ;	../src/projectSpecificHardwareInterface_C8051F040.c:439: bool task_UART_putchar_projectSpecific(	unsigned char channelNumber, char charToSend)
                           2235 ;	-----------------------------------------
                           2236 ;	 function task_UART_putchar_projectSpecific
                           2237 ;	-----------------------------------------
   1D53                    2238 _task_UART_putchar_projectSpecific:
   1D53 E5 82              2239 	mov	a,dpl
   1D55 90 0A 11           2240 	mov	dptr,#_task_UART_putchar_projectSpecific_channelNumber_1_1
   1D58 F0                 2241 	movx	@dptr,a
                           2242 ;	../src/projectSpecificHardwareInterface_C8051F040.c:441: task_UART_core(0) ;
   1D59 75 82 00           2243 	mov	dpl,#0x00
   1D5C 12 2F 23           2244 	lcall	_task_UART_core
                           2245 ;	../src/projectSpecificHardwareInterface_C8051F040.c:443: portDISABLE_INTERRUPTS() ;
   1D5F C2 AF              2246 	clr	_EA
                           2247 ;	../src/projectSpecificHardwareInterface_C8051F040.c:445: if(channelNumber < NUMBER_OF_UARTS)
   1D61 90 0A 11           2248 	mov	dptr,#_task_UART_putchar_projectSpecific_channelNumber_1_1
   1D64 E0                 2249 	movx	a,@dptr
   1D65 FA                 2250 	mov	r2,a
   1D66 BA 01 00           2251 	cjne	r2,#0x01,00109$
   1D69                    2252 00109$:
   1D69 40 03              2253 	jc	00110$
   1D6B 02 1E 6C           2254 	ljmp	00104$
   1D6E                    2255 00110$:
                           2256 ;	../src/projectSpecificHardwareInterface_C8051F040.c:447: QUEUE_TYPE*	Q = &transmitBuffers[channelNumber] ;
   1D6E EA                 2257 	mov	a,r2
   1D6F 75 F0 0B           2258 	mov	b,#0x0B
   1D72 A4                 2259 	mul	ab
   1D73 24 F3              2260 	add	a,#_transmitBuffers
   1D75 FA                 2261 	mov	r2,a
   1D76 E4                 2262 	clr	a
   1D77 34 09              2263 	addc	a,#(_transmitBuffers >> 8)
   1D79 FB                 2264 	mov	r3,a
   1D7A 7C 00              2265 	mov	r4,#0x00
   1D7C 90 0A 12           2266 	mov	dptr,#_task_UART_putchar_projectSpecific_Q_2_2
   1D7F EA                 2267 	mov	a,r2
   1D80 F0                 2268 	movx	@dptr,a
   1D81 A3                 2269 	inc	dptr
   1D82 EB                 2270 	mov	a,r3
   1D83 F0                 2271 	movx	@dptr,a
   1D84 A3                 2272 	inc	dptr
   1D85 EC                 2273 	mov	a,r4
   1D86 F0                 2274 	movx	@dptr,a
                           2275 ;	../src/projectSpecificHardwareInterface_C8051F040.c:449: if(!IsFull(Q))
   1D87 8A 82              2276 	mov	dpl,r2
   1D89 8B 83              2277 	mov	dph,r3
   1D8B 8C F0              2278 	mov	b,r4
   1D8D 12 18 ED           2279 	lcall	_IsFull
   1D90 E5 82              2280 	mov	a,dpl
   1D92 60 03              2281 	jz	00111$
   1D94 02 1E 6C           2282 	ljmp	00104$
   1D97                    2283 00111$:
                           2284 ;	../src/projectSpecificHardwareInterface_C8051F040.c:451: Q->Size++ ;
   1D97 90 0A 12           2285 	mov	dptr,#_task_UART_putchar_projectSpecific_Q_2_2
   1D9A E0                 2286 	movx	a,@dptr
   1D9B FA                 2287 	mov	r2,a
   1D9C A3                 2288 	inc	dptr
   1D9D E0                 2289 	movx	a,@dptr
   1D9E FB                 2290 	mov	r3,a
   1D9F A3                 2291 	inc	dptr
   1DA0 E0                 2292 	movx	a,@dptr
   1DA1 FC                 2293 	mov	r4,a
   1DA2 74 06              2294 	mov	a,#0x06
   1DA4 2A                 2295 	add	a,r2
   1DA5 FD                 2296 	mov	r5,a
   1DA6 E4                 2297 	clr	a
   1DA7 3B                 2298 	addc	a,r3
   1DA8 FE                 2299 	mov	r6,a
   1DA9 8C 07              2300 	mov	ar7,r4
   1DAB 8D 82              2301 	mov	dpl,r5
   1DAD 8E 83              2302 	mov	dph,r6
   1DAF 8F F0              2303 	mov	b,r7
   1DB1 12 3D 60           2304 	lcall	__gptrget
   1DB4 F8                 2305 	mov	r0,a
   1DB5 A3                 2306 	inc	dptr
   1DB6 12 3D 60           2307 	lcall	__gptrget
   1DB9 F9                 2308 	mov	r1,a
   1DBA 08                 2309 	inc	r0
   1DBB B8 00 01           2310 	cjne	r0,#0x00,00112$
   1DBE 09                 2311 	inc	r1
   1DBF                    2312 00112$:
   1DBF 8D 82              2313 	mov	dpl,r5
   1DC1 8E 83              2314 	mov	dph,r6
   1DC3 8F F0              2315 	mov	b,r7
   1DC5 E8                 2316 	mov	a,r0
   1DC6 12 31 54           2317 	lcall	__gptrput
   1DC9 A3                 2318 	inc	dptr
   1DCA E9                 2319 	mov	a,r1
   1DCB 12 31 54           2320 	lcall	__gptrput
                           2321 ;	../src/projectSpecificHardwareInterface_C8051F040.c:452: Q->Rear = Succ(Q->Rear, Q) ;
   1DCE 74 04              2322 	mov	a,#0x04
   1DD0 2A                 2323 	add	a,r2
   1DD1 FD                 2324 	mov	r5,a
   1DD2 E4                 2325 	clr	a
   1DD3 3B                 2326 	addc	a,r3
   1DD4 FE                 2327 	mov	r6,a
   1DD5 8C 07              2328 	mov	ar7,r4
   1DD7 8D 82              2329 	mov	dpl,r5
   1DD9 8E 83              2330 	mov	dph,r6
   1DDB 8F F0              2331 	mov	b,r7
   1DDD 12 3D 60           2332 	lcall	__gptrget
   1DE0 F8                 2333 	mov	r0,a
   1DE1 A3                 2334 	inc	dptr
   1DE2 12 3D 60           2335 	lcall	__gptrget
   1DE5 F9                 2336 	mov	r1,a
   1DE6 90 05 96           2337 	mov	dptr,#_Succ_PARM_2
   1DE9 EA                 2338 	mov	a,r2
   1DEA F0                 2339 	movx	@dptr,a
   1DEB A3                 2340 	inc	dptr
   1DEC EB                 2341 	mov	a,r3
   1DED F0                 2342 	movx	@dptr,a
   1DEE A3                 2343 	inc	dptr
   1DEF EC                 2344 	mov	a,r4
   1DF0 F0                 2345 	movx	@dptr,a
   1DF1 88 82              2346 	mov	dpl,r0
   1DF3 89 83              2347 	mov	dph,r1
   1DF5 C0 05              2348 	push	ar5
   1DF7 C0 06              2349 	push	ar6
   1DF9 C0 07              2350 	push	ar7
   1DFB 12 19 3F           2351 	lcall	_Succ
   1DFE AA 82              2352 	mov	r2,dpl
   1E00 AB 83              2353 	mov	r3,dph
   1E02 D0 07              2354 	pop	ar7
   1E04 D0 06              2355 	pop	ar6
   1E06 D0 05              2356 	pop	ar5
   1E08 8D 82              2357 	mov	dpl,r5
   1E0A 8E 83              2358 	mov	dph,r6
   1E0C 8F F0              2359 	mov	b,r7
   1E0E EA                 2360 	mov	a,r2
   1E0F 12 31 54           2361 	lcall	__gptrput
   1E12 A3                 2362 	inc	dptr
   1E13 EB                 2363 	mov	a,r3
   1E14 12 31 54           2364 	lcall	__gptrput
                           2365 ;	../src/projectSpecificHardwareInterface_C8051F040.c:453: Q->Array[Q->Rear] = charToSend ;
   1E17 90 0A 12           2366 	mov	dptr,#_task_UART_putchar_projectSpecific_Q_2_2
   1E1A E0                 2367 	movx	a,@dptr
   1E1B FA                 2368 	mov	r2,a
   1E1C A3                 2369 	inc	dptr
   1E1D E0                 2370 	movx	a,@dptr
   1E1E FB                 2371 	mov	r3,a
   1E1F A3                 2372 	inc	dptr
   1E20 E0                 2373 	movx	a,@dptr
   1E21 FC                 2374 	mov	r4,a
   1E22 74 08              2375 	mov	a,#0x08
   1E24 2A                 2376 	add	a,r2
   1E25 FD                 2377 	mov	r5,a
   1E26 E4                 2378 	clr	a
   1E27 3B                 2379 	addc	a,r3
   1E28 FE                 2380 	mov	r6,a
   1E29 8C 07              2381 	mov	ar7,r4
   1E2B 8D 82              2382 	mov	dpl,r5
   1E2D 8E 83              2383 	mov	dph,r6
   1E2F 8F F0              2384 	mov	b,r7
   1E31 12 3D 60           2385 	lcall	__gptrget
   1E34 FD                 2386 	mov	r5,a
   1E35 A3                 2387 	inc	dptr
   1E36 12 3D 60           2388 	lcall	__gptrget
   1E39 FE                 2389 	mov	r6,a
   1E3A A3                 2390 	inc	dptr
   1E3B 12 3D 60           2391 	lcall	__gptrget
   1E3E FF                 2392 	mov	r7,a
   1E3F 74 04              2393 	mov	a,#0x04
   1E41 2A                 2394 	add	a,r2
   1E42 FA                 2395 	mov	r2,a
   1E43 E4                 2396 	clr	a
   1E44 3B                 2397 	addc	a,r3
   1E45 FB                 2398 	mov	r3,a
   1E46 8A 82              2399 	mov	dpl,r2
   1E48 8B 83              2400 	mov	dph,r3
   1E4A 8C F0              2401 	mov	b,r4
   1E4C 12 3D 60           2402 	lcall	__gptrget
   1E4F FA                 2403 	mov	r2,a
   1E50 A3                 2404 	inc	dptr
   1E51 12 3D 60           2405 	lcall	__gptrget
   1E54 FB                 2406 	mov	r3,a
   1E55 EA                 2407 	mov	a,r2
   1E56 2D                 2408 	add	a,r5
   1E57 FD                 2409 	mov	r5,a
   1E58 EB                 2410 	mov	a,r3
   1E59 3E                 2411 	addc	a,r6
   1E5A FE                 2412 	mov	r6,a
   1E5B 90 0A 10           2413 	mov	dptr,#_task_UART_putchar_projectSpecific_PARM_2
   1E5E E0                 2414 	movx	a,@dptr
   1E5F 8D 82              2415 	mov	dpl,r5
   1E61 8E 83              2416 	mov	dph,r6
   1E63 8F F0              2417 	mov	b,r7
   1E65 12 31 54           2418 	lcall	__gptrput
                           2419 ;	../src/projectSpecificHardwareInterface_C8051F040.c:455: portENABLE_INTERRUPTS() ;
   1E68 D2 AF              2420 	setb	_EA
                           2421 ;	../src/projectSpecificHardwareInterface_C8051F040.c:457: return true ;
   1E6A D3                 2422 	setb	c
   1E6B 22                 2423 	ret
   1E6C                    2424 00104$:
                           2425 ;	../src/projectSpecificHardwareInterface_C8051F040.c:461: portENABLE_INTERRUPTS() ;
   1E6C D2 AF              2426 	setb	_EA
                           2427 ;	../src/projectSpecificHardwareInterface_C8051F040.c:465: return false ;
   1E6E C3                 2428 	clr	c
   1E6F 22                 2429 	ret
                           2430 ;------------------------------------------------------------
                           2431 ;Allocation info for local variables in function 'task_UART_puts_projectSpecific'
                           2432 ;------------------------------------------------------------
                           2433 ;buffer                    Allocated with name '_task_UART_puts_projectSpecific_PARM_2'
                           2434 ;channelNumber             Allocated with name '_task_UART_puts_projectSpecific_channelNumber_1_1'
                           2435 ;myBuffer                  Allocated with name '_task_UART_puts_projectSpecific_myBuffer_2_2'
                           2436 ;------------------------------------------------------------
                           2437 ;	../src/projectSpecificHardwareInterface_C8051F040.c:469: void task_UART_puts_projectSpecific(	unsigned char channelNumber, const char *buffer)
                           2438 ;	-----------------------------------------
                           2439 ;	 function task_UART_puts_projectSpecific
                           2440 ;	-----------------------------------------
   1E70                    2441 _task_UART_puts_projectSpecific:
   1E70 E5 82              2442 	mov	a,dpl
   1E72 90 0A 18           2443 	mov	dptr,#_task_UART_puts_projectSpecific_channelNumber_1_1
   1E75 F0                 2444 	movx	@dptr,a
                           2445 ;	../src/projectSpecificHardwareInterface_C8051F040.c:471: if(channelNumber < NUMBER_OF_UARTS)
   1E76 90 0A 18           2446 	mov	dptr,#_task_UART_puts_projectSpecific_channelNumber_1_1
   1E79 E0                 2447 	movx	a,@dptr
   1E7A FA                 2448 	mov	r2,a
   1E7B BA 01 00           2449 	cjne	r2,#0x01,00119$
   1E7E                    2450 00119$:
   1E7E 50 6C              2451 	jnc	00112$
                           2452 ;	../src/projectSpecificHardwareInterface_C8051F040.c:473: unsigned char* myBuffer = buffer ;
   1E80 90 0A 15           2453 	mov	dptr,#_task_UART_puts_projectSpecific_PARM_2
   1E83 E0                 2454 	movx	a,@dptr
   1E84 FB                 2455 	mov	r3,a
   1E85 A3                 2456 	inc	dptr
   1E86 E0                 2457 	movx	a,@dptr
   1E87 FC                 2458 	mov	r4,a
   1E88 A3                 2459 	inc	dptr
   1E89 E0                 2460 	movx	a,@dptr
   1E8A FD                 2461 	mov	r5,a
                           2462 ;	../src/projectSpecificHardwareInterface_C8051F040.c:475: while(*myBuffer)
   1E8B 8A 06              2463 	mov	ar6,r2
   1E8D                    2464 00107$:
   1E8D 8B 82              2465 	mov	dpl,r3
   1E8F 8C 83              2466 	mov	dph,r4
   1E91 8D F0              2467 	mov	b,r5
   1E93 12 3D 60           2468 	lcall	__gptrget
   1E96 FF                 2469 	mov	r7,a
   1E97 60 53              2470 	jz	00112$
                           2471 ;	../src/projectSpecificHardwareInterface_C8051F040.c:477: if((*myBuffer) == '\n')
   1E99 BF 0A 21           2472 	cjne	r7,#0x0A,00104$
                           2473 ;	../src/projectSpecificHardwareInterface_C8051F040.c:479: if(!task_UART_putchar(channelNumber, '\r'))
   1E9C 90 0A B5           2474 	mov	dptr,#_task_UART_putchar_PARM_2
   1E9F 74 0D              2475 	mov	a,#0x0D
   1EA1 F0                 2476 	movx	@dptr,a
   1EA2 8E 82              2477 	mov	dpl,r6
   1EA4 C0 02              2478 	push	ar2
   1EA6 C0 03              2479 	push	ar3
   1EA8 C0 04              2480 	push	ar4
   1EAA C0 05              2481 	push	ar5
   1EAC C0 06              2482 	push	ar6
   1EAE 12 2F 32           2483 	lcall	_task_UART_putchar
   1EB1 D0 06              2484 	pop	ar6
   1EB3 D0 05              2485 	pop	ar5
   1EB5 D0 04              2486 	pop	ar4
   1EB7 D0 03              2487 	pop	ar3
   1EB9 D0 02              2488 	pop	ar2
   1EBB 50 2F              2489 	jnc	00112$
                           2490 ;	../src/projectSpecificHardwareInterface_C8051F040.c:481: break ;
   1EBD                    2491 00104$:
                           2492 ;	../src/projectSpecificHardwareInterface_C8051F040.c:485: if(!task_UART_putchar(channelNumber, *myBuffer++))
   1EBD 8B 82              2493 	mov	dpl,r3
   1EBF 8C 83              2494 	mov	dph,r4
   1EC1 8D F0              2495 	mov	b,r5
   1EC3 12 3D 60           2496 	lcall	__gptrget
   1EC6 FF                 2497 	mov	r7,a
   1EC7 A3                 2498 	inc	dptr
   1EC8 AB 82              2499 	mov	r3,dpl
   1ECA AC 83              2500 	mov	r4,dph
   1ECC 90 0A B5           2501 	mov	dptr,#_task_UART_putchar_PARM_2
   1ECF EF                 2502 	mov	a,r7
   1ED0 F0                 2503 	movx	@dptr,a
   1ED1 8A 82              2504 	mov	dpl,r2
   1ED3 C0 02              2505 	push	ar2
   1ED5 C0 03              2506 	push	ar3
   1ED7 C0 04              2507 	push	ar4
   1ED9 C0 05              2508 	push	ar5
   1EDB C0 06              2509 	push	ar6
   1EDD 12 2F 32           2510 	lcall	_task_UART_putchar
   1EE0 D0 06              2511 	pop	ar6
   1EE2 D0 05              2512 	pop	ar5
   1EE4 D0 04              2513 	pop	ar4
   1EE6 D0 03              2514 	pop	ar3
   1EE8 D0 02              2515 	pop	ar2
   1EEA 40 A1              2516 	jc	00107$
                           2517 ;	../src/projectSpecificHardwareInterface_C8051F040.c:487: break ;
   1EEC                    2518 00112$:
   1EEC 22                 2519 	ret
                           2520 ;------------------------------------------------------------
                           2521 ;Allocation info for local variables in function 'task_UART_getchar_projectSpecific'
                           2522 ;------------------------------------------------------------
                           2523 ;sloc0                     Allocated with name '_task_UART_getchar_projectSpecific_sloc0_1_0'
                           2524 ;sloc1                     Allocated with name '_task_UART_getchar_projectSpecific_sloc1_1_0'
                           2525 ;sloc2                     Allocated with name '_task_UART_getchar_projectSpecific_sloc2_1_0'
                           2526 ;channelNumber             Allocated with name '_task_UART_getchar_projectSpecific_channelNumber_1_1'
                           2527 ;Q                         Allocated with name '_task_UART_getchar_projectSpecific_Q_2_2'
                           2528 ;byteReceived              Allocated with name '_task_UART_getchar_projectSpecific_byteReceived_3_3'
                           2529 ;------------------------------------------------------------
                           2530 ;	../src/projectSpecificHardwareInterface_C8051F040.c:494: char task_UART_getchar_projectSpecific(	unsigned char channelNumber)
                           2531 ;	-----------------------------------------
                           2532 ;	 function task_UART_getchar_projectSpecific
                           2533 ;	-----------------------------------------
   1EED                    2534 _task_UART_getchar_projectSpecific:
   1EED E5 82              2535 	mov	a,dpl
   1EEF 90 0A 19           2536 	mov	dptr,#_task_UART_getchar_projectSpecific_channelNumber_1_1
   1EF2 F0                 2537 	movx	@dptr,a
                           2538 ;	../src/projectSpecificHardwareInterface_C8051F040.c:496: if(channelNumber < NUMBER_OF_UARTS)
   1EF3 90 0A 19           2539 	mov	dptr,#_task_UART_getchar_projectSpecific_channelNumber_1_1
   1EF6 E0                 2540 	movx	a,@dptr
   1EF7 FA                 2541 	mov	r2,a
   1EF8 BA 01 00           2542 	cjne	r2,#0x01,00109$
   1EFB                    2543 00109$:
   1EFB 40 03              2544 	jc	00110$
   1EFD 02 1F E4           2545 	ljmp	00104$
   1F00                    2546 00110$:
                           2547 ;	../src/projectSpecificHardwareInterface_C8051F040.c:498: QUEUE_TYPE*	Q = &receiveBuffers[channelNumber] ;
   1F00 EA                 2548 	mov	a,r2
   1F01 75 F0 0B           2549 	mov	b,#0x0B
   1F04 A4                 2550 	mul	ab
   1F05 24 FE              2551 	add	a,#_receiveBuffers
   1F07 FA                 2552 	mov	r2,a
   1F08 E4                 2553 	clr	a
   1F09 34 09              2554 	addc	a,#(_receiveBuffers >> 8)
   1F0B FB                 2555 	mov	r3,a
   1F0C 7C 00              2556 	mov	r4,#0x00
   1F0E 90 0A 1A           2557 	mov	dptr,#_task_UART_getchar_projectSpecific_Q_2_2
   1F11 EA                 2558 	mov	a,r2
   1F12 F0                 2559 	movx	@dptr,a
   1F13 A3                 2560 	inc	dptr
   1F14 EB                 2561 	mov	a,r3
   1F15 F0                 2562 	movx	@dptr,a
   1F16 A3                 2563 	inc	dptr
   1F17 EC                 2564 	mov	a,r4
   1F18 F0                 2565 	movx	@dptr,a
                           2566 ;	../src/projectSpecificHardwareInterface_C8051F040.c:500: if(!IsEmpty(Q))
   1F19 8A 82              2567 	mov	dpl,r2
   1F1B 8B 83              2568 	mov	dph,r3
   1F1D 8C F0              2569 	mov	b,r4
   1F1F 12 18 B1           2570 	lcall	_IsEmpty
   1F22 E5 82              2571 	mov	a,dpl
   1F24 60 03              2572 	jz	00111$
   1F26 02 1F E4           2573 	ljmp	00104$
   1F29                    2574 00111$:
                           2575 ;	../src/projectSpecificHardwareInterface_C8051F040.c:502: unsigned char byteReceived = Q->Array[Q->Front] ;
   1F29 90 0A 1A           2576 	mov	dptr,#_task_UART_getchar_projectSpecific_Q_2_2
   1F2C E0                 2577 	movx	a,@dptr
   1F2D FA                 2578 	mov	r2,a
   1F2E A3                 2579 	inc	dptr
   1F2F E0                 2580 	movx	a,@dptr
   1F30 FB                 2581 	mov	r3,a
   1F31 A3                 2582 	inc	dptr
   1F32 E0                 2583 	movx	a,@dptr
   1F33 FC                 2584 	mov	r4,a
   1F34 74 08              2585 	mov	a,#0x08
   1F36 2A                 2586 	add	a,r2
   1F37 FD                 2587 	mov	r5,a
   1F38 E4                 2588 	clr	a
   1F39 3B                 2589 	addc	a,r3
   1F3A FE                 2590 	mov	r6,a
   1F3B 8C 07              2591 	mov	ar7,r4
   1F3D 8D 82              2592 	mov	dpl,r5
   1F3F 8E 83              2593 	mov	dph,r6
   1F41 8F F0              2594 	mov	b,r7
   1F43 12 3D 60           2595 	lcall	__gptrget
   1F46 F5 51              2596 	mov	_task_UART_getchar_projectSpecific_sloc0_1_0,a
   1F48 A3                 2597 	inc	dptr
   1F49 12 3D 60           2598 	lcall	__gptrget
   1F4C F5 52              2599 	mov	(_task_UART_getchar_projectSpecific_sloc0_1_0 + 1),a
   1F4E A3                 2600 	inc	dptr
   1F4F 12 3D 60           2601 	lcall	__gptrget
   1F52 F5 53              2602 	mov	(_task_UART_getchar_projectSpecific_sloc0_1_0 + 2),a
   1F54 74 02              2603 	mov	a,#0x02
   1F56 2A                 2604 	add	a,r2
   1F57 F5 56              2605 	mov	_task_UART_getchar_projectSpecific_sloc2_1_0,a
   1F59 E4                 2606 	clr	a
   1F5A 3B                 2607 	addc	a,r3
   1F5B F5 57              2608 	mov	(_task_UART_getchar_projectSpecific_sloc2_1_0 + 1),a
   1F5D 8C 58              2609 	mov	(_task_UART_getchar_projectSpecific_sloc2_1_0 + 2),r4
   1F5F 85 56 82           2610 	mov	dpl,_task_UART_getchar_projectSpecific_sloc2_1_0
   1F62 85 57 83           2611 	mov	dph,(_task_UART_getchar_projectSpecific_sloc2_1_0 + 1)
   1F65 85 58 F0           2612 	mov	b,(_task_UART_getchar_projectSpecific_sloc2_1_0 + 2)
   1F68 12 3D 60           2613 	lcall	__gptrget
   1F6B F5 54              2614 	mov	_task_UART_getchar_projectSpecific_sloc1_1_0,a
   1F6D A3                 2615 	inc	dptr
   1F6E 12 3D 60           2616 	lcall	__gptrget
   1F71 F5 55              2617 	mov	(_task_UART_getchar_projectSpecific_sloc1_1_0 + 1),a
   1F73 E5 54              2618 	mov	a,_task_UART_getchar_projectSpecific_sloc1_1_0
   1F75 25 51              2619 	add	a,_task_UART_getchar_projectSpecific_sloc0_1_0
   1F77 FE                 2620 	mov	r6,a
   1F78 E5 55              2621 	mov	a,(_task_UART_getchar_projectSpecific_sloc1_1_0 + 1)
   1F7A 35 52              2622 	addc	a,(_task_UART_getchar_projectSpecific_sloc0_1_0 + 1)
   1F7C FF                 2623 	mov	r7,a
   1F7D AD 53              2624 	mov	r5,(_task_UART_getchar_projectSpecific_sloc0_1_0 + 2)
   1F7F 8E 82              2625 	mov	dpl,r6
   1F81 8F 83              2626 	mov	dph,r7
   1F83 8D F0              2627 	mov	b,r5
   1F85 12 3D 60           2628 	lcall	__gptrget
   1F88 F5 51              2629 	mov	_task_UART_getchar_projectSpecific_sloc0_1_0,a
                           2630 ;	../src/projectSpecificHardwareInterface_C8051F040.c:504: Q->Size-- ;
   1F8A 74 06              2631 	mov	a,#0x06
   1F8C 2A                 2632 	add	a,r2
   1F8D FD                 2633 	mov	r5,a
   1F8E E4                 2634 	clr	a
   1F8F 3B                 2635 	addc	a,r3
   1F90 FF                 2636 	mov	r7,a
   1F91 8C 00              2637 	mov	ar0,r4
   1F93 8D 82              2638 	mov	dpl,r5
   1F95 8F 83              2639 	mov	dph,r7
   1F97 88 F0              2640 	mov	b,r0
   1F99 12 3D 60           2641 	lcall	__gptrget
   1F9C F9                 2642 	mov	r1,a
   1F9D A3                 2643 	inc	dptr
   1F9E 12 3D 60           2644 	lcall	__gptrget
   1FA1 FE                 2645 	mov	r6,a
   1FA2 19                 2646 	dec	r1
   1FA3 B9 FF 01           2647 	cjne	r1,#0xff,00112$
   1FA6 1E                 2648 	dec	r6
   1FA7                    2649 00112$:
   1FA7 8D 82              2650 	mov	dpl,r5
   1FA9 8F 83              2651 	mov	dph,r7
   1FAB 88 F0              2652 	mov	b,r0
   1FAD E9                 2653 	mov	a,r1
   1FAE 12 31 54           2654 	lcall	__gptrput
   1FB1 A3                 2655 	inc	dptr
   1FB2 EE                 2656 	mov	a,r6
   1FB3 12 31 54           2657 	lcall	__gptrput
                           2658 ;	../src/projectSpecificHardwareInterface_C8051F040.c:505: Q->Front = Succ(Q->Front, Q) ;
   1FB6 90 05 96           2659 	mov	dptr,#_Succ_PARM_2
   1FB9 EA                 2660 	mov	a,r2
   1FBA F0                 2661 	movx	@dptr,a
   1FBB A3                 2662 	inc	dptr
   1FBC EB                 2663 	mov	a,r3
   1FBD F0                 2664 	movx	@dptr,a
   1FBE A3                 2665 	inc	dptr
   1FBF EC                 2666 	mov	a,r4
   1FC0 F0                 2667 	movx	@dptr,a
   1FC1 85 54 82           2668 	mov	dpl,_task_UART_getchar_projectSpecific_sloc1_1_0
   1FC4 85 55 83           2669 	mov	dph,(_task_UART_getchar_projectSpecific_sloc1_1_0 + 1)
   1FC7 12 19 3F           2670 	lcall	_Succ
   1FCA AA 82              2671 	mov	r2,dpl
   1FCC AB 83              2672 	mov	r3,dph
   1FCE 85 56 82           2673 	mov	dpl,_task_UART_getchar_projectSpecific_sloc2_1_0
   1FD1 85 57 83           2674 	mov	dph,(_task_UART_getchar_projectSpecific_sloc2_1_0 + 1)
   1FD4 85 58 F0           2675 	mov	b,(_task_UART_getchar_projectSpecific_sloc2_1_0 + 2)
   1FD7 EA                 2676 	mov	a,r2
   1FD8 12 31 54           2677 	lcall	__gptrput
   1FDB A3                 2678 	inc	dptr
   1FDC EB                 2679 	mov	a,r3
   1FDD 12 31 54           2680 	lcall	__gptrput
                           2681 ;	../src/projectSpecificHardwareInterface_C8051F040.c:507: return byteReceived ;
   1FE0 85 51 82           2682 	mov	dpl,_task_UART_getchar_projectSpecific_sloc0_1_0
                           2683 ;	../src/projectSpecificHardwareInterface_C8051F040.c:511: return -1 ;
   1FE3 22                 2684 	ret
   1FE4                    2685 00104$:
   1FE4 75 82 FF           2686 	mov	dpl,#0xFF
   1FE7 22                 2687 	ret
                           2688 ;------------------------------------------------------------
                           2689 ;Allocation info for local variables in function 'task_UART_gets_projectSpecific'
                           2690 ;------------------------------------------------------------
                           2691 ;sloc0                     Allocated with name '_task_UART_gets_projectSpecific_sloc0_1_0'
                           2692 ;sloc1                     Allocated with name '_task_UART_gets_projectSpecific_sloc1_1_0'
                           2693 ;buffer                    Allocated with name '_task_UART_gets_projectSpecific_PARM_2'
                           2694 ;maxBufferLength           Allocated with name '_task_UART_gets_projectSpecific_PARM_3'
                           2695 ;channelNumber             Allocated with name '_task_UART_gets_projectSpecific_channelNumber_1_1'
                           2696 ;charsReturned             Allocated with name '_task_UART_gets_projectSpecific_charsReturned_2_2'
                           2697 ;latestCharInBuffer        Allocated with name '_task_UART_gets_projectSpecific_latestCharInBuffer_3_3'
                           2698 ;------------------------------------------------------------
                           2699 ;	../src/projectSpecificHardwareInterface_C8051F040.c:515: char* task_UART_gets_projectSpecific(	unsigned char channelNumber, char* buffer, unsigned short maxBufferLength)
                           2700 ;	-----------------------------------------
                           2701 ;	 function task_UART_gets_projectSpecific
                           2702 ;	-----------------------------------------
   1FE8                    2703 _task_UART_gets_projectSpecific:
   1FE8 E5 82              2704 	mov	a,dpl
   1FEA 90 0A 22           2705 	mov	dptr,#_task_UART_gets_projectSpecific_channelNumber_1_1
   1FED F0                 2706 	movx	@dptr,a
                           2707 ;	../src/projectSpecificHardwareInterface_C8051F040.c:517: if(channelNumber < NUMBER_OF_UARTS)
   1FEE 90 0A 22           2708 	mov	dptr,#_task_UART_gets_projectSpecific_channelNumber_1_1
   1FF1 E0                 2709 	movx	a,@dptr
   1FF2 FA                 2710 	mov	r2,a
   1FF3 BA 01 00           2711 	cjne	r2,#0x01,00119$
   1FF6                    2712 00119$:
   1FF6 50 74              2713 	jnc	00110$
                           2714 ;	../src/projectSpecificHardwareInterface_C8051F040.c:521: while(charsReturned < maxBufferLength)
   1FF8 90 0A 20           2715 	mov	dptr,#_task_UART_gets_projectSpecific_PARM_3
   1FFB E0                 2716 	movx	a,@dptr
   1FFC F5 5A              2717 	mov	_task_UART_gets_projectSpecific_sloc1_1_0,a
   1FFE A3                 2718 	inc	dptr
   1FFF E0                 2719 	movx	a,@dptr
   2000 F5 5B              2720 	mov	(_task_UART_gets_projectSpecific_sloc1_1_0 + 1),a
   2002 90 0A 1D           2721 	mov	dptr,#_task_UART_gets_projectSpecific_PARM_2
   2005 E0                 2722 	movx	a,@dptr
   2006 FD                 2723 	mov	r5,a
   2007 A3                 2724 	inc	dptr
   2008 E0                 2725 	movx	a,@dptr
   2009 FE                 2726 	mov	r6,a
   200A A3                 2727 	inc	dptr
   200B E0                 2728 	movx	a,@dptr
   200C FF                 2729 	mov	r7,a
   200D 78 00              2730 	mov	r0,#0x00
   200F 79 00              2731 	mov	r1,#0x00
   2011                    2732 00106$:
   2011 C3                 2733 	clr	c
   2012 E8                 2734 	mov	a,r0
   2013 95 5A              2735 	subb	a,_task_UART_gets_projectSpecific_sloc1_1_0
   2015 E9                 2736 	mov	a,r1
   2016 95 5B              2737 	subb	a,(_task_UART_gets_projectSpecific_sloc1_1_0 + 1)
   2018 50 52              2738 	jnc	00110$
                           2739 ;	../src/projectSpecificHardwareInterface_C8051F040.c:523: char latestCharInBuffer = task_UART_getchar(channelNumber) ;
   201A 8A 82              2740 	mov	dpl,r2
   201C C0 02              2741 	push	ar2
   201E C0 05              2742 	push	ar5
   2020 C0 06              2743 	push	ar6
   2022 C0 07              2744 	push	ar7
   2024 C0 00              2745 	push	ar0
   2026 C0 01              2746 	push	ar1
   2028 12 2F 73           2747 	lcall	_task_UART_getchar
   202B 85 82 59           2748 	mov	_task_UART_gets_projectSpecific_sloc0_1_0,dpl
   202E D0 01              2749 	pop	ar1
   2030 D0 00              2750 	pop	ar0
   2032 D0 07              2751 	pop	ar7
   2034 D0 06              2752 	pop	ar6
   2036 D0 05              2753 	pop	ar5
   2038 D0 02              2754 	pop	ar2
                           2755 ;	../src/projectSpecificHardwareInterface_C8051F040.c:525: if(latestCharInBuffer <= 0)	// break on a NULL or a -1
   203A C3                 2756 	clr	c
   203B 74 80              2757 	mov	a,#(0x00 ^ 0x80)
   203D 85 59 F0           2758 	mov	b,_task_UART_gets_projectSpecific_sloc0_1_0
   2040 63 F0 80           2759 	xrl	b,#0x80
   2043 95 F0              2760 	subb	a,b
   2045 50 25              2761 	jnc	00110$
                           2762 ;	../src/projectSpecificHardwareInterface_C8051F040.c:529: else if(latestCharInBuffer == '\r')	// Skip carriage returns
   2047 74 0D              2763 	mov	a,#0x0D
   2049 B5 59 02           2764 	cjne	a,_task_UART_gets_projectSpecific_sloc0_1_0,00123$
   204C 80 C3              2765 	sjmp	00106$
   204E                    2766 00123$:
                           2767 ;	../src/projectSpecificHardwareInterface_C8051F040.c:534: buffer[charsReturned] = latestCharInBuffer ;
   204E C0 02              2768 	push	ar2
   2050 E8                 2769 	mov	a,r0
   2051 2D                 2770 	add	a,r5
   2052 FA                 2771 	mov	r2,a
   2053 E9                 2772 	mov	a,r1
   2054 3E                 2773 	addc	a,r6
   2055 FB                 2774 	mov	r3,a
   2056 8F 04              2775 	mov	ar4,r7
   2058 8A 82              2776 	mov	dpl,r2
   205A 8B 83              2777 	mov	dph,r3
   205C 8C F0              2778 	mov	b,r4
   205E E5 59              2779 	mov	a,_task_UART_gets_projectSpecific_sloc0_1_0
   2060 12 31 54           2780 	lcall	__gptrput
                           2781 ;	../src/projectSpecificHardwareInterface_C8051F040.c:536: charsReturned++ ;
   2063 08                 2782 	inc	r0
   2064 B8 00 01           2783 	cjne	r0,#0x00,00124$
   2067 09                 2784 	inc	r1
   2068                    2785 00124$:
   2068 D0 02              2786 	pop	ar2
   206A 80 A5              2787 	sjmp	00106$
   206C                    2788 00110$:
                           2789 ;	../src/projectSpecificHardwareInterface_C8051F040.c:540: return 0 ;
   206C 90 00 00           2790 	mov	dptr,#0x0000
   206F 75 F0 00           2791 	mov	b,#0x00
   2072 22                 2792 	ret
                           2793 ;------------------------------------------------------------
                           2794 ;Allocation info for local variables in function 'task_UART_isLineReady'
                           2795 ;------------------------------------------------------------
                           2796 ;channelNumber             Allocated with name '_task_UART_isLineReady_channelNumber_1_1'
                           2797 ;------------------------------------------------------------
                           2798 ;	../src/projectSpecificHardwareInterface_C8051F040.c:544: bool task_UART_isLineReady(	unsigned char channelNumber)
                           2799 ;	-----------------------------------------
                           2800 ;	 function task_UART_isLineReady
                           2801 ;	-----------------------------------------
   2073                    2802 _task_UART_isLineReady:
   2073 E5 82              2803 	mov	a,dpl
   2075 90 0A 23           2804 	mov	dptr,#_task_UART_isLineReady_channelNumber_1_1
   2078 F0                 2805 	movx	@dptr,a
                           2806 ;	../src/projectSpecificHardwareInterface_C8051F040.c:546: return lineReady[channelNumber] ;
   2079 90 0A 23           2807 	mov	dptr,#_task_UART_isLineReady_channelNumber_1_1
   207C E0                 2808 	movx	a,@dptr
   207D 24 0A              2809 	add	a,#_lineReady
   207F F5 82              2810 	mov	dpl,a
   2081 E4                 2811 	clr	a
   2082 34 0A              2812 	addc	a,#(_lineReady >> 8)
   2084 F5 83              2813 	mov	dph,a
   2086 E0                 2814 	movx	a,@dptr
   2087 24 FF              2815 	add	a,#0xff
   2089 92 03              2816 	mov  _task_UART_isLineReady_sloc0_1_0,c
   208B 22                 2817 	ret
                           2818 ;------------------------------------------------------------
                           2819 ;Allocation info for local variables in function 'UART0_Init'
                           2820 ;------------------------------------------------------------
                           2821 ;SFRPAGE_SAVE              Allocated with name '_UART0_Init_SFRPAGE_SAVE_1_1'
                           2822 ;------------------------------------------------------------
                           2823 ;	../src/projectSpecificHardwareInterface_C8051F040.c:550: void UART0_Init(void)
                           2824 ;	-----------------------------------------
                           2825 ;	 function UART0_Init
                           2826 ;	-----------------------------------------
   208C                    2827 _UART0_Init:
                           2828 ;	../src/projectSpecificHardwareInterface_C8051F040.c:554: SFRPAGE_SAVE = SFRPAGE;             // Preserve SFRPAGE
   208C AA 84              2829 	mov	r2,_SFRPAGE
                           2830 ;	../src/projectSpecificHardwareInterface_C8051F040.c:556: SFRPAGE = UART0_PAGE;
   208E 75 84 00           2831 	mov	_SFRPAGE,#0x00
                           2832 ;	../src/projectSpecificHardwareInterface_C8051F040.c:558: SCON0 = 0x52;                       // 8-bit variable baud rate;
   2091 75 98 52           2833 	mov	_SCON0,#0x52
                           2834 ;	../src/projectSpecificHardwareInterface_C8051F040.c:561: SSTA0 = 0x10;                       // Clear all flags; enable baud rate
   2094 75 91 10           2835 	mov	_SSTA0,#0x10
                           2836 ;	../src/projectSpecificHardwareInterface_C8051F040.c:568: SFRPAGE = SFRPAGE_SAVE;
   2097 8A 84              2837 	mov	_SFRPAGE,r2
   2099 22                 2838 	ret
                           2839 ;------------------------------------------------------------
                           2840 ;Allocation info for local variables in function 'UART1_Init'
                           2841 ;------------------------------------------------------------
                           2842 ;SFRPAGE_SAVE              Allocated with name '_UART1_Init_SFRPAGE_SAVE_2_2'
                           2843 ;------------------------------------------------------------
                           2844 ;	../src/projectSpecificHardwareInterface_C8051F040.c:589: void UART1_Init(void)
                           2845 ;	-----------------------------------------
                           2846 ;	 function UART1_Init
                           2847 ;	-----------------------------------------
   209A                    2848 _UART1_Init:
                           2849 ;	../src/projectSpecificHardwareInterface_C8051F040.c:591: portSET_REGISTER_GROUP(UART1_PAGE)
   209A AA 84              2850 	mov	r2,_SFRPAGE
   209C 75 84 01           2851 	mov	_SFRPAGE,#0x01
                           2852 ;	../src/projectSpecificHardwareInterface_C8051F040.c:593: SCON1 = 0x10 ;	// 8-bit variable baud rate;
   209F 75 98 10           2853 	mov	_SCON1,#0x10
                           2854 ;	../src/projectSpecificHardwareInterface_C8051F040.c:599: portRESTORE_REGISTER_GROUP()
   20A2 8A 84              2855 	mov	_SFRPAGE,r2
   20A4 22                 2856 	ret
                           2857 ;------------------------------------------------------------
                           2858 ;Allocation info for local variables in function 'putchar'
                           2859 ;------------------------------------------------------------
                           2860 ;c                         Allocated with name '_putchar_c_1_1'
                           2861 ;------------------------------------------------------------
                           2862 ;	../src/projectSpecificHardwareInterface_C8051F040.c:603: void putchar(char c)
                           2863 ;	-----------------------------------------
                           2864 ;	 function putchar
                           2865 ;	-----------------------------------------
   20A5                    2866 _putchar:
   20A5 E5 82              2867 	mov	a,dpl
   20A7 90 0A 24           2868 	mov	dptr,#_putchar_c_1_1
   20AA F0                 2869 	movx	@dptr,a
                           2870 ;	../src/projectSpecificHardwareInterface_C8051F040.c:605: if(c == '\n')
   20AB 90 0A 24           2871 	mov	dptr,#_putchar_c_1_1
   20AE E0                 2872 	movx	a,@dptr
   20AF FA                 2873 	mov	r2,a
   20B0 BA 0A 0C           2874 	cjne	r2,#0x0A,00102$
                           2875 ;	../src/projectSpecificHardwareInterface_C8051F040.c:607: task_UART_putchar(0, '\r') ;
   20B3 90 0A B5           2876 	mov	dptr,#_task_UART_putchar_PARM_2
   20B6 74 0D              2877 	mov	a,#0x0D
   20B8 F0                 2878 	movx	@dptr,a
   20B9 75 82 00           2879 	mov	dpl,#0x00
   20BC 12 2F 32           2880 	lcall	_task_UART_putchar
   20BF                    2881 00102$:
                           2882 ;	../src/projectSpecificHardwareInterface_C8051F040.c:610: task_UART_putchar(0, c) ;
   20BF 90 0A 24           2883 	mov	dptr,#_putchar_c_1_1
   20C2 E0                 2884 	movx	a,@dptr
   20C3 90 0A B5           2885 	mov	dptr,#_task_UART_putchar_PARM_2
   20C6 F0                 2886 	movx	@dptr,a
   20C7 75 82 00           2887 	mov	dpl,#0x00
   20CA 02 2F 32           2888 	ljmp	_task_UART_putchar
                           2889 ;------------------------------------------------------------
                           2890 ;Allocation info for local variables in function 'prvSetupSystemClock'
                           2891 ;------------------------------------------------------------
                           2892 ;n                         Allocated with name '_prvSetupSystemClock_n_1_1'
                           2893 ;------------------------------------------------------------
                           2894 ;	../src/projectSpecificHardwareInterface_C8051F040.c:632: static void prvSetupSystemClock( void )
                           2895 ;	-----------------------------------------
                           2896 ;	 function prvSetupSystemClock
                           2897 ;	-----------------------------------------
   20CD                    2898 _prvSetupSystemClock:
                           2899 ;	../src/projectSpecificHardwareInterface_C8051F040.c:635: SFRPAGE = CONFIG_PAGE ;			// switch to config page to config oscillator
   20CD 75 84 0F           2900 	mov	_SFRPAGE,#0x0F
                           2901 ;	../src/projectSpecificHardwareInterface_C8051F040.c:637: OSCXCN = 0x77 ;					// start external oscillator; 24 MHz Crystal
   20D0 75 8C 77           2902 	mov	_OSCXCN,#0x77
                           2903 ;	../src/projectSpecificHardwareInterface_C8051F040.c:641: for( n = 0 ; n < 255 ; n++ ) ;	// delay about 1ms
   20D3 7A FF              2904 	mov	r2,#0xFF
   20D5 7B 00              2905 	mov	r3,#0x00
   20D7                    2906 00106$:
   20D7 1A                 2907 	dec	r2
   20D8 BA FF 01           2908 	cjne	r2,#0xff,00114$
   20DB 1B                 2909 	dec	r3
   20DC                    2910 00114$:
   20DC EA                 2911 	mov	a,r2
   20DD 4B                 2912 	orl	a,r3
   20DE 70 F7              2913 	jnz	00106$
                           2914 ;	../src/projectSpecificHardwareInterface_C8051F040.c:642: while((OSCXCN & 0x80) == 0) ;	// wait for oscillator to stabilize
   20E0                    2915 00101$:
   20E0 E5 8C              2916 	mov	a,_OSCXCN
   20E2 30 E7 FB           2917 	jnb	acc.7,00101$
                           2918 ;	../src/projectSpecificHardwareInterface_C8051F040.c:644: CLKSEL |= 0x01 ;				// switch to external oscillator
   20E5 43 97 01           2919 	orl	_CLKSEL,#0x01
                           2920 ;	../src/projectSpecificHardwareInterface_C8051F040.c:646: OSCICN = 0xC2 ;					// Turn off the internal oscillator to save a little power
   20E8 75 8A C2           2921 	mov	_OSCICN,#0xC2
   20EB 22                 2922 	ret
                           2923 ;------------------------------------------------------------
                           2924 ;Allocation info for local variables in function 'prvSetupTimerInterrupt'
                           2925 ;------------------------------------------------------------
                           2926 ;ucOriginalSFRPage         Allocated with name '_prvSetupTimerInterrupt_ucOriginalSFRPage_1_1'
                           2927 ;ulTicksPerSecond          Allocated with name '_prvSetupTimerInterrupt_ulTicksPerSecond_1_1'
                           2928 ;ulCaptureTime             Allocated with name '_prvSetupTimerInterrupt_ulCaptureTime_1_1'
                           2929 ;ulCaptureValue            Allocated with name '_prvSetupTimerInterrupt_ulCaptureValue_1_1'
                           2930 ;ucLowCaptureByte          Allocated with name '_prvSetupTimerInterrupt_ucLowCaptureByte_1_1'
                           2931 ;ucHighCaptureByte         Allocated with name '_prvSetupTimerInterrupt_ucHighCaptureByte_1_1'
                           2932 ;------------------------------------------------------------
                           2933 ;	../src/projectSpecificHardwareInterface_C8051F040.c:650: static void prvSetupTimerInterrupt( void )
                           2934 ;	-----------------------------------------
                           2935 ;	 function prvSetupTimerInterrupt
                           2936 ;	-----------------------------------------
   20EC                    2937 _prvSetupTimerInterrupt:
                           2938 ;	../src/projectSpecificHardwareInterface_C8051F040.c:664: ucOriginalSFRPage = SFRPAGE;
   20EC 90 0A 25           2939 	mov	dptr,#_prvSetupTimerInterrupt_ucOriginalSFRPage_1_1
   20EF E5 84              2940 	mov	a,_SFRPAGE
   20F1 F0                 2941 	movx	@dptr,a
                           2942 ;	../src/projectSpecificHardwareInterface_C8051F040.c:665: SFRPAGE = 0;
   20F2 75 84 00           2943 	mov	_SFRPAGE,#0x00
                           2944 ;	../src/projectSpecificHardwareInterface_C8051F040.c:668: TMR2CF = ( unsigned char ) 0;
   20F5 75 C9 00           2945 	mov	_TMR2CF,#0x00
                           2946 ;	../src/projectSpecificHardwareInterface_C8051F040.c:671: RCAP2L = ucLowCaptureByte;
   20F8 75 CA D1           2947 	mov	_RCAP2L,#0xD1
                           2948 ;	../src/projectSpecificHardwareInterface_C8051F040.c:672: RCAP2H = ucHighCaptureByte;
   20FB 75 CB FF           2949 	mov	_RCAP2H,#0xFF
                           2950 ;	../src/projectSpecificHardwareInterface_C8051F040.c:675: TMR2L = ucLowCaptureByte;
   20FE 75 CC D1           2951 	mov	_TMR2L,#0xD1
                           2952 ;	../src/projectSpecificHardwareInterface_C8051F040.c:676: TMR2H = ucHighCaptureByte;
   2101 75 CD FF           2953 	mov	_TMR2H,#0xFF
                           2954 ;	../src/projectSpecificHardwareInterface_C8051F040.c:679: IE |= portTIMER_2_INTERRUPT_ENABLE;
   2104 43 A8 20           2955 	orl	_IE,#0x20
                           2956 ;	../src/projectSpecificHardwareInterface_C8051F040.c:682: TMR2CN = portENABLE_TIMER ;
   2107 75 C8 06           2957 	mov	_TMR2CN,#0x06
                           2958 ;	../src/projectSpecificHardwareInterface_C8051F040.c:685: SFRPAGE	= 1 ;
   210A 75 84 01           2959 	mov	_SFRPAGE,#0x01
                           2960 ;	../src/projectSpecificHardwareInterface_C8051F040.c:686: TMR3CF	= 0x0A ;
   210D 75 C9 0A           2961 	mov	_TMR3CF,#0x0A
                           2962 ;	../src/projectSpecificHardwareInterface_C8051F040.c:688: RCAP3L	= 0xCE ;	// 120kHz on boost boards
   2110 75 CA CE           2963 	mov	_RCAP3L,#0xCE
                           2964 ;	../src/projectSpecificHardwareInterface_C8051F040.c:689: RCAP3H	= 0xFF ;	// 120kHz on boost boards
   2113 75 CB FF           2965 	mov	_RCAP3H,#0xFF
                           2966 ;	../src/projectSpecificHardwareInterface_C8051F040.c:691: TMR3L	= 0xF0 ;
   2116 75 CC F0           2967 	mov	_TMR3L,#0xF0
                           2968 ;	../src/projectSpecificHardwareInterface_C8051F040.c:692: TMR3H	= 0xFF ;
   2119 75 CD FF           2969 	mov	_TMR3H,#0xFF
                           2970 ;	../src/projectSpecificHardwareInterface_C8051F040.c:693: TMR3CN	= 0x04 ;
   211C 75 C8 04           2971 	mov	_TMR3CN,#0x04
                           2972 ;	../src/projectSpecificHardwareInterface_C8051F040.c:697: SFRPAGE = ucOriginalSFRPage;
   211F 90 0A 25           2973 	mov	dptr,#_prvSetupTimerInterrupt_ucOriginalSFRPage_1_1
   2122 E0                 2974 	movx	a,@dptr
   2123 F5 84              2975 	mov	_SFRPAGE,a
   2125 22                 2976 	ret
                           2977 ;------------------------------------------------------------
                           2978 ;Allocation info for local variables in function 'addTickCounter'
                           2979 ;------------------------------------------------------------
                           2980 ;pointerToIncrement        Allocated with name '_addTickCounter_pointerToIncrement_1_1'
                           2981 ;i                         Allocated with name '_addTickCounter_i_1_1'
                           2982 ;sloc0                     Allocated with name '_addTickCounter_sloc0_1_0'
                           2983 ;------------------------------------------------------------
                           2984 ;	../src/projectSpecificHardwareInterface_C8051F040.c:705: void addTickCounter(							unsigned short* pointerToIncrement)
                           2985 ;	-----------------------------------------
                           2986 ;	 function addTickCounter
                           2987 ;	-----------------------------------------
   2126                    2988 _addTickCounter:
   2126 AA F0              2989 	mov	r2,b
   2128 AB 83              2990 	mov	r3,dph
   212A E5 82              2991 	mov	a,dpl
   212C 90 0A 44           2992 	mov	dptr,#_addTickCounter_pointerToIncrement_1_1
   212F F0                 2993 	movx	@dptr,a
   2130 A3                 2994 	inc	dptr
   2131 EB                 2995 	mov	a,r3
   2132 F0                 2996 	movx	@dptr,a
   2133 A3                 2997 	inc	dptr
   2134 EA                 2998 	mov	a,r2
   2135 F0                 2999 	movx	@dptr,a
                           3000 ;	../src/projectSpecificHardwareInterface_C8051F040.c:709: for( i = 0 ; i < configNUMBER_OF_TICK_COUNTERS ; i++ )
   2136 7A 00              3001 	mov	r2,#0x00
   2138                    3002 00105$:
   2138 BA 0A 00           3003 	cjne	r2,#0x0A,00115$
   213B                    3004 00115$:
   213B 50 4B              3005 	jnc	00109$
                           3006 ;	../src/projectSpecificHardwareInterface_C8051F040.c:713: if(tickCounterToIncrement[i] == pointerToIncrement)
   213D EA                 3007 	mov	a,r2
   213E 75 F0 03           3008 	mov	b,#0x03
   2141 A4                 3009 	mul	ab
   2142 24 26              3010 	add	a,#_tickCounterToIncrement
   2144 FB                 3011 	mov	r3,a
   2145 E4                 3012 	clr	a
   2146 34 0A              3013 	addc	a,#(_tickCounterToIncrement >> 8)
   2148 FC                 3014 	mov	r4,a
   2149 8B 82              3015 	mov	dpl,r3
   214B 8C 83              3016 	mov	dph,r4
   214D E0                 3017 	movx	a,@dptr
   214E FD                 3018 	mov	r5,a
   214F A3                 3019 	inc	dptr
   2150 E0                 3020 	movx	a,@dptr
   2151 FE                 3021 	mov	r6,a
   2152 A3                 3022 	inc	dptr
   2153 E0                 3023 	movx	a,@dptr
   2154 FF                 3024 	mov	r7,a
   2155 90 0A 44           3025 	mov	dptr,#_addTickCounter_pointerToIncrement_1_1
   2158 E0                 3026 	movx	a,@dptr
   2159 F5 18              3027 	mov	_addTickCounter_sloc0_1_0,a
   215B A3                 3028 	inc	dptr
   215C E0                 3029 	movx	a,@dptr
   215D F5 19              3030 	mov	(_addTickCounter_sloc0_1_0 + 1),a
   215F A3                 3031 	inc	dptr
   2160 E0                 3032 	movx	a,@dptr
   2161 F5 1A              3033 	mov	(_addTickCounter_sloc0_1_0 + 2),a
   2163 ED                 3034 	mov	a,r5
   2164 B5 18 09           3035 	cjne	a,_addTickCounter_sloc0_1_0,00117$
   2167 EE                 3036 	mov	a,r6
   2168 B5 19 05           3037 	cjne	a,(_addTickCounter_sloc0_1_0 + 1),00117$
   216B EF                 3038 	mov	a,r7
   216C B5 1A 01           3039 	cjne	a,(_addTickCounter_sloc0_1_0 + 2),00117$
   216F 22                 3040 	ret
   2170                    3041 00117$:
                           3042 ;	../src/projectSpecificHardwareInterface_C8051F040.c:718: if(tickCounterToIncrement[i] == 0)
   2170 ED                 3043 	mov	a,r5
   2171 4E                 3044 	orl	a,r6
   2172 4F                 3045 	orl	a,r7
   2173 70 10              3046 	jnz	00107$
                           3047 ;	../src/projectSpecificHardwareInterface_C8051F040.c:720: tickCounterToIncrement[i] = pointerToIncrement ;
   2175 8B 82              3048 	mov	dpl,r3
   2177 8C 83              3049 	mov	dph,r4
   2179 E5 18              3050 	mov	a,_addTickCounter_sloc0_1_0
   217B F0                 3051 	movx	@dptr,a
   217C A3                 3052 	inc	dptr
   217D E5 19              3053 	mov	a,(_addTickCounter_sloc0_1_0 + 1)
   217F F0                 3054 	movx	@dptr,a
   2180 A3                 3055 	inc	dptr
   2181 E5 1A              3056 	mov	a,(_addTickCounter_sloc0_1_0 + 2)
   2183 F0                 3057 	movx	@dptr,a
                           3058 ;	../src/projectSpecificHardwareInterface_C8051F040.c:722: break ;
   2184 22                 3059 	ret
   2185                    3060 00107$:
                           3061 ;	../src/projectSpecificHardwareInterface_C8051F040.c:709: for( i = 0 ; i < configNUMBER_OF_TICK_COUNTERS ; i++ )
   2185 0A                 3062 	inc	r2
   2186 80 B0              3063 	sjmp	00105$
   2188                    3064 00109$:
   2188 22                 3065 	ret
                           3066 ;------------------------------------------------------------
                           3067 ;Allocation info for local variables in function 'vTimer2ISR'
                           3068 ;------------------------------------------------------------
                           3069 ;i                         Allocated with name '_vTimer2ISR_i_1_1'
                           3070 ;------------------------------------------------------------
                           3071 ;	../src/projectSpecificHardwareInterface_C8051F040.c:731: void vTimer2ISR( void ) interrupt 5
                           3072 ;	-----------------------------------------
                           3073 ;	 function vTimer2ISR
                           3074 ;	-----------------------------------------
   2189                    3075 _vTimer2ISR:
   2189 C0 22              3076 	push	bits
   218B C0 E0              3077 	push	acc
   218D C0 F0              3078 	push	b
   218F C0 82              3079 	push	dpl
   2191 C0 83              3080 	push	dph
   2193 C0 02              3081 	push	(0+2)
   2195 C0 03              3082 	push	(0+3)
   2197 C0 04              3083 	push	(0+4)
   2199 C0 05              3084 	push	(0+5)
   219B C0 06              3085 	push	(0+6)
   219D C0 07              3086 	push	(0+7)
   219F C0 00              3087 	push	(0+0)
   21A1 C0 01              3088 	push	(0+1)
   21A3 C0 D0              3089 	push	psw
   21A5 75 D0 00           3090 	mov	psw,#0x00
                           3091 ;	../src/projectSpecificHardwareInterface_C8051F040.c:735: for( i = 0 ; i < configNUMBER_OF_TICK_COUNTERS ; i++ )
   21A8 7A 00              3092 	mov	r2,#0x00
   21AA                    3093 00103$:
   21AA BA 0A 00           3094 	cjne	r2,#0x0A,00113$
   21AD                    3095 00113$:
   21AD 50 41              3096 	jnc	00106$
                           3097 ;	../src/projectSpecificHardwareInterface_C8051F040.c:737: if(tickCounterToIncrement[i])
   21AF EA                 3098 	mov	a,r2
   21B0 75 F0 03           3099 	mov	b,#0x03
   21B3 A4                 3100 	mul	ab
   21B4 24 26              3101 	add	a,#_tickCounterToIncrement
   21B6 F5 82              3102 	mov	dpl,a
   21B8 E4                 3103 	clr	a
   21B9 34 0A              3104 	addc	a,#(_tickCounterToIncrement >> 8)
   21BB F5 83              3105 	mov	dph,a
   21BD E0                 3106 	movx	a,@dptr
   21BE FB                 3107 	mov	r3,a
   21BF A3                 3108 	inc	dptr
   21C0 E0                 3109 	movx	a,@dptr
   21C1 FC                 3110 	mov	r4,a
   21C2 A3                 3111 	inc	dptr
   21C3 E0                 3112 	movx	a,@dptr
   21C4 FD                 3113 	mov	r5,a
   21C5 EB                 3114 	mov	a,r3
   21C6 4C                 3115 	orl	a,r4
   21C7 4D                 3116 	orl	a,r5
   21C8 60 23              3117 	jz	00105$
                           3118 ;	../src/projectSpecificHardwareInterface_C8051F040.c:739: *tickCounterToIncrement[i] += 1 ;
   21CA 8B 82              3119 	mov	dpl,r3
   21CC 8C 83              3120 	mov	dph,r4
   21CE 8D F0              3121 	mov	b,r5
   21D0 12 3D 60           3122 	lcall	__gptrget
   21D3 FE                 3123 	mov	r6,a
   21D4 A3                 3124 	inc	dptr
   21D5 12 3D 60           3125 	lcall	__gptrget
   21D8 FF                 3126 	mov	r7,a
   21D9 0E                 3127 	inc	r6
   21DA BE 00 01           3128 	cjne	r6,#0x00,00116$
   21DD 0F                 3129 	inc	r7
   21DE                    3130 00116$:
   21DE 8B 82              3131 	mov	dpl,r3
   21E0 8C 83              3132 	mov	dph,r4
   21E2 8D F0              3133 	mov	b,r5
   21E4 EE                 3134 	mov	a,r6
   21E5 12 31 54           3135 	lcall	__gptrput
   21E8 A3                 3136 	inc	dptr
   21E9 EF                 3137 	mov	a,r7
   21EA 12 31 54           3138 	lcall	__gptrput
   21ED                    3139 00105$:
                           3140 ;	../src/projectSpecificHardwareInterface_C8051F040.c:735: for( i = 0 ; i < configNUMBER_OF_TICK_COUNTERS ; i++ )
   21ED 0A                 3141 	inc	r2
   21EE 80 BA              3142 	sjmp	00103$
   21F0                    3143 00106$:
                           3144 ;	../src/projectSpecificHardwareInterface_C8051F040.c:743: taskSwitcherTickHook() ;
   21F0 12 17 CC           3145 	lcall	_taskSwitcherTickHook
                           3146 ;	../src/projectSpecificHardwareInterface_C8051F040.c:745: portCLEAR_INTERRUPT_FLAG() ;
   21F3 53 C8 7F           3147 	anl	_TMR2CN,#0x7F
   21F6 D0 D0              3148 	pop	psw
   21F8 D0 01              3149 	pop	(0+1)
   21FA D0 00              3150 	pop	(0+0)
   21FC D0 07              3151 	pop	(0+7)
   21FE D0 06              3152 	pop	(0+6)
   2200 D0 05              3153 	pop	(0+5)
   2202 D0 04              3154 	pop	(0+4)
   2204 D0 03              3155 	pop	(0+3)
   2206 D0 02              3156 	pop	(0+2)
   2208 D0 83              3157 	pop	dph
   220A D0 82              3158 	pop	dpl
   220C D0 F0              3159 	pop	b
   220E D0 E0              3160 	pop	acc
   2210 D0 22              3161 	pop	bits
   2212 32                 3162 	reti
                           3163 	.area CSEG    (CODE)
                           3164 	.area CONST   (CODE)
   40BA                    3165 __str_0:
   40BA 34 74 68 20 47 65  3166 	.ascii "4th Generation state machine test started."
        6E 65 72 61 74 69
        6F 6E 20 73 74 61
        74 65 20 6D 61 63
        68 69 6E 65 20 74
        65 73 74 20 73 74
        61 72 74 65 64 2E
   40E4 00                 3167 	.db 0x00
   40E5                    3168 __str_1:
   40E5 6C 6F 6F 70        3169 	.ascii "loop"
   40E9 00                 3170 	.db 0x00
   40EA                    3171 __str_2:
   40EA 0A                 3172 	.db 0x0A
   40EB 34 74 68 20 47 65  3173 	.ascii "4th Generation state machine test done."
        6E 65 72 61 74 69
        6F 6E 20 73 74 61
        74 65 20 6D 61 63
        68 69 6E 65 20 74
        65 73 74 20 64 6F
        6E 65 2E
   4112 00                 3174 	.db 0x00
                           3175 	.area XINIT   (CODE)
   42CB                    3176 __xinit__countdown:
   42CB 05 00              3177 	.byte #0x05,#0x00
                           3178 	.area CABS    (ABS,CODE)
