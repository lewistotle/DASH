                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.0 #5416 (Mar 22 2009) (MINGW32)
                              4 ; This file was generated Wed Dec 30 15:11:44 2009
                              5 ;--------------------------------------------------------
                              6 	.module main_C8051F040
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _vTimer2ISR
                             13 	.globl _addTickCounter
                             14 	.globl _IsFull
                             15 	.globl _IsEmpty
                             16 	.globl _main
                             17 	.globl _P7_7
                             18 	.globl _P7_6
                             19 	.globl _P7_5
                             20 	.globl _P7_4
                             21 	.globl _P7_3
                             22 	.globl _P7_2
                             23 	.globl _P7_1
                             24 	.globl _P7_0
                             25 	.globl _CANTEST
                             26 	.globl _CANCCE
                             27 	.globl _CANDAR
                             28 	.globl _CANIF
                             29 	.globl _CANEIE
                             30 	.globl _CANSIE
                             31 	.globl _CANIE
                             32 	.globl _CANINIT
                             33 	.globl _SPIF
                             34 	.globl _WCOL
                             35 	.globl _MODF
                             36 	.globl _RXOVRN
                             37 	.globl _NSSMD1
                             38 	.globl _NSSMD0
                             39 	.globl _TXBMT
                             40 	.globl _SPIEN
                             41 	.globl _P6_7
                             42 	.globl _P6_6
                             43 	.globl _P6_5
                             44 	.globl _P6_4
                             45 	.globl _P6_3
                             46 	.globl _P6_2
                             47 	.globl _P6_1
                             48 	.globl _P6_0
                             49 	.globl _AD2EN
                             50 	.globl _AD2TM
                             51 	.globl _AD2INT
                             52 	.globl _AD2BUSY
                             53 	.globl _AD2CM2
                             54 	.globl _AD2CM1
                             55 	.globl _AD2CM0
                             56 	.globl _AD2WINT
                             57 	.globl _AD0EN
                             58 	.globl _AD0TM
                             59 	.globl _AD0INT
                             60 	.globl _AD0BUSY
                             61 	.globl _AD0CM1
                             62 	.globl _AD0CM0
                             63 	.globl _AD0WINT
                             64 	.globl _AD0LJST
                             65 	.globl _P5_7
                             66 	.globl _P5_6
                             67 	.globl _P5_5
                             68 	.globl _P5_4
                             69 	.globl _P5_3
                             70 	.globl _P5_2
                             71 	.globl _P5_1
                             72 	.globl _P5_0
                             73 	.globl _CF
                             74 	.globl _CR
                             75 	.globl _CCF5
                             76 	.globl _CCF4
                             77 	.globl _CCF3
                             78 	.globl _CCF2
                             79 	.globl _CCF1
                             80 	.globl _CCF0
                             81 	.globl _CY
                             82 	.globl _AC
                             83 	.globl _F0
                             84 	.globl _RS1
                             85 	.globl _RS0
                             86 	.globl _OV
                             87 	.globl _F1
                             88 	.globl _P
                             89 	.globl _P4_7
                             90 	.globl _P4_6
                             91 	.globl _P4_5
                             92 	.globl _P4_4
                             93 	.globl _P4_3
                             94 	.globl _P4_2
                             95 	.globl _P4_1
                             96 	.globl _P4_0
                             97 	.globl _TF4
                             98 	.globl _EXF4
                             99 	.globl _EXEN4
                            100 	.globl _TR4
                            101 	.globl _CT4
                            102 	.globl _CPRL4
                            103 	.globl _TF3
                            104 	.globl _EXF3
                            105 	.globl _EXEN3
                            106 	.globl _TR3
                            107 	.globl _CT3
                            108 	.globl _CPRL3
                            109 	.globl _TF2
                            110 	.globl _EXF2
                            111 	.globl _EXEN2
                            112 	.globl _TR2
                            113 	.globl _CT2
                            114 	.globl _CPRL2
                            115 	.globl _CANBOFF
                            116 	.globl _CANEWARN
                            117 	.globl _CANEPASS
                            118 	.globl _CANRXOK
                            119 	.globl _CANTXOK
                            120 	.globl _BUSY
                            121 	.globl _ENSMB
                            122 	.globl _STA
                            123 	.globl _STO
                            124 	.globl _SI
                            125 	.globl _AA
                            126 	.globl _SMBFTE
                            127 	.globl _SMBTOE
                            128 	.globl _PT2
                            129 	.globl _PS
                            130 	.globl _PS0
                            131 	.globl _PT1
                            132 	.globl _PX1
                            133 	.globl _PT0
                            134 	.globl _PX0
                            135 	.globl _P3_7
                            136 	.globl _P3_6
                            137 	.globl _P3_5
                            138 	.globl _P3_4
                            139 	.globl _P3_3
                            140 	.globl _P3_2
                            141 	.globl _P3_1
                            142 	.globl _P3_0
                            143 	.globl _EA
                            144 	.globl _ET2
                            145 	.globl _ES
                            146 	.globl _ES0
                            147 	.globl _ET1
                            148 	.globl _EX1
                            149 	.globl _ET0
                            150 	.globl _EX0
                            151 	.globl _P2_7
                            152 	.globl _P2_6
                            153 	.globl _P2_5
                            154 	.globl _P2_4
                            155 	.globl _P2_3
                            156 	.globl _P2_2
                            157 	.globl _P2_1
                            158 	.globl _P2_0
                            159 	.globl _S1MODE
                            160 	.globl _MCE1
                            161 	.globl _REN1
                            162 	.globl _TB81
                            163 	.globl _RB81
                            164 	.globl _TI1
                            165 	.globl _RI1
                            166 	.globl _SM00
                            167 	.globl _SM10
                            168 	.globl _SM20
                            169 	.globl _REN
                            170 	.globl _REN0
                            171 	.globl _TB80
                            172 	.globl _RB80
                            173 	.globl _TI
                            174 	.globl _TI0
                            175 	.globl _RI
                            176 	.globl _RI0
                            177 	.globl _P1_7
                            178 	.globl _P1_6
                            179 	.globl _P1_5
                            180 	.globl _P1_4
                            181 	.globl _P1_3
                            182 	.globl _P1_2
                            183 	.globl _P1_1
                            184 	.globl _P1_0
                            185 	.globl _CP2EN
                            186 	.globl _CP2OUT
                            187 	.globl _CP2RIF
                            188 	.globl _CP2FIF
                            189 	.globl _CP2HYP1
                            190 	.globl _CP2HYP0
                            191 	.globl _CP2HYN1
                            192 	.globl _CP2HYN0
                            193 	.globl _CP1EN
                            194 	.globl _CP1OUT
                            195 	.globl _CP1RIF
                            196 	.globl _CP1FIF
                            197 	.globl _CP1HYP1
                            198 	.globl _CP1HYP0
                            199 	.globl _CP1HYN1
                            200 	.globl _CP1HYN0
                            201 	.globl _CP0EN
                            202 	.globl _CP0OUT
                            203 	.globl _CP0RIF
                            204 	.globl _CP0FIF
                            205 	.globl _CP0HYP1
                            206 	.globl _CP0HYP0
                            207 	.globl _CP0HYN1
                            208 	.globl _CP0HYN0
                            209 	.globl _TF1
                            210 	.globl _TR1
                            211 	.globl _TF0
                            212 	.globl _TR0
                            213 	.globl _IE1
                            214 	.globl _IT1
                            215 	.globl _IE0
                            216 	.globl _IT0
                            217 	.globl _P0_7
                            218 	.globl _P0_6
                            219 	.globl _P0_5
                            220 	.globl _P0_4
                            221 	.globl _P0_3
                            222 	.globl _P0_2
                            223 	.globl _P0_1
                            224 	.globl _P0_0
                            225 	.globl _P7
                            226 	.globl _P6
                            227 	.globl _XBR3
                            228 	.globl _XBR2
                            229 	.globl _XBR1
                            230 	.globl _XBR0
                            231 	.globl _P5
                            232 	.globl _P4
                            233 	.globl _FLACL
                            234 	.globl _P3MDIN
                            235 	.globl _P2MDIN
                            236 	.globl _P1MDIN
                            237 	.globl _P3MDOUT
                            238 	.globl _P2MDOUT
                            239 	.globl _P1MDOUT
                            240 	.globl _P0MDOUT
                            241 	.globl _P7MDOUT
                            242 	.globl _P6MDOUT
                            243 	.globl _P5MDOUT
                            244 	.globl _P4MDOUT
                            245 	.globl _CLKSEL
                            246 	.globl _SFRPGCN
                            247 	.globl _OSCXCN
                            248 	.globl _OSCICL
                            249 	.globl _OSCICN
                            250 	.globl _CPT2MD
                            251 	.globl _CPT2CN
                            252 	.globl _ADC2CN
                            253 	.globl _TMR4H
                            254 	.globl _TMR4L
                            255 	.globl _RCAP4H
                            256 	.globl _RCAP4L
                            257 	.globl _TMR4CF
                            258 	.globl _TMR4CN
                            259 	.globl _ADC2LT
                            260 	.globl _ADC2GT
                            261 	.globl _ADC2
                            262 	.globl _ADC2CF
                            263 	.globl _AMX2SL
                            264 	.globl _AMX2CF
                            265 	.globl _CPT1MD
                            266 	.globl _CPT1CN
                            267 	.globl _CAN0CN
                            268 	.globl _CAN0TST
                            269 	.globl _CAN0ADR
                            270 	.globl _CAN0DATH
                            271 	.globl _CAN0DATL
                            272 	.globl _DAC1CN
                            273 	.globl _DAC1H
                            274 	.globl _DAC1L
                            275 	.globl _TMR3H
                            276 	.globl _TMR3L
                            277 	.globl _RCAP3H
                            278 	.globl _RCAP3L
                            279 	.globl _TMR3CF
                            280 	.globl _TMR3CN
                            281 	.globl _CAN0STA
                            282 	.globl _SBUF1
                            283 	.globl _SCON1
                            284 	.globl _CPT0MD
                            285 	.globl _CPT0CN
                            286 	.globl _PCA0CPH1
                            287 	.globl _PCA0CPL1
                            288 	.globl _PCA0CPH0
                            289 	.globl _PCA0CPL0
                            290 	.globl _PCA0H
                            291 	.globl _PCA0L
                            292 	.globl _SPI0CN
                            293 	.globl _RSTSRC
                            294 	.globl _PCA0CPH4
                            295 	.globl _PCA0CPL4
                            296 	.globl _PCA0CPH3
                            297 	.globl _PCA0CPL3
                            298 	.globl _PCA0CPH2
                            299 	.globl _PCA0CPL2
                            300 	.globl _ADC0CN
                            301 	.globl _PCA0CPH5
                            302 	.globl _PCA0CPL5
                            303 	.globl _PCA0CPM5
                            304 	.globl _PCA0CPM4
                            305 	.globl _PCA0CPM3
                            306 	.globl _PCA0CPM2
                            307 	.globl _PCA0CPM1
                            308 	.globl _PCA0CPM0
                            309 	.globl _PCA0MD
                            310 	.globl _PCA0CN
                            311 	.globl _HVA0CN
                            312 	.globl _DAC0CN
                            313 	.globl _DAC0H
                            314 	.globl _DAC0L
                            315 	.globl _REF0CN
                            316 	.globl _SMB0CR
                            317 	.globl _TH2
                            318 	.globl _TMR2H
                            319 	.globl _TL2
                            320 	.globl _TMR2L
                            321 	.globl _RCAP2H
                            322 	.globl _RCAP2L
                            323 	.globl _TMR2CF
                            324 	.globl _TMR2CN
                            325 	.globl _ADC0LTH
                            326 	.globl _ADC0LTL
                            327 	.globl _ADC0GTH
                            328 	.globl _ADC0GTL
                            329 	.globl _SMB0ADR
                            330 	.globl _SMB0DAT
                            331 	.globl _SMB0STA
                            332 	.globl _SMB0CN
                            333 	.globl _ADC0H
                            334 	.globl _ADC0L
                            335 	.globl _AMX0PRT
                            336 	.globl _ADC0CF
                            337 	.globl _AMX0SL
                            338 	.globl _AMX0CF
                            339 	.globl _SADEN0
                            340 	.globl _FLSCL
                            341 	.globl _SADDR0
                            342 	.globl _EMI0CF
                            343 	.globl __XPAGE
                            344 	.globl _EMI0CN
                            345 	.globl _EMI0TC
                            346 	.globl _SPI0CKR
                            347 	.globl _SPI0DAT
                            348 	.globl _SPI0CFG
                            349 	.globl _SBUF
                            350 	.globl _SBUF0
                            351 	.globl _SCON
                            352 	.globl _SCON0
                            353 	.globl _SSTA0
                            354 	.globl _PSCTL
                            355 	.globl _CKCON
                            356 	.globl _TH1
                            357 	.globl _TH0
                            358 	.globl _TL1
                            359 	.globl _TL0
                            360 	.globl _TMOD
                            361 	.globl _TCON
                            362 	.globl _WDTCN
                            363 	.globl _EIP2
                            364 	.globl _EIP1
                            365 	.globl _B
                            366 	.globl _EIE2
                            367 	.globl _EIE1
                            368 	.globl _ACC
                            369 	.globl _PSW
                            370 	.globl _IP
                            371 	.globl _P3
                            372 	.globl _IE
                            373 	.globl _P2
                            374 	.globl _P1
                            375 	.globl _PCON
                            376 	.globl _SFRLAST
                            377 	.globl _SFRNEXT
                            378 	.globl _SFRPAGE
                            379 	.globl _DPH
                            380 	.globl _DPL
                            381 	.globl _SP
                            382 	.globl _P0
                            383 	.globl _tickCounterToIncrement
                            384 	.globl _task_UART_gets_projectSpecific_PARM_3
                            385 	.globl _task_UART_gets_projectSpecific_PARM_2
                            386 	.globl _task_UART_puts_projectSpecific_PARM_2
                            387 	.globl _task_UART_putchar_projectSpecific_PARM_2
                            388 	.globl _Succ_PARM_2
                            389 	.globl _UARTtempBuffer
                            390 	.globl _pwm_setDutyCycleAsPercentage_projectSpecific_PARM_2
                            391 	.globl _pwm_adjustDutyCycle_projectSpecific_PARM_2
                            392 	.globl _pwm_setDutyCycle_projectSpecific_PARM_2
                            393 	.globl _taskSwitcherTickHook
                            394 	.globl _gpio_init_projectSpecific
                            395 	.globl _pwm_init_projectSpecific
                            396 	.globl _pwm_incrementDutyCycle_projectSpecific
                            397 	.globl _pwm_decrementDutyCycle_projectSpecific
                            398 	.globl _pwm_getDutyCycle_projectSpecific
                            399 	.globl _pwm_setDutyCycle_projectSpecific
                            400 	.globl _pwm_adjustDutyCycle_projectSpecific
                            401 	.globl _pwm_setDutyCycleAsPercentage_projectSpecific
                            402 	.globl _pwm_getDutyCycleAsPercentage_projectSpecific
                            403 	.globl _task_UART_init_projectSpecific
                            404 	.globl _task_UART_core_projectSpecific
                            405 	.globl _task_UART_putchar_projectSpecific
                            406 	.globl _task_UART_puts_projectSpecific
                            407 	.globl _task_UART_getchar_projectSpecific
                            408 	.globl _task_UART_gets_projectSpecific
                            409 	.globl _task_UART_isLineReady
                            410 	.globl _UART0_Init
                            411 	.globl _UART1_Init
                            412 	.globl _putchar
                            413 ;--------------------------------------------------------
                            414 ; special function registers
                            415 ;--------------------------------------------------------
                            416 	.area RSEG    (DATA)
                    0080    417 _P0	=	0x0080
                    0081    418 _SP	=	0x0081
                    0082    419 _DPL	=	0x0082
                    0083    420 _DPH	=	0x0083
                    0084    421 _SFRPAGE	=	0x0084
                    0085    422 _SFRNEXT	=	0x0085
                    0086    423 _SFRLAST	=	0x0086
                    0087    424 _PCON	=	0x0087
                    0090    425 _P1	=	0x0090
                    00A0    426 _P2	=	0x00a0
                    00A8    427 _IE	=	0x00a8
                    00B0    428 _P3	=	0x00b0
                    00B8    429 _IP	=	0x00b8
                    00D0    430 _PSW	=	0x00d0
                    00E0    431 _ACC	=	0x00e0
                    00E6    432 _EIE1	=	0x00e6
                    00E7    433 _EIE2	=	0x00e7
                    00F0    434 _B	=	0x00f0
                    00F6    435 _EIP1	=	0x00f6
                    00F7    436 _EIP2	=	0x00f7
                    00FF    437 _WDTCN	=	0x00ff
                    0088    438 _TCON	=	0x0088
                    0089    439 _TMOD	=	0x0089
                    008A    440 _TL0	=	0x008a
                    008B    441 _TL1	=	0x008b
                    008C    442 _TH0	=	0x008c
                    008D    443 _TH1	=	0x008d
                    008E    444 _CKCON	=	0x008e
                    008F    445 _PSCTL	=	0x008f
                    0091    446 _SSTA0	=	0x0091
                    0098    447 _SCON0	=	0x0098
                    0098    448 _SCON	=	0x0098
                    0099    449 _SBUF0	=	0x0099
                    0099    450 _SBUF	=	0x0099
                    009A    451 _SPI0CFG	=	0x009a
                    009B    452 _SPI0DAT	=	0x009b
                    009D    453 _SPI0CKR	=	0x009d
                    00A1    454 _EMI0TC	=	0x00a1
                    00A2    455 _EMI0CN	=	0x00a2
                    00A2    456 __XPAGE	=	0x00a2
                    00A3    457 _EMI0CF	=	0x00a3
                    00A9    458 _SADDR0	=	0x00a9
                    00B7    459 _FLSCL	=	0x00b7
                    00B9    460 _SADEN0	=	0x00b9
                    00BA    461 _AMX0CF	=	0x00ba
                    00BB    462 _AMX0SL	=	0x00bb
                    00BC    463 _ADC0CF	=	0x00bc
                    00BD    464 _AMX0PRT	=	0x00bd
                    00BE    465 _ADC0L	=	0x00be
                    00BF    466 _ADC0H	=	0x00bf
                    00C0    467 _SMB0CN	=	0x00c0
                    00C1    468 _SMB0STA	=	0x00c1
                    00C2    469 _SMB0DAT	=	0x00c2
                    00C3    470 _SMB0ADR	=	0x00c3
                    00C4    471 _ADC0GTL	=	0x00c4
                    00C5    472 _ADC0GTH	=	0x00c5
                    00C6    473 _ADC0LTL	=	0x00c6
                    00C7    474 _ADC0LTH	=	0x00c7
                    00C8    475 _TMR2CN	=	0x00c8
                    00C9    476 _TMR2CF	=	0x00c9
                    00CA    477 _RCAP2L	=	0x00ca
                    00CB    478 _RCAP2H	=	0x00cb
                    00CC    479 _TMR2L	=	0x00cc
                    00CC    480 _TL2	=	0x00cc
                    00CD    481 _TMR2H	=	0x00cd
                    00CD    482 _TH2	=	0x00cd
                    00CF    483 _SMB0CR	=	0x00cf
                    00D1    484 _REF0CN	=	0x00d1
                    00D2    485 _DAC0L	=	0x00d2
                    00D3    486 _DAC0H	=	0x00d3
                    00D4    487 _DAC0CN	=	0x00d4
                    00D6    488 _HVA0CN	=	0x00d6
                    00D8    489 _PCA0CN	=	0x00d8
                    00D9    490 _PCA0MD	=	0x00d9
                    00DA    491 _PCA0CPM0	=	0x00da
                    00DB    492 _PCA0CPM1	=	0x00db
                    00DC    493 _PCA0CPM2	=	0x00dc
                    00DD    494 _PCA0CPM3	=	0x00dd
                    00DE    495 _PCA0CPM4	=	0x00de
                    00DF    496 _PCA0CPM5	=	0x00df
                    00E1    497 _PCA0CPL5	=	0x00e1
                    00E2    498 _PCA0CPH5	=	0x00e2
                    00E8    499 _ADC0CN	=	0x00e8
                    00E9    500 _PCA0CPL2	=	0x00e9
                    00EA    501 _PCA0CPH2	=	0x00ea
                    00EB    502 _PCA0CPL3	=	0x00eb
                    00EC    503 _PCA0CPH3	=	0x00ec
                    00ED    504 _PCA0CPL4	=	0x00ed
                    00EE    505 _PCA0CPH4	=	0x00ee
                    00EF    506 _RSTSRC	=	0x00ef
                    00F8    507 _SPI0CN	=	0x00f8
                    00F9    508 _PCA0L	=	0x00f9
                    00FA    509 _PCA0H	=	0x00fa
                    00FB    510 _PCA0CPL0	=	0x00fb
                    00FC    511 _PCA0CPH0	=	0x00fc
                    00FD    512 _PCA0CPL1	=	0x00fd
                    00FE    513 _PCA0CPH1	=	0x00fe
                    0088    514 _CPT0CN	=	0x0088
                    0089    515 _CPT0MD	=	0x0089
                    0098    516 _SCON1	=	0x0098
                    0099    517 _SBUF1	=	0x0099
                    00C0    518 _CAN0STA	=	0x00c0
                    00C8    519 _TMR3CN	=	0x00c8
                    00C9    520 _TMR3CF	=	0x00c9
                    00CA    521 _RCAP3L	=	0x00ca
                    00CB    522 _RCAP3H	=	0x00cb
                    00CC    523 _TMR3L	=	0x00cc
                    00CD    524 _TMR3H	=	0x00cd
                    00D2    525 _DAC1L	=	0x00d2
                    00D3    526 _DAC1H	=	0x00d3
                    00D4    527 _DAC1CN	=	0x00d4
                    00D8    528 _CAN0DATL	=	0x00d8
                    00D9    529 _CAN0DATH	=	0x00d9
                    00DA    530 _CAN0ADR	=	0x00da
                    00DB    531 _CAN0TST	=	0x00db
                    00F8    532 _CAN0CN	=	0x00f8
                    0088    533 _CPT1CN	=	0x0088
                    0089    534 _CPT1MD	=	0x0089
                    00BA    535 _AMX2CF	=	0x00ba
                    00BB    536 _AMX2SL	=	0x00bb
                    00BC    537 _ADC2CF	=	0x00bc
                    00BE    538 _ADC2	=	0x00be
                    00C4    539 _ADC2GT	=	0x00c4
                    00C6    540 _ADC2LT	=	0x00c6
                    00C8    541 _TMR4CN	=	0x00c8
                    00C9    542 _TMR4CF	=	0x00c9
                    00CA    543 _RCAP4L	=	0x00ca
                    00CB    544 _RCAP4H	=	0x00cb
                    00CC    545 _TMR4L	=	0x00cc
                    00CD    546 _TMR4H	=	0x00cd
                    00E8    547 _ADC2CN	=	0x00e8
                    0088    548 _CPT2CN	=	0x0088
                    0089    549 _CPT2MD	=	0x0089
                    008A    550 _OSCICN	=	0x008a
                    008B    551 _OSCICL	=	0x008b
                    008C    552 _OSCXCN	=	0x008c
                    0096    553 _SFRPGCN	=	0x0096
                    0097    554 _CLKSEL	=	0x0097
                    009C    555 _P4MDOUT	=	0x009c
                    009D    556 _P5MDOUT	=	0x009d
                    009E    557 _P6MDOUT	=	0x009e
                    009F    558 _P7MDOUT	=	0x009f
                    00A4    559 _P0MDOUT	=	0x00a4
                    00A5    560 _P1MDOUT	=	0x00a5
                    00A6    561 _P2MDOUT	=	0x00a6
                    00A7    562 _P3MDOUT	=	0x00a7
                    00AD    563 _P1MDIN	=	0x00ad
                    00AE    564 _P2MDIN	=	0x00ae
                    00AF    565 _P3MDIN	=	0x00af
                    00B7    566 _FLACL	=	0x00b7
                    00C8    567 _P4	=	0x00c8
                    00D8    568 _P5	=	0x00d8
                    00E1    569 _XBR0	=	0x00e1
                    00E2    570 _XBR1	=	0x00e2
                    00E3    571 _XBR2	=	0x00e3
                    00E4    572 _XBR3	=	0x00e4
                    00E8    573 _P6	=	0x00e8
                    00F8    574 _P7	=	0x00f8
                            575 ;--------------------------------------------------------
                            576 ; special function bits
                            577 ;--------------------------------------------------------
                            578 	.area RSEG    (DATA)
                    0080    579 _P0_0	=	0x0080
                    0081    580 _P0_1	=	0x0081
                    0082    581 _P0_2	=	0x0082
                    0083    582 _P0_3	=	0x0083
                    0084    583 _P0_4	=	0x0084
                    0085    584 _P0_5	=	0x0085
                    0086    585 _P0_6	=	0x0086
                    0087    586 _P0_7	=	0x0087
                    0088    587 _IT0	=	0x0088
                    0089    588 _IE0	=	0x0089
                    008A    589 _IT1	=	0x008a
                    008B    590 _IE1	=	0x008b
                    008C    591 _TR0	=	0x008c
                    008D    592 _TF0	=	0x008d
                    008E    593 _TR1	=	0x008e
                    008F    594 _TF1	=	0x008f
                    0088    595 _CP0HYN0	=	0x0088
                    0089    596 _CP0HYN1	=	0x0089
                    008A    597 _CP0HYP0	=	0x008a
                    008B    598 _CP0HYP1	=	0x008b
                    008C    599 _CP0FIF	=	0x008c
                    008D    600 _CP0RIF	=	0x008d
                    008E    601 _CP0OUT	=	0x008e
                    008F    602 _CP0EN	=	0x008f
                    0088    603 _CP1HYN0	=	0x0088
                    0089    604 _CP1HYN1	=	0x0089
                    008A    605 _CP1HYP0	=	0x008a
                    008B    606 _CP1HYP1	=	0x008b
                    008C    607 _CP1FIF	=	0x008c
                    008D    608 _CP1RIF	=	0x008d
                    008E    609 _CP1OUT	=	0x008e
                    008F    610 _CP1EN	=	0x008f
                    0088    611 _CP2HYN0	=	0x0088
                    0089    612 _CP2HYN1	=	0x0089
                    008A    613 _CP2HYP0	=	0x008a
                    008B    614 _CP2HYP1	=	0x008b
                    008C    615 _CP2FIF	=	0x008c
                    008D    616 _CP2RIF	=	0x008d
                    008E    617 _CP2OUT	=	0x008e
                    008F    618 _CP2EN	=	0x008f
                    0090    619 _P1_0	=	0x0090
                    0091    620 _P1_1	=	0x0091
                    0092    621 _P1_2	=	0x0092
                    0093    622 _P1_3	=	0x0093
                    0094    623 _P1_4	=	0x0094
                    0095    624 _P1_5	=	0x0095
                    0096    625 _P1_6	=	0x0096
                    0097    626 _P1_7	=	0x0097
                    0098    627 _RI0	=	0x0098
                    0098    628 _RI	=	0x0098
                    0099    629 _TI0	=	0x0099
                    0099    630 _TI	=	0x0099
                    009A    631 _RB80	=	0x009a
                    009B    632 _TB80	=	0x009b
                    009C    633 _REN0	=	0x009c
                    009C    634 _REN	=	0x009c
                    009D    635 _SM20	=	0x009d
                    009E    636 _SM10	=	0x009e
                    009F    637 _SM00	=	0x009f
                    0098    638 _RI1	=	0x0098
                    0099    639 _TI1	=	0x0099
                    009A    640 _RB81	=	0x009a
                    009B    641 _TB81	=	0x009b
                    009C    642 _REN1	=	0x009c
                    009D    643 _MCE1	=	0x009d
                    009F    644 _S1MODE	=	0x009f
                    00A0    645 _P2_0	=	0x00a0
                    00A1    646 _P2_1	=	0x00a1
                    00A2    647 _P2_2	=	0x00a2
                    00A3    648 _P2_3	=	0x00a3
                    00A4    649 _P2_4	=	0x00a4
                    00A5    650 _P2_5	=	0x00a5
                    00A6    651 _P2_6	=	0x00a6
                    00A7    652 _P2_7	=	0x00a7
                    00A8    653 _EX0	=	0x00a8
                    00A9    654 _ET0	=	0x00a9
                    00AA    655 _EX1	=	0x00aa
                    00AB    656 _ET1	=	0x00ab
                    00AC    657 _ES0	=	0x00ac
                    00AC    658 _ES	=	0x00ac
                    00AD    659 _ET2	=	0x00ad
                    00AF    660 _EA	=	0x00af
                    00B0    661 _P3_0	=	0x00b0
                    00B1    662 _P3_1	=	0x00b1
                    00B2    663 _P3_2	=	0x00b2
                    00B3    664 _P3_3	=	0x00b3
                    00B4    665 _P3_4	=	0x00b4
                    00B5    666 _P3_5	=	0x00b5
                    00B6    667 _P3_6	=	0x00b6
                    00B7    668 _P3_7	=	0x00b7
                    00B8    669 _PX0	=	0x00b8
                    00B9    670 _PT0	=	0x00b9
                    00BA    671 _PX1	=	0x00ba
                    00BB    672 _PT1	=	0x00bb
                    00BC    673 _PS0	=	0x00bc
                    00BC    674 _PS	=	0x00bc
                    00BD    675 _PT2	=	0x00bd
                    00C0    676 _SMBTOE	=	0x00c0
                    00C1    677 _SMBFTE	=	0x00c1
                    00C2    678 _AA	=	0x00c2
                    00C3    679 _SI	=	0x00c3
                    00C4    680 _STO	=	0x00c4
                    00C5    681 _STA	=	0x00c5
                    00C6    682 _ENSMB	=	0x00c6
                    00C7    683 _BUSY	=	0x00c7
                    00C3    684 _CANTXOK	=	0x00c3
                    00C4    685 _CANRXOK	=	0x00c4
                    00C5    686 _CANEPASS	=	0x00c5
                    00C6    687 _CANEWARN	=	0x00c6
                    00C7    688 _CANBOFF	=	0x00c7
                    00C8    689 _CPRL2	=	0x00c8
                    00C9    690 _CT2	=	0x00c9
                    00CA    691 _TR2	=	0x00ca
                    00CB    692 _EXEN2	=	0x00cb
                    00CE    693 _EXF2	=	0x00ce
                    00CF    694 _TF2	=	0x00cf
                    00C8    695 _CPRL3	=	0x00c8
                    00C9    696 _CT3	=	0x00c9
                    00CA    697 _TR3	=	0x00ca
                    00CB    698 _EXEN3	=	0x00cb
                    00CE    699 _EXF3	=	0x00ce
                    00CF    700 _TF3	=	0x00cf
                    00C8    701 _CPRL4	=	0x00c8
                    00C9    702 _CT4	=	0x00c9
                    00CA    703 _TR4	=	0x00ca
                    00CB    704 _EXEN4	=	0x00cb
                    00CE    705 _EXF4	=	0x00ce
                    00CF    706 _TF4	=	0x00cf
                    00C8    707 _P4_0	=	0x00c8
                    00C9    708 _P4_1	=	0x00c9
                    00CA    709 _P4_2	=	0x00ca
                    00CB    710 _P4_3	=	0x00cb
                    00CC    711 _P4_4	=	0x00cc
                    00CD    712 _P4_5	=	0x00cd
                    00CE    713 _P4_6	=	0x00ce
                    00CF    714 _P4_7	=	0x00cf
                    00D0    715 _P	=	0x00d0
                    00D1    716 _F1	=	0x00d1
                    00D2    717 _OV	=	0x00d2
                    00D3    718 _RS0	=	0x00d3
                    00D4    719 _RS1	=	0x00d4
                    00D5    720 _F0	=	0x00d5
                    00D6    721 _AC	=	0x00d6
                    00D7    722 _CY	=	0x00d7
                    00D8    723 _CCF0	=	0x00d8
                    00D9    724 _CCF1	=	0x00d9
                    00DA    725 _CCF2	=	0x00da
                    00DB    726 _CCF3	=	0x00db
                    00DC    727 _CCF4	=	0x00dc
                    00DD    728 _CCF5	=	0x00dd
                    00DE    729 _CR	=	0x00de
                    00DF    730 _CF	=	0x00df
                    00D8    731 _P5_0	=	0x00d8
                    00D9    732 _P5_1	=	0x00d9
                    00DA    733 _P5_2	=	0x00da
                    00DB    734 _P5_3	=	0x00db
                    00DC    735 _P5_4	=	0x00dc
                    00DD    736 _P5_5	=	0x00dd
                    00DE    737 _P5_6	=	0x00de
                    00DF    738 _P5_7	=	0x00df
                    00E8    739 _AD0LJST	=	0x00e8
                    00E9    740 _AD0WINT	=	0x00e9
                    00EA    741 _AD0CM0	=	0x00ea
                    00EB    742 _AD0CM1	=	0x00eb
                    00EC    743 _AD0BUSY	=	0x00ec
                    00ED    744 _AD0INT	=	0x00ed
                    00EE    745 _AD0TM	=	0x00ee
                    00EF    746 _AD0EN	=	0x00ef
                    00E8    747 _AD2WINT	=	0x00e8
                    00E9    748 _AD2CM0	=	0x00e9
                    00EA    749 _AD2CM1	=	0x00ea
                    00EB    750 _AD2CM2	=	0x00eb
                    00EC    751 _AD2BUSY	=	0x00ec
                    00ED    752 _AD2INT	=	0x00ed
                    00EE    753 _AD2TM	=	0x00ee
                    00EF    754 _AD2EN	=	0x00ef
                    00E8    755 _P6_0	=	0x00e8
                    00E9    756 _P6_1	=	0x00e9
                    00EA    757 _P6_2	=	0x00ea
                    00EB    758 _P6_3	=	0x00eb
                    00EC    759 _P6_4	=	0x00ec
                    00ED    760 _P6_5	=	0x00ed
                    00EE    761 _P6_6	=	0x00ee
                    00EF    762 _P6_7	=	0x00ef
                    00F8    763 _SPIEN	=	0x00f8
                    00F9    764 _TXBMT	=	0x00f9
                    00FA    765 _NSSMD0	=	0x00fa
                    00FB    766 _NSSMD1	=	0x00fb
                    00FC    767 _RXOVRN	=	0x00fc
                    00FD    768 _MODF	=	0x00fd
                    00FE    769 _WCOL	=	0x00fe
                    00FF    770 _SPIF	=	0x00ff
                    00F8    771 _CANINIT	=	0x00f8
                    00F9    772 _CANIE	=	0x00f9
                    00FA    773 _CANSIE	=	0x00fa
                    00FB    774 _CANEIE	=	0x00fb
                    00FC    775 _CANIF	=	0x00fc
                    00FD    776 _CANDAR	=	0x00fd
                    00FE    777 _CANCCE	=	0x00fe
                    00FF    778 _CANTEST	=	0x00ff
                    00F8    779 _P7_0	=	0x00f8
                    00F9    780 _P7_1	=	0x00f9
                    00FA    781 _P7_2	=	0x00fa
                    00FB    782 _P7_3	=	0x00fb
                    00FC    783 _P7_4	=	0x00fc
                    00FD    784 _P7_5	=	0x00fd
                    00FE    785 _P7_6	=	0x00fe
                    00FF    786 _P7_7	=	0x00ff
                            787 ;--------------------------------------------------------
                            788 ; overlayable register banks
                            789 ;--------------------------------------------------------
                            790 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     791 	.ds 8
                            792 ;--------------------------------------------------------
                            793 ; overlayable bit register bank
                            794 ;--------------------------------------------------------
                            795 	.area BIT_BANK	(REL,OVR,DATA)
   0022                     796 bits:
   0022                     797 	.ds 1
                    8000    798 	b0 = bits[0]
                    8100    799 	b1 = bits[1]
                    8200    800 	b2 = bits[2]
                    8300    801 	b3 = bits[3]
                    8400    802 	b4 = bits[4]
                    8500    803 	b5 = bits[5]
                    8600    804 	b6 = bits[6]
                    8700    805 	b7 = bits[7]
                            806 ;--------------------------------------------------------
                            807 ; internal ram data
                            808 ;--------------------------------------------------------
                            809 	.area DSEG    (DATA)
   0042                     810 _task_UART_core_projectSpecific_sloc0_1_0:
   0042                     811 	.ds 1
   0043                     812 _task_UART_core_projectSpecific_sloc1_1_0:
   0043                     813 	.ds 3
   0046                     814 _task_UART_core_projectSpecific_sloc2_1_0:
   0046                     815 	.ds 2
   0048                     816 _task_UART_core_projectSpecific_sloc3_1_0:
   0048                     817 	.ds 3
   004B                     818 _task_UART_getchar_projectSpecific_sloc0_1_0:
   004B                     819 	.ds 3
   004E                     820 _task_UART_getchar_projectSpecific_sloc1_1_0:
   004E                     821 	.ds 2
   0050                     822 _task_UART_getchar_projectSpecific_sloc2_1_0:
   0050                     823 	.ds 3
   0053                     824 _task_UART_gets_projectSpecific_sloc0_1_0:
   0053                     825 	.ds 1
   0054                     826 _task_UART_gets_projectSpecific_sloc1_1_0:
   0054                     827 	.ds 2
                            828 ;--------------------------------------------------------
                            829 ; overlayable items in internal ram 
                            830 ;--------------------------------------------------------
                            831 	.area	OSEG    (OVR,DATA)
   0018                     832 _addTickCounter_sloc0_1_0::
   0018                     833 	.ds 3
                            834 ;--------------------------------------------------------
                            835 ; Stack segment in internal ram 
                            836 ;--------------------------------------------------------
                            837 	.area	SSEG	(DATA)
   0056                     838 __start__stack:
   0056                     839 	.ds	1
                            840 
                            841 ;--------------------------------------------------------
                            842 ; indirectly addressable internal ram data
                            843 ;--------------------------------------------------------
                            844 	.area ISEG    (DATA)
                            845 ;--------------------------------------------------------
                            846 ; absolute internal ram data
                            847 ;--------------------------------------------------------
                            848 	.area IABS    (ABS,DATA)
                            849 	.area IABS    (ABS,DATA)
                            850 ;--------------------------------------------------------
                            851 ; bit data
                            852 ;--------------------------------------------------------
                            853 	.area BSEG    (BIT)
   0000                     854 _timeForTickProcessing:
   0000                     855 	.ds 1
   0001                     856 _main_processed_2_4:
   0001                     857 	.ds 1
   0002                     858 _pwm_init_projectSpecific_initialized_1_1:
   0002                     859 	.ds 1
   0003                     860 _task_UART_init_projectSpecific_timer1initialized_1_1:
   0003                     861 	.ds 1
   0004                     862 _task_UART_isLineReady_sloc0_1_0:
   0004                     863 	.ds 1
                            864 ;--------------------------------------------------------
                            865 ; paged external ram data
                            866 ;--------------------------------------------------------
                            867 	.area PSEG    (PAG,XDATA)
                            868 ;--------------------------------------------------------
                            869 ; external ram data
                            870 ;--------------------------------------------------------
                            871 	.area XSEG    (XDATA)
   0145                     872 _main_iterationMax_1_1:
   0145                     873 	.ds 2
   0147                     874 _pwm_init_projectSpecific_channelNumber_1_1:
   0147                     875 	.ds 1
   0148                     876 _pwm_setDutyCycle_projectSpecific_PARM_2:
   0148                     877 	.ds 1
   0149                     878 _pwm_adjustDutyCycle_projectSpecific_PARM_2:
   0149                     879 	.ds 1
   014A                     880 _pwm_setDutyCycleAsPercentage_projectSpecific_PARM_2:
   014A                     881 	.ds 1
   014B                     882 _UARTtempBuffer::
   014B                     883 	.ds 1100
   0597                     884 _IsEmpty_Q_1_1:
   0597                     885 	.ds 3
   059A                     886 _IsFull_Q_1_1:
   059A                     887 	.ds 3
   059D                     888 _Succ_PARM_2:
   059D                     889 	.ds 3
   05A0                     890 _Succ_Value_1_1:
   05A0                     891 	.ds 2
   05A2                     892 _transmitBuffer:
   05A2                     893 	.ds 1101
   09EF                     894 _receiveBuffer:
   09EF                     895 	.ds 11
   09FA                     896 _transmitBuffers:
   09FA                     897 	.ds 11
   0A05                     898 _receiveBuffers:
   0A05                     899 	.ds 11
   0A10                     900 _charSent:
   0A10                     901 	.ds 1
   0A11                     902 _lineReady:
   0A11                     903 	.ds 1
   0A12                     904 _task_UART_init_projectSpecific_channelNumber_1_1:
   0A12                     905 	.ds 1
   0A13                     906 _task_UART_core_projectSpecific_channelNumber_1_1:
   0A13                     907 	.ds 1
   0A14                     908 _task_UART_core_projectSpecific_Q_4_4:
   0A14                     909 	.ds 3
   0A17                     910 _task_UART_putchar_projectSpecific_PARM_2:
   0A17                     911 	.ds 1
   0A18                     912 _task_UART_putchar_projectSpecific_channelNumber_1_1:
   0A18                     913 	.ds 1
   0A19                     914 _task_UART_putchar_projectSpecific_Q_2_2:
   0A19                     915 	.ds 3
   0A1C                     916 _task_UART_puts_projectSpecific_PARM_2:
   0A1C                     917 	.ds 3
   0A1F                     918 _task_UART_puts_projectSpecific_channelNumber_1_1:
   0A1F                     919 	.ds 1
   0A20                     920 _task_UART_getchar_projectSpecific_channelNumber_1_1:
   0A20                     921 	.ds 1
   0A21                     922 _task_UART_getchar_projectSpecific_Q_2_2:
   0A21                     923 	.ds 3
   0A24                     924 _task_UART_gets_projectSpecific_PARM_2:
   0A24                     925 	.ds 3
   0A27                     926 _task_UART_gets_projectSpecific_PARM_3:
   0A27                     927 	.ds 2
   0A29                     928 _task_UART_gets_projectSpecific_channelNumber_1_1:
   0A29                     929 	.ds 1
   0A2A                     930 _task_UART_isLineReady_channelNumber_1_1:
   0A2A                     931 	.ds 1
   0A2B                     932 _putchar_c_1_1:
   0A2B                     933 	.ds 1
   0A2C                     934 _prvSetupTimerInterrupt_ucOriginalSFRPage_1_1:
   0A2C                     935 	.ds 1
   0A2D                     936 _tickCounterToIncrement::
   0A2D                     937 	.ds 30
   0A4B                     938 _addTickCounter_pointerToIncrement_1_1:
   0A4B                     939 	.ds 3
                            940 ;--------------------------------------------------------
                            941 ; absolute external ram data
                            942 ;--------------------------------------------------------
                            943 	.area XABS    (ABS,XDATA)
                            944 ;--------------------------------------------------------
                            945 ; external initialized ram data
                            946 ;--------------------------------------------------------
                            947 	.area XISEG   (XDATA)
   0EE6                     948 _countdown:
   0EE6                     949 	.ds 2
                            950 	.area HOME    (CODE)
                            951 	.area GSINIT0 (CODE)
                            952 	.area GSINIT1 (CODE)
                            953 	.area GSINIT2 (CODE)
                            954 	.area GSINIT3 (CODE)
                            955 	.area GSINIT4 (CODE)
                            956 	.area GSINIT5 (CODE)
                            957 	.area GSINIT  (CODE)
                            958 	.area GSFINAL (CODE)
                            959 	.area CSEG    (CODE)
                            960 ;--------------------------------------------------------
                            961 ; interrupt vector 
                            962 ;--------------------------------------------------------
                            963 	.area HOME    (CODE)
   0000                     964 __interrupt_vect:
   0000 02 00 33            965 	ljmp	__sdcc_gsinit_startup
   0003 32                  966 	reti
   0004                     967 	.ds	7
   000B 32                  968 	reti
   000C                     969 	.ds	7
   0013 32                  970 	reti
   0014                     971 	.ds	7
   001B 32                  972 	reti
   001C                     973 	.ds	7
   0023 32                  974 	reti
   0024                     975 	.ds	7
   002B 02 20 E5            976 	ljmp	_vTimer2ISR
                            977 ;--------------------------------------------------------
                            978 ; global & static initialisations
                            979 ;--------------------------------------------------------
                            980 	.area HOME    (CODE)
                            981 	.area GSINIT  (CODE)
                            982 	.area GSFINAL (CODE)
                            983 	.area GSINIT  (CODE)
                            984 	.globl __sdcc_gsinit_startup
                            985 	.globl __sdcc_program_startup
                            986 	.globl __start__stack
                            987 	.globl __mcs51_genXINIT
                            988 	.globl __mcs51_genXRAMCLEAR
                            989 	.globl __mcs51_genRAMCLEAR
                            990 ;------------------------------------------------------------
                            991 ;Allocation info for local variables in function 'main'
                            992 ;------------------------------------------------------------
                            993 ;bomb                      Allocated with name '_main_bomb_1_1'
                            994 ;calculator                Allocated with name '_main_calculator_1_1'
                            995 ;iterationMax              Allocated with name '_main_iterationMax_1_1'
                            996 ;------------------------------------------------------------
                            997 ;	../src/main_C8051F040.c:32: static int iterationMax = 10 ;
   009E 90 01 45            998 	mov	dptr,#_main_iterationMax_1_1
   00A1 74 0A               999 	mov	a,#0x0A
   00A3 F0                 1000 	movx	@dptr,a
   00A4 E4                 1001 	clr	a
   00A5 A3                 1002 	inc	dptr
   00A6 F0                 1003 	movx	@dptr,a
                           1004 ;	../src/main_C8051F040.c:64: static bool processed = false ;
   00A7 C2 01              1005 	clr	_main_processed_2_4
                           1006 ;------------------------------------------------------------
                           1007 ;Allocation info for local variables in function 'task_UART_init_projectSpecific'
                           1008 ;------------------------------------------------------------
                           1009 ;channelNumber             Allocated with name '_task_UART_init_projectSpecific_channelNumber_1_1'
                           1010 ;Q                         Allocated with name '_task_UART_init_projectSpecific_Q_1_1'
                           1011 ;SFRPAGE_SAVE              Allocated with name '_task_UART_init_projectSpecific_SFRPAGE_SAVE_3_3'
                           1012 ;------------------------------------------------------------
                           1013 ;	../src/projectSpecificHardwareInterface_C8051F040.c:323: static bool	timer1initialized = false ;
   00A9 C2 03              1014 	clr	_task_UART_init_projectSpecific_timer1initialized_1_1
                           1015 	.area GSFINAL (CODE)
   00AB 02 00 2E           1016 	ljmp	__sdcc_program_startup
                           1017 ;--------------------------------------------------------
                           1018 ; Home
                           1019 ;--------------------------------------------------------
                           1020 	.area HOME    (CODE)
                           1021 	.area HOME    (CODE)
   002E                    1022 __sdcc_program_startup:
   002E 12 16 5A           1023 	lcall	_main
                           1024 ;	return from main will lock up
   0031 80 FE              1025 	sjmp .
                           1026 ;--------------------------------------------------------
                           1027 ; code
                           1028 ;--------------------------------------------------------
                           1029 	.area CSEG    (CODE)
                           1030 ;------------------------------------------------------------
                           1031 ;Allocation info for local variables in function 'main'
                           1032 ;------------------------------------------------------------
                           1033 ;bomb                      Allocated with name '_main_bomb_1_1'
                           1034 ;calculator                Allocated with name '_main_calculator_1_1'
                           1035 ;iterationMax              Allocated with name '_main_iterationMax_1_1'
                           1036 ;------------------------------------------------------------
                           1037 ;	../src/main_C8051F040.c:27: void main(	void)
                           1038 ;	-----------------------------------------
                           1039 ;	 function main
                           1040 ;	-----------------------------------------
   165A                    1041 _main:
                    0002   1042 	ar2 = 0x02
                    0003   1043 	ar3 = 0x03
                    0004   1044 	ar4 = 0x04
                    0005   1045 	ar5 = 0x05
                    0006   1046 	ar6 = 0x06
                    0007   1047 	ar7 = 0x07
                    0000   1048 	ar0 = 0x00
                    0001   1049 	ar1 = 0x01
                           1050 ;	../src/main_C8051F040.c:34: WDTCN = 0xDE ;	// Disable the watchdog timer
   165A 75 FF DE           1051 	mov	_WDTCN,#0xDE
                           1052 ;	../src/main_C8051F040.c:35: WDTCN = 0xAD ;
   165D 75 FF AD           1053 	mov	_WDTCN,#0xAD
                           1054 ;	../src/main_C8051F040.c:36: WDTCN = 0xFF ;	// Disable any future ability to modify the watchdog timer
   1660 75 FF FF           1055 	mov	_WDTCN,#0xFF
                           1056 ;	../src/main_C8051F040.c:38: prvSetupSystemClock() ;
   1663 12 20 29           1057 	lcall	_prvSetupSystemClock
                           1058 ;	../src/main_C8051F040.c:39: gpio_init() ;
   1666 12 17 2B           1059 	lcall	_gpio_init_projectSpecific
                           1060 ;	../src/main_C8051F040.c:40: pwm_init(ioMapping_PWM_TO_TICK_SYNCHRONIZER_CHANNEL) ;
   1669 75 82 00           1061 	mov	dpl,#0x00
   166C 12 30 9B           1062 	lcall	_pwm_init
                           1063 ;	../src/main_C8051F040.c:41: prvSetupTimerInterrupt() ;
   166F 12 20 48           1064 	lcall	_prvSetupTimerInterrupt
                           1065 ;	../src/main_C8051F040.c:42: task_UART_init(0) ;
   1672 75 82 00           1066 	mov	dpl,#0x00
   1675 12 31 2E           1067 	lcall	_task_UART_init
                           1068 ;	../src/main_C8051F040.c:44: portENABLE_INTERRUPTS() ;
   1678 D2 AF              1069 	setb	_EA
                           1070 ;	../src/main_C8051F040.c:46: puts("4th Generation state machine test started.") ;
   167A 90 42 F4           1071 	mov	dptr,#__str_0
   167D 75 F0 80           1072 	mov	b,#0x80
   1680 12 36 86           1073 	lcall	_puts
                           1074 ;	../src/main_C8051F040.c:48: bomb = STATE_MACHINE_CREATE_INSTANCE_OF(timeBomb) ;
   1683 12 2D 09           1075 	lcall	_timeBomb_getMachineSize
   1686 AA 82              1076 	mov	r2,dpl
   1688 AB 83              1077 	mov	r3,dph
   168A C0 02              1078 	push	ar2
   168C C0 03              1079 	push	ar3
   168E 12 00 00           1080 	lcall	_timeBomb_getEventQueueDepth
   1691 AC 82              1081 	mov	r4,dpl
   1693 AD 83              1082 	mov	r5,dph
   1695 D0 03              1083 	pop	ar3
   1697 D0 02              1084 	pop	ar2
   1699 90 00 B9           1085 	mov	dptr,#_allocateStateMachineMemory_PARM_2
   169C EC                 1086 	mov	a,r4
   169D F0                 1087 	movx	@dptr,a
   169E A3                 1088 	inc	dptr
   169F ED                 1089 	mov	a,r5
   16A0 F0                 1090 	movx	@dptr,a
   16A1 90 00 BB           1091 	mov	dptr,#_allocateStateMachineMemory_PARM_3
   16A4 74 6F              1092 	mov	a,#_timeBomb_constructor
   16A6 F0                 1093 	movx	@dptr,a
   16A7 A3                 1094 	inc	dptr
   16A8 74 2C              1095 	mov	a,#(_timeBomb_constructor >> 8)
   16AA F0                 1096 	movx	@dptr,a
   16AB 8A 82              1097 	mov	dpl,r2
   16AD 8B 83              1098 	mov	dph,r3
   16AF 12 05 50           1099 	lcall	_allocateStateMachineMemory
                           1100 ;	../src/main_C8051F040.c:55: calculator = STATE_MACHINE_CREATE_INSTANCE_OF(calculator) ;
   16B2 12 22 0D           1101 	lcall	_calculator_getMachineSize
   16B5 AA 82              1102 	mov	r2,dpl
   16B7 AB 83              1103 	mov	r3,dph
   16B9 C0 02              1104 	push	ar2
   16BB C0 03              1105 	push	ar3
   16BD 12 00 00           1106 	lcall	_calculator_getEventQueueDepth
   16C0 AC 82              1107 	mov	r4,dpl
   16C2 AD 83              1108 	mov	r5,dph
   16C4 D0 03              1109 	pop	ar3
   16C6 D0 02              1110 	pop	ar2
   16C8 90 00 B9           1111 	mov	dptr,#_allocateStateMachineMemory_PARM_2
   16CB EC                 1112 	mov	a,r4
   16CC F0                 1113 	movx	@dptr,a
   16CD A3                 1114 	inc	dptr
   16CE ED                 1115 	mov	a,r5
   16CF F0                 1116 	movx	@dptr,a
   16D0 90 00 BB           1117 	mov	dptr,#_allocateStateMachineMemory_PARM_3
   16D3 74 73              1118 	mov	a,#_calculator_constructor
   16D5 F0                 1119 	movx	@dptr,a
   16D6 A3                 1120 	inc	dptr
   16D7 74 21              1121 	mov	a,#(_calculator_constructor >> 8)
   16D9 F0                 1122 	movx	@dptr,a
   16DA 8A 82              1123 	mov	dpl,r2
   16DC 8B 83              1124 	mov	dph,r3
   16DE 12 05 50           1125 	lcall	_allocateStateMachineMemory
   16E1 AA 82              1126 	mov	r2,dpl
   16E3 AB 83              1127 	mov	r3,dph
   16E5 AC F0              1128 	mov	r4,b
                           1129 ;	../src/main_C8051F040.c:57: if(calculator)
   16E7 EA                 1130 	mov	a,r2
   16E8 4B                 1131 	orl	a,r3
   16E9 4C                 1132 	orl	a,r4
   16EA 60 09              1133 	jz	00110$
                           1134 ;	../src/main_C8051F040.c:59: REGISTER_STATE_MACHINE(calculator) ;
   16EC 8A 82              1135 	mov	dpl,r2
   16EE 8B 83              1136 	mov	dph,r3
   16F0 8C F0              1137 	mov	b,r4
   16F2 12 06 E2           1138 	lcall	_registerStateMachine
                           1139 ;	../src/main_C8051F040.c:62: while(true)
   16F5                    1140 00110$:
                           1141 ;	../src/main_C8051F040.c:66: if(timeForTickProcessing)
                           1142 ;	../src/main_C8051F040.c:68: timeForTickProcessing = false ;
   16F5 10 00 02           1143 	jbc	_timeForTickProcessing,00120$
   16F8 80 FB              1144 	sjmp	00110$
   16FA                    1145 00120$:
                           1146 ;	../src/main_C8051F040.c:72: if(!processed)
   16FA 20 01 F8           1147 	jb	_main_processed_2_4,00110$
                           1148 ;	../src/main_C8051F040.c:76: if(iterationMax-- == 0)
   16FD 90 01 45           1149 	mov	dptr,#_main_iterationMax_1_1
   1700 E0                 1150 	movx	a,@dptr
   1701 FA                 1151 	mov	r2,a
   1702 A3                 1152 	inc	dptr
   1703 E0                 1153 	movx	a,@dptr
   1704 FB                 1154 	mov	r3,a
   1705 EA                 1155 	mov	a,r2
   1706 24 FF              1156 	add	a,#0xff
   1708 FC                 1157 	mov	r4,a
   1709 EB                 1158 	mov	a,r3
   170A 34 FF              1159 	addc	a,#0xff
   170C FD                 1160 	mov	r5,a
   170D 90 01 45           1161 	mov	dptr,#_main_iterationMax_1_1
   1710 EC                 1162 	mov	a,r4
   1711 F0                 1163 	movx	@dptr,a
   1712 A3                 1164 	inc	dptr
   1713 ED                 1165 	mov	a,r5
   1714 F0                 1166 	movx	@dptr,a
   1715 EA                 1167 	mov	a,r2
   1716 4B                 1168 	orl	a,r3
   1717 60 0E              1169 	jz	00112$
                           1170 ;	../src/main_C8051F040.c:81: puts("loop") ;
   1719 90 43 1F           1171 	mov	dptr,#__str_1
   171C 75 F0 80           1172 	mov	b,#0x80
   171F 12 36 86           1173 	lcall	_puts
                           1174 ;	../src/main_C8051F040.c:83: ITERATE_ALL_STATE_MACHINES() ;
   1722 12 07 AE           1175 	lcall	_iterateAllStateMachines
   1725 80 CE              1176 	sjmp	00110$
   1727                    1177 00112$:
   1727 22                 1178 	ret
                           1179 ;------------------------------------------------------------
                           1180 ;Allocation info for local variables in function 'taskSwitcherTickHook'
                           1181 ;------------------------------------------------------------
                           1182 ;------------------------------------------------------------
                           1183 ;	../src/main_C8051F040.c:90: void taskSwitcherTickHook(	void)
                           1184 ;	-----------------------------------------
                           1185 ;	 function taskSwitcherTickHook
                           1186 ;	-----------------------------------------
   1728                    1187 _taskSwitcherTickHook:
                           1188 ;	../src/main_C8051F040.c:92: timeForTickProcessing = true ;
   1728 D2 00              1189 	setb	_timeForTickProcessing
   172A 22                 1190 	ret
                           1191 ;------------------------------------------------------------
                           1192 ;Allocation info for local variables in function 'gpio_init_projectSpecific'
                           1193 ;------------------------------------------------------------
                           1194 ;SFRPAGE_SAVE              Allocated with name '_gpio_init_projectSpecific_SFRPAGE_SAVE_1_1'
                           1195 ;------------------------------------------------------------
                           1196 ;	../src/projectSpecificHardwareInterface_C8051F040.c:17: void gpio_init_projectSpecific(	void)
                           1197 ;	-----------------------------------------
                           1198 ;	 function gpio_init_projectSpecific
                           1199 ;	-----------------------------------------
   172B                    1200 _gpio_init_projectSpecific:
                           1201 ;	../src/projectSpecificHardwareInterface_C8051F040.c:21: SFRPAGE_SAVE = SFRPAGE ;
   172B AA 84              1202 	mov	r2,_SFRPAGE
                           1203 ;	../src/projectSpecificHardwareInterface_C8051F040.c:23: SFRPAGE	 = SPI0_PAGE ;
   172D 75 84 00           1204 	mov	_SFRPAGE,#0x00
                           1205 ;	../src/projectSpecificHardwareInterface_C8051F040.c:24: SPI0CN	 = 0x00 ;	// Set the SPI module into 3 pin mode so NSS doesn't get assigned to a pin in the crossbar setup below
   1730 75 F8 00           1206 	mov	_SPI0CN,#0x00
                           1207 ;	../src/projectSpecificHardwareInterface_C8051F040.c:26: SFRPAGE	 = CONFIG_PAGE ;
   1733 75 84 0F           1208 	mov	_SFRPAGE,#0x0F
                           1209 ;	../src/projectSpecificHardwareInterface_C8051F040.c:27: XBR0	 = 0x00 ;	// Start with a clean slate
   1736 75 E1 00           1210 	mov	_XBR0,#0x00
                           1211 ;	../src/projectSpecificHardwareInterface_C8051F040.c:28: XBR1	 = 0x00 ;
   1739 75 E2 00           1212 	mov	_XBR1,#0x00
                           1213 ;	../src/projectSpecificHardwareInterface_C8051F040.c:29: XBR2	 = 0x00 ;
   173C 75 E3 00           1214 	mov	_XBR2,#0x00
                           1215 ;	../src/projectSpecificHardwareInterface_C8051F040.c:30: XBR3	 = 0x00 ;
   173F 75 E4 00           1216 	mov	_XBR3,#0x00
                           1217 ;	../src/projectSpecificHardwareInterface_C8051F040.c:32: XBR0	|= 0x04 ;	// Route UART0 to P0.0-P0.1
   1742 43 E1 04           1218 	orl	_XBR0,#0x04
                           1219 ;	../src/projectSpecificHardwareInterface_C8051F040.c:33: XBR0	|= 0x02 ;	// Route SPI0 to P0.2-P0.4
   1745 43 E1 02           1220 	orl	_XBR0,#0x02
                           1221 ;	../src/projectSpecificHardwareInterface_C8051F040.c:34: XBR0	|= 0x01 ;	// Route SMB0 to P0.5-P0.6
   1748 43 E1 01           1222 	orl	_XBR0,#0x01
                           1223 ;	../src/projectSpecificHardwareInterface_C8051F040.c:35: XBR2	|= 0x04 ;	// Route UART1 to P0.7-P1.0
   174B 43 E3 04           1224 	orl	_XBR2,#0x04
                           1225 ;	../src/projectSpecificHardwareInterface_C8051F040.c:36: XBR0	|= 0x30 ;	// Route CEXn to P1.1-P1.6
   174E 43 E1 30           1226 	orl	_XBR0,#0x30
                           1227 ;	../src/projectSpecificHardwareInterface_C8051F040.c:37: XBR0	|= 0x80 ;	// Route CP0 to P1.7
   1751 43 E1 80           1228 	orl	_XBR0,#0x80
                           1229 ;	../src/projectSpecificHardwareInterface_C8051F040.c:38: XBR3	|= 0x08 ;	// Route CP2 to P2.0
   1754 43 E4 08           1230 	orl	_XBR3,#0x08
                           1231 ;	../src/projectSpecificHardwareInterface_C8051F040.c:39: XBR1	|= 0x04 ;	// Route INT0# to P2.1
   1757 43 E2 04           1232 	orl	_XBR1,#0x04
                           1233 ;	../src/projectSpecificHardwareInterface_C8051F040.c:40: XBR1	|= 0x20 ;	// Route T2 from P2.2
   175A 43 E2 20           1234 	orl	_XBR1,#0x20
                           1235 ;	../src/projectSpecificHardwareInterface_C8051F040.c:41: XBR3	|= 0x01 ;	// Route T3 to P2.3
   175D 43 E4 01           1236 	orl	_XBR3,#0x01
                           1237 ;	../src/projectSpecificHardwareInterface_C8051F040.c:43: P0MDOUT |= 0x01 ;	// Set TX0 (P0.0) to push-pull
   1760 43 A4 01           1238 	orl	_P0MDOUT,#0x01
                           1239 ;	../src/projectSpecificHardwareInterface_C8051F040.c:45: P1MDOUT	|= 0x02 ;	// Set CEX0 (P1.1) to push-pull
   1763 43 A5 02           1240 	orl	_P1MDOUT,#0x02
                           1241 ;	../src/projectSpecificHardwareInterface_C8051F040.c:46: P1MDOUT	|= 0x04 ;	// Set CEX1 (P1.2) to push-pull
   1766 43 A5 04           1242 	orl	_P1MDOUT,#0x04
                           1243 ;	../src/projectSpecificHardwareInterface_C8051F040.c:47: P1MDOUT	|= 0x08 ;	// Set CEX2 (P1.3) to push-pull
   1769 43 A5 08           1244 	orl	_P1MDOUT,#0x08
                           1245 ;	../src/projectSpecificHardwareInterface_C8051F040.c:48: P1MDOUT	|= 0x10 ;	// Set CEX3 (P1.4) to push-pull
   176C 43 A5 10           1246 	orl	_P1MDOUT,#0x10
                           1247 ;	../src/projectSpecificHardwareInterface_C8051F040.c:49: P1MDOUT	|= 0x20 ;	// Set CEX4 (P1.5) to push-pull
   176F 43 A5 20           1248 	orl	_P1MDOUT,#0x20
                           1249 ;	../src/projectSpecificHardwareInterface_C8051F040.c:50: P1MDOUT |= 0x40 ;	// Set CEX5 (P1.6) to push-pull
   1772 43 A5 40           1250 	orl	_P1MDOUT,#0x40
                           1251 ;	../src/projectSpecificHardwareInterface_C8051F040.c:52: P1MDOUT |= 0x80 ;	// Set TX1 (P1.7) to push-pull
   1775 43 A5 80           1252 	orl	_P1MDOUT,#0x80
                           1253 ;	../src/projectSpecificHardwareInterface_C8051F040.c:53: P2MDOUT	&= ~0x02 ;	// Set INT0# (P2.1) to be a digital input
                           1254 ;	../src/projectSpecificHardwareInterface_C8051F040.c:54: P2MDOUT	&= ~0x04 ;	// Set T2 (P2.2) to be a digital input
   1778 53 A6 F9           1255 	anl	_P2MDOUT,#(0xFD&0xFB)
                           1256 ;	../src/projectSpecificHardwareInterface_C8051F040.c:55: P2MDOUT	|= 0x08 ;	// Set P2.3 to be the Timer3 output pin
   177B 43 A6 08           1257 	orl	_P2MDOUT,#0x08
                           1258 ;	../src/projectSpecificHardwareInterface_C8051F040.c:57: P3MDIN	 = 0x00 ;	// Configure as analog inputs. This forces the weak pullup for these pins to be disconnected
   177E 75 AF 00           1259 	mov	_P3MDIN,#0x00
                           1260 ;	../src/projectSpecificHardwareInterface_C8051F040.c:58: P3MDOUT	 = 0x00 ;	// Force the output driver for these pins to open drain output mode
   1781 75 A7 00           1261 	mov	_P3MDOUT,#0x00
                           1262 ;	../src/projectSpecificHardwareInterface_C8051F040.c:59: P3		 = 0xFF ;	// Force the input driver for these pins to high impedance
   1784 75 B0 FF           1263 	mov	_P3,#0xFF
                           1264 ;	../src/projectSpecificHardwareInterface_C8051F040.c:61: XBR3	|= 0x80 ;	// Configure CAN TX pin (CTX) as push-pull digital output
   1787 43 E4 80           1265 	orl	_XBR3,#0x80
                           1266 ;	../src/projectSpecificHardwareInterface_C8051F040.c:63: P4MDOUT	|= 0xFF ;	// Set LCD drive pins to push-pull
   178A E5 9C              1267 	mov	a,_P4MDOUT
   178C 75 9C FF           1268 	mov	_P4MDOUT,#0xFF
                           1269 ;	../src/projectSpecificHardwareInterface_C8051F040.c:64: P5MDOUT	|= 0xFF ;	// Set state machine debug pins to push-pull
   178F E5 9D              1270 	mov	a,_P5MDOUT
   1791 75 9D FF           1271 	mov	_P5MDOUT,#0xFF
                           1272 ;	../src/projectSpecificHardwareInterface_C8051F040.c:65: P6MDOUT	|= 0xFF ;	// Set general purpose debug pins to push-pull
   1794 E5 9E              1273 	mov	a,_P6MDOUT
   1796 75 9E FF           1274 	mov	_P6MDOUT,#0xFF
                           1275 ;	../src/projectSpecificHardwareInterface_C8051F040.c:67: P4		 = 0x00 ;	// Set all debugging pins to low
   1799 75 C8 00           1276 	mov	_P4,#0x00
                           1277 ;	../src/projectSpecificHardwareInterface_C8051F040.c:68: P5		 = 0x00 ;
   179C 75 D8 00           1278 	mov	_P5,#0x00
                           1279 ;	../src/projectSpecificHardwareInterface_C8051F040.c:69: P6		 = 0x00 ;
   179F 75 E8 00           1280 	mov	_P6,#0x00
                           1281 ;	../src/projectSpecificHardwareInterface_C8051F040.c:71: P2MDIN	&= 0x0F ;	// set comparator analog inputs up as per Section 17.1.5 of the C8050F040 manual
   17A2 53 AE 0F           1282 	anl	_P2MDIN,#0x0F
                           1283 ;	../src/projectSpecificHardwareInterface_C8051F040.c:72: P2MDOUT	&= 0x0F ;
   17A5 53 A6 0F           1284 	anl	_P2MDOUT,#0x0F
                           1285 ;	../src/projectSpecificHardwareInterface_C8051F040.c:73: P2		|= 0xF0 ;
   17A8 43 A0 F0           1286 	orl	_P2,#0xF0
                           1287 ;	../src/projectSpecificHardwareInterface_C8051F040.c:78: XBR2	|= 0x40 ;	// Enable Crossbar/low ports and turn on global weak pullups
   17AB 43 E3 40           1288 	orl	_XBR2,#0x40
                           1289 ;	../src/projectSpecificHardwareInterface_C8051F040.c:79: SFRPAGE	 = SFRPAGE_SAVE ;
   17AE 8A 84              1290 	mov	_SFRPAGE,r2
   17B0 22                 1291 	ret
                           1292 ;------------------------------------------------------------
                           1293 ;Allocation info for local variables in function 'pwm_init_projectSpecific'
                           1294 ;------------------------------------------------------------
                           1295 ;channelNumber             Allocated with name '_pwm_init_projectSpecific_channelNumber_1_1'
                           1296 ;SFRPAGE_save              Allocated with name '_pwm_init_projectSpecific_SFRPAGE_save_1_1'
                           1297 ;------------------------------------------------------------
                           1298 ;	../src/projectSpecificHardwareInterface_C8051F040.c:83: void pwm_init_projectSpecific(								unsigned char channelNumber)
                           1299 ;	-----------------------------------------
                           1300 ;	 function pwm_init_projectSpecific
                           1301 ;	-----------------------------------------
   17B1                    1302 _pwm_init_projectSpecific:
   17B1 E5 82              1303 	mov	a,dpl
   17B3 90 01 47           1304 	mov	dptr,#_pwm_init_projectSpecific_channelNumber_1_1
   17B6 F0                 1305 	movx	@dptr,a
                           1306 ;	../src/projectSpecificHardwareInterface_C8051F040.c:132: char		SFRPAGE_save = SFRPAGE ;	// Save current SFR Page
   17B7 AA 84              1307 	mov	r2,_SFRPAGE
                           1308 ;	../src/projectSpecificHardwareInterface_C8051F040.c:134: SFRPAGE = PCA0_PAGE ;
   17B9 75 84 00           1309 	mov	_SFRPAGE,#0x00
                           1310 ;	../src/projectSpecificHardwareInterface_C8051F040.c:136: if(!initialized)
   17BC 20 02 2A           1311 	jb	_pwm_init_projectSpecific_initialized_1_1,00102$
                           1312 ;	../src/projectSpecificHardwareInterface_C8051F040.c:138: PCA0CN = 0x00 ;				// Stop counter; clear all flags
   17BF 75 D8 00           1313 	mov	_PCA0CN,#0x00
                           1314 ;	../src/projectSpecificHardwareInterface_C8051F040.c:139: PCA0MD = 0x08 ;				// Use SYSCLK as time base
   17C2 75 D9 08           1315 	mov	_PCA0MD,#0x08
                           1316 ;	../src/projectSpecificHardwareInterface_C8051F040.c:141: PCA0CPM0 = 0x00 ;			// Module 0 = Off
   17C5 75 DA 00           1317 	mov	_PCA0CPM0,#0x00
                           1318 ;	../src/projectSpecificHardwareInterface_C8051F040.c:142: PCA0CPH0 = 0x00 ;			// Configure initial PWM duty cycle = 100%. This will result in a continuously high output which, since it's active low, will disable any output.
   17C8 75 FC 00           1319 	mov	_PCA0CPH0,#0x00
                           1320 ;	../src/projectSpecificHardwareInterface_C8051F040.c:144: PCA0CPM0 = 0x00 ;			// Module 1 = Off
   17CB 75 DA 00           1321 	mov	_PCA0CPM0,#0x00
                           1322 ;	../src/projectSpecificHardwareInterface_C8051F040.c:145: PCA0CPH1 = 0x00 ;			// Configure initial PWM duty cycle = 100%. This will result in a continuously high output which, since it's active low, will disable any output.
   17CE 75 FE 00           1323 	mov	_PCA0CPH1,#0x00
                           1324 ;	../src/projectSpecificHardwareInterface_C8051F040.c:147: PCA0CPM0 = 0x00 ;			// Module 2 = Off
   17D1 75 DA 00           1325 	mov	_PCA0CPM0,#0x00
                           1326 ;	../src/projectSpecificHardwareInterface_C8051F040.c:148: PCA0CPH2 = 0x00 ;			// Configure initial PWM duty cycle = 100%. This will result in a continuously high output which, since it's active low, will disable any output.
   17D4 75 EA 00           1327 	mov	_PCA0CPH2,#0x00
                           1328 ;	../src/projectSpecificHardwareInterface_C8051F040.c:150: PCA0CPM0 = 0x00 ;			// Module 3 = Off
   17D7 75 DA 00           1329 	mov	_PCA0CPM0,#0x00
                           1330 ;	../src/projectSpecificHardwareInterface_C8051F040.c:151: PCA0CPH3 = 0x00 ;			// Configure initial PWM duty cycle = 100%. This will result in a continuously high output which, since it's active low, will disable any output.
   17DA 75 EC 00           1331 	mov	_PCA0CPH3,#0x00
                           1332 ;	../src/projectSpecificHardwareInterface_C8051F040.c:153: PCA0CPM0 = 0x00 ;			// Module 4 = Off
   17DD 75 DA 00           1333 	mov	_PCA0CPM0,#0x00
                           1334 ;	../src/projectSpecificHardwareInterface_C8051F040.c:154: PCA0CPH4 = 0x00 ;			// Configure initial PWM duty cycle = 100%. This will result in a continuously high output which, since it's active low, will disable any output.
   17E0 75 EE 00           1335 	mov	_PCA0CPH4,#0x00
                           1336 ;	../src/projectSpecificHardwareInterface_C8051F040.c:156: PCA0CPM0 = 0x00 ;			// Module 5 = Off
   17E3 75 DA 00           1337 	mov	_PCA0CPM0,#0x00
                           1338 ;	../src/projectSpecificHardwareInterface_C8051F040.c:157: PCA0CPH5 = 0x00 ;			// Configure initial PWM duty cycle = 100%. This will result in a continuously high output which, since it's active low, will disable any output.
   17E6 75 E2 00           1339 	mov	_PCA0CPH5,#0x00
   17E9                    1340 00102$:
                           1341 ;	../src/projectSpecificHardwareInterface_C8051F040.c:164: if(channelNumber == ioMapping_PWM_TO_TICK_SYNCHRONIZER_CHANNEL)
   17E9 90 01 47           1342 	mov	dptr,#_pwm_init_projectSpecific_channelNumber_1_1
   17EC E0                 1343 	movx	a,@dptr
   17ED FB                 1344 	mov	r3,a
   17EE 70 06              1345 	jnz	00104$
                           1346 ;	../src/projectSpecificHardwareInterface_C8051F040.c:170: PWM_B50_MODE		= 0x42 ;						// Module 1 = 8-bit PWM mode
   17F0 75 DA 42           1347 	mov	_PCA0CPM0,#0x42
                           1348 ;	../src/projectSpecificHardwareInterface_C8051F040.c:171: PWM_B50_HIGH_BYTE	= FIFTY_PERCENT_DUTY_CYCLE ;	// Configure initial PWM duty cycle = 50%
   17F3 75 FC 80           1349 	mov	_PCA0CPH0,#0x80
   17F6                    1350 00104$:
                           1351 ;	../src/projectSpecificHardwareInterface_C8051F040.c:174: if(!initialized)
   17F6 20 02 04           1352 	jb	_pwm_init_projectSpecific_initialized_1_1,00106$
                           1353 ;	../src/projectSpecificHardwareInterface_C8051F040.c:176: initialized = true ;
   17F9 D2 02              1354 	setb	_pwm_init_projectSpecific_initialized_1_1
                           1355 ;	../src/projectSpecificHardwareInterface_C8051F040.c:178: CR = 1 ;					// Start PCA counter
   17FB D2 DE              1356 	setb	_CR
   17FD                    1357 00106$:
                           1358 ;	../src/projectSpecificHardwareInterface_C8051F040.c:181: SFRPAGE = SFRPAGE_save ;
   17FD 8A 84              1359 	mov	_SFRPAGE,r2
   17FF 22                 1360 	ret
                           1361 ;------------------------------------------------------------
                           1362 ;Allocation info for local variables in function 'pwm_incrementDutyCycle_projectSpecific'
                           1363 ;------------------------------------------------------------
                           1364 ;channelNumber             Allocated with name '_pwm_incrementDutyCycle_projectSpecific_channelNumber_1_1'
                           1365 ;------------------------------------------------------------
                           1366 ;	../src/projectSpecificHardwareInterface_C8051F040.c:185: void pwm_incrementDutyCycle_projectSpecific(				unsigned char channelNumber)
                           1367 ;	-----------------------------------------
                           1368 ;	 function pwm_incrementDutyCycle_projectSpecific
                           1369 ;	-----------------------------------------
   1800                    1370 _pwm_incrementDutyCycle_projectSpecific:
                           1371 ;	../src/projectSpecificHardwareInterface_C8051F040.c:187: (void)channelNumber ;	// unused at this time
   1800 22                 1372 	ret
                           1373 ;------------------------------------------------------------
                           1374 ;Allocation info for local variables in function 'pwm_decrementDutyCycle_projectSpecific'
                           1375 ;------------------------------------------------------------
                           1376 ;channelNumber             Allocated with name '_pwm_decrementDutyCycle_projectSpecific_channelNumber_1_1'
                           1377 ;------------------------------------------------------------
                           1378 ;	../src/projectSpecificHardwareInterface_C8051F040.c:191: void pwm_decrementDutyCycle_projectSpecific(				unsigned char channelNumber)
                           1379 ;	-----------------------------------------
                           1380 ;	 function pwm_decrementDutyCycle_projectSpecific
                           1381 ;	-----------------------------------------
   1801                    1382 _pwm_decrementDutyCycle_projectSpecific:
                           1383 ;	../src/projectSpecificHardwareInterface_C8051F040.c:193: (void)channelNumber ;	// unused at this time
   1801 22                 1384 	ret
                           1385 ;------------------------------------------------------------
                           1386 ;Allocation info for local variables in function 'pwm_getDutyCycle_projectSpecific'
                           1387 ;------------------------------------------------------------
                           1388 ;channelNumber             Allocated with name '_pwm_getDutyCycle_projectSpecific_channelNumber_1_1'
                           1389 ;------------------------------------------------------------
                           1390 ;	../src/projectSpecificHardwareInterface_C8051F040.c:197: uint8_t pwm_getDutyCycle_projectSpecific(					unsigned char channelNumber)
                           1391 ;	-----------------------------------------
                           1392 ;	 function pwm_getDutyCycle_projectSpecific
                           1393 ;	-----------------------------------------
   1802                    1394 _pwm_getDutyCycle_projectSpecific:
                           1395 ;	../src/projectSpecificHardwareInterface_C8051F040.c:201: return 0 ;
   1802 75 82 00           1396 	mov	dpl,#0x00
   1805 22                 1397 	ret
                           1398 ;------------------------------------------------------------
                           1399 ;Allocation info for local variables in function 'pwm_setDutyCycle_projectSpecific'
                           1400 ;------------------------------------------------------------
                           1401 ;newDutyCycle              Allocated with name '_pwm_setDutyCycle_projectSpecific_PARM_2'
                           1402 ;channelNumber             Allocated with name '_pwm_setDutyCycle_projectSpecific_channelNumber_1_1'
                           1403 ;------------------------------------------------------------
                           1404 ;	../src/projectSpecificHardwareInterface_C8051F040.c:205: void pwm_setDutyCycle_projectSpecific(						unsigned char channelNumber, uint8_t newDutyCycle)
                           1405 ;	-----------------------------------------
                           1406 ;	 function pwm_setDutyCycle_projectSpecific
                           1407 ;	-----------------------------------------
   1806                    1408 _pwm_setDutyCycle_projectSpecific:
                           1409 ;	../src/projectSpecificHardwareInterface_C8051F040.c:208: (void)newDutyCycle ;	// unused at this time
   1806 22                 1410 	ret
                           1411 ;------------------------------------------------------------
                           1412 ;Allocation info for local variables in function 'pwm_adjustDutyCycle_projectSpecific'
                           1413 ;------------------------------------------------------------
                           1414 ;dutyCycleAdjustment       Allocated with name '_pwm_adjustDutyCycle_projectSpecific_PARM_2'
                           1415 ;channelNumber             Allocated with name '_pwm_adjustDutyCycle_projectSpecific_channelNumber_1_1'
                           1416 ;------------------------------------------------------------
                           1417 ;	../src/projectSpecificHardwareInterface_C8051F040.c:212: void pwm_adjustDutyCycle_projectSpecific(					unsigned char channelNumber, int8_t dutyCycleAdjustment)
                           1418 ;	-----------------------------------------
                           1419 ;	 function pwm_adjustDutyCycle_projectSpecific
                           1420 ;	-----------------------------------------
   1807                    1421 _pwm_adjustDutyCycle_projectSpecific:
                           1422 ;	../src/projectSpecificHardwareInterface_C8051F040.c:215: (void)dutyCycleAdjustment ;	// unused at this time
   1807 22                 1423 	ret
                           1424 ;------------------------------------------------------------
                           1425 ;Allocation info for local variables in function 'pwm_setDutyCycleAsPercentage_projectSpecific'
                           1426 ;------------------------------------------------------------
                           1427 ;newDutyCycle              Allocated with name '_pwm_setDutyCycleAsPercentage_projectSpecific_PARM_2'
                           1428 ;channelNumber             Allocated with name '_pwm_setDutyCycleAsPercentage_projectSpecific_channelNumber_1_1'
                           1429 ;------------------------------------------------------------
                           1430 ;	../src/projectSpecificHardwareInterface_C8051F040.c:219: void pwm_setDutyCycleAsPercentage_projectSpecific(			unsigned char channelNumber, unsigned char newDutyCycle)
                           1431 ;	-----------------------------------------
                           1432 ;	 function pwm_setDutyCycleAsPercentage_projectSpecific
                           1433 ;	-----------------------------------------
   1808                    1434 _pwm_setDutyCycleAsPercentage_projectSpecific:
                           1435 ;	../src/projectSpecificHardwareInterface_C8051F040.c:222: (void)newDutyCycle ;		// unused at this time
   1808 22                 1436 	ret
                           1437 ;------------------------------------------------------------
                           1438 ;Allocation info for local variables in function 'pwm_getDutyCycleAsPercentage_projectSpecific'
                           1439 ;------------------------------------------------------------
                           1440 ;channelNumber             Allocated with name '_pwm_getDutyCycleAsPercentage_projectSpecific_channelNumber_1_1'
                           1441 ;currentPercentage         Allocated with name '_pwm_getDutyCycleAsPercentage_projectSpecific_currentPercentage_1_1'
                           1442 ;divisor                   Allocated with name '_pwm_getDutyCycleAsPercentage_projectSpecific_divisor_1_1'
                           1443 ;------------------------------------------------------------
                           1444 ;	../src/projectSpecificHardwareInterface_C8051F040.c:226: unsigned char pwm_getDutyCycleAsPercentage_projectSpecific(	unsigned char channelNumber)
                           1445 ;	-----------------------------------------
                           1446 ;	 function pwm_getDutyCycleAsPercentage_projectSpecific
                           1447 ;	-----------------------------------------
   1809                    1448 _pwm_getDutyCycleAsPercentage_projectSpecific:
                           1449 ;	../src/projectSpecificHardwareInterface_C8051F040.c:237: return (unsigned char)0 ;//min(currentPercentage, 100) ;
   1809 75 82 00           1450 	mov	dpl,#0x00
   180C 22                 1451 	ret
                           1452 ;------------------------------------------------------------
                           1453 ;Allocation info for local variables in function 'IsEmpty'
                           1454 ;------------------------------------------------------------
                           1455 ;Q                         Allocated with name '_IsEmpty_Q_1_1'
                           1456 ;------------------------------------------------------------
                           1457 ;	../src/projectSpecificHardwareInterface_C8051F040.c:273: unsigned char IsEmpty(QUEUE_TYPE* Q)
                           1458 ;	-----------------------------------------
                           1459 ;	 function IsEmpty
                           1460 ;	-----------------------------------------
   180D                    1461 _IsEmpty:
   180D AA F0              1462 	mov	r2,b
   180F AB 83              1463 	mov	r3,dph
   1811 E5 82              1464 	mov	a,dpl
   1813 90 05 97           1465 	mov	dptr,#_IsEmpty_Q_1_1
   1816 F0                 1466 	movx	@dptr,a
   1817 A3                 1467 	inc	dptr
   1818 EB                 1468 	mov	a,r3
   1819 F0                 1469 	movx	@dptr,a
   181A A3                 1470 	inc	dptr
   181B EA                 1471 	mov	a,r2
   181C F0                 1472 	movx	@dptr,a
                           1473 ;	../src/projectSpecificHardwareInterface_C8051F040.c:275: return Q->Size == 0 ;
   181D 90 05 97           1474 	mov	dptr,#_IsEmpty_Q_1_1
   1820 E0                 1475 	movx	a,@dptr
   1821 FA                 1476 	mov	r2,a
   1822 A3                 1477 	inc	dptr
   1823 E0                 1478 	movx	a,@dptr
   1824 FB                 1479 	mov	r3,a
   1825 A3                 1480 	inc	dptr
   1826 E0                 1481 	movx	a,@dptr
   1827 FC                 1482 	mov	r4,a
   1828 74 06              1483 	mov	a,#0x06
   182A 2A                 1484 	add	a,r2
   182B FA                 1485 	mov	r2,a
   182C E4                 1486 	clr	a
   182D 3B                 1487 	addc	a,r3
   182E FB                 1488 	mov	r3,a
   182F 8A 82              1489 	mov	dpl,r2
   1831 8B 83              1490 	mov	dph,r3
   1833 8C F0              1491 	mov	b,r4
   1835 12 3F 9A           1492 	lcall	__gptrget
   1838 FA                 1493 	mov	r2,a
   1839 A3                 1494 	inc	dptr
   183A 12 3F 9A           1495 	lcall	__gptrget
   183D FB                 1496 	mov	r3,a
   183E E4                 1497 	clr	a
   183F BA 00 04           1498 	cjne	r2,#0x00,00103$
   1842 BB 00 01           1499 	cjne	r3,#0x00,00103$
   1845 04                 1500 	inc	a
   1846                    1501 00103$:
   1846 F5 82              1502 	mov	dpl,a
   1848 22                 1503 	ret
                           1504 ;------------------------------------------------------------
                           1505 ;Allocation info for local variables in function 'IsFull'
                           1506 ;------------------------------------------------------------
                           1507 ;Q                         Allocated with name '_IsFull_Q_1_1'
                           1508 ;------------------------------------------------------------
                           1509 ;	../src/projectSpecificHardwareInterface_C8051F040.c:278: unsigned char IsFull(QUEUE_TYPE* Q)
                           1510 ;	-----------------------------------------
                           1511 ;	 function IsFull
                           1512 ;	-----------------------------------------
   1849                    1513 _IsFull:
   1849 AA F0              1514 	mov	r2,b
   184B AB 83              1515 	mov	r3,dph
   184D E5 82              1516 	mov	a,dpl
   184F 90 05 9A           1517 	mov	dptr,#_IsFull_Q_1_1
   1852 F0                 1518 	movx	@dptr,a
   1853 A3                 1519 	inc	dptr
   1854 EB                 1520 	mov	a,r3
   1855 F0                 1521 	movx	@dptr,a
   1856 A3                 1522 	inc	dptr
   1857 EA                 1523 	mov	a,r2
   1858 F0                 1524 	movx	@dptr,a
                           1525 ;	../src/projectSpecificHardwareInterface_C8051F040.c:280: return Q->Size == Q->Capacity ;
   1859 90 05 9A           1526 	mov	dptr,#_IsFull_Q_1_1
   185C E0                 1527 	movx	a,@dptr
   185D FA                 1528 	mov	r2,a
   185E A3                 1529 	inc	dptr
   185F E0                 1530 	movx	a,@dptr
   1860 FB                 1531 	mov	r3,a
   1861 A3                 1532 	inc	dptr
   1862 E0                 1533 	movx	a,@dptr
   1863 FC                 1534 	mov	r4,a
   1864 74 06              1535 	mov	a,#0x06
   1866 2A                 1536 	add	a,r2
   1867 FD                 1537 	mov	r5,a
   1868 E4                 1538 	clr	a
   1869 3B                 1539 	addc	a,r3
   186A FE                 1540 	mov	r6,a
   186B 8C 07              1541 	mov	ar7,r4
   186D 8D 82              1542 	mov	dpl,r5
   186F 8E 83              1543 	mov	dph,r6
   1871 8F F0              1544 	mov	b,r7
   1873 12 3F 9A           1545 	lcall	__gptrget
   1876 FD                 1546 	mov	r5,a
   1877 A3                 1547 	inc	dptr
   1878 12 3F 9A           1548 	lcall	__gptrget
   187B FE                 1549 	mov	r6,a
   187C 8A 82              1550 	mov	dpl,r2
   187E 8B 83              1551 	mov	dph,r3
   1880 8C F0              1552 	mov	b,r4
   1882 12 3F 9A           1553 	lcall	__gptrget
   1885 FA                 1554 	mov	r2,a
   1886 A3                 1555 	inc	dptr
   1887 12 3F 9A           1556 	lcall	__gptrget
   188A FB                 1557 	mov	r3,a
   188B ED                 1558 	mov	a,r5
   188C B5 02 08           1559 	cjne	a,ar2,00103$
   188F EE                 1560 	mov	a,r6
   1890 B5 03 04           1561 	cjne	a,ar3,00103$
   1893 74 01              1562 	mov	a,#0x01
   1895 80 01              1563 	sjmp	00104$
   1897                    1564 00103$:
   1897 E4                 1565 	clr	a
   1898                    1566 00104$:
   1898 F5 82              1567 	mov	dpl,a
   189A 22                 1568 	ret
                           1569 ;------------------------------------------------------------
                           1570 ;Allocation info for local variables in function 'Succ'
                           1571 ;------------------------------------------------------------
                           1572 ;Q                         Allocated with name '_Succ_PARM_2'
                           1573 ;Value                     Allocated with name '_Succ_Value_1_1'
                           1574 ;------------------------------------------------------------
                           1575 ;	../src/projectSpecificHardwareInterface_C8051F040.c:283: static unsigned short Succ(unsigned short Value, QUEUE_TYPE* Q)
                           1576 ;	-----------------------------------------
                           1577 ;	 function Succ
                           1578 ;	-----------------------------------------
   189B                    1579 _Succ:
   189B AA 83              1580 	mov	r2,dph
   189D E5 82              1581 	mov	a,dpl
   189F 90 05 A0           1582 	mov	dptr,#_Succ_Value_1_1
   18A2 F0                 1583 	movx	@dptr,a
   18A3 A3                 1584 	inc	dptr
   18A4 EA                 1585 	mov	a,r2
   18A5 F0                 1586 	movx	@dptr,a
                           1587 ;	../src/projectSpecificHardwareInterface_C8051F040.c:285: if(++Value == Q->Capacity)
   18A6 90 05 A0           1588 	mov	dptr,#_Succ_Value_1_1
   18A9 E0                 1589 	movx	a,@dptr
   18AA 24 01              1590 	add	a,#0x01
   18AC F0                 1591 	movx	@dptr,a
   18AD A3                 1592 	inc	dptr
   18AE E0                 1593 	movx	a,@dptr
   18AF 34 00              1594 	addc	a,#0x00
   18B1 F0                 1595 	movx	@dptr,a
   18B2 90 05 9D           1596 	mov	dptr,#_Succ_PARM_2
   18B5 E0                 1597 	movx	a,@dptr
   18B6 FA                 1598 	mov	r2,a
   18B7 A3                 1599 	inc	dptr
   18B8 E0                 1600 	movx	a,@dptr
   18B9 FB                 1601 	mov	r3,a
   18BA A3                 1602 	inc	dptr
   18BB E0                 1603 	movx	a,@dptr
   18BC FC                 1604 	mov	r4,a
   18BD 8A 82              1605 	mov	dpl,r2
   18BF 8B 83              1606 	mov	dph,r3
   18C1 8C F0              1607 	mov	b,r4
   18C3 12 3F 9A           1608 	lcall	__gptrget
   18C6 FA                 1609 	mov	r2,a
   18C7 A3                 1610 	inc	dptr
   18C8 12 3F 9A           1611 	lcall	__gptrget
   18CB FB                 1612 	mov	r3,a
   18CC 90 05 A0           1613 	mov	dptr,#_Succ_Value_1_1
   18CF E0                 1614 	movx	a,@dptr
   18D0 FC                 1615 	mov	r4,a
   18D1 A3                 1616 	inc	dptr
   18D2 E0                 1617 	movx	a,@dptr
   18D3 FD                 1618 	mov	r5,a
   18D4 EC                 1619 	mov	a,r4
   18D5 B5 02 0B           1620 	cjne	a,ar2,00102$
   18D8 ED                 1621 	mov	a,r5
   18D9 B5 03 07           1622 	cjne	a,ar3,00102$
                           1623 ;	../src/projectSpecificHardwareInterface_C8051F040.c:287: Value = 0 ;
   18DC 90 05 A0           1624 	mov	dptr,#_Succ_Value_1_1
   18DF E4                 1625 	clr	a
   18E0 F0                 1626 	movx	@dptr,a
   18E1 A3                 1627 	inc	dptr
   18E2 F0                 1628 	movx	@dptr,a
   18E3                    1629 00102$:
                           1630 ;	../src/projectSpecificHardwareInterface_C8051F040.c:290: return Value ;
   18E3 90 05 A0           1631 	mov	dptr,#_Succ_Value_1_1
   18E6 E0                 1632 	movx	a,@dptr
   18E7 FA                 1633 	mov	r2,a
   18E8 A3                 1634 	inc	dptr
   18E9 E0                 1635 	movx	a,@dptr
   18EA 8A 82              1636 	mov	dpl,r2
   18EC F5 83              1637 	mov	dph,a
   18EE 22                 1638 	ret
                           1639 ;------------------------------------------------------------
                           1640 ;Allocation info for local variables in function 'task_UART_init_projectSpecific'
                           1641 ;------------------------------------------------------------
                           1642 ;channelNumber             Allocated with name '_task_UART_init_projectSpecific_channelNumber_1_1'
                           1643 ;Q                         Allocated with name '_task_UART_init_projectSpecific_Q_1_1'
                           1644 ;SFRPAGE_SAVE              Allocated with name '_task_UART_init_projectSpecific_SFRPAGE_SAVE_3_3'
                           1645 ;------------------------------------------------------------
                           1646 ;	../src/projectSpecificHardwareInterface_C8051F040.c:321: void task_UART_init_projectSpecific(	unsigned char channelNumber)
                           1647 ;	-----------------------------------------
                           1648 ;	 function task_UART_init_projectSpecific
                           1649 ;	-----------------------------------------
   18EF                    1650 _task_UART_init_projectSpecific:
   18EF E5 82              1651 	mov	a,dpl
   18F1 90 0A 12           1652 	mov	dptr,#_task_UART_init_projectSpecific_channelNumber_1_1
   18F4 F0                 1653 	movx	@dptr,a
                           1654 ;	../src/projectSpecificHardwareInterface_C8051F040.c:325: QUEUE_TYPE*	Q = &transmitBuffers[channelNumber] ;
   18F5 90 0A 12           1655 	mov	dptr,#_task_UART_init_projectSpecific_channelNumber_1_1
   18F8 E0                 1656 	movx	a,@dptr
   18F9 FA                 1657 	mov	r2,a
   18FA 75 F0 0B           1658 	mov	b,#0x0B
   18FD A4                 1659 	mul	ab
   18FE FB                 1660 	mov	r3,a
   18FF 24 FA              1661 	add	a,#_transmitBuffers
   1901 FC                 1662 	mov	r4,a
   1902 E4                 1663 	clr	a
   1903 34 09              1664 	addc	a,#(_transmitBuffers >> 8)
   1905 FD                 1665 	mov	r5,a
   1906 7E 00              1666 	mov	r6,#0x00
                           1667 ;	../src/projectSpecificHardwareInterface_C8051F040.c:327: Q->Capacity	= TRANSMIT_BUFFER_SIZE ;
   1908 8C 82              1668 	mov	dpl,r4
   190A 8D 83              1669 	mov	dph,r5
   190C 8E F0              1670 	mov	b,r6
   190E 74 4C              1671 	mov	a,#0x4C
   1910 12 33 6E           1672 	lcall	__gptrput
   1913 A3                 1673 	inc	dptr
   1914 74 04              1674 	mov	a,#0x04
   1916 12 33 6E           1675 	lcall	__gptrput
                           1676 ;	../src/projectSpecificHardwareInterface_C8051F040.c:328: Q->Size		= 0 ;
   1919 74 06              1677 	mov	a,#0x06
   191B 2C                 1678 	add	a,r4
   191C FF                 1679 	mov	r7,a
   191D E4                 1680 	clr	a
   191E 3D                 1681 	addc	a,r5
   191F F8                 1682 	mov	r0,a
   1920 8E 01              1683 	mov	ar1,r6
   1922 8F 82              1684 	mov	dpl,r7
   1924 88 83              1685 	mov	dph,r0
   1926 89 F0              1686 	mov	b,r1
   1928 E4                 1687 	clr	a
   1929 12 33 6E           1688 	lcall	__gptrput
   192C A3                 1689 	inc	dptr
   192D E4                 1690 	clr	a
   192E 12 33 6E           1691 	lcall	__gptrput
                           1692 ;	../src/projectSpecificHardwareInterface_C8051F040.c:329: Q->Front	= 1 ;
   1931 74 02              1693 	mov	a,#0x02
   1933 2C                 1694 	add	a,r4
   1934 FF                 1695 	mov	r7,a
   1935 E4                 1696 	clr	a
   1936 3D                 1697 	addc	a,r5
   1937 F8                 1698 	mov	r0,a
   1938 8E 01              1699 	mov	ar1,r6
   193A 8F 82              1700 	mov	dpl,r7
   193C 88 83              1701 	mov	dph,r0
   193E 89 F0              1702 	mov	b,r1
   1940 74 01              1703 	mov	a,#0x01
   1942 12 33 6E           1704 	lcall	__gptrput
   1945 A3                 1705 	inc	dptr
   1946 E4                 1706 	clr	a
   1947 12 33 6E           1707 	lcall	__gptrput
                           1708 ;	../src/projectSpecificHardwareInterface_C8051F040.c:330: Q->Rear		= 0 ;
   194A 74 04              1709 	mov	a,#0x04
   194C 2C                 1710 	add	a,r4
   194D FF                 1711 	mov	r7,a
   194E E4                 1712 	clr	a
   194F 3D                 1713 	addc	a,r5
   1950 F8                 1714 	mov	r0,a
   1951 8E 01              1715 	mov	ar1,r6
   1953 8F 82              1716 	mov	dpl,r7
   1955 88 83              1717 	mov	dph,r0
   1957 89 F0              1718 	mov	b,r1
   1959 E4                 1719 	clr	a
   195A 12 33 6E           1720 	lcall	__gptrput
   195D A3                 1721 	inc	dptr
   195E E4                 1722 	clr	a
   195F 12 33 6E           1723 	lcall	__gptrput
                           1724 ;	../src/projectSpecificHardwareInterface_C8051F040.c:331: Q->Array	= transmitBuffer[0] ;
   1962 74 08              1725 	mov	a,#0x08
   1964 2C                 1726 	add	a,r4
   1965 FC                 1727 	mov	r4,a
   1966 E4                 1728 	clr	a
   1967 3D                 1729 	addc	a,r5
   1968 FD                 1730 	mov	r5,a
   1969 8C 82              1731 	mov	dpl,r4
   196B 8D 83              1732 	mov	dph,r5
   196D 8E F0              1733 	mov	b,r6
   196F 74 A2              1734 	mov	a,#_transmitBuffer
   1971 12 33 6E           1735 	lcall	__gptrput
   1974 A3                 1736 	inc	dptr
   1975 74 05              1737 	mov	a,#(_transmitBuffer >> 8)
   1977 12 33 6E           1738 	lcall	__gptrput
   197A A3                 1739 	inc	dptr
   197B E4                 1740 	clr	a
   197C 12 33 6E           1741 	lcall	__gptrput
                           1742 ;	../src/projectSpecificHardwareInterface_C8051F040.c:333: Q = &receiveBuffers[channelNumber] ;
   197F EB                 1743 	mov	a,r3
   1980 24 05              1744 	add	a,#_receiveBuffers
   1982 FB                 1745 	mov	r3,a
   1983 E4                 1746 	clr	a
   1984 34 0A              1747 	addc	a,#(_receiveBuffers >> 8)
   1986 FC                 1748 	mov	r4,a
   1987 7D 00              1749 	mov	r5,#0x00
                           1750 ;	../src/projectSpecificHardwareInterface_C8051F040.c:335: Q->Capacity	= RECEIVE_BUFFER_SIZE ;
   1989 8B 82              1751 	mov	dpl,r3
   198B 8C 83              1752 	mov	dph,r4
   198D 8D F0              1753 	mov	b,r5
   198F 74 0A              1754 	mov	a,#0x0A
   1991 12 33 6E           1755 	lcall	__gptrput
   1994 A3                 1756 	inc	dptr
   1995 E4                 1757 	clr	a
   1996 12 33 6E           1758 	lcall	__gptrput
                           1759 ;	../src/projectSpecificHardwareInterface_C8051F040.c:336: Q->Size		= 0 ;
   1999 74 06              1760 	mov	a,#0x06
   199B 2B                 1761 	add	a,r3
   199C FE                 1762 	mov	r6,a
   199D E4                 1763 	clr	a
   199E 3C                 1764 	addc	a,r4
   199F FF                 1765 	mov	r7,a
   19A0 8D 00              1766 	mov	ar0,r5
   19A2 8E 82              1767 	mov	dpl,r6
   19A4 8F 83              1768 	mov	dph,r7
   19A6 88 F0              1769 	mov	b,r0
   19A8 E4                 1770 	clr	a
   19A9 12 33 6E           1771 	lcall	__gptrput
   19AC A3                 1772 	inc	dptr
   19AD E4                 1773 	clr	a
   19AE 12 33 6E           1774 	lcall	__gptrput
                           1775 ;	../src/projectSpecificHardwareInterface_C8051F040.c:337: Q->Front	= 1 ;
   19B1 74 02              1776 	mov	a,#0x02
   19B3 2B                 1777 	add	a,r3
   19B4 FE                 1778 	mov	r6,a
   19B5 E4                 1779 	clr	a
   19B6 3C                 1780 	addc	a,r4
   19B7 FF                 1781 	mov	r7,a
   19B8 8D 00              1782 	mov	ar0,r5
   19BA 8E 82              1783 	mov	dpl,r6
   19BC 8F 83              1784 	mov	dph,r7
   19BE 88 F0              1785 	mov	b,r0
   19C0 74 01              1786 	mov	a,#0x01
   19C2 12 33 6E           1787 	lcall	__gptrput
   19C5 A3                 1788 	inc	dptr
   19C6 E4                 1789 	clr	a
   19C7 12 33 6E           1790 	lcall	__gptrput
                           1791 ;	../src/projectSpecificHardwareInterface_C8051F040.c:338: Q->Rear		= 0 ;
   19CA 74 04              1792 	mov	a,#0x04
   19CC 2B                 1793 	add	a,r3
   19CD FE                 1794 	mov	r6,a
   19CE E4                 1795 	clr	a
   19CF 3C                 1796 	addc	a,r4
   19D0 FF                 1797 	mov	r7,a
   19D1 8D 00              1798 	mov	ar0,r5
   19D3 8E 82              1799 	mov	dpl,r6
   19D5 8F 83              1800 	mov	dph,r7
   19D7 88 F0              1801 	mov	b,r0
   19D9 E4                 1802 	clr	a
   19DA 12 33 6E           1803 	lcall	__gptrput
   19DD A3                 1804 	inc	dptr
   19DE E4                 1805 	clr	a
   19DF 12 33 6E           1806 	lcall	__gptrput
                           1807 ;	../src/projectSpecificHardwareInterface_C8051F040.c:339: Q->Array	= receiveBuffer[0] ;
   19E2 74 08              1808 	mov	a,#0x08
   19E4 2B                 1809 	add	a,r3
   19E5 FB                 1810 	mov	r3,a
   19E6 E4                 1811 	clr	a
   19E7 3C                 1812 	addc	a,r4
   19E8 FC                 1813 	mov	r4,a
   19E9 8B 82              1814 	mov	dpl,r3
   19EB 8C 83              1815 	mov	dph,r4
   19ED 8D F0              1816 	mov	b,r5
   19EF 74 EF              1817 	mov	a,#_receiveBuffer
   19F1 12 33 6E           1818 	lcall	__gptrput
   19F4 A3                 1819 	inc	dptr
   19F5 74 09              1820 	mov	a,#(_receiveBuffer >> 8)
   19F7 12 33 6E           1821 	lcall	__gptrput
   19FA A3                 1822 	inc	dptr
   19FB E4                 1823 	clr	a
   19FC 12 33 6E           1824 	lcall	__gptrput
                           1825 ;	../src/projectSpecificHardwareInterface_C8051F040.c:341: charSent[channelNumber]		= false ;
   19FF EA                 1826 	mov	a,r2
   1A00 24 10              1827 	add	a,#_charSent
   1A02 F5 82              1828 	mov	dpl,a
   1A04 E4                 1829 	clr	a
   1A05 34 0A              1830 	addc	a,#(_charSent >> 8)
   1A07 F5 83              1831 	mov	dph,a
   1A09 E4                 1832 	clr	a
   1A0A F0                 1833 	movx	@dptr,a
                           1834 ;	../src/projectSpecificHardwareInterface_C8051F040.c:342: lineReady[channelNumber]	= false ;
   1A0B EA                 1835 	mov	a,r2
   1A0C 24 11              1836 	add	a,#_lineReady
   1A0E F5 82              1837 	mov	dpl,a
   1A10 E4                 1838 	clr	a
   1A11 34 0A              1839 	addc	a,#(_lineReady >> 8)
   1A13 F5 83              1840 	mov	dph,a
   1A15 E4                 1841 	clr	a
   1A16 F0                 1842 	movx	@dptr,a
                           1843 ;	../src/projectSpecificHardwareInterface_C8051F040.c:344: if(!timer1initialized)
   1A17 20 03 20           1844 	jb	_task_UART_init_projectSpecific_timer1initialized_1_1,00102$
                           1845 ;	../src/projectSpecificHardwareInterface_C8051F040.c:346: timer1initialized = true ;
   1A1A D2 03              1846 	setb	_task_UART_init_projectSpecific_timer1initialized_1_1
                           1847 ;	../src/projectSpecificHardwareInterface_C8051F040.c:348: portSET_REGISTER_GROUP(TIMER01_PAGE)
   1A1C AA 84              1848 	mov	r2,_SFRPAGE
   1A1E 75 84 00           1849 	mov	_SFRPAGE,#0x00
                           1850 ;	../src/projectSpecificHardwareInterface_C8051F040.c:351: TMOD &= 0x08 ;
   1A21 53 89 08           1851 	anl	_TMOD,#0x08
                           1852 ;	../src/projectSpecificHardwareInterface_C8051F040.c:352: TMOD |= ser8BIT_WITH_RELOAD ;
   1A24 43 89 20           1853 	orl	_TMOD,#0x20
                           1854 ;	../src/projectSpecificHardwareInterface_C8051F040.c:353: SSTA0 |= serSMOD ;
   1A27 43 91 10           1855 	orl	_SSTA0,#0x10
                           1856 ;	../src/projectSpecificHardwareInterface_C8051F040.c:354: CKCON |= 0x10 ;
   1A2A 43 8E 10           1857 	orl	_CKCON,#0x10
                           1858 ;	../src/projectSpecificHardwareInterface_C8051F040.c:357: TL1 = ( unsigned char ) 0xB2 ;	// B8 = 9600 BAUD on unmoded eval boards, B2 = 9615 on 24MHz systems
   1A2D 75 8B B2           1859 	mov	_TL1,#0xB2
                           1860 ;	../src/projectSpecificHardwareInterface_C8051F040.c:358: TH1 = ( unsigned char ) 0xB2 ;
   1A30 75 8D B2           1861 	mov	_TH1,#0xB2
                           1862 ;	../src/projectSpecificHardwareInterface_C8051F040.c:360: SCON = ser8_BIT_MODE | serRX_ENABLE ;	/* Setup the control register for standard n, 8, 1 - variable baud rate. */
   1A33 75 98 50           1863 	mov	_SCON,#0x50
                           1864 ;	../src/projectSpecificHardwareInterface_C8051F040.c:362: TR1 = 1 ;							/* Start the timer. */
   1A36 D2 8E              1865 	setb	_TR1
                           1866 ;	../src/projectSpecificHardwareInterface_C8051F040.c:364: portRESTORE_REGISTER_GROUP()
   1A38 8A 84              1867 	mov	_SFRPAGE,r2
   1A3A                    1868 00102$:
                           1869 ;	../src/projectSpecificHardwareInterface_C8051F040.c:367: if(channelNumber == 0)
   1A3A 90 0A 12           1870 	mov	dptr,#_task_UART_init_projectSpecific_channelNumber_1_1
   1A3D E0                 1871 	movx	a,@dptr
   1A3E FA                 1872 	mov	r2,a
   1A3F 70 03              1873 	jnz	00106$
                           1874 ;	../src/projectSpecificHardwareInterface_C8051F040.c:369: UART0_Init() ;
   1A41 02 1F E8           1875 	ljmp	_UART0_Init
   1A44                    1876 00106$:
                           1877 ;	../src/projectSpecificHardwareInterface_C8051F040.c:371: else if(channelNumber == 1)
   1A44 BA 01 03           1878 	cjne	r2,#0x01,00108$
                           1879 ;	../src/projectSpecificHardwareInterface_C8051F040.c:373: UART1_Init() ;
   1A47 02 1F F6           1880 	ljmp	_UART1_Init
   1A4A                    1881 00108$:
   1A4A 22                 1882 	ret
                           1883 ;------------------------------------------------------------
                           1884 ;Allocation info for local variables in function 'task_UART_core_projectSpecific'
                           1885 ;------------------------------------------------------------
                           1886 ;sloc0                     Allocated with name '_task_UART_core_projectSpecific_sloc0_1_0'
                           1887 ;sloc1                     Allocated with name '_task_UART_core_projectSpecific_sloc1_1_0'
                           1888 ;sloc2                     Allocated with name '_task_UART_core_projectSpecific_sloc2_1_0'
                           1889 ;sloc3                     Allocated with name '_task_UART_core_projectSpecific_sloc3_1_0'
                           1890 ;channelNumber             Allocated with name '_task_UART_core_projectSpecific_channelNumber_1_1'
                           1891 ;SFRPAGE_SAVE              Allocated with name '_task_UART_core_projectSpecific_SFRPAGE_SAVE_3_3'
                           1892 ;Q                         Allocated with name '_task_UART_core_projectSpecific_Q_4_4'
                           1893 ;charReceived              Allocated with name '_task_UART_core_projectSpecific_charReceived_6_6'
                           1894 ;byteToSend                Allocated with name '_task_UART_core_projectSpecific_byteToSend_5_10'
                           1895 ;------------------------------------------------------------
                           1896 ;	../src/projectSpecificHardwareInterface_C8051F040.c:382: void task_UART_core_projectSpecific(	unsigned char channelNumber)
                           1897 ;	-----------------------------------------
                           1898 ;	 function task_UART_core_projectSpecific
                           1899 ;	-----------------------------------------
   1A4B                    1900 _task_UART_core_projectSpecific:
   1A4B E5 82              1901 	mov	a,dpl
   1A4D 90 0A 13           1902 	mov	dptr,#_task_UART_core_projectSpecific_channelNumber_1_1
   1A50 F0                 1903 	movx	@dptr,a
                           1904 ;	../src/projectSpecificHardwareInterface_C8051F040.c:384: if(channelNumber < NUMBER_OF_UARTS)
   1A51 90 0A 13           1905 	mov	dptr,#_task_UART_core_projectSpecific_channelNumber_1_1
   1A54 E0                 1906 	movx	a,@dptr
   1A55 FA                 1907 	mov	r2,a
   1A56 BA 01 00           1908 	cjne	r2,#0x01,00125$
   1A59                    1909 00125$:
   1A59 40 01              1910 	jc	00126$
   1A5B 22                 1911 	ret
   1A5C                    1912 00126$:
                           1913 ;	../src/projectSpecificHardwareInterface_C8051F040.c:386: portSET_REGISTER_GROUP(UART0_PAGE)
   1A5C AB 84              1914 	mov	r3,_SFRPAGE
   1A5E 75 84 00           1915 	mov	_SFRPAGE,#0x00
                           1916 ;	../src/projectSpecificHardwareInterface_C8051F040.c:388: QUEUE_TYPE*	Q = &receiveBuffers[channelNumber] ;
   1A61 EA                 1917 	mov	a,r2
   1A62 75 F0 0B           1918 	mov	b,#0x0B
   1A65 A4                 1919 	mul	ab
   1A66 24 05              1920 	add	a,#_receiveBuffers
   1A68 FC                 1921 	mov	r4,a
   1A69 E4                 1922 	clr	a
   1A6A 34 0A              1923 	addc	a,#(_receiveBuffers >> 8)
   1A6C FD                 1924 	mov	r5,a
   1A6D 7E 00              1925 	mov	r6,#0x00
   1A6F 90 0A 14           1926 	mov	dptr,#_task_UART_core_projectSpecific_Q_4_4
   1A72 EC                 1927 	mov	a,r4
   1A73 F0                 1928 	movx	@dptr,a
   1A74 A3                 1929 	inc	dptr
   1A75 ED                 1930 	mov	a,r5
   1A76 F0                 1931 	movx	@dptr,a
   1A77 A3                 1932 	inc	dptr
   1A78 EE                 1933 	mov	a,r6
   1A79 F0                 1934 	movx	@dptr,a
                           1935 ;	../src/projectSpecificHardwareInterface_C8051F040.c:390: if(RI0)
   1A7A 20 98 03           1936 	jb	_RI0,00127$
   1A7D 02 1B 90           1937 	ljmp	00106$
   1A80                    1938 00127$:
                           1939 ;	../src/projectSpecificHardwareInterface_C8051F040.c:392: if(!IsFull(Q))
   1A80 8C 82              1940 	mov	dpl,r4
   1A82 8D 83              1941 	mov	dph,r5
   1A84 8E F0              1942 	mov	b,r6
   1A86 C0 02              1943 	push	ar2
   1A88 C0 03              1944 	push	ar3
   1A8A 12 18 49           1945 	lcall	_IsFull
   1A8D E5 82              1946 	mov	a,dpl
   1A8F D0 03              1947 	pop	ar3
   1A91 D0 02              1948 	pop	ar2
   1A93 60 03              1949 	jz	00128$
   1A95 02 1B 8E           1950 	ljmp	00104$
   1A98                    1951 00128$:
                           1952 ;	../src/projectSpecificHardwareInterface_C8051F040.c:394: char	charReceived = SBUF0 ;
   1A98 C0 03              1953 	push	ar3
   1A9A 85 99 42           1954 	mov	_task_UART_core_projectSpecific_sloc0_1_0,_SBUF0
                           1955 ;	../src/projectSpecificHardwareInterface_C8051F040.c:396: Q->Size++ ;
   1A9D 90 0A 14           1956 	mov	dptr,#_task_UART_core_projectSpecific_Q_4_4
   1AA0 E0                 1957 	movx	a,@dptr
   1AA1 FD                 1958 	mov	r5,a
   1AA2 A3                 1959 	inc	dptr
   1AA3 E0                 1960 	movx	a,@dptr
   1AA4 FE                 1961 	mov	r6,a
   1AA5 A3                 1962 	inc	dptr
   1AA6 E0                 1963 	movx	a,@dptr
   1AA7 FF                 1964 	mov	r7,a
   1AA8 74 06              1965 	mov	a,#0x06
   1AAA 2D                 1966 	add	a,r5
   1AAB F5 43              1967 	mov	_task_UART_core_projectSpecific_sloc1_1_0,a
   1AAD E4                 1968 	clr	a
   1AAE 3E                 1969 	addc	a,r6
   1AAF F5 44              1970 	mov	(_task_UART_core_projectSpecific_sloc1_1_0 + 1),a
   1AB1 8F 45              1971 	mov	(_task_UART_core_projectSpecific_sloc1_1_0 + 2),r7
   1AB3 85 43 82           1972 	mov	dpl,_task_UART_core_projectSpecific_sloc1_1_0
   1AB6 85 44 83           1973 	mov	dph,(_task_UART_core_projectSpecific_sloc1_1_0 + 1)
   1AB9 85 45 F0           1974 	mov	b,(_task_UART_core_projectSpecific_sloc1_1_0 + 2)
   1ABC 12 3F 9A           1975 	lcall	__gptrget
   1ABF FC                 1976 	mov	r4,a
   1AC0 A3                 1977 	inc	dptr
   1AC1 12 3F 9A           1978 	lcall	__gptrget
   1AC4 FB                 1979 	mov	r3,a
   1AC5 0C                 1980 	inc	r4
   1AC6 BC 00 01           1981 	cjne	r4,#0x00,00129$
   1AC9 0B                 1982 	inc	r3
   1ACA                    1983 00129$:
   1ACA 85 43 82           1984 	mov	dpl,_task_UART_core_projectSpecific_sloc1_1_0
   1ACD 85 44 83           1985 	mov	dph,(_task_UART_core_projectSpecific_sloc1_1_0 + 1)
   1AD0 85 45 F0           1986 	mov	b,(_task_UART_core_projectSpecific_sloc1_1_0 + 2)
   1AD3 EC                 1987 	mov	a,r4
   1AD4 12 33 6E           1988 	lcall	__gptrput
   1AD7 A3                 1989 	inc	dptr
   1AD8 EB                 1990 	mov	a,r3
   1AD9 12 33 6E           1991 	lcall	__gptrput
                           1992 ;	../src/projectSpecificHardwareInterface_C8051F040.c:397: Q->Rear = Succ(Q->Rear, Q) ;
   1ADC 74 04              1993 	mov	a,#0x04
   1ADE 2D                 1994 	add	a,r5
   1ADF F5 43              1995 	mov	_task_UART_core_projectSpecific_sloc1_1_0,a
   1AE1 E4                 1996 	clr	a
   1AE2 3E                 1997 	addc	a,r6
   1AE3 F5 44              1998 	mov	(_task_UART_core_projectSpecific_sloc1_1_0 + 1),a
   1AE5 8F 45              1999 	mov	(_task_UART_core_projectSpecific_sloc1_1_0 + 2),r7
   1AE7 85 43 82           2000 	mov	dpl,_task_UART_core_projectSpecific_sloc1_1_0
   1AEA 85 44 83           2001 	mov	dph,(_task_UART_core_projectSpecific_sloc1_1_0 + 1)
   1AED 85 45 F0           2002 	mov	b,(_task_UART_core_projectSpecific_sloc1_1_0 + 2)
   1AF0 12 3F 9A           2003 	lcall	__gptrget
   1AF3 F9                 2004 	mov	r1,a
   1AF4 A3                 2005 	inc	dptr
   1AF5 12 3F 9A           2006 	lcall	__gptrget
   1AF8 FB                 2007 	mov	r3,a
   1AF9 90 05 9D           2008 	mov	dptr,#_Succ_PARM_2
   1AFC ED                 2009 	mov	a,r5
   1AFD F0                 2010 	movx	@dptr,a
   1AFE A3                 2011 	inc	dptr
   1AFF EE                 2012 	mov	a,r6
   1B00 F0                 2013 	movx	@dptr,a
   1B01 A3                 2014 	inc	dptr
   1B02 EF                 2015 	mov	a,r7
   1B03 F0                 2016 	movx	@dptr,a
   1B04 89 82              2017 	mov	dpl,r1
   1B06 8B 83              2018 	mov	dph,r3
   1B08 C0 02              2019 	push	ar2
   1B0A 12 18 9B           2020 	lcall	_Succ
   1B0D AB 82              2021 	mov	r3,dpl
   1B0F AC 83              2022 	mov	r4,dph
   1B11 D0 02              2023 	pop	ar2
   1B13 85 43 82           2024 	mov	dpl,_task_UART_core_projectSpecific_sloc1_1_0
   1B16 85 44 83           2025 	mov	dph,(_task_UART_core_projectSpecific_sloc1_1_0 + 1)
   1B19 85 45 F0           2026 	mov	b,(_task_UART_core_projectSpecific_sloc1_1_0 + 2)
   1B1C EB                 2027 	mov	a,r3
   1B1D 12 33 6E           2028 	lcall	__gptrput
   1B20 A3                 2029 	inc	dptr
   1B21 EC                 2030 	mov	a,r4
   1B22 12 33 6E           2031 	lcall	__gptrput
                           2032 ;	../src/projectSpecificHardwareInterface_C8051F040.c:398: Q->Array[Q->Rear] = charReceived ;
   1B25 90 0A 14           2033 	mov	dptr,#_task_UART_core_projectSpecific_Q_4_4
   1B28 E0                 2034 	movx	a,@dptr
   1B29 FB                 2035 	mov	r3,a
   1B2A A3                 2036 	inc	dptr
   1B2B E0                 2037 	movx	a,@dptr
   1B2C FC                 2038 	mov	r4,a
   1B2D A3                 2039 	inc	dptr
   1B2E E0                 2040 	movx	a,@dptr
   1B2F FD                 2041 	mov	r5,a
   1B30 74 08              2042 	mov	a,#0x08
   1B32 2B                 2043 	add	a,r3
   1B33 FE                 2044 	mov	r6,a
   1B34 E4                 2045 	clr	a
   1B35 3C                 2046 	addc	a,r4
   1B36 FF                 2047 	mov	r7,a
   1B37 8D 00              2048 	mov	ar0,r5
   1B39 8E 82              2049 	mov	dpl,r6
   1B3B 8F 83              2050 	mov	dph,r7
   1B3D 88 F0              2051 	mov	b,r0
   1B3F 12 3F 9A           2052 	lcall	__gptrget
   1B42 FE                 2053 	mov	r6,a
   1B43 A3                 2054 	inc	dptr
   1B44 12 3F 9A           2055 	lcall	__gptrget
   1B47 FF                 2056 	mov	r7,a
   1B48 A3                 2057 	inc	dptr
   1B49 12 3F 9A           2058 	lcall	__gptrget
   1B4C F8                 2059 	mov	r0,a
   1B4D 74 04              2060 	mov	a,#0x04
   1B4F 2B                 2061 	add	a,r3
   1B50 FB                 2062 	mov	r3,a
   1B51 E4                 2063 	clr	a
   1B52 3C                 2064 	addc	a,r4
   1B53 FC                 2065 	mov	r4,a
   1B54 8B 82              2066 	mov	dpl,r3
   1B56 8C 83              2067 	mov	dph,r4
   1B58 8D F0              2068 	mov	b,r5
   1B5A 12 3F 9A           2069 	lcall	__gptrget
   1B5D FB                 2070 	mov	r3,a
   1B5E A3                 2071 	inc	dptr
   1B5F 12 3F 9A           2072 	lcall	__gptrget
   1B62 FC                 2073 	mov	r4,a
   1B63 EB                 2074 	mov	a,r3
   1B64 2E                 2075 	add	a,r6
   1B65 FE                 2076 	mov	r6,a
   1B66 EC                 2077 	mov	a,r4
   1B67 3F                 2078 	addc	a,r7
   1B68 FF                 2079 	mov	r7,a
   1B69 8E 82              2080 	mov	dpl,r6
   1B6B 8F 83              2081 	mov	dph,r7
   1B6D 88 F0              2082 	mov	b,r0
   1B6F E5 42              2083 	mov	a,_task_UART_core_projectSpecific_sloc0_1_0
   1B71 12 33 6E           2084 	lcall	__gptrput
                           2085 ;	../src/projectSpecificHardwareInterface_C8051F040.c:400: if(charReceived == '\n')
   1B74 74 0A              2086 	mov	a,#0x0A
   1B76 B5 42 02           2087 	cjne	a,_task_UART_core_projectSpecific_sloc0_1_0,00130$
   1B79 80 04              2088 	sjmp	00131$
   1B7B                    2089 00130$:
   1B7B D0 03              2090 	pop	ar3
   1B7D 80 0F              2091 	sjmp	00104$
   1B7F                    2092 00131$:
   1B7F D0 03              2093 	pop	ar3
                           2094 ;	../src/projectSpecificHardwareInterface_C8051F040.c:402: lineReady[channelNumber] = true ;
   1B81 EA                 2095 	mov	a,r2
   1B82 24 11              2096 	add	a,#_lineReady
   1B84 F5 82              2097 	mov	dpl,a
   1B86 E4                 2098 	clr	a
   1B87 34 0A              2099 	addc	a,#(_lineReady >> 8)
   1B89 F5 83              2100 	mov	dph,a
   1B8B 74 01              2101 	mov	a,#0x01
   1B8D F0                 2102 	movx	@dptr,a
   1B8E                    2103 00104$:
                           2104 ;	../src/projectSpecificHardwareInterface_C8051F040.c:406: RI0 = 0 ;
   1B8E C2 98              2105 	clr	_RI0
   1B90                    2106 00106$:
                           2107 ;	../src/projectSpecificHardwareInterface_C8051F040.c:409: Q = &transmitBuffers[channelNumber] ;
   1B90 90 0A 13           2108 	mov	dptr,#_task_UART_core_projectSpecific_channelNumber_1_1
   1B93 E0                 2109 	movx	a,@dptr
   1B94 FA                 2110 	mov	r2,a
   1B95 75 F0 0B           2111 	mov	b,#0x0B
   1B98 A4                 2112 	mul	ab
   1B99 24 FA              2113 	add	a,#_transmitBuffers
   1B9B FC                 2114 	mov	r4,a
   1B9C E4                 2115 	clr	a
   1B9D 34 09              2116 	addc	a,#(_transmitBuffers >> 8)
   1B9F FD                 2117 	mov	r5,a
   1BA0 7E 00              2118 	mov	r6,#0x00
   1BA2 90 0A 14           2119 	mov	dptr,#_task_UART_core_projectSpecific_Q_4_4
   1BA5 EC                 2120 	mov	a,r4
   1BA6 F0                 2121 	movx	@dptr,a
   1BA7 A3                 2122 	inc	dptr
   1BA8 ED                 2123 	mov	a,r5
   1BA9 F0                 2124 	movx	@dptr,a
   1BAA A3                 2125 	inc	dptr
   1BAB EE                 2126 	mov	a,r6
   1BAC F0                 2127 	movx	@dptr,a
                           2128 ;	../src/projectSpecificHardwareInterface_C8051F040.c:411: if(charSent[channelNumber] == true)
   1BAD EA                 2129 	mov	a,r2
   1BAE 24 10              2130 	add	a,#_charSent
   1BB0 FA                 2131 	mov	r2,a
   1BB1 E4                 2132 	clr	a
   1BB2 34 0A              2133 	addc	a,#(_charSent >> 8)
   1BB4 FF                 2134 	mov	r7,a
   1BB5 8A 82              2135 	mov	dpl,r2
   1BB7 8F 83              2136 	mov	dph,r7
   1BB9 E0                 2137 	movx	a,@dptr
   1BBA F8                 2138 	mov	r0,a
   1BBB B8 01 09           2139 	cjne	r0,#0x01,00111$
                           2140 ;	../src/projectSpecificHardwareInterface_C8051F040.c:413: charSent[channelNumber] = false ;
   1BBE 8A 82              2141 	mov	dpl,r2
   1BC0 8F 83              2142 	mov	dph,r7
   1BC2 E4                 2143 	clr	a
   1BC3 F0                 2144 	movx	@dptr,a
                           2145 ;	../src/projectSpecificHardwareInterface_C8051F040.c:417: while(TI0 == 0) { /* empty loop */} ;
   1BC4                    2146 00107$:
   1BC4 30 99 FD           2147 	jnb	_TI0,00107$
   1BC7                    2148 00111$:
                           2149 ;	../src/projectSpecificHardwareInterface_C8051F040.c:420: if(!IsEmpty(Q))
   1BC7 8C 82              2150 	mov	dpl,r4
   1BC9 8D 83              2151 	mov	dph,r5
   1BCB 8E F0              2152 	mov	b,r6
   1BCD C0 03              2153 	push	ar3
   1BCF 12 18 0D           2154 	lcall	_IsEmpty
   1BD2 E5 82              2155 	mov	a,dpl
   1BD4 D0 03              2156 	pop	ar3
   1BD6 60 03              2157 	jz	00135$
   1BD8 02 1C AC           2158 	ljmp	00113$
   1BDB                    2159 00135$:
                           2160 ;	../src/projectSpecificHardwareInterface_C8051F040.c:422: unsigned char byteToSend = Q->Array[Q->Front] ;
   1BDB C0 03              2161 	push	ar3
   1BDD 90 0A 14           2162 	mov	dptr,#_task_UART_core_projectSpecific_Q_4_4
   1BE0 E0                 2163 	movx	a,@dptr
   1BE1 FA                 2164 	mov	r2,a
   1BE2 A3                 2165 	inc	dptr
   1BE3 E0                 2166 	movx	a,@dptr
   1BE4 FC                 2167 	mov	r4,a
   1BE5 A3                 2168 	inc	dptr
   1BE6 E0                 2169 	movx	a,@dptr
   1BE7 FD                 2170 	mov	r5,a
   1BE8 74 08              2171 	mov	a,#0x08
   1BEA 2A                 2172 	add	a,r2
   1BEB FE                 2173 	mov	r6,a
   1BEC E4                 2174 	clr	a
   1BED 3C                 2175 	addc	a,r4
   1BEE FF                 2176 	mov	r7,a
   1BEF 8D 00              2177 	mov	ar0,r5
   1BF1 8E 82              2178 	mov	dpl,r6
   1BF3 8F 83              2179 	mov	dph,r7
   1BF5 88 F0              2180 	mov	b,r0
   1BF7 12 3F 9A           2181 	lcall	__gptrget
   1BFA F5 43              2182 	mov	_task_UART_core_projectSpecific_sloc1_1_0,a
   1BFC A3                 2183 	inc	dptr
   1BFD 12 3F 9A           2184 	lcall	__gptrget
   1C00 F5 44              2185 	mov	(_task_UART_core_projectSpecific_sloc1_1_0 + 1),a
   1C02 A3                 2186 	inc	dptr
   1C03 12 3F 9A           2187 	lcall	__gptrget
   1C06 F5 45              2188 	mov	(_task_UART_core_projectSpecific_sloc1_1_0 + 2),a
   1C08 74 02              2189 	mov	a,#0x02
   1C0A 2A                 2190 	add	a,r2
   1C0B F5 48              2191 	mov	_task_UART_core_projectSpecific_sloc3_1_0,a
   1C0D E4                 2192 	clr	a
   1C0E 3C                 2193 	addc	a,r4
   1C0F F5 49              2194 	mov	(_task_UART_core_projectSpecific_sloc3_1_0 + 1),a
   1C11 8D 4A              2195 	mov	(_task_UART_core_projectSpecific_sloc3_1_0 + 2),r5
   1C13 85 48 82           2196 	mov	dpl,_task_UART_core_projectSpecific_sloc3_1_0
   1C16 85 49 83           2197 	mov	dph,(_task_UART_core_projectSpecific_sloc3_1_0 + 1)
   1C19 85 4A F0           2198 	mov	b,(_task_UART_core_projectSpecific_sloc3_1_0 + 2)
   1C1C 12 3F 9A           2199 	lcall	__gptrget
   1C1F F5 46              2200 	mov	_task_UART_core_projectSpecific_sloc2_1_0,a
   1C21 A3                 2201 	inc	dptr
   1C22 12 3F 9A           2202 	lcall	__gptrget
   1C25 F5 47              2203 	mov	(_task_UART_core_projectSpecific_sloc2_1_0 + 1),a
   1C27 E5 46              2204 	mov	a,_task_UART_core_projectSpecific_sloc2_1_0
   1C29 25 43              2205 	add	a,_task_UART_core_projectSpecific_sloc1_1_0
   1C2B FF                 2206 	mov	r7,a
   1C2C E5 47              2207 	mov	a,(_task_UART_core_projectSpecific_sloc2_1_0 + 1)
   1C2E 35 44              2208 	addc	a,(_task_UART_core_projectSpecific_sloc1_1_0 + 1)
   1C30 F8                 2209 	mov	r0,a
   1C31 AB 45              2210 	mov	r3,(_task_UART_core_projectSpecific_sloc1_1_0 + 2)
   1C33 8F 82              2211 	mov	dpl,r7
   1C35 88 83              2212 	mov	dph,r0
   1C37 8B F0              2213 	mov	b,r3
   1C39 12 3F 9A           2214 	lcall	__gptrget
   1C3C F5 43              2215 	mov	_task_UART_core_projectSpecific_sloc1_1_0,a
                           2216 ;	../src/projectSpecificHardwareInterface_C8051F040.c:424: Q->Size-- ;
   1C3E 74 06              2217 	mov	a,#0x06
   1C40 2A                 2218 	add	a,r2
   1C41 FB                 2219 	mov	r3,a
   1C42 E4                 2220 	clr	a
   1C43 3C                 2221 	addc	a,r4
   1C44 FE                 2222 	mov	r6,a
   1C45 8D 00              2223 	mov	ar0,r5
   1C47 8B 82              2224 	mov	dpl,r3
   1C49 8E 83              2225 	mov	dph,r6
   1C4B 88 F0              2226 	mov	b,r0
   1C4D 12 3F 9A           2227 	lcall	__gptrget
   1C50 F9                 2228 	mov	r1,a
   1C51 A3                 2229 	inc	dptr
   1C52 12 3F 9A           2230 	lcall	__gptrget
   1C55 FF                 2231 	mov	r7,a
   1C56 19                 2232 	dec	r1
   1C57 B9 FF 01           2233 	cjne	r1,#0xff,00136$
   1C5A 1F                 2234 	dec	r7
   1C5B                    2235 00136$:
   1C5B 8B 82              2236 	mov	dpl,r3
   1C5D 8E 83              2237 	mov	dph,r6
   1C5F 88 F0              2238 	mov	b,r0
   1C61 E9                 2239 	mov	a,r1
   1C62 12 33 6E           2240 	lcall	__gptrput
   1C65 A3                 2241 	inc	dptr
   1C66 EF                 2242 	mov	a,r7
   1C67 12 33 6E           2243 	lcall	__gptrput
                           2244 ;	../src/projectSpecificHardwareInterface_C8051F040.c:425: Q->Front = Succ(Q->Front, Q) ;
   1C6A 90 05 9D           2245 	mov	dptr,#_Succ_PARM_2
   1C6D EA                 2246 	mov	a,r2
   1C6E F0                 2247 	movx	@dptr,a
   1C6F A3                 2248 	inc	dptr
   1C70 EC                 2249 	mov	a,r4
   1C71 F0                 2250 	movx	@dptr,a
   1C72 A3                 2251 	inc	dptr
   1C73 ED                 2252 	mov	a,r5
   1C74 F0                 2253 	movx	@dptr,a
   1C75 85 46 82           2254 	mov	dpl,_task_UART_core_projectSpecific_sloc2_1_0
   1C78 85 47 83           2255 	mov	dph,(_task_UART_core_projectSpecific_sloc2_1_0 + 1)
   1C7B 12 18 9B           2256 	lcall	_Succ
   1C7E AA 82              2257 	mov	r2,dpl
   1C80 AB 83              2258 	mov	r3,dph
   1C82 85 48 82           2259 	mov	dpl,_task_UART_core_projectSpecific_sloc3_1_0
   1C85 85 49 83           2260 	mov	dph,(_task_UART_core_projectSpecific_sloc3_1_0 + 1)
   1C88 85 4A F0           2261 	mov	b,(_task_UART_core_projectSpecific_sloc3_1_0 + 2)
   1C8B EA                 2262 	mov	a,r2
   1C8C 12 33 6E           2263 	lcall	__gptrput
   1C8F A3                 2264 	inc	dptr
   1C90 EB                 2265 	mov	a,r3
   1C91 12 33 6E           2266 	lcall	__gptrput
                           2267 ;	../src/projectSpecificHardwareInterface_C8051F040.c:427: TI0 = 0 ;	// clear it and send the next character
   1C94 C2 99              2268 	clr	_TI0
                           2269 ;	../src/projectSpecificHardwareInterface_C8051F040.c:429: SBUF0 = byteToSend ;
   1C96 85 43 99           2270 	mov	_SBUF0,_task_UART_core_projectSpecific_sloc1_1_0
                           2271 ;	../src/projectSpecificHardwareInterface_C8051F040.c:431: charSent[channelNumber] = true ;
   1C99 90 0A 13           2272 	mov	dptr,#_task_UART_core_projectSpecific_channelNumber_1_1
   1C9C E0                 2273 	movx	a,@dptr
   1C9D FA                 2274 	mov	r2,a
   1C9E 24 10              2275 	add	a,#_charSent
   1CA0 F5 82              2276 	mov	dpl,a
   1CA2 E4                 2277 	clr	a
   1CA3 34 0A              2278 	addc	a,#(_charSent >> 8)
   1CA5 F5 83              2279 	mov	dph,a
   1CA7 74 01              2280 	mov	a,#0x01
   1CA9 F0                 2281 	movx	@dptr,a
                           2282 ;	../src/projectSpecificHardwareInterface_C8051F040.c:434: portRESTORE_REGISTER_GROUP()
   1CAA D0 03              2283 	pop	ar3
                           2284 ;	../src/projectSpecificHardwareInterface_C8051F040.c:431: charSent[channelNumber] = true ;
   1CAC                    2285 00113$:
                           2286 ;	../src/projectSpecificHardwareInterface_C8051F040.c:434: portRESTORE_REGISTER_GROUP()
   1CAC 8B 84              2287 	mov	_SFRPAGE,r3
   1CAE 22                 2288 	ret
                           2289 ;------------------------------------------------------------
                           2290 ;Allocation info for local variables in function 'task_UART_putchar_projectSpecific'
                           2291 ;------------------------------------------------------------
                           2292 ;charToSend                Allocated with name '_task_UART_putchar_projectSpecific_PARM_2'
                           2293 ;channelNumber             Allocated with name '_task_UART_putchar_projectSpecific_channelNumber_1_1'
                           2294 ;Q                         Allocated with name '_task_UART_putchar_projectSpecific_Q_2_2'
                           2295 ;------------------------------------------------------------
                           2296 ;	../src/projectSpecificHardwareInterface_C8051F040.c:439: bool task_UART_putchar_projectSpecific(	unsigned char channelNumber, char charToSend)
                           2297 ;	-----------------------------------------
                           2298 ;	 function task_UART_putchar_projectSpecific
                           2299 ;	-----------------------------------------
   1CAF                    2300 _task_UART_putchar_projectSpecific:
   1CAF E5 82              2301 	mov	a,dpl
   1CB1 90 0A 18           2302 	mov	dptr,#_task_UART_putchar_projectSpecific_channelNumber_1_1
   1CB4 F0                 2303 	movx	@dptr,a
                           2304 ;	../src/projectSpecificHardwareInterface_C8051F040.c:441: task_UART_core(0) ;
   1CB5 75 82 00           2305 	mov	dpl,#0x00
   1CB8 12 31 3D           2306 	lcall	_task_UART_core
                           2307 ;	../src/projectSpecificHardwareInterface_C8051F040.c:443: portDISABLE_INTERRUPTS() ;
   1CBB C2 AF              2308 	clr	_EA
                           2309 ;	../src/projectSpecificHardwareInterface_C8051F040.c:445: if(channelNumber < NUMBER_OF_UARTS)
   1CBD 90 0A 18           2310 	mov	dptr,#_task_UART_putchar_projectSpecific_channelNumber_1_1
   1CC0 E0                 2311 	movx	a,@dptr
   1CC1 FA                 2312 	mov	r2,a
   1CC2 BA 01 00           2313 	cjne	r2,#0x01,00109$
   1CC5                    2314 00109$:
   1CC5 40 03              2315 	jc	00110$
   1CC7 02 1D C8           2316 	ljmp	00104$
   1CCA                    2317 00110$:
                           2318 ;	../src/projectSpecificHardwareInterface_C8051F040.c:447: QUEUE_TYPE*	Q = &transmitBuffers[channelNumber] ;
   1CCA EA                 2319 	mov	a,r2
   1CCB 75 F0 0B           2320 	mov	b,#0x0B
   1CCE A4                 2321 	mul	ab
   1CCF 24 FA              2322 	add	a,#_transmitBuffers
   1CD1 FA                 2323 	mov	r2,a
   1CD2 E4                 2324 	clr	a
   1CD3 34 09              2325 	addc	a,#(_transmitBuffers >> 8)
   1CD5 FB                 2326 	mov	r3,a
   1CD6 7C 00              2327 	mov	r4,#0x00
   1CD8 90 0A 19           2328 	mov	dptr,#_task_UART_putchar_projectSpecific_Q_2_2
   1CDB EA                 2329 	mov	a,r2
   1CDC F0                 2330 	movx	@dptr,a
   1CDD A3                 2331 	inc	dptr
   1CDE EB                 2332 	mov	a,r3
   1CDF F0                 2333 	movx	@dptr,a
   1CE0 A3                 2334 	inc	dptr
   1CE1 EC                 2335 	mov	a,r4
   1CE2 F0                 2336 	movx	@dptr,a
                           2337 ;	../src/projectSpecificHardwareInterface_C8051F040.c:449: if(!IsFull(Q))
   1CE3 8A 82              2338 	mov	dpl,r2
   1CE5 8B 83              2339 	mov	dph,r3
   1CE7 8C F0              2340 	mov	b,r4
   1CE9 12 18 49           2341 	lcall	_IsFull
   1CEC E5 82              2342 	mov	a,dpl
   1CEE 60 03              2343 	jz	00111$
   1CF0 02 1D C8           2344 	ljmp	00104$
   1CF3                    2345 00111$:
                           2346 ;	../src/projectSpecificHardwareInterface_C8051F040.c:451: Q->Size++ ;
   1CF3 90 0A 19           2347 	mov	dptr,#_task_UART_putchar_projectSpecific_Q_2_2
   1CF6 E0                 2348 	movx	a,@dptr
   1CF7 FA                 2349 	mov	r2,a
   1CF8 A3                 2350 	inc	dptr
   1CF9 E0                 2351 	movx	a,@dptr
   1CFA FB                 2352 	mov	r3,a
   1CFB A3                 2353 	inc	dptr
   1CFC E0                 2354 	movx	a,@dptr
   1CFD FC                 2355 	mov	r4,a
   1CFE 74 06              2356 	mov	a,#0x06
   1D00 2A                 2357 	add	a,r2
   1D01 FD                 2358 	mov	r5,a
   1D02 E4                 2359 	clr	a
   1D03 3B                 2360 	addc	a,r3
   1D04 FE                 2361 	mov	r6,a
   1D05 8C 07              2362 	mov	ar7,r4
   1D07 8D 82              2363 	mov	dpl,r5
   1D09 8E 83              2364 	mov	dph,r6
   1D0B 8F F0              2365 	mov	b,r7
   1D0D 12 3F 9A           2366 	lcall	__gptrget
   1D10 F8                 2367 	mov	r0,a
   1D11 A3                 2368 	inc	dptr
   1D12 12 3F 9A           2369 	lcall	__gptrget
   1D15 F9                 2370 	mov	r1,a
   1D16 08                 2371 	inc	r0
   1D17 B8 00 01           2372 	cjne	r0,#0x00,00112$
   1D1A 09                 2373 	inc	r1
   1D1B                    2374 00112$:
   1D1B 8D 82              2375 	mov	dpl,r5
   1D1D 8E 83              2376 	mov	dph,r6
   1D1F 8F F0              2377 	mov	b,r7
   1D21 E8                 2378 	mov	a,r0
   1D22 12 33 6E           2379 	lcall	__gptrput
   1D25 A3                 2380 	inc	dptr
   1D26 E9                 2381 	mov	a,r1
   1D27 12 33 6E           2382 	lcall	__gptrput
                           2383 ;	../src/projectSpecificHardwareInterface_C8051F040.c:452: Q->Rear = Succ(Q->Rear, Q) ;
   1D2A 74 04              2384 	mov	a,#0x04
   1D2C 2A                 2385 	add	a,r2
   1D2D FD                 2386 	mov	r5,a
   1D2E E4                 2387 	clr	a
   1D2F 3B                 2388 	addc	a,r3
   1D30 FE                 2389 	mov	r6,a
   1D31 8C 07              2390 	mov	ar7,r4
   1D33 8D 82              2391 	mov	dpl,r5
   1D35 8E 83              2392 	mov	dph,r6
   1D37 8F F0              2393 	mov	b,r7
   1D39 12 3F 9A           2394 	lcall	__gptrget
   1D3C F8                 2395 	mov	r0,a
   1D3D A3                 2396 	inc	dptr
   1D3E 12 3F 9A           2397 	lcall	__gptrget
   1D41 F9                 2398 	mov	r1,a
   1D42 90 05 9D           2399 	mov	dptr,#_Succ_PARM_2
   1D45 EA                 2400 	mov	a,r2
   1D46 F0                 2401 	movx	@dptr,a
   1D47 A3                 2402 	inc	dptr
   1D48 EB                 2403 	mov	a,r3
   1D49 F0                 2404 	movx	@dptr,a
   1D4A A3                 2405 	inc	dptr
   1D4B EC                 2406 	mov	a,r4
   1D4C F0                 2407 	movx	@dptr,a
   1D4D 88 82              2408 	mov	dpl,r0
   1D4F 89 83              2409 	mov	dph,r1
   1D51 C0 05              2410 	push	ar5
   1D53 C0 06              2411 	push	ar6
   1D55 C0 07              2412 	push	ar7
   1D57 12 18 9B           2413 	lcall	_Succ
   1D5A AA 82              2414 	mov	r2,dpl
   1D5C AB 83              2415 	mov	r3,dph
   1D5E D0 07              2416 	pop	ar7
   1D60 D0 06              2417 	pop	ar6
   1D62 D0 05              2418 	pop	ar5
   1D64 8D 82              2419 	mov	dpl,r5
   1D66 8E 83              2420 	mov	dph,r6
   1D68 8F F0              2421 	mov	b,r7
   1D6A EA                 2422 	mov	a,r2
   1D6B 12 33 6E           2423 	lcall	__gptrput
   1D6E A3                 2424 	inc	dptr
   1D6F EB                 2425 	mov	a,r3
   1D70 12 33 6E           2426 	lcall	__gptrput
                           2427 ;	../src/projectSpecificHardwareInterface_C8051F040.c:453: Q->Array[Q->Rear] = charToSend ;
   1D73 90 0A 19           2428 	mov	dptr,#_task_UART_putchar_projectSpecific_Q_2_2
   1D76 E0                 2429 	movx	a,@dptr
   1D77 FA                 2430 	mov	r2,a
   1D78 A3                 2431 	inc	dptr
   1D79 E0                 2432 	movx	a,@dptr
   1D7A FB                 2433 	mov	r3,a
   1D7B A3                 2434 	inc	dptr
   1D7C E0                 2435 	movx	a,@dptr
   1D7D FC                 2436 	mov	r4,a
   1D7E 74 08              2437 	mov	a,#0x08
   1D80 2A                 2438 	add	a,r2
   1D81 FD                 2439 	mov	r5,a
   1D82 E4                 2440 	clr	a
   1D83 3B                 2441 	addc	a,r3
   1D84 FE                 2442 	mov	r6,a
   1D85 8C 07              2443 	mov	ar7,r4
   1D87 8D 82              2444 	mov	dpl,r5
   1D89 8E 83              2445 	mov	dph,r6
   1D8B 8F F0              2446 	mov	b,r7
   1D8D 12 3F 9A           2447 	lcall	__gptrget
   1D90 FD                 2448 	mov	r5,a
   1D91 A3                 2449 	inc	dptr
   1D92 12 3F 9A           2450 	lcall	__gptrget
   1D95 FE                 2451 	mov	r6,a
   1D96 A3                 2452 	inc	dptr
   1D97 12 3F 9A           2453 	lcall	__gptrget
   1D9A FF                 2454 	mov	r7,a
   1D9B 74 04              2455 	mov	a,#0x04
   1D9D 2A                 2456 	add	a,r2
   1D9E FA                 2457 	mov	r2,a
   1D9F E4                 2458 	clr	a
   1DA0 3B                 2459 	addc	a,r3
   1DA1 FB                 2460 	mov	r3,a
   1DA2 8A 82              2461 	mov	dpl,r2
   1DA4 8B 83              2462 	mov	dph,r3
   1DA6 8C F0              2463 	mov	b,r4
   1DA8 12 3F 9A           2464 	lcall	__gptrget
   1DAB FA                 2465 	mov	r2,a
   1DAC A3                 2466 	inc	dptr
   1DAD 12 3F 9A           2467 	lcall	__gptrget
   1DB0 FB                 2468 	mov	r3,a
   1DB1 EA                 2469 	mov	a,r2
   1DB2 2D                 2470 	add	a,r5
   1DB3 FD                 2471 	mov	r5,a
   1DB4 EB                 2472 	mov	a,r3
   1DB5 3E                 2473 	addc	a,r6
   1DB6 FE                 2474 	mov	r6,a
   1DB7 90 0A 17           2475 	mov	dptr,#_task_UART_putchar_projectSpecific_PARM_2
   1DBA E0                 2476 	movx	a,@dptr
   1DBB 8D 82              2477 	mov	dpl,r5
   1DBD 8E 83              2478 	mov	dph,r6
   1DBF 8F F0              2479 	mov	b,r7
   1DC1 12 33 6E           2480 	lcall	__gptrput
                           2481 ;	../src/projectSpecificHardwareInterface_C8051F040.c:455: portENABLE_INTERRUPTS() ;
   1DC4 D2 AF              2482 	setb	_EA
                           2483 ;	../src/projectSpecificHardwareInterface_C8051F040.c:457: return true ;
   1DC6 D3                 2484 	setb	c
   1DC7 22                 2485 	ret
   1DC8                    2486 00104$:
                           2487 ;	../src/projectSpecificHardwareInterface_C8051F040.c:461: portENABLE_INTERRUPTS() ;
   1DC8 D2 AF              2488 	setb	_EA
                           2489 ;	../src/projectSpecificHardwareInterface_C8051F040.c:465: return false ;
   1DCA C3                 2490 	clr	c
   1DCB 22                 2491 	ret
                           2492 ;------------------------------------------------------------
                           2493 ;Allocation info for local variables in function 'task_UART_puts_projectSpecific'
                           2494 ;------------------------------------------------------------
                           2495 ;buffer                    Allocated with name '_task_UART_puts_projectSpecific_PARM_2'
                           2496 ;channelNumber             Allocated with name '_task_UART_puts_projectSpecific_channelNumber_1_1'
                           2497 ;myBuffer                  Allocated with name '_task_UART_puts_projectSpecific_myBuffer_2_2'
                           2498 ;------------------------------------------------------------
                           2499 ;	../src/projectSpecificHardwareInterface_C8051F040.c:469: void task_UART_puts_projectSpecific(	unsigned char channelNumber, const char *buffer)
                           2500 ;	-----------------------------------------
                           2501 ;	 function task_UART_puts_projectSpecific
                           2502 ;	-----------------------------------------
   1DCC                    2503 _task_UART_puts_projectSpecific:
   1DCC E5 82              2504 	mov	a,dpl
   1DCE 90 0A 1F           2505 	mov	dptr,#_task_UART_puts_projectSpecific_channelNumber_1_1
   1DD1 F0                 2506 	movx	@dptr,a
                           2507 ;	../src/projectSpecificHardwareInterface_C8051F040.c:471: if(channelNumber < NUMBER_OF_UARTS)
   1DD2 90 0A 1F           2508 	mov	dptr,#_task_UART_puts_projectSpecific_channelNumber_1_1
   1DD5 E0                 2509 	movx	a,@dptr
   1DD6 FA                 2510 	mov	r2,a
   1DD7 BA 01 00           2511 	cjne	r2,#0x01,00119$
   1DDA                    2512 00119$:
   1DDA 50 6C              2513 	jnc	00112$
                           2514 ;	../src/projectSpecificHardwareInterface_C8051F040.c:473: unsigned char* myBuffer = buffer ;
   1DDC 90 0A 1C           2515 	mov	dptr,#_task_UART_puts_projectSpecific_PARM_2
   1DDF E0                 2516 	movx	a,@dptr
   1DE0 FB                 2517 	mov	r3,a
   1DE1 A3                 2518 	inc	dptr
   1DE2 E0                 2519 	movx	a,@dptr
   1DE3 FC                 2520 	mov	r4,a
   1DE4 A3                 2521 	inc	dptr
   1DE5 E0                 2522 	movx	a,@dptr
   1DE6 FD                 2523 	mov	r5,a
                           2524 ;	../src/projectSpecificHardwareInterface_C8051F040.c:475: while(*myBuffer)
   1DE7 8A 06              2525 	mov	ar6,r2
   1DE9                    2526 00107$:
   1DE9 8B 82              2527 	mov	dpl,r3
   1DEB 8C 83              2528 	mov	dph,r4
   1DED 8D F0              2529 	mov	b,r5
   1DEF 12 3F 9A           2530 	lcall	__gptrget
   1DF2 FF                 2531 	mov	r7,a
   1DF3 60 53              2532 	jz	00112$
                           2533 ;	../src/projectSpecificHardwareInterface_C8051F040.c:477: if((*myBuffer) == '\n')
   1DF5 BF 0A 21           2534 	cjne	r7,#0x0A,00104$
                           2535 ;	../src/projectSpecificHardwareInterface_C8051F040.c:479: if(!task_UART_putchar(channelNumber, '\r'))
   1DF8 90 0A 6E           2536 	mov	dptr,#_task_UART_putchar_PARM_2
   1DFB 74 0D              2537 	mov	a,#0x0D
   1DFD F0                 2538 	movx	@dptr,a
   1DFE 8E 82              2539 	mov	dpl,r6
   1E00 C0 02              2540 	push	ar2
   1E02 C0 03              2541 	push	ar3
   1E04 C0 04              2542 	push	ar4
   1E06 C0 05              2543 	push	ar5
   1E08 C0 06              2544 	push	ar6
   1E0A 12 31 4C           2545 	lcall	_task_UART_putchar
   1E0D D0 06              2546 	pop	ar6
   1E0F D0 05              2547 	pop	ar5
   1E11 D0 04              2548 	pop	ar4
   1E13 D0 03              2549 	pop	ar3
   1E15 D0 02              2550 	pop	ar2
   1E17 50 2F              2551 	jnc	00112$
                           2552 ;	../src/projectSpecificHardwareInterface_C8051F040.c:481: break ;
   1E19                    2553 00104$:
                           2554 ;	../src/projectSpecificHardwareInterface_C8051F040.c:485: if(!task_UART_putchar(channelNumber, *myBuffer++))
   1E19 8B 82              2555 	mov	dpl,r3
   1E1B 8C 83              2556 	mov	dph,r4
   1E1D 8D F0              2557 	mov	b,r5
   1E1F 12 3F 9A           2558 	lcall	__gptrget
   1E22 FF                 2559 	mov	r7,a
   1E23 A3                 2560 	inc	dptr
   1E24 AB 82              2561 	mov	r3,dpl
   1E26 AC 83              2562 	mov	r4,dph
   1E28 90 0A 6E           2563 	mov	dptr,#_task_UART_putchar_PARM_2
   1E2B EF                 2564 	mov	a,r7
   1E2C F0                 2565 	movx	@dptr,a
   1E2D 8A 82              2566 	mov	dpl,r2
   1E2F C0 02              2567 	push	ar2
   1E31 C0 03              2568 	push	ar3
   1E33 C0 04              2569 	push	ar4
   1E35 C0 05              2570 	push	ar5
   1E37 C0 06              2571 	push	ar6
   1E39 12 31 4C           2572 	lcall	_task_UART_putchar
   1E3C D0 06              2573 	pop	ar6
   1E3E D0 05              2574 	pop	ar5
   1E40 D0 04              2575 	pop	ar4
   1E42 D0 03              2576 	pop	ar3
   1E44 D0 02              2577 	pop	ar2
   1E46 40 A1              2578 	jc	00107$
                           2579 ;	../src/projectSpecificHardwareInterface_C8051F040.c:487: break ;
   1E48                    2580 00112$:
   1E48 22                 2581 	ret
                           2582 ;------------------------------------------------------------
                           2583 ;Allocation info for local variables in function 'task_UART_getchar_projectSpecific'
                           2584 ;------------------------------------------------------------
                           2585 ;sloc0                     Allocated with name '_task_UART_getchar_projectSpecific_sloc0_1_0'
                           2586 ;sloc1                     Allocated with name '_task_UART_getchar_projectSpecific_sloc1_1_0'
                           2587 ;sloc2                     Allocated with name '_task_UART_getchar_projectSpecific_sloc2_1_0'
                           2588 ;channelNumber             Allocated with name '_task_UART_getchar_projectSpecific_channelNumber_1_1'
                           2589 ;Q                         Allocated with name '_task_UART_getchar_projectSpecific_Q_2_2'
                           2590 ;byteReceived              Allocated with name '_task_UART_getchar_projectSpecific_byteReceived_3_3'
                           2591 ;------------------------------------------------------------
                           2592 ;	../src/projectSpecificHardwareInterface_C8051F040.c:494: char task_UART_getchar_projectSpecific(	unsigned char channelNumber)
                           2593 ;	-----------------------------------------
                           2594 ;	 function task_UART_getchar_projectSpecific
                           2595 ;	-----------------------------------------
   1E49                    2596 _task_UART_getchar_projectSpecific:
   1E49 E5 82              2597 	mov	a,dpl
   1E4B 90 0A 20           2598 	mov	dptr,#_task_UART_getchar_projectSpecific_channelNumber_1_1
   1E4E F0                 2599 	movx	@dptr,a
                           2600 ;	../src/projectSpecificHardwareInterface_C8051F040.c:496: if(channelNumber < NUMBER_OF_UARTS)
   1E4F 90 0A 20           2601 	mov	dptr,#_task_UART_getchar_projectSpecific_channelNumber_1_1
   1E52 E0                 2602 	movx	a,@dptr
   1E53 FA                 2603 	mov	r2,a
   1E54 BA 01 00           2604 	cjne	r2,#0x01,00109$
   1E57                    2605 00109$:
   1E57 40 03              2606 	jc	00110$
   1E59 02 1F 40           2607 	ljmp	00104$
   1E5C                    2608 00110$:
                           2609 ;	../src/projectSpecificHardwareInterface_C8051F040.c:498: QUEUE_TYPE*	Q = &receiveBuffers[channelNumber] ;
   1E5C EA                 2610 	mov	a,r2
   1E5D 75 F0 0B           2611 	mov	b,#0x0B
   1E60 A4                 2612 	mul	ab
   1E61 24 05              2613 	add	a,#_receiveBuffers
   1E63 FA                 2614 	mov	r2,a
   1E64 E4                 2615 	clr	a
   1E65 34 0A              2616 	addc	a,#(_receiveBuffers >> 8)
   1E67 FB                 2617 	mov	r3,a
   1E68 7C 00              2618 	mov	r4,#0x00
   1E6A 90 0A 21           2619 	mov	dptr,#_task_UART_getchar_projectSpecific_Q_2_2
   1E6D EA                 2620 	mov	a,r2
   1E6E F0                 2621 	movx	@dptr,a
   1E6F A3                 2622 	inc	dptr
   1E70 EB                 2623 	mov	a,r3
   1E71 F0                 2624 	movx	@dptr,a
   1E72 A3                 2625 	inc	dptr
   1E73 EC                 2626 	mov	a,r4
   1E74 F0                 2627 	movx	@dptr,a
                           2628 ;	../src/projectSpecificHardwareInterface_C8051F040.c:500: if(!IsEmpty(Q))
   1E75 8A 82              2629 	mov	dpl,r2
   1E77 8B 83              2630 	mov	dph,r3
   1E79 8C F0              2631 	mov	b,r4
   1E7B 12 18 0D           2632 	lcall	_IsEmpty
   1E7E E5 82              2633 	mov	a,dpl
   1E80 60 03              2634 	jz	00111$
   1E82 02 1F 40           2635 	ljmp	00104$
   1E85                    2636 00111$:
                           2637 ;	../src/projectSpecificHardwareInterface_C8051F040.c:502: unsigned char byteReceived = Q->Array[Q->Front] ;
   1E85 90 0A 21           2638 	mov	dptr,#_task_UART_getchar_projectSpecific_Q_2_2
   1E88 E0                 2639 	movx	a,@dptr
   1E89 FA                 2640 	mov	r2,a
   1E8A A3                 2641 	inc	dptr
   1E8B E0                 2642 	movx	a,@dptr
   1E8C FB                 2643 	mov	r3,a
   1E8D A3                 2644 	inc	dptr
   1E8E E0                 2645 	movx	a,@dptr
   1E8F FC                 2646 	mov	r4,a
   1E90 74 08              2647 	mov	a,#0x08
   1E92 2A                 2648 	add	a,r2
   1E93 FD                 2649 	mov	r5,a
   1E94 E4                 2650 	clr	a
   1E95 3B                 2651 	addc	a,r3
   1E96 FE                 2652 	mov	r6,a
   1E97 8C 07              2653 	mov	ar7,r4
   1E99 8D 82              2654 	mov	dpl,r5
   1E9B 8E 83              2655 	mov	dph,r6
   1E9D 8F F0              2656 	mov	b,r7
   1E9F 12 3F 9A           2657 	lcall	__gptrget
   1EA2 F5 4B              2658 	mov	_task_UART_getchar_projectSpecific_sloc0_1_0,a
   1EA4 A3                 2659 	inc	dptr
   1EA5 12 3F 9A           2660 	lcall	__gptrget
   1EA8 F5 4C              2661 	mov	(_task_UART_getchar_projectSpecific_sloc0_1_0 + 1),a
   1EAA A3                 2662 	inc	dptr
   1EAB 12 3F 9A           2663 	lcall	__gptrget
   1EAE F5 4D              2664 	mov	(_task_UART_getchar_projectSpecific_sloc0_1_0 + 2),a
   1EB0 74 02              2665 	mov	a,#0x02
   1EB2 2A                 2666 	add	a,r2
   1EB3 F5 50              2667 	mov	_task_UART_getchar_projectSpecific_sloc2_1_0,a
   1EB5 E4                 2668 	clr	a
   1EB6 3B                 2669 	addc	a,r3
   1EB7 F5 51              2670 	mov	(_task_UART_getchar_projectSpecific_sloc2_1_0 + 1),a
   1EB9 8C 52              2671 	mov	(_task_UART_getchar_projectSpecific_sloc2_1_0 + 2),r4
   1EBB 85 50 82           2672 	mov	dpl,_task_UART_getchar_projectSpecific_sloc2_1_0
   1EBE 85 51 83           2673 	mov	dph,(_task_UART_getchar_projectSpecific_sloc2_1_0 + 1)
   1EC1 85 52 F0           2674 	mov	b,(_task_UART_getchar_projectSpecific_sloc2_1_0 + 2)
   1EC4 12 3F 9A           2675 	lcall	__gptrget
   1EC7 F5 4E              2676 	mov	_task_UART_getchar_projectSpecific_sloc1_1_0,a
   1EC9 A3                 2677 	inc	dptr
   1ECA 12 3F 9A           2678 	lcall	__gptrget
   1ECD F5 4F              2679 	mov	(_task_UART_getchar_projectSpecific_sloc1_1_0 + 1),a
   1ECF E5 4E              2680 	mov	a,_task_UART_getchar_projectSpecific_sloc1_1_0
   1ED1 25 4B              2681 	add	a,_task_UART_getchar_projectSpecific_sloc0_1_0
   1ED3 FE                 2682 	mov	r6,a
   1ED4 E5 4F              2683 	mov	a,(_task_UART_getchar_projectSpecific_sloc1_1_0 + 1)
   1ED6 35 4C              2684 	addc	a,(_task_UART_getchar_projectSpecific_sloc0_1_0 + 1)
   1ED8 FF                 2685 	mov	r7,a
   1ED9 AD 4D              2686 	mov	r5,(_task_UART_getchar_projectSpecific_sloc0_1_0 + 2)
   1EDB 8E 82              2687 	mov	dpl,r6
   1EDD 8F 83              2688 	mov	dph,r7
   1EDF 8D F0              2689 	mov	b,r5
   1EE1 12 3F 9A           2690 	lcall	__gptrget
   1EE4 F5 4B              2691 	mov	_task_UART_getchar_projectSpecific_sloc0_1_0,a
                           2692 ;	../src/projectSpecificHardwareInterface_C8051F040.c:504: Q->Size-- ;
   1EE6 74 06              2693 	mov	a,#0x06
   1EE8 2A                 2694 	add	a,r2
   1EE9 FD                 2695 	mov	r5,a
   1EEA E4                 2696 	clr	a
   1EEB 3B                 2697 	addc	a,r3
   1EEC FF                 2698 	mov	r7,a
   1EED 8C 00              2699 	mov	ar0,r4
   1EEF 8D 82              2700 	mov	dpl,r5
   1EF1 8F 83              2701 	mov	dph,r7
   1EF3 88 F0              2702 	mov	b,r0
   1EF5 12 3F 9A           2703 	lcall	__gptrget
   1EF8 F9                 2704 	mov	r1,a
   1EF9 A3                 2705 	inc	dptr
   1EFA 12 3F 9A           2706 	lcall	__gptrget
   1EFD FE                 2707 	mov	r6,a
   1EFE 19                 2708 	dec	r1
   1EFF B9 FF 01           2709 	cjne	r1,#0xff,00112$
   1F02 1E                 2710 	dec	r6
   1F03                    2711 00112$:
   1F03 8D 82              2712 	mov	dpl,r5
   1F05 8F 83              2713 	mov	dph,r7
   1F07 88 F0              2714 	mov	b,r0
   1F09 E9                 2715 	mov	a,r1
   1F0A 12 33 6E           2716 	lcall	__gptrput
   1F0D A3                 2717 	inc	dptr
   1F0E EE                 2718 	mov	a,r6
   1F0F 12 33 6E           2719 	lcall	__gptrput
                           2720 ;	../src/projectSpecificHardwareInterface_C8051F040.c:505: Q->Front = Succ(Q->Front, Q) ;
   1F12 90 05 9D           2721 	mov	dptr,#_Succ_PARM_2
   1F15 EA                 2722 	mov	a,r2
   1F16 F0                 2723 	movx	@dptr,a
   1F17 A3                 2724 	inc	dptr
   1F18 EB                 2725 	mov	a,r3
   1F19 F0                 2726 	movx	@dptr,a
   1F1A A3                 2727 	inc	dptr
   1F1B EC                 2728 	mov	a,r4
   1F1C F0                 2729 	movx	@dptr,a
   1F1D 85 4E 82           2730 	mov	dpl,_task_UART_getchar_projectSpecific_sloc1_1_0
   1F20 85 4F 83           2731 	mov	dph,(_task_UART_getchar_projectSpecific_sloc1_1_0 + 1)
   1F23 12 18 9B           2732 	lcall	_Succ
   1F26 AA 82              2733 	mov	r2,dpl
   1F28 AB 83              2734 	mov	r3,dph
   1F2A 85 50 82           2735 	mov	dpl,_task_UART_getchar_projectSpecific_sloc2_1_0
   1F2D 85 51 83           2736 	mov	dph,(_task_UART_getchar_projectSpecific_sloc2_1_0 + 1)
   1F30 85 52 F0           2737 	mov	b,(_task_UART_getchar_projectSpecific_sloc2_1_0 + 2)
   1F33 EA                 2738 	mov	a,r2
   1F34 12 33 6E           2739 	lcall	__gptrput
   1F37 A3                 2740 	inc	dptr
   1F38 EB                 2741 	mov	a,r3
   1F39 12 33 6E           2742 	lcall	__gptrput
                           2743 ;	../src/projectSpecificHardwareInterface_C8051F040.c:507: return byteReceived ;
   1F3C 85 4B 82           2744 	mov	dpl,_task_UART_getchar_projectSpecific_sloc0_1_0
                           2745 ;	../src/projectSpecificHardwareInterface_C8051F040.c:511: return -1 ;
   1F3F 22                 2746 	ret
   1F40                    2747 00104$:
   1F40 75 82 FF           2748 	mov	dpl,#0xFF
   1F43 22                 2749 	ret
                           2750 ;------------------------------------------------------------
                           2751 ;Allocation info for local variables in function 'task_UART_gets_projectSpecific'
                           2752 ;------------------------------------------------------------
                           2753 ;sloc0                     Allocated with name '_task_UART_gets_projectSpecific_sloc0_1_0'
                           2754 ;sloc1                     Allocated with name '_task_UART_gets_projectSpecific_sloc1_1_0'
                           2755 ;buffer                    Allocated with name '_task_UART_gets_projectSpecific_PARM_2'
                           2756 ;maxBufferLength           Allocated with name '_task_UART_gets_projectSpecific_PARM_3'
                           2757 ;channelNumber             Allocated with name '_task_UART_gets_projectSpecific_channelNumber_1_1'
                           2758 ;charsReturned             Allocated with name '_task_UART_gets_projectSpecific_charsReturned_2_2'
                           2759 ;latestCharInBuffer        Allocated with name '_task_UART_gets_projectSpecific_latestCharInBuffer_3_3'
                           2760 ;------------------------------------------------------------
                           2761 ;	../src/projectSpecificHardwareInterface_C8051F040.c:515: char* task_UART_gets_projectSpecific(	unsigned char channelNumber, char* buffer, unsigned short maxBufferLength)
                           2762 ;	-----------------------------------------
                           2763 ;	 function task_UART_gets_projectSpecific
                           2764 ;	-----------------------------------------
   1F44                    2765 _task_UART_gets_projectSpecific:
   1F44 E5 82              2766 	mov	a,dpl
   1F46 90 0A 29           2767 	mov	dptr,#_task_UART_gets_projectSpecific_channelNumber_1_1
   1F49 F0                 2768 	movx	@dptr,a
                           2769 ;	../src/projectSpecificHardwareInterface_C8051F040.c:517: if(channelNumber < NUMBER_OF_UARTS)
   1F4A 90 0A 29           2770 	mov	dptr,#_task_UART_gets_projectSpecific_channelNumber_1_1
   1F4D E0                 2771 	movx	a,@dptr
   1F4E FA                 2772 	mov	r2,a
   1F4F BA 01 00           2773 	cjne	r2,#0x01,00119$
   1F52                    2774 00119$:
   1F52 50 74              2775 	jnc	00110$
                           2776 ;	../src/projectSpecificHardwareInterface_C8051F040.c:521: while(charsReturned < maxBufferLength)
   1F54 90 0A 27           2777 	mov	dptr,#_task_UART_gets_projectSpecific_PARM_3
   1F57 E0                 2778 	movx	a,@dptr
   1F58 F5 54              2779 	mov	_task_UART_gets_projectSpecific_sloc1_1_0,a
   1F5A A3                 2780 	inc	dptr
   1F5B E0                 2781 	movx	a,@dptr
   1F5C F5 55              2782 	mov	(_task_UART_gets_projectSpecific_sloc1_1_0 + 1),a
   1F5E 90 0A 24           2783 	mov	dptr,#_task_UART_gets_projectSpecific_PARM_2
   1F61 E0                 2784 	movx	a,@dptr
   1F62 FD                 2785 	mov	r5,a
   1F63 A3                 2786 	inc	dptr
   1F64 E0                 2787 	movx	a,@dptr
   1F65 FE                 2788 	mov	r6,a
   1F66 A3                 2789 	inc	dptr
   1F67 E0                 2790 	movx	a,@dptr
   1F68 FF                 2791 	mov	r7,a
   1F69 78 00              2792 	mov	r0,#0x00
   1F6B 79 00              2793 	mov	r1,#0x00
   1F6D                    2794 00106$:
   1F6D C3                 2795 	clr	c
   1F6E E8                 2796 	mov	a,r0
   1F6F 95 54              2797 	subb	a,_task_UART_gets_projectSpecific_sloc1_1_0
   1F71 E9                 2798 	mov	a,r1
   1F72 95 55              2799 	subb	a,(_task_UART_gets_projectSpecific_sloc1_1_0 + 1)
   1F74 50 52              2800 	jnc	00110$
                           2801 ;	../src/projectSpecificHardwareInterface_C8051F040.c:523: char latestCharInBuffer = task_UART_getchar(channelNumber) ;
   1F76 8A 82              2802 	mov	dpl,r2
   1F78 C0 02              2803 	push	ar2
   1F7A C0 05              2804 	push	ar5
   1F7C C0 06              2805 	push	ar6
   1F7E C0 07              2806 	push	ar7
   1F80 C0 00              2807 	push	ar0
   1F82 C0 01              2808 	push	ar1
   1F84 12 31 8D           2809 	lcall	_task_UART_getchar
   1F87 85 82 53           2810 	mov	_task_UART_gets_projectSpecific_sloc0_1_0,dpl
   1F8A D0 01              2811 	pop	ar1
   1F8C D0 00              2812 	pop	ar0
   1F8E D0 07              2813 	pop	ar7
   1F90 D0 06              2814 	pop	ar6
   1F92 D0 05              2815 	pop	ar5
   1F94 D0 02              2816 	pop	ar2
                           2817 ;	../src/projectSpecificHardwareInterface_C8051F040.c:525: if(latestCharInBuffer <= 0)	// break on a NULL or a -1
   1F96 C3                 2818 	clr	c
   1F97 74 80              2819 	mov	a,#(0x00 ^ 0x80)
   1F99 85 53 F0           2820 	mov	b,_task_UART_gets_projectSpecific_sloc0_1_0
   1F9C 63 F0 80           2821 	xrl	b,#0x80
   1F9F 95 F0              2822 	subb	a,b
   1FA1 50 25              2823 	jnc	00110$
                           2824 ;	../src/projectSpecificHardwareInterface_C8051F040.c:529: else if(latestCharInBuffer == '\r')	// Skip carriage returns
   1FA3 74 0D              2825 	mov	a,#0x0D
   1FA5 B5 53 02           2826 	cjne	a,_task_UART_gets_projectSpecific_sloc0_1_0,00123$
   1FA8 80 C3              2827 	sjmp	00106$
   1FAA                    2828 00123$:
                           2829 ;	../src/projectSpecificHardwareInterface_C8051F040.c:534: buffer[charsReturned] = latestCharInBuffer ;
   1FAA C0 02              2830 	push	ar2
   1FAC E8                 2831 	mov	a,r0
   1FAD 2D                 2832 	add	a,r5
   1FAE FA                 2833 	mov	r2,a
   1FAF E9                 2834 	mov	a,r1
   1FB0 3E                 2835 	addc	a,r6
   1FB1 FB                 2836 	mov	r3,a
   1FB2 8F 04              2837 	mov	ar4,r7
   1FB4 8A 82              2838 	mov	dpl,r2
   1FB6 8B 83              2839 	mov	dph,r3
   1FB8 8C F0              2840 	mov	b,r4
   1FBA E5 53              2841 	mov	a,_task_UART_gets_projectSpecific_sloc0_1_0
   1FBC 12 33 6E           2842 	lcall	__gptrput
                           2843 ;	../src/projectSpecificHardwareInterface_C8051F040.c:536: charsReturned++ ;
   1FBF 08                 2844 	inc	r0
   1FC0 B8 00 01           2845 	cjne	r0,#0x00,00124$
   1FC3 09                 2846 	inc	r1
   1FC4                    2847 00124$:
   1FC4 D0 02              2848 	pop	ar2
   1FC6 80 A5              2849 	sjmp	00106$
   1FC8                    2850 00110$:
                           2851 ;	../src/projectSpecificHardwareInterface_C8051F040.c:540: return 0 ;
   1FC8 90 00 00           2852 	mov	dptr,#0x0000
   1FCB 75 F0 00           2853 	mov	b,#0x00
   1FCE 22                 2854 	ret
                           2855 ;------------------------------------------------------------
                           2856 ;Allocation info for local variables in function 'task_UART_isLineReady'
                           2857 ;------------------------------------------------------------
                           2858 ;channelNumber             Allocated with name '_task_UART_isLineReady_channelNumber_1_1'
                           2859 ;------------------------------------------------------------
                           2860 ;	../src/projectSpecificHardwareInterface_C8051F040.c:544: bool task_UART_isLineReady(	unsigned char channelNumber)
                           2861 ;	-----------------------------------------
                           2862 ;	 function task_UART_isLineReady
                           2863 ;	-----------------------------------------
   1FCF                    2864 _task_UART_isLineReady:
   1FCF E5 82              2865 	mov	a,dpl
   1FD1 90 0A 2A           2866 	mov	dptr,#_task_UART_isLineReady_channelNumber_1_1
   1FD4 F0                 2867 	movx	@dptr,a
                           2868 ;	../src/projectSpecificHardwareInterface_C8051F040.c:546: return lineReady[channelNumber] ;
   1FD5 90 0A 2A           2869 	mov	dptr,#_task_UART_isLineReady_channelNumber_1_1
   1FD8 E0                 2870 	movx	a,@dptr
   1FD9 24 11              2871 	add	a,#_lineReady
   1FDB F5 82              2872 	mov	dpl,a
   1FDD E4                 2873 	clr	a
   1FDE 34 0A              2874 	addc	a,#(_lineReady >> 8)
   1FE0 F5 83              2875 	mov	dph,a
   1FE2 E0                 2876 	movx	a,@dptr
   1FE3 24 FF              2877 	add	a,#0xff
   1FE5 92 04              2878 	mov  _task_UART_isLineReady_sloc0_1_0,c
   1FE7 22                 2879 	ret
                           2880 ;------------------------------------------------------------
                           2881 ;Allocation info for local variables in function 'UART0_Init'
                           2882 ;------------------------------------------------------------
                           2883 ;SFRPAGE_SAVE              Allocated with name '_UART0_Init_SFRPAGE_SAVE_1_1'
                           2884 ;------------------------------------------------------------
                           2885 ;	../src/projectSpecificHardwareInterface_C8051F040.c:550: void UART0_Init(void)
                           2886 ;	-----------------------------------------
                           2887 ;	 function UART0_Init
                           2888 ;	-----------------------------------------
   1FE8                    2889 _UART0_Init:
                           2890 ;	../src/projectSpecificHardwareInterface_C8051F040.c:554: SFRPAGE_SAVE = SFRPAGE;             // Preserve SFRPAGE
   1FE8 AA 84              2891 	mov	r2,_SFRPAGE
                           2892 ;	../src/projectSpecificHardwareInterface_C8051F040.c:556: SFRPAGE = UART0_PAGE;
   1FEA 75 84 00           2893 	mov	_SFRPAGE,#0x00
                           2894 ;	../src/projectSpecificHardwareInterface_C8051F040.c:558: SCON0 = 0x52;                       // 8-bit variable baud rate;
   1FED 75 98 52           2895 	mov	_SCON0,#0x52
                           2896 ;	../src/projectSpecificHardwareInterface_C8051F040.c:561: SSTA0 = 0x10;                       // Clear all flags; enable baud rate
   1FF0 75 91 10           2897 	mov	_SSTA0,#0x10
                           2898 ;	../src/projectSpecificHardwareInterface_C8051F040.c:568: SFRPAGE = SFRPAGE_SAVE;
   1FF3 8A 84              2899 	mov	_SFRPAGE,r2
   1FF5 22                 2900 	ret
                           2901 ;------------------------------------------------------------
                           2902 ;Allocation info for local variables in function 'UART1_Init'
                           2903 ;------------------------------------------------------------
                           2904 ;SFRPAGE_SAVE              Allocated with name '_UART1_Init_SFRPAGE_SAVE_2_2'
                           2905 ;------------------------------------------------------------
                           2906 ;	../src/projectSpecificHardwareInterface_C8051F040.c:589: void UART1_Init(void)
                           2907 ;	-----------------------------------------
                           2908 ;	 function UART1_Init
                           2909 ;	-----------------------------------------
   1FF6                    2910 _UART1_Init:
                           2911 ;	../src/projectSpecificHardwareInterface_C8051F040.c:591: portSET_REGISTER_GROUP(UART1_PAGE)
   1FF6 AA 84              2912 	mov	r2,_SFRPAGE
   1FF8 75 84 01           2913 	mov	_SFRPAGE,#0x01
                           2914 ;	../src/projectSpecificHardwareInterface_C8051F040.c:593: SCON1 = 0x10 ;	// 8-bit variable baud rate;
   1FFB 75 98 10           2915 	mov	_SCON1,#0x10
                           2916 ;	../src/projectSpecificHardwareInterface_C8051F040.c:599: portRESTORE_REGISTER_GROUP()
   1FFE 8A 84              2917 	mov	_SFRPAGE,r2
   2000 22                 2918 	ret
                           2919 ;------------------------------------------------------------
                           2920 ;Allocation info for local variables in function 'putchar'
                           2921 ;------------------------------------------------------------
                           2922 ;c                         Allocated with name '_putchar_c_1_1'
                           2923 ;------------------------------------------------------------
                           2924 ;	../src/projectSpecificHardwareInterface_C8051F040.c:603: void putchar(char c)
                           2925 ;	-----------------------------------------
                           2926 ;	 function putchar
                           2927 ;	-----------------------------------------
   2001                    2928 _putchar:
   2001 E5 82              2929 	mov	a,dpl
   2003 90 0A 2B           2930 	mov	dptr,#_putchar_c_1_1
   2006 F0                 2931 	movx	@dptr,a
                           2932 ;	../src/projectSpecificHardwareInterface_C8051F040.c:605: if(c == '\n')
   2007 90 0A 2B           2933 	mov	dptr,#_putchar_c_1_1
   200A E0                 2934 	movx	a,@dptr
   200B FA                 2935 	mov	r2,a
   200C BA 0A 0C           2936 	cjne	r2,#0x0A,00102$
                           2937 ;	../src/projectSpecificHardwareInterface_C8051F040.c:607: task_UART_putchar(0, '\r') ;
   200F 90 0A 6E           2938 	mov	dptr,#_task_UART_putchar_PARM_2
   2012 74 0D              2939 	mov	a,#0x0D
   2014 F0                 2940 	movx	@dptr,a
   2015 75 82 00           2941 	mov	dpl,#0x00
   2018 12 31 4C           2942 	lcall	_task_UART_putchar
   201B                    2943 00102$:
                           2944 ;	../src/projectSpecificHardwareInterface_C8051F040.c:610: task_UART_putchar(0, c) ;
   201B 90 0A 2B           2945 	mov	dptr,#_putchar_c_1_1
   201E E0                 2946 	movx	a,@dptr
   201F 90 0A 6E           2947 	mov	dptr,#_task_UART_putchar_PARM_2
   2022 F0                 2948 	movx	@dptr,a
   2023 75 82 00           2949 	mov	dpl,#0x00
   2026 02 31 4C           2950 	ljmp	_task_UART_putchar
                           2951 ;------------------------------------------------------------
                           2952 ;Allocation info for local variables in function 'prvSetupSystemClock'
                           2953 ;------------------------------------------------------------
                           2954 ;n                         Allocated with name '_prvSetupSystemClock_n_1_1'
                           2955 ;------------------------------------------------------------
                           2956 ;	../src/projectSpecificHardwareInterface_C8051F040.c:632: static void prvSetupSystemClock( void )
                           2957 ;	-----------------------------------------
                           2958 ;	 function prvSetupSystemClock
                           2959 ;	-----------------------------------------
   2029                    2960 _prvSetupSystemClock:
                           2961 ;	../src/projectSpecificHardwareInterface_C8051F040.c:635: SFRPAGE = CONFIG_PAGE ;			// switch to config page to config oscillator
   2029 75 84 0F           2962 	mov	_SFRPAGE,#0x0F
                           2963 ;	../src/projectSpecificHardwareInterface_C8051F040.c:637: OSCXCN = 0x77 ;					// start external oscillator; 24 MHz Crystal
   202C 75 8C 77           2964 	mov	_OSCXCN,#0x77
                           2965 ;	../src/projectSpecificHardwareInterface_C8051F040.c:641: for( n = 0 ; n < 255 ; n++ ) ;	// delay about 1ms
   202F 7A FF              2966 	mov	r2,#0xFF
   2031 7B 00              2967 	mov	r3,#0x00
   2033                    2968 00106$:
   2033 1A                 2969 	dec	r2
   2034 BA FF 01           2970 	cjne	r2,#0xff,00114$
   2037 1B                 2971 	dec	r3
   2038                    2972 00114$:
   2038 EA                 2973 	mov	a,r2
   2039 4B                 2974 	orl	a,r3
   203A 70 F7              2975 	jnz	00106$
                           2976 ;	../src/projectSpecificHardwareInterface_C8051F040.c:642: while((OSCXCN & 0x80) == 0) ;	// wait for oscillator to stabilize
   203C                    2977 00101$:
   203C E5 8C              2978 	mov	a,_OSCXCN
   203E 30 E7 FB           2979 	jnb	acc.7,00101$
                           2980 ;	../src/projectSpecificHardwareInterface_C8051F040.c:644: CLKSEL |= 0x01 ;				// switch to external oscillator
   2041 43 97 01           2981 	orl	_CLKSEL,#0x01
                           2982 ;	../src/projectSpecificHardwareInterface_C8051F040.c:646: OSCICN = 0xC2 ;					// Turn off the internal oscillator to save a little power
   2044 75 8A C2           2983 	mov	_OSCICN,#0xC2
   2047 22                 2984 	ret
                           2985 ;------------------------------------------------------------
                           2986 ;Allocation info for local variables in function 'prvSetupTimerInterrupt'
                           2987 ;------------------------------------------------------------
                           2988 ;ucOriginalSFRPage         Allocated with name '_prvSetupTimerInterrupt_ucOriginalSFRPage_1_1'
                           2989 ;ulTicksPerSecond          Allocated with name '_prvSetupTimerInterrupt_ulTicksPerSecond_1_1'
                           2990 ;ulCaptureTime             Allocated with name '_prvSetupTimerInterrupt_ulCaptureTime_1_1'
                           2991 ;ulCaptureValue            Allocated with name '_prvSetupTimerInterrupt_ulCaptureValue_1_1'
                           2992 ;ucLowCaptureByte          Allocated with name '_prvSetupTimerInterrupt_ucLowCaptureByte_1_1'
                           2993 ;ucHighCaptureByte         Allocated with name '_prvSetupTimerInterrupt_ucHighCaptureByte_1_1'
                           2994 ;------------------------------------------------------------
                           2995 ;	../src/projectSpecificHardwareInterface_C8051F040.c:650: static void prvSetupTimerInterrupt( void )
                           2996 ;	-----------------------------------------
                           2997 ;	 function prvSetupTimerInterrupt
                           2998 ;	-----------------------------------------
   2048                    2999 _prvSetupTimerInterrupt:
                           3000 ;	../src/projectSpecificHardwareInterface_C8051F040.c:664: ucOriginalSFRPage = SFRPAGE;
   2048 90 0A 2C           3001 	mov	dptr,#_prvSetupTimerInterrupt_ucOriginalSFRPage_1_1
   204B E5 84              3002 	mov	a,_SFRPAGE
   204D F0                 3003 	movx	@dptr,a
                           3004 ;	../src/projectSpecificHardwareInterface_C8051F040.c:665: SFRPAGE = 0;
   204E 75 84 00           3005 	mov	_SFRPAGE,#0x00
                           3006 ;	../src/projectSpecificHardwareInterface_C8051F040.c:668: TMR2CF = ( unsigned char ) 0;
   2051 75 C9 00           3007 	mov	_TMR2CF,#0x00
                           3008 ;	../src/projectSpecificHardwareInterface_C8051F040.c:671: RCAP2L = ucLowCaptureByte;
   2054 75 CA D1           3009 	mov	_RCAP2L,#0xD1
                           3010 ;	../src/projectSpecificHardwareInterface_C8051F040.c:672: RCAP2H = ucHighCaptureByte;
   2057 75 CB FF           3011 	mov	_RCAP2H,#0xFF
                           3012 ;	../src/projectSpecificHardwareInterface_C8051F040.c:675: TMR2L = ucLowCaptureByte;
   205A 75 CC D1           3013 	mov	_TMR2L,#0xD1
                           3014 ;	../src/projectSpecificHardwareInterface_C8051F040.c:676: TMR2H = ucHighCaptureByte;
   205D 75 CD FF           3015 	mov	_TMR2H,#0xFF
                           3016 ;	../src/projectSpecificHardwareInterface_C8051F040.c:679: IE |= portTIMER_2_INTERRUPT_ENABLE;
   2060 43 A8 20           3017 	orl	_IE,#0x20
                           3018 ;	../src/projectSpecificHardwareInterface_C8051F040.c:682: TMR2CN = portENABLE_TIMER ;
   2063 75 C8 06           3019 	mov	_TMR2CN,#0x06
                           3020 ;	../src/projectSpecificHardwareInterface_C8051F040.c:685: SFRPAGE	= 1 ;
   2066 75 84 01           3021 	mov	_SFRPAGE,#0x01
                           3022 ;	../src/projectSpecificHardwareInterface_C8051F040.c:686: TMR3CF	= 0x0A ;
   2069 75 C9 0A           3023 	mov	_TMR3CF,#0x0A
                           3024 ;	../src/projectSpecificHardwareInterface_C8051F040.c:688: RCAP3L	= 0xCE ;	// 120kHz on boost boards
   206C 75 CA CE           3025 	mov	_RCAP3L,#0xCE
                           3026 ;	../src/projectSpecificHardwareInterface_C8051F040.c:689: RCAP3H	= 0xFF ;	// 120kHz on boost boards
   206F 75 CB FF           3027 	mov	_RCAP3H,#0xFF
                           3028 ;	../src/projectSpecificHardwareInterface_C8051F040.c:691: TMR3L	= 0xF0 ;
   2072 75 CC F0           3029 	mov	_TMR3L,#0xF0
                           3030 ;	../src/projectSpecificHardwareInterface_C8051F040.c:692: TMR3H	= 0xFF ;
   2075 75 CD FF           3031 	mov	_TMR3H,#0xFF
                           3032 ;	../src/projectSpecificHardwareInterface_C8051F040.c:693: TMR3CN	= 0x04 ;
   2078 75 C8 04           3033 	mov	_TMR3CN,#0x04
                           3034 ;	../src/projectSpecificHardwareInterface_C8051F040.c:697: SFRPAGE = ucOriginalSFRPage;
   207B 90 0A 2C           3035 	mov	dptr,#_prvSetupTimerInterrupt_ucOriginalSFRPage_1_1
   207E E0                 3036 	movx	a,@dptr
   207F F5 84              3037 	mov	_SFRPAGE,a
   2081 22                 3038 	ret
                           3039 ;------------------------------------------------------------
                           3040 ;Allocation info for local variables in function 'addTickCounter'
                           3041 ;------------------------------------------------------------
                           3042 ;pointerToIncrement        Allocated with name '_addTickCounter_pointerToIncrement_1_1'
                           3043 ;i                         Allocated with name '_addTickCounter_i_1_1'
                           3044 ;sloc0                     Allocated with name '_addTickCounter_sloc0_1_0'
                           3045 ;------------------------------------------------------------
                           3046 ;	../src/projectSpecificHardwareInterface_C8051F040.c:705: void addTickCounter(							unsigned short* pointerToIncrement)
                           3047 ;	-----------------------------------------
                           3048 ;	 function addTickCounter
                           3049 ;	-----------------------------------------
   2082                    3050 _addTickCounter:
   2082 AA F0              3051 	mov	r2,b
   2084 AB 83              3052 	mov	r3,dph
   2086 E5 82              3053 	mov	a,dpl
   2088 90 0A 4B           3054 	mov	dptr,#_addTickCounter_pointerToIncrement_1_1
   208B F0                 3055 	movx	@dptr,a
   208C A3                 3056 	inc	dptr
   208D EB                 3057 	mov	a,r3
   208E F0                 3058 	movx	@dptr,a
   208F A3                 3059 	inc	dptr
   2090 EA                 3060 	mov	a,r2
   2091 F0                 3061 	movx	@dptr,a
                           3062 ;	../src/projectSpecificHardwareInterface_C8051F040.c:709: for( i = 0 ; i < configNUMBER_OF_TICK_COUNTERS ; i++ )
   2092 7A 00              3063 	mov	r2,#0x00
   2094                    3064 00105$:
   2094 BA 0A 00           3065 	cjne	r2,#0x0A,00115$
   2097                    3066 00115$:
   2097 50 4B              3067 	jnc	00109$
                           3068 ;	../src/projectSpecificHardwareInterface_C8051F040.c:713: if(tickCounterToIncrement[i] == pointerToIncrement)
   2099 EA                 3069 	mov	a,r2
   209A 75 F0 03           3070 	mov	b,#0x03
   209D A4                 3071 	mul	ab
   209E 24 2D              3072 	add	a,#_tickCounterToIncrement
   20A0 FB                 3073 	mov	r3,a
   20A1 E4                 3074 	clr	a
   20A2 34 0A              3075 	addc	a,#(_tickCounterToIncrement >> 8)
   20A4 FC                 3076 	mov	r4,a
   20A5 8B 82              3077 	mov	dpl,r3
   20A7 8C 83              3078 	mov	dph,r4
   20A9 E0                 3079 	movx	a,@dptr
   20AA FD                 3080 	mov	r5,a
   20AB A3                 3081 	inc	dptr
   20AC E0                 3082 	movx	a,@dptr
   20AD FE                 3083 	mov	r6,a
   20AE A3                 3084 	inc	dptr
   20AF E0                 3085 	movx	a,@dptr
   20B0 FF                 3086 	mov	r7,a
   20B1 90 0A 4B           3087 	mov	dptr,#_addTickCounter_pointerToIncrement_1_1
   20B4 E0                 3088 	movx	a,@dptr
   20B5 F5 18              3089 	mov	_addTickCounter_sloc0_1_0,a
   20B7 A3                 3090 	inc	dptr
   20B8 E0                 3091 	movx	a,@dptr
   20B9 F5 19              3092 	mov	(_addTickCounter_sloc0_1_0 + 1),a
   20BB A3                 3093 	inc	dptr
   20BC E0                 3094 	movx	a,@dptr
   20BD F5 1A              3095 	mov	(_addTickCounter_sloc0_1_0 + 2),a
   20BF ED                 3096 	mov	a,r5
   20C0 B5 18 09           3097 	cjne	a,_addTickCounter_sloc0_1_0,00117$
   20C3 EE                 3098 	mov	a,r6
   20C4 B5 19 05           3099 	cjne	a,(_addTickCounter_sloc0_1_0 + 1),00117$
   20C7 EF                 3100 	mov	a,r7
   20C8 B5 1A 01           3101 	cjne	a,(_addTickCounter_sloc0_1_0 + 2),00117$
   20CB 22                 3102 	ret
   20CC                    3103 00117$:
                           3104 ;	../src/projectSpecificHardwareInterface_C8051F040.c:718: if(tickCounterToIncrement[i] == 0)
   20CC ED                 3105 	mov	a,r5
   20CD 4E                 3106 	orl	a,r6
   20CE 4F                 3107 	orl	a,r7
   20CF 70 10              3108 	jnz	00107$
                           3109 ;	../src/projectSpecificHardwareInterface_C8051F040.c:720: tickCounterToIncrement[i] = pointerToIncrement ;
   20D1 8B 82              3110 	mov	dpl,r3
   20D3 8C 83              3111 	mov	dph,r4
   20D5 E5 18              3112 	mov	a,_addTickCounter_sloc0_1_0
   20D7 F0                 3113 	movx	@dptr,a
   20D8 A3                 3114 	inc	dptr
   20D9 E5 19              3115 	mov	a,(_addTickCounter_sloc0_1_0 + 1)
   20DB F0                 3116 	movx	@dptr,a
   20DC A3                 3117 	inc	dptr
   20DD E5 1A              3118 	mov	a,(_addTickCounter_sloc0_1_0 + 2)
   20DF F0                 3119 	movx	@dptr,a
                           3120 ;	../src/projectSpecificHardwareInterface_C8051F040.c:722: break ;
   20E0 22                 3121 	ret
   20E1                    3122 00107$:
                           3123 ;	../src/projectSpecificHardwareInterface_C8051F040.c:709: for( i = 0 ; i < configNUMBER_OF_TICK_COUNTERS ; i++ )
   20E1 0A                 3124 	inc	r2
   20E2 80 B0              3125 	sjmp	00105$
   20E4                    3126 00109$:
   20E4 22                 3127 	ret
                           3128 ;------------------------------------------------------------
                           3129 ;Allocation info for local variables in function 'vTimer2ISR'
                           3130 ;------------------------------------------------------------
                           3131 ;i                         Allocated with name '_vTimer2ISR_i_1_1'
                           3132 ;------------------------------------------------------------
                           3133 ;	../src/projectSpecificHardwareInterface_C8051F040.c:731: void vTimer2ISR( void ) interrupt 5
                           3134 ;	-----------------------------------------
                           3135 ;	 function vTimer2ISR
                           3136 ;	-----------------------------------------
   20E5                    3137 _vTimer2ISR:
   20E5 C0 22              3138 	push	bits
   20E7 C0 E0              3139 	push	acc
   20E9 C0 F0              3140 	push	b
   20EB C0 82              3141 	push	dpl
   20ED C0 83              3142 	push	dph
   20EF C0 02              3143 	push	(0+2)
   20F1 C0 03              3144 	push	(0+3)
   20F3 C0 04              3145 	push	(0+4)
   20F5 C0 05              3146 	push	(0+5)
   20F7 C0 06              3147 	push	(0+6)
   20F9 C0 07              3148 	push	(0+7)
   20FB C0 00              3149 	push	(0+0)
   20FD C0 01              3150 	push	(0+1)
   20FF C0 D0              3151 	push	psw
   2101 75 D0 00           3152 	mov	psw,#0x00
                           3153 ;	../src/projectSpecificHardwareInterface_C8051F040.c:735: for( i = 0 ; i < configNUMBER_OF_TICK_COUNTERS ; i++ )
   2104 7A 00              3154 	mov	r2,#0x00
   2106                    3155 00103$:
   2106 BA 0A 00           3156 	cjne	r2,#0x0A,00113$
   2109                    3157 00113$:
   2109 50 41              3158 	jnc	00106$
                           3159 ;	../src/projectSpecificHardwareInterface_C8051F040.c:737: if(tickCounterToIncrement[i])
   210B EA                 3160 	mov	a,r2
   210C 75 F0 03           3161 	mov	b,#0x03
   210F A4                 3162 	mul	ab
   2110 24 2D              3163 	add	a,#_tickCounterToIncrement
   2112 F5 82              3164 	mov	dpl,a
   2114 E4                 3165 	clr	a
   2115 34 0A              3166 	addc	a,#(_tickCounterToIncrement >> 8)
   2117 F5 83              3167 	mov	dph,a
   2119 E0                 3168 	movx	a,@dptr
   211A FB                 3169 	mov	r3,a
   211B A3                 3170 	inc	dptr
   211C E0                 3171 	movx	a,@dptr
   211D FC                 3172 	mov	r4,a
   211E A3                 3173 	inc	dptr
   211F E0                 3174 	movx	a,@dptr
   2120 FD                 3175 	mov	r5,a
   2121 EB                 3176 	mov	a,r3
   2122 4C                 3177 	orl	a,r4
   2123 4D                 3178 	orl	a,r5
   2124 60 23              3179 	jz	00105$
                           3180 ;	../src/projectSpecificHardwareInterface_C8051F040.c:739: *tickCounterToIncrement[i] += 1 ;
   2126 8B 82              3181 	mov	dpl,r3
   2128 8C 83              3182 	mov	dph,r4
   212A 8D F0              3183 	mov	b,r5
   212C 12 3F 9A           3184 	lcall	__gptrget
   212F FE                 3185 	mov	r6,a
   2130 A3                 3186 	inc	dptr
   2131 12 3F 9A           3187 	lcall	__gptrget
   2134 FF                 3188 	mov	r7,a
   2135 0E                 3189 	inc	r6
   2136 BE 00 01           3190 	cjne	r6,#0x00,00116$
   2139 0F                 3191 	inc	r7
   213A                    3192 00116$:
   213A 8B 82              3193 	mov	dpl,r3
   213C 8C 83              3194 	mov	dph,r4
   213E 8D F0              3195 	mov	b,r5
   2140 EE                 3196 	mov	a,r6
   2141 12 33 6E           3197 	lcall	__gptrput
   2144 A3                 3198 	inc	dptr
   2145 EF                 3199 	mov	a,r7
   2146 12 33 6E           3200 	lcall	__gptrput
   2149                    3201 00105$:
                           3202 ;	../src/projectSpecificHardwareInterface_C8051F040.c:735: for( i = 0 ; i < configNUMBER_OF_TICK_COUNTERS ; i++ )
   2149 0A                 3203 	inc	r2
   214A 80 BA              3204 	sjmp	00103$
   214C                    3205 00106$:
                           3206 ;	../src/projectSpecificHardwareInterface_C8051F040.c:743: taskSwitcherTickHook() ;
   214C 12 17 28           3207 	lcall	_taskSwitcherTickHook
                           3208 ;	../src/projectSpecificHardwareInterface_C8051F040.c:745: portCLEAR_INTERRUPT_FLAG() ;
   214F 53 C8 7F           3209 	anl	_TMR2CN,#0x7F
   2152 D0 D0              3210 	pop	psw
   2154 D0 01              3211 	pop	(0+1)
   2156 D0 00              3212 	pop	(0+0)
   2158 D0 07              3213 	pop	(0+7)
   215A D0 06              3214 	pop	(0+6)
   215C D0 05              3215 	pop	(0+5)
   215E D0 04              3216 	pop	(0+4)
   2160 D0 03              3217 	pop	(0+3)
   2162 D0 02              3218 	pop	(0+2)
   2164 D0 83              3219 	pop	dph
   2166 D0 82              3220 	pop	dpl
   2168 D0 F0              3221 	pop	b
   216A D0 E0              3222 	pop	acc
   216C D0 22              3223 	pop	bits
   216E 32                 3224 	reti
                           3225 	.area CSEG    (CODE)
                           3226 	.area CONST   (CODE)
   42F4                    3227 __str_0:
   42F4 34 74 68 20 47 65  3228 	.ascii "4th Generation state machine test started."
        6E 65 72 61 74 69
        6F 6E 20 73 74 61
        74 65 20 6D 61 63
        68 69 6E 65 20 74
        65 73 74 20 73 74
        61 72 74 65 64 2E
   431E 00                 3229 	.db 0x00
   431F                    3230 __str_1:
   431F 6C 6F 6F 70        3231 	.ascii "loop"
   4323 00                 3232 	.db 0x00
                           3233 	.area XINIT   (CODE)
   4587                    3234 __xinit__countdown:
   4587 05 00              3235 	.byte #0x05,#0x00
                           3236 	.area CABS    (ABS,CODE)
