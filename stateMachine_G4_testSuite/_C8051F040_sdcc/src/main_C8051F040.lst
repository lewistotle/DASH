                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.0 #5416 (Mar 22 2009) (MINGW32)
                              4 ; This file was generated Mon Dec 28 11:21:21 2009
                              5 ;--------------------------------------------------------
                              6 	.module main_C8051F040
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _vTimer2ISR
                             13 	.globl _addTickCounter
                             14 	.globl _IsFull
                             15 	.globl _IsEmpty
                             16 	.globl _main
                             17 	.globl _P7_7
                             18 	.globl _P7_6
                             19 	.globl _P7_5
                             20 	.globl _P7_4
                             21 	.globl _P7_3
                             22 	.globl _P7_2
                             23 	.globl _P7_1
                             24 	.globl _P7_0
                             25 	.globl _CANTEST
                             26 	.globl _CANCCE
                             27 	.globl _CANDAR
                             28 	.globl _CANIF
                             29 	.globl _CANEIE
                             30 	.globl _CANSIE
                             31 	.globl _CANIE
                             32 	.globl _CANINIT
                             33 	.globl _SPIF
                             34 	.globl _WCOL
                             35 	.globl _MODF
                             36 	.globl _RXOVRN
                             37 	.globl _NSSMD1
                             38 	.globl _NSSMD0
                             39 	.globl _TXBMT
                             40 	.globl _SPIEN
                             41 	.globl _P6_7
                             42 	.globl _P6_6
                             43 	.globl _P6_5
                             44 	.globl _P6_4
                             45 	.globl _P6_3
                             46 	.globl _P6_2
                             47 	.globl _P6_1
                             48 	.globl _P6_0
                             49 	.globl _AD2EN
                             50 	.globl _AD2TM
                             51 	.globl _AD2INT
                             52 	.globl _AD2BUSY
                             53 	.globl _AD2CM2
                             54 	.globl _AD2CM1
                             55 	.globl _AD2CM0
                             56 	.globl _AD2WINT
                             57 	.globl _AD0EN
                             58 	.globl _AD0TM
                             59 	.globl _AD0INT
                             60 	.globl _AD0BUSY
                             61 	.globl _AD0CM1
                             62 	.globl _AD0CM0
                             63 	.globl _AD0WINT
                             64 	.globl _AD0LJST
                             65 	.globl _P5_7
                             66 	.globl _P5_6
                             67 	.globl _P5_5
                             68 	.globl _P5_4
                             69 	.globl _P5_3
                             70 	.globl _P5_2
                             71 	.globl _P5_1
                             72 	.globl _P5_0
                             73 	.globl _CF
                             74 	.globl _CR
                             75 	.globl _CCF5
                             76 	.globl _CCF4
                             77 	.globl _CCF3
                             78 	.globl _CCF2
                             79 	.globl _CCF1
                             80 	.globl _CCF0
                             81 	.globl _CY
                             82 	.globl _AC
                             83 	.globl _F0
                             84 	.globl _RS1
                             85 	.globl _RS0
                             86 	.globl _OV
                             87 	.globl _F1
                             88 	.globl _P
                             89 	.globl _P4_7
                             90 	.globl _P4_6
                             91 	.globl _P4_5
                             92 	.globl _P4_4
                             93 	.globl _P4_3
                             94 	.globl _P4_2
                             95 	.globl _P4_1
                             96 	.globl _P4_0
                             97 	.globl _TF4
                             98 	.globl _EXF4
                             99 	.globl _EXEN4
                            100 	.globl _TR4
                            101 	.globl _CT4
                            102 	.globl _CPRL4
                            103 	.globl _TF3
                            104 	.globl _EXF3
                            105 	.globl _EXEN3
                            106 	.globl _TR3
                            107 	.globl _CT3
                            108 	.globl _CPRL3
                            109 	.globl _TF2
                            110 	.globl _EXF2
                            111 	.globl _EXEN2
                            112 	.globl _TR2
                            113 	.globl _CT2
                            114 	.globl _CPRL2
                            115 	.globl _CANBOFF
                            116 	.globl _CANEWARN
                            117 	.globl _CANEPASS
                            118 	.globl _CANRXOK
                            119 	.globl _CANTXOK
                            120 	.globl _BUSY
                            121 	.globl _ENSMB
                            122 	.globl _STA
                            123 	.globl _STO
                            124 	.globl _SI
                            125 	.globl _AA
                            126 	.globl _SMBFTE
                            127 	.globl _SMBTOE
                            128 	.globl _PT2
                            129 	.globl _PS
                            130 	.globl _PS0
                            131 	.globl _PT1
                            132 	.globl _PX1
                            133 	.globl _PT0
                            134 	.globl _PX0
                            135 	.globl _P3_7
                            136 	.globl _P3_6
                            137 	.globl _P3_5
                            138 	.globl _P3_4
                            139 	.globl _P3_3
                            140 	.globl _P3_2
                            141 	.globl _P3_1
                            142 	.globl _P3_0
                            143 	.globl _EA
                            144 	.globl _ET2
                            145 	.globl _ES
                            146 	.globl _ES0
                            147 	.globl _ET1
                            148 	.globl _EX1
                            149 	.globl _ET0
                            150 	.globl _EX0
                            151 	.globl _P2_7
                            152 	.globl _P2_6
                            153 	.globl _P2_5
                            154 	.globl _P2_4
                            155 	.globl _P2_3
                            156 	.globl _P2_2
                            157 	.globl _P2_1
                            158 	.globl _P2_0
                            159 	.globl _S1MODE
                            160 	.globl _MCE1
                            161 	.globl _REN1
                            162 	.globl _TB81
                            163 	.globl _RB81
                            164 	.globl _TI1
                            165 	.globl _RI1
                            166 	.globl _SM00
                            167 	.globl _SM10
                            168 	.globl _SM20
                            169 	.globl _REN
                            170 	.globl _REN0
                            171 	.globl _TB80
                            172 	.globl _RB80
                            173 	.globl _TI
                            174 	.globl _TI0
                            175 	.globl _RI
                            176 	.globl _RI0
                            177 	.globl _P1_7
                            178 	.globl _P1_6
                            179 	.globl _P1_5
                            180 	.globl _P1_4
                            181 	.globl _P1_3
                            182 	.globl _P1_2
                            183 	.globl _P1_1
                            184 	.globl _P1_0
                            185 	.globl _CP2EN
                            186 	.globl _CP2OUT
                            187 	.globl _CP2RIF
                            188 	.globl _CP2FIF
                            189 	.globl _CP2HYP1
                            190 	.globl _CP2HYP0
                            191 	.globl _CP2HYN1
                            192 	.globl _CP2HYN0
                            193 	.globl _CP1EN
                            194 	.globl _CP1OUT
                            195 	.globl _CP1RIF
                            196 	.globl _CP1FIF
                            197 	.globl _CP1HYP1
                            198 	.globl _CP1HYP0
                            199 	.globl _CP1HYN1
                            200 	.globl _CP1HYN0
                            201 	.globl _CP0EN
                            202 	.globl _CP0OUT
                            203 	.globl _CP0RIF
                            204 	.globl _CP0FIF
                            205 	.globl _CP0HYP1
                            206 	.globl _CP0HYP0
                            207 	.globl _CP0HYN1
                            208 	.globl _CP0HYN0
                            209 	.globl _TF1
                            210 	.globl _TR1
                            211 	.globl _TF0
                            212 	.globl _TR0
                            213 	.globl _IE1
                            214 	.globl _IT1
                            215 	.globl _IE0
                            216 	.globl _IT0
                            217 	.globl _P0_7
                            218 	.globl _P0_6
                            219 	.globl _P0_5
                            220 	.globl _P0_4
                            221 	.globl _P0_3
                            222 	.globl _P0_2
                            223 	.globl _P0_1
                            224 	.globl _P0_0
                            225 	.globl _P7
                            226 	.globl _P6
                            227 	.globl _XBR3
                            228 	.globl _XBR2
                            229 	.globl _XBR1
                            230 	.globl _XBR0
                            231 	.globl _P5
                            232 	.globl _P4
                            233 	.globl _FLACL
                            234 	.globl _P3MDIN
                            235 	.globl _P2MDIN
                            236 	.globl _P1MDIN
                            237 	.globl _P3MDOUT
                            238 	.globl _P2MDOUT
                            239 	.globl _P1MDOUT
                            240 	.globl _P0MDOUT
                            241 	.globl _P7MDOUT
                            242 	.globl _P6MDOUT
                            243 	.globl _P5MDOUT
                            244 	.globl _P4MDOUT
                            245 	.globl _CLKSEL
                            246 	.globl _SFRPGCN
                            247 	.globl _OSCXCN
                            248 	.globl _OSCICL
                            249 	.globl _OSCICN
                            250 	.globl _CPT2MD
                            251 	.globl _CPT2CN
                            252 	.globl _ADC2CN
                            253 	.globl _TMR4H
                            254 	.globl _TMR4L
                            255 	.globl _RCAP4H
                            256 	.globl _RCAP4L
                            257 	.globl _TMR4CF
                            258 	.globl _TMR4CN
                            259 	.globl _ADC2LT
                            260 	.globl _ADC2GT
                            261 	.globl _ADC2
                            262 	.globl _ADC2CF
                            263 	.globl _AMX2SL
                            264 	.globl _AMX2CF
                            265 	.globl _CPT1MD
                            266 	.globl _CPT1CN
                            267 	.globl _CAN0CN
                            268 	.globl _CAN0TST
                            269 	.globl _CAN0ADR
                            270 	.globl _CAN0DATH
                            271 	.globl _CAN0DATL
                            272 	.globl _DAC1CN
                            273 	.globl _DAC1H
                            274 	.globl _DAC1L
                            275 	.globl _TMR3H
                            276 	.globl _TMR3L
                            277 	.globl _RCAP3H
                            278 	.globl _RCAP3L
                            279 	.globl _TMR3CF
                            280 	.globl _TMR3CN
                            281 	.globl _CAN0STA
                            282 	.globl _SBUF1
                            283 	.globl _SCON1
                            284 	.globl _CPT0MD
                            285 	.globl _CPT0CN
                            286 	.globl _PCA0CPH1
                            287 	.globl _PCA0CPL1
                            288 	.globl _PCA0CPH0
                            289 	.globl _PCA0CPL0
                            290 	.globl _PCA0H
                            291 	.globl _PCA0L
                            292 	.globl _SPI0CN
                            293 	.globl _RSTSRC
                            294 	.globl _PCA0CPH4
                            295 	.globl _PCA0CPL4
                            296 	.globl _PCA0CPH3
                            297 	.globl _PCA0CPL3
                            298 	.globl _PCA0CPH2
                            299 	.globl _PCA0CPL2
                            300 	.globl _ADC0CN
                            301 	.globl _PCA0CPH5
                            302 	.globl _PCA0CPL5
                            303 	.globl _PCA0CPM5
                            304 	.globl _PCA0CPM4
                            305 	.globl _PCA0CPM3
                            306 	.globl _PCA0CPM2
                            307 	.globl _PCA0CPM1
                            308 	.globl _PCA0CPM0
                            309 	.globl _PCA0MD
                            310 	.globl _PCA0CN
                            311 	.globl _HVA0CN
                            312 	.globl _DAC0CN
                            313 	.globl _DAC0H
                            314 	.globl _DAC0L
                            315 	.globl _REF0CN
                            316 	.globl _SMB0CR
                            317 	.globl _TH2
                            318 	.globl _TMR2H
                            319 	.globl _TL2
                            320 	.globl _TMR2L
                            321 	.globl _RCAP2H
                            322 	.globl _RCAP2L
                            323 	.globl _TMR2CF
                            324 	.globl _TMR2CN
                            325 	.globl _ADC0LTH
                            326 	.globl _ADC0LTL
                            327 	.globl _ADC0GTH
                            328 	.globl _ADC0GTL
                            329 	.globl _SMB0ADR
                            330 	.globl _SMB0DAT
                            331 	.globl _SMB0STA
                            332 	.globl _SMB0CN
                            333 	.globl _ADC0H
                            334 	.globl _ADC0L
                            335 	.globl _AMX0PRT
                            336 	.globl _ADC0CF
                            337 	.globl _AMX0SL
                            338 	.globl _AMX0CF
                            339 	.globl _SADEN0
                            340 	.globl _FLSCL
                            341 	.globl _SADDR0
                            342 	.globl _EMI0CF
                            343 	.globl __XPAGE
                            344 	.globl _EMI0CN
                            345 	.globl _EMI0TC
                            346 	.globl _SPI0CKR
                            347 	.globl _SPI0DAT
                            348 	.globl _SPI0CFG
                            349 	.globl _SBUF
                            350 	.globl _SBUF0
                            351 	.globl _SCON
                            352 	.globl _SCON0
                            353 	.globl _SSTA0
                            354 	.globl _PSCTL
                            355 	.globl _CKCON
                            356 	.globl _TH1
                            357 	.globl _TH0
                            358 	.globl _TL1
                            359 	.globl _TL0
                            360 	.globl _TMOD
                            361 	.globl _TCON
                            362 	.globl _WDTCN
                            363 	.globl _EIP2
                            364 	.globl _EIP1
                            365 	.globl _B
                            366 	.globl _EIE2
                            367 	.globl _EIE1
                            368 	.globl _ACC
                            369 	.globl _PSW
                            370 	.globl _IP
                            371 	.globl _P3
                            372 	.globl _IE
                            373 	.globl _P2
                            374 	.globl _P1
                            375 	.globl _PCON
                            376 	.globl _SFRLAST
                            377 	.globl _SFRNEXT
                            378 	.globl _SFRPAGE
                            379 	.globl _DPH
                            380 	.globl _DPL
                            381 	.globl _SP
                            382 	.globl _P0
                            383 	.globl _tickCounterToIncrement
                            384 	.globl _task_UART_gets_projectSpecific_PARM_3
                            385 	.globl _task_UART_gets_projectSpecific_PARM_2
                            386 	.globl _task_UART_puts_projectSpecific_PARM_2
                            387 	.globl _task_UART_putchar_projectSpecific_PARM_2
                            388 	.globl _Succ_PARM_2
                            389 	.globl _UARTtempBuffer
                            390 	.globl _pwm_setDutyCycleAsPercentage_projectSpecific_PARM_2
                            391 	.globl _pwm_adjustDutyCycle_projectSpecific_PARM_2
                            392 	.globl _pwm_setDutyCycle_projectSpecific_PARM_2
                            393 	.globl _taskSwitcherTickHook
                            394 	.globl _gpio_init_projectSpecific
                            395 	.globl _pwm_init_projectSpecific
                            396 	.globl _pwm_incrementDutyCycle_projectSpecific
                            397 	.globl _pwm_decrementDutyCycle_projectSpecific
                            398 	.globl _pwm_getDutyCycle_projectSpecific
                            399 	.globl _pwm_setDutyCycle_projectSpecific
                            400 	.globl _pwm_adjustDutyCycle_projectSpecific
                            401 	.globl _pwm_setDutyCycleAsPercentage_projectSpecific
                            402 	.globl _pwm_getDutyCycleAsPercentage_projectSpecific
                            403 	.globl _task_UART_init_projectSpecific
                            404 	.globl _task_UART_core_projectSpecific
                            405 	.globl _task_UART_putchar_projectSpecific
                            406 	.globl _task_UART_puts_projectSpecific
                            407 	.globl _task_UART_getchar_projectSpecific
                            408 	.globl _task_UART_gets_projectSpecific
                            409 	.globl _task_UART_isLineReady
                            410 	.globl _UART0_Init
                            411 	.globl _UART1_Init
                            412 	.globl _putchar
                            413 ;--------------------------------------------------------
                            414 ; special function registers
                            415 ;--------------------------------------------------------
                            416 	.area RSEG    (DATA)
                    0080    417 _P0	=	0x0080
                    0081    418 _SP	=	0x0081
                    0082    419 _DPL	=	0x0082
                    0083    420 _DPH	=	0x0083
                    0084    421 _SFRPAGE	=	0x0084
                    0085    422 _SFRNEXT	=	0x0085
                    0086    423 _SFRLAST	=	0x0086
                    0087    424 _PCON	=	0x0087
                    0090    425 _P1	=	0x0090
                    00A0    426 _P2	=	0x00a0
                    00A8    427 _IE	=	0x00a8
                    00B0    428 _P3	=	0x00b0
                    00B8    429 _IP	=	0x00b8
                    00D0    430 _PSW	=	0x00d0
                    00E0    431 _ACC	=	0x00e0
                    00E6    432 _EIE1	=	0x00e6
                    00E7    433 _EIE2	=	0x00e7
                    00F0    434 _B	=	0x00f0
                    00F6    435 _EIP1	=	0x00f6
                    00F7    436 _EIP2	=	0x00f7
                    00FF    437 _WDTCN	=	0x00ff
                    0088    438 _TCON	=	0x0088
                    0089    439 _TMOD	=	0x0089
                    008A    440 _TL0	=	0x008a
                    008B    441 _TL1	=	0x008b
                    008C    442 _TH0	=	0x008c
                    008D    443 _TH1	=	0x008d
                    008E    444 _CKCON	=	0x008e
                    008F    445 _PSCTL	=	0x008f
                    0091    446 _SSTA0	=	0x0091
                    0098    447 _SCON0	=	0x0098
                    0098    448 _SCON	=	0x0098
                    0099    449 _SBUF0	=	0x0099
                    0099    450 _SBUF	=	0x0099
                    009A    451 _SPI0CFG	=	0x009a
                    009B    452 _SPI0DAT	=	0x009b
                    009D    453 _SPI0CKR	=	0x009d
                    00A1    454 _EMI0TC	=	0x00a1
                    00A2    455 _EMI0CN	=	0x00a2
                    00A2    456 __XPAGE	=	0x00a2
                    00A3    457 _EMI0CF	=	0x00a3
                    00A9    458 _SADDR0	=	0x00a9
                    00B7    459 _FLSCL	=	0x00b7
                    00B9    460 _SADEN0	=	0x00b9
                    00BA    461 _AMX0CF	=	0x00ba
                    00BB    462 _AMX0SL	=	0x00bb
                    00BC    463 _ADC0CF	=	0x00bc
                    00BD    464 _AMX0PRT	=	0x00bd
                    00BE    465 _ADC0L	=	0x00be
                    00BF    466 _ADC0H	=	0x00bf
                    00C0    467 _SMB0CN	=	0x00c0
                    00C1    468 _SMB0STA	=	0x00c1
                    00C2    469 _SMB0DAT	=	0x00c2
                    00C3    470 _SMB0ADR	=	0x00c3
                    00C4    471 _ADC0GTL	=	0x00c4
                    00C5    472 _ADC0GTH	=	0x00c5
                    00C6    473 _ADC0LTL	=	0x00c6
                    00C7    474 _ADC0LTH	=	0x00c7
                    00C8    475 _TMR2CN	=	0x00c8
                    00C9    476 _TMR2CF	=	0x00c9
                    00CA    477 _RCAP2L	=	0x00ca
                    00CB    478 _RCAP2H	=	0x00cb
                    00CC    479 _TMR2L	=	0x00cc
                    00CC    480 _TL2	=	0x00cc
                    00CD    481 _TMR2H	=	0x00cd
                    00CD    482 _TH2	=	0x00cd
                    00CF    483 _SMB0CR	=	0x00cf
                    00D1    484 _REF0CN	=	0x00d1
                    00D2    485 _DAC0L	=	0x00d2
                    00D3    486 _DAC0H	=	0x00d3
                    00D4    487 _DAC0CN	=	0x00d4
                    00D6    488 _HVA0CN	=	0x00d6
                    00D8    489 _PCA0CN	=	0x00d8
                    00D9    490 _PCA0MD	=	0x00d9
                    00DA    491 _PCA0CPM0	=	0x00da
                    00DB    492 _PCA0CPM1	=	0x00db
                    00DC    493 _PCA0CPM2	=	0x00dc
                    00DD    494 _PCA0CPM3	=	0x00dd
                    00DE    495 _PCA0CPM4	=	0x00de
                    00DF    496 _PCA0CPM5	=	0x00df
                    00E1    497 _PCA0CPL5	=	0x00e1
                    00E2    498 _PCA0CPH5	=	0x00e2
                    00E8    499 _ADC0CN	=	0x00e8
                    00E9    500 _PCA0CPL2	=	0x00e9
                    00EA    501 _PCA0CPH2	=	0x00ea
                    00EB    502 _PCA0CPL3	=	0x00eb
                    00EC    503 _PCA0CPH3	=	0x00ec
                    00ED    504 _PCA0CPL4	=	0x00ed
                    00EE    505 _PCA0CPH4	=	0x00ee
                    00EF    506 _RSTSRC	=	0x00ef
                    00F8    507 _SPI0CN	=	0x00f8
                    00F9    508 _PCA0L	=	0x00f9
                    00FA    509 _PCA0H	=	0x00fa
                    00FB    510 _PCA0CPL0	=	0x00fb
                    00FC    511 _PCA0CPH0	=	0x00fc
                    00FD    512 _PCA0CPL1	=	0x00fd
                    00FE    513 _PCA0CPH1	=	0x00fe
                    0088    514 _CPT0CN	=	0x0088
                    0089    515 _CPT0MD	=	0x0089
                    0098    516 _SCON1	=	0x0098
                    0099    517 _SBUF1	=	0x0099
                    00C0    518 _CAN0STA	=	0x00c0
                    00C8    519 _TMR3CN	=	0x00c8
                    00C9    520 _TMR3CF	=	0x00c9
                    00CA    521 _RCAP3L	=	0x00ca
                    00CB    522 _RCAP3H	=	0x00cb
                    00CC    523 _TMR3L	=	0x00cc
                    00CD    524 _TMR3H	=	0x00cd
                    00D2    525 _DAC1L	=	0x00d2
                    00D3    526 _DAC1H	=	0x00d3
                    00D4    527 _DAC1CN	=	0x00d4
                    00D8    528 _CAN0DATL	=	0x00d8
                    00D9    529 _CAN0DATH	=	0x00d9
                    00DA    530 _CAN0ADR	=	0x00da
                    00DB    531 _CAN0TST	=	0x00db
                    00F8    532 _CAN0CN	=	0x00f8
                    0088    533 _CPT1CN	=	0x0088
                    0089    534 _CPT1MD	=	0x0089
                    00BA    535 _AMX2CF	=	0x00ba
                    00BB    536 _AMX2SL	=	0x00bb
                    00BC    537 _ADC2CF	=	0x00bc
                    00BE    538 _ADC2	=	0x00be
                    00C4    539 _ADC2GT	=	0x00c4
                    00C6    540 _ADC2LT	=	0x00c6
                    00C8    541 _TMR4CN	=	0x00c8
                    00C9    542 _TMR4CF	=	0x00c9
                    00CA    543 _RCAP4L	=	0x00ca
                    00CB    544 _RCAP4H	=	0x00cb
                    00CC    545 _TMR4L	=	0x00cc
                    00CD    546 _TMR4H	=	0x00cd
                    00E8    547 _ADC2CN	=	0x00e8
                    0088    548 _CPT2CN	=	0x0088
                    0089    549 _CPT2MD	=	0x0089
                    008A    550 _OSCICN	=	0x008a
                    008B    551 _OSCICL	=	0x008b
                    008C    552 _OSCXCN	=	0x008c
                    0096    553 _SFRPGCN	=	0x0096
                    0097    554 _CLKSEL	=	0x0097
                    009C    555 _P4MDOUT	=	0x009c
                    009D    556 _P5MDOUT	=	0x009d
                    009E    557 _P6MDOUT	=	0x009e
                    009F    558 _P7MDOUT	=	0x009f
                    00A4    559 _P0MDOUT	=	0x00a4
                    00A5    560 _P1MDOUT	=	0x00a5
                    00A6    561 _P2MDOUT	=	0x00a6
                    00A7    562 _P3MDOUT	=	0x00a7
                    00AD    563 _P1MDIN	=	0x00ad
                    00AE    564 _P2MDIN	=	0x00ae
                    00AF    565 _P3MDIN	=	0x00af
                    00B7    566 _FLACL	=	0x00b7
                    00C8    567 _P4	=	0x00c8
                    00D8    568 _P5	=	0x00d8
                    00E1    569 _XBR0	=	0x00e1
                    00E2    570 _XBR1	=	0x00e2
                    00E3    571 _XBR2	=	0x00e3
                    00E4    572 _XBR3	=	0x00e4
                    00E8    573 _P6	=	0x00e8
                    00F8    574 _P7	=	0x00f8
                            575 ;--------------------------------------------------------
                            576 ; special function bits
                            577 ;--------------------------------------------------------
                            578 	.area RSEG    (DATA)
                    0080    579 _P0_0	=	0x0080
                    0081    580 _P0_1	=	0x0081
                    0082    581 _P0_2	=	0x0082
                    0083    582 _P0_3	=	0x0083
                    0084    583 _P0_4	=	0x0084
                    0085    584 _P0_5	=	0x0085
                    0086    585 _P0_6	=	0x0086
                    0087    586 _P0_7	=	0x0087
                    0088    587 _IT0	=	0x0088
                    0089    588 _IE0	=	0x0089
                    008A    589 _IT1	=	0x008a
                    008B    590 _IE1	=	0x008b
                    008C    591 _TR0	=	0x008c
                    008D    592 _TF0	=	0x008d
                    008E    593 _TR1	=	0x008e
                    008F    594 _TF1	=	0x008f
                    0088    595 _CP0HYN0	=	0x0088
                    0089    596 _CP0HYN1	=	0x0089
                    008A    597 _CP0HYP0	=	0x008a
                    008B    598 _CP0HYP1	=	0x008b
                    008C    599 _CP0FIF	=	0x008c
                    008D    600 _CP0RIF	=	0x008d
                    008E    601 _CP0OUT	=	0x008e
                    008F    602 _CP0EN	=	0x008f
                    0088    603 _CP1HYN0	=	0x0088
                    0089    604 _CP1HYN1	=	0x0089
                    008A    605 _CP1HYP0	=	0x008a
                    008B    606 _CP1HYP1	=	0x008b
                    008C    607 _CP1FIF	=	0x008c
                    008D    608 _CP1RIF	=	0x008d
                    008E    609 _CP1OUT	=	0x008e
                    008F    610 _CP1EN	=	0x008f
                    0088    611 _CP2HYN0	=	0x0088
                    0089    612 _CP2HYN1	=	0x0089
                    008A    613 _CP2HYP0	=	0x008a
                    008B    614 _CP2HYP1	=	0x008b
                    008C    615 _CP2FIF	=	0x008c
                    008D    616 _CP2RIF	=	0x008d
                    008E    617 _CP2OUT	=	0x008e
                    008F    618 _CP2EN	=	0x008f
                    0090    619 _P1_0	=	0x0090
                    0091    620 _P1_1	=	0x0091
                    0092    621 _P1_2	=	0x0092
                    0093    622 _P1_3	=	0x0093
                    0094    623 _P1_4	=	0x0094
                    0095    624 _P1_5	=	0x0095
                    0096    625 _P1_6	=	0x0096
                    0097    626 _P1_7	=	0x0097
                    0098    627 _RI0	=	0x0098
                    0098    628 _RI	=	0x0098
                    0099    629 _TI0	=	0x0099
                    0099    630 _TI	=	0x0099
                    009A    631 _RB80	=	0x009a
                    009B    632 _TB80	=	0x009b
                    009C    633 _REN0	=	0x009c
                    009C    634 _REN	=	0x009c
                    009D    635 _SM20	=	0x009d
                    009E    636 _SM10	=	0x009e
                    009F    637 _SM00	=	0x009f
                    0098    638 _RI1	=	0x0098
                    0099    639 _TI1	=	0x0099
                    009A    640 _RB81	=	0x009a
                    009B    641 _TB81	=	0x009b
                    009C    642 _REN1	=	0x009c
                    009D    643 _MCE1	=	0x009d
                    009F    644 _S1MODE	=	0x009f
                    00A0    645 _P2_0	=	0x00a0
                    00A1    646 _P2_1	=	0x00a1
                    00A2    647 _P2_2	=	0x00a2
                    00A3    648 _P2_3	=	0x00a3
                    00A4    649 _P2_4	=	0x00a4
                    00A5    650 _P2_5	=	0x00a5
                    00A6    651 _P2_6	=	0x00a6
                    00A7    652 _P2_7	=	0x00a7
                    00A8    653 _EX0	=	0x00a8
                    00A9    654 _ET0	=	0x00a9
                    00AA    655 _EX1	=	0x00aa
                    00AB    656 _ET1	=	0x00ab
                    00AC    657 _ES0	=	0x00ac
                    00AC    658 _ES	=	0x00ac
                    00AD    659 _ET2	=	0x00ad
                    00AF    660 _EA	=	0x00af
                    00B0    661 _P3_0	=	0x00b0
                    00B1    662 _P3_1	=	0x00b1
                    00B2    663 _P3_2	=	0x00b2
                    00B3    664 _P3_3	=	0x00b3
                    00B4    665 _P3_4	=	0x00b4
                    00B5    666 _P3_5	=	0x00b5
                    00B6    667 _P3_6	=	0x00b6
                    00B7    668 _P3_7	=	0x00b7
                    00B8    669 _PX0	=	0x00b8
                    00B9    670 _PT0	=	0x00b9
                    00BA    671 _PX1	=	0x00ba
                    00BB    672 _PT1	=	0x00bb
                    00BC    673 _PS0	=	0x00bc
                    00BC    674 _PS	=	0x00bc
                    00BD    675 _PT2	=	0x00bd
                    00C0    676 _SMBTOE	=	0x00c0
                    00C1    677 _SMBFTE	=	0x00c1
                    00C2    678 _AA	=	0x00c2
                    00C3    679 _SI	=	0x00c3
                    00C4    680 _STO	=	0x00c4
                    00C5    681 _STA	=	0x00c5
                    00C6    682 _ENSMB	=	0x00c6
                    00C7    683 _BUSY	=	0x00c7
                    00C3    684 _CANTXOK	=	0x00c3
                    00C4    685 _CANRXOK	=	0x00c4
                    00C5    686 _CANEPASS	=	0x00c5
                    00C6    687 _CANEWARN	=	0x00c6
                    00C7    688 _CANBOFF	=	0x00c7
                    00C8    689 _CPRL2	=	0x00c8
                    00C9    690 _CT2	=	0x00c9
                    00CA    691 _TR2	=	0x00ca
                    00CB    692 _EXEN2	=	0x00cb
                    00CE    693 _EXF2	=	0x00ce
                    00CF    694 _TF2	=	0x00cf
                    00C8    695 _CPRL3	=	0x00c8
                    00C9    696 _CT3	=	0x00c9
                    00CA    697 _TR3	=	0x00ca
                    00CB    698 _EXEN3	=	0x00cb
                    00CE    699 _EXF3	=	0x00ce
                    00CF    700 _TF3	=	0x00cf
                    00C8    701 _CPRL4	=	0x00c8
                    00C9    702 _CT4	=	0x00c9
                    00CA    703 _TR4	=	0x00ca
                    00CB    704 _EXEN4	=	0x00cb
                    00CE    705 _EXF4	=	0x00ce
                    00CF    706 _TF4	=	0x00cf
                    00C8    707 _P4_0	=	0x00c8
                    00C9    708 _P4_1	=	0x00c9
                    00CA    709 _P4_2	=	0x00ca
                    00CB    710 _P4_3	=	0x00cb
                    00CC    711 _P4_4	=	0x00cc
                    00CD    712 _P4_5	=	0x00cd
                    00CE    713 _P4_6	=	0x00ce
                    00CF    714 _P4_7	=	0x00cf
                    00D0    715 _P	=	0x00d0
                    00D1    716 _F1	=	0x00d1
                    00D2    717 _OV	=	0x00d2
                    00D3    718 _RS0	=	0x00d3
                    00D4    719 _RS1	=	0x00d4
                    00D5    720 _F0	=	0x00d5
                    00D6    721 _AC	=	0x00d6
                    00D7    722 _CY	=	0x00d7
                    00D8    723 _CCF0	=	0x00d8
                    00D9    724 _CCF1	=	0x00d9
                    00DA    725 _CCF2	=	0x00da
                    00DB    726 _CCF3	=	0x00db
                    00DC    727 _CCF4	=	0x00dc
                    00DD    728 _CCF5	=	0x00dd
                    00DE    729 _CR	=	0x00de
                    00DF    730 _CF	=	0x00df
                    00D8    731 _P5_0	=	0x00d8
                    00D9    732 _P5_1	=	0x00d9
                    00DA    733 _P5_2	=	0x00da
                    00DB    734 _P5_3	=	0x00db
                    00DC    735 _P5_4	=	0x00dc
                    00DD    736 _P5_5	=	0x00dd
                    00DE    737 _P5_6	=	0x00de
                    00DF    738 _P5_7	=	0x00df
                    00E8    739 _AD0LJST	=	0x00e8
                    00E9    740 _AD0WINT	=	0x00e9
                    00EA    741 _AD0CM0	=	0x00ea
                    00EB    742 _AD0CM1	=	0x00eb
                    00EC    743 _AD0BUSY	=	0x00ec
                    00ED    744 _AD0INT	=	0x00ed
                    00EE    745 _AD0TM	=	0x00ee
                    00EF    746 _AD0EN	=	0x00ef
                    00E8    747 _AD2WINT	=	0x00e8
                    00E9    748 _AD2CM0	=	0x00e9
                    00EA    749 _AD2CM1	=	0x00ea
                    00EB    750 _AD2CM2	=	0x00eb
                    00EC    751 _AD2BUSY	=	0x00ec
                    00ED    752 _AD2INT	=	0x00ed
                    00EE    753 _AD2TM	=	0x00ee
                    00EF    754 _AD2EN	=	0x00ef
                    00E8    755 _P6_0	=	0x00e8
                    00E9    756 _P6_1	=	0x00e9
                    00EA    757 _P6_2	=	0x00ea
                    00EB    758 _P6_3	=	0x00eb
                    00EC    759 _P6_4	=	0x00ec
                    00ED    760 _P6_5	=	0x00ed
                    00EE    761 _P6_6	=	0x00ee
                    00EF    762 _P6_7	=	0x00ef
                    00F8    763 _SPIEN	=	0x00f8
                    00F9    764 _TXBMT	=	0x00f9
                    00FA    765 _NSSMD0	=	0x00fa
                    00FB    766 _NSSMD1	=	0x00fb
                    00FC    767 _RXOVRN	=	0x00fc
                    00FD    768 _MODF	=	0x00fd
                    00FE    769 _WCOL	=	0x00fe
                    00FF    770 _SPIF	=	0x00ff
                    00F8    771 _CANINIT	=	0x00f8
                    00F9    772 _CANIE	=	0x00f9
                    00FA    773 _CANSIE	=	0x00fa
                    00FB    774 _CANEIE	=	0x00fb
                    00FC    775 _CANIF	=	0x00fc
                    00FD    776 _CANDAR	=	0x00fd
                    00FE    777 _CANCCE	=	0x00fe
                    00FF    778 _CANTEST	=	0x00ff
                    00F8    779 _P7_0	=	0x00f8
                    00F9    780 _P7_1	=	0x00f9
                    00FA    781 _P7_2	=	0x00fa
                    00FB    782 _P7_3	=	0x00fb
                    00FC    783 _P7_4	=	0x00fc
                    00FD    784 _P7_5	=	0x00fd
                    00FE    785 _P7_6	=	0x00fe
                    00FF    786 _P7_7	=	0x00ff
                            787 ;--------------------------------------------------------
                            788 ; overlayable register banks
                            789 ;--------------------------------------------------------
                            790 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     791 	.ds 8
                            792 ;--------------------------------------------------------
                            793 ; overlayable bit register bank
                            794 ;--------------------------------------------------------
                            795 	.area BIT_BANK	(REL,OVR,DATA)
   0000                     796 bits:
   0000                     797 	.ds 1
                    8000    798 	b0 = bits[0]
                    8100    799 	b1 = bits[1]
                    8200    800 	b2 = bits[2]
                    8300    801 	b3 = bits[3]
                    8400    802 	b4 = bits[4]
                    8500    803 	b5 = bits[5]
                    8600    804 	b6 = bits[6]
                    8700    805 	b7 = bits[7]
                            806 ;--------------------------------------------------------
                            807 ; internal ram data
                            808 ;--------------------------------------------------------
                            809 	.area DSEG    (DATA)
   0000                     810 _task_UART_core_projectSpecific_sloc0_1_0:
   0000                     811 	.ds 1
   0001                     812 _task_UART_core_projectSpecific_sloc1_1_0:
   0001                     813 	.ds 3
   0004                     814 _task_UART_core_projectSpecific_sloc2_1_0:
   0004                     815 	.ds 2
   0006                     816 _task_UART_core_projectSpecific_sloc3_1_0:
   0006                     817 	.ds 3
   0009                     818 _task_UART_getchar_projectSpecific_sloc0_1_0:
   0009                     819 	.ds 3
   000C                     820 _task_UART_getchar_projectSpecific_sloc1_1_0:
   000C                     821 	.ds 2
   000E                     822 _task_UART_getchar_projectSpecific_sloc2_1_0:
   000E                     823 	.ds 3
   0011                     824 _task_UART_gets_projectSpecific_sloc0_1_0:
   0011                     825 	.ds 1
   0012                     826 _task_UART_gets_projectSpecific_sloc1_1_0:
   0012                     827 	.ds 2
                            828 ;--------------------------------------------------------
                            829 ; overlayable items in internal ram 
                            830 ;--------------------------------------------------------
                            831 	.area	OSEG    (OVR,DATA)
   0000                     832 _addTickCounter_sloc0_1_0::
   0000                     833 	.ds 3
                            834 ;--------------------------------------------------------
                            835 ; Stack segment in internal ram 
                            836 ;--------------------------------------------------------
                            837 	.area	SSEG	(DATA)
   0000                     838 __start__stack:
   0000                     839 	.ds	1
                            840 
                            841 ;--------------------------------------------------------
                            842 ; indirectly addressable internal ram data
                            843 ;--------------------------------------------------------
                            844 	.area ISEG    (DATA)
                            845 ;--------------------------------------------------------
                            846 ; absolute internal ram data
                            847 ;--------------------------------------------------------
                            848 	.area IABS    (ABS,DATA)
                            849 	.area IABS    (ABS,DATA)
                            850 ;--------------------------------------------------------
                            851 ; bit data
                            852 ;--------------------------------------------------------
                            853 	.area BSEG    (BIT)
   0000                     854 _timeForTickProcessing:
   0000                     855 	.ds 1
   0001                     856 _main_processed_2_4:
   0001                     857 	.ds 1
   0002                     858 _pwm_init_projectSpecific_initialized_1_1:
   0002                     859 	.ds 1
   0003                     860 _task_UART_init_projectSpecific_timer1initialized_1_1:
   0003                     861 	.ds 1
   0004                     862 _task_UART_isLineReady_sloc0_1_0:
   0004                     863 	.ds 1
                            864 ;--------------------------------------------------------
                            865 ; paged external ram data
                            866 ;--------------------------------------------------------
                            867 	.area PSEG    (PAG,XDATA)
                            868 ;--------------------------------------------------------
                            869 ; external ram data
                            870 ;--------------------------------------------------------
                            871 	.area XSEG    (XDATA)
   0000                     872 _pwm_init_projectSpecific_channelNumber_1_1:
   0000                     873 	.ds 1
   0001                     874 _pwm_setDutyCycle_projectSpecific_PARM_2:
   0001                     875 	.ds 1
   0002                     876 _pwm_adjustDutyCycle_projectSpecific_PARM_2:
   0002                     877 	.ds 1
   0003                     878 _pwm_setDutyCycleAsPercentage_projectSpecific_PARM_2:
   0003                     879 	.ds 1
   0004                     880 _UARTtempBuffer::
   0004                     881 	.ds 1100
   0450                     882 _IsEmpty_Q_1_1:
   0450                     883 	.ds 3
   0453                     884 _IsFull_Q_1_1:
   0453                     885 	.ds 3
   0456                     886 _Succ_PARM_2:
   0456                     887 	.ds 3
   0459                     888 _Succ_Value_1_1:
   0459                     889 	.ds 2
   045B                     890 _transmitBuffer:
   045B                     891 	.ds 1101
   08A8                     892 _receiveBuffer:
   08A8                     893 	.ds 11
   08B3                     894 _transmitBuffers:
   08B3                     895 	.ds 11
   08BE                     896 _receiveBuffers:
   08BE                     897 	.ds 11
   08C9                     898 _charSent:
   08C9                     899 	.ds 1
   08CA                     900 _lineReady:
   08CA                     901 	.ds 1
   08CB                     902 _task_UART_init_projectSpecific_channelNumber_1_1:
   08CB                     903 	.ds 1
   08CC                     904 _task_UART_core_projectSpecific_channelNumber_1_1:
   08CC                     905 	.ds 1
   08CD                     906 _task_UART_core_projectSpecific_Q_4_4:
   08CD                     907 	.ds 3
   08D0                     908 _task_UART_putchar_projectSpecific_PARM_2:
   08D0                     909 	.ds 1
   08D1                     910 _task_UART_putchar_projectSpecific_channelNumber_1_1:
   08D1                     911 	.ds 1
   08D2                     912 _task_UART_putchar_projectSpecific_Q_2_2:
   08D2                     913 	.ds 3
   08D5                     914 _task_UART_puts_projectSpecific_PARM_2:
   08D5                     915 	.ds 3
   08D8                     916 _task_UART_puts_projectSpecific_channelNumber_1_1:
   08D8                     917 	.ds 1
   08D9                     918 _task_UART_getchar_projectSpecific_channelNumber_1_1:
   08D9                     919 	.ds 1
   08DA                     920 _task_UART_getchar_projectSpecific_Q_2_2:
   08DA                     921 	.ds 3
   08DD                     922 _task_UART_gets_projectSpecific_PARM_2:
   08DD                     923 	.ds 3
   08E0                     924 _task_UART_gets_projectSpecific_PARM_3:
   08E0                     925 	.ds 2
   08E2                     926 _task_UART_gets_projectSpecific_channelNumber_1_1:
   08E2                     927 	.ds 1
   08E3                     928 _task_UART_isLineReady_channelNumber_1_1:
   08E3                     929 	.ds 1
   08E4                     930 _putchar_c_1_1:
   08E4                     931 	.ds 1
   08E5                     932 _prvSetupTimerInterrupt_ucOriginalSFRPage_1_1:
   08E5                     933 	.ds 1
   08E6                     934 _tickCounterToIncrement::
   08E6                     935 	.ds 30
   0904                     936 _addTickCounter_pointerToIncrement_1_1:
   0904                     937 	.ds 3
                            938 ;--------------------------------------------------------
                            939 ; absolute external ram data
                            940 ;--------------------------------------------------------
                            941 	.area XABS    (ABS,XDATA)
                            942 ;--------------------------------------------------------
                            943 ; external initialized ram data
                            944 ;--------------------------------------------------------
                            945 	.area XISEG   (XDATA)
   0000                     946 _countdown:
   0000                     947 	.ds 2
                            948 	.area HOME    (CODE)
                            949 	.area GSINIT0 (CODE)
                            950 	.area GSINIT1 (CODE)
                            951 	.area GSINIT2 (CODE)
                            952 	.area GSINIT3 (CODE)
                            953 	.area GSINIT4 (CODE)
                            954 	.area GSINIT5 (CODE)
                            955 	.area GSINIT  (CODE)
                            956 	.area GSFINAL (CODE)
                            957 	.area CSEG    (CODE)
                            958 ;--------------------------------------------------------
                            959 ; interrupt vector 
                            960 ;--------------------------------------------------------
                            961 	.area HOME    (CODE)
   0000                     962 __interrupt_vect:
   0000 02s00r00            963 	ljmp	__sdcc_gsinit_startup
   0003 32                  964 	reti
   0004                     965 	.ds	7
   000B 32                  966 	reti
   000C                     967 	.ds	7
   0013 32                  968 	reti
   0014                     969 	.ds	7
   001B 32                  970 	reti
   001C                     971 	.ds	7
   0023 32                  972 	reti
   0024                     973 	.ds	7
   002B 02s0Ar18            974 	ljmp	_vTimer2ISR
                            975 ;--------------------------------------------------------
                            976 ; global & static initialisations
                            977 ;--------------------------------------------------------
                            978 	.area HOME    (CODE)
                            979 	.area GSINIT  (CODE)
                            980 	.area GSFINAL (CODE)
                            981 	.area GSINIT  (CODE)
                            982 	.globl __sdcc_gsinit_startup
                            983 	.globl __sdcc_program_startup
                            984 	.globl __start__stack
                            985 	.globl __mcs51_genXINIT
                            986 	.globl __mcs51_genXRAMCLEAR
                            987 	.globl __mcs51_genRAMCLEAR
                            988 ;------------------------------------------------------------
                            989 ;Allocation info for local variables in function 'main'
                            990 ;------------------------------------------------------------
                            991 ;bomb                      Allocated with name '_main_bomb_1_1'
                            992 ;calculator                Allocated with name '_main_calculator_1_1'
                            993 ;------------------------------------------------------------
                            994 ;	../src/main_C8051F040.c:63: static bool processed = false ;
   0000 C2*01               995 	clr	_main_processed_2_4
                            996 ;------------------------------------------------------------
                            997 ;Allocation info for local variables in function 'task_UART_init_projectSpecific'
                            998 ;------------------------------------------------------------
                            999 ;channelNumber             Allocated with name '_task_UART_init_projectSpecific_channelNumber_1_1'
                           1000 ;Q                         Allocated with name '_task_UART_init_projectSpecific_Q_1_1'
                           1001 ;SFRPAGE_SAVE              Allocated with name '_task_UART_init_projectSpecific_SFRPAGE_SAVE_3_3'
                           1002 ;------------------------------------------------------------
                           1003 ;	../src/projectSpecificHardwareInterface_C8051F040.c:323: static bool	timer1initialized = false ;
   0002 C2*03              1004 	clr	_task_UART_init_projectSpecific_timer1initialized_1_1
                           1005 	.area GSFINAL (CODE)
   0000 02s00r2E           1006 	ljmp	__sdcc_program_startup
                           1007 ;--------------------------------------------------------
                           1008 ; Home
                           1009 ;--------------------------------------------------------
                           1010 	.area HOME    (CODE)
                           1011 	.area HOME    (CODE)
   002E                    1012 __sdcc_program_startup:
   002E 12s00r00           1013 	lcall	_main
                           1014 ;	return from main will lock up
   0031 80 FE              1015 	sjmp .
                           1016 ;--------------------------------------------------------
                           1017 ; code
                           1018 ;--------------------------------------------------------
                           1019 	.area CSEG    (CODE)
                           1020 ;------------------------------------------------------------
                           1021 ;Allocation info for local variables in function 'main'
                           1022 ;------------------------------------------------------------
                           1023 ;bomb                      Allocated with name '_main_bomb_1_1'
                           1024 ;calculator                Allocated with name '_main_calculator_1_1'
                           1025 ;------------------------------------------------------------
                           1026 ;	../src/main_C8051F040.c:27: void main(	void)
                           1027 ;	-----------------------------------------
                           1028 ;	 function main
                           1029 ;	-----------------------------------------
   0000                    1030 _main:
                    0002   1031 	ar2 = 0x02
                    0003   1032 	ar3 = 0x03
                    0004   1033 	ar4 = 0x04
                    0005   1034 	ar5 = 0x05
                    0006   1035 	ar6 = 0x06
                    0007   1036 	ar7 = 0x07
                    0000   1037 	ar0 = 0x00
                    0001   1038 	ar1 = 0x01
                           1039 ;	../src/main_C8051F040.c:33: WDTCN = 0xDE ;	// Disable the watchdog timer
   0000 75 FF DE           1040 	mov	_WDTCN,#0xDE
                           1041 ;	../src/main_C8051F040.c:34: WDTCN = 0xAD ;
   0003 75 FF AD           1042 	mov	_WDTCN,#0xAD
                           1043 ;	../src/main_C8051F040.c:35: WDTCN = 0xFF ;	// Disable any future ability to modify the watchdog timer
   0006 75 FF FF           1044 	mov	_WDTCN,#0xFF
                           1045 ;	../src/main_C8051F040.c:37: prvSetupSystemClock() ;
   0009 12s09r5C           1046 	lcall	_prvSetupSystemClock
                           1047 ;	../src/main_C8051F040.c:38: gpio_init() ;
   000C 12s00r5E           1048 	lcall	_gpio_init_projectSpecific
                           1049 ;	../src/main_C8051F040.c:39: pwm_init(ioMapping_PWM_TO_TICK_SYNCHRONIZER_CHANNEL) ;
   000F 75 82 00           1050 	mov	dpl,#0x00
   0012 12s00r00           1051 	lcall	_pwm_init
                           1052 ;	../src/main_C8051F040.c:40: prvSetupTimerInterrupt() ;
   0015 12s09r7B           1053 	lcall	_prvSetupTimerInterrupt
                           1054 ;	../src/main_C8051F040.c:41: task_UART_init(0) ;
   0018 75 82 00           1055 	mov	dpl,#0x00
   001B 12s00r00           1056 	lcall	_task_UART_init
                           1057 ;	../src/main_C8051F040.c:43: portENABLE_INTERRUPTS() ;
   001E D2 AF              1058 	setb	_EA
                           1059 ;	../src/main_C8051F040.c:45: puts("4th Generation state machine test started.") ;
   0020 90s00r00           1060 	mov	dptr,#__str_0
   0023 75 F0 80           1061 	mov	b,#0x80
   0026 12s00r00           1062 	lcall	_puts
                           1063 ;	../src/main_C8051F040.c:47: bomb = STATE_MACHINE_CREATE_INSTANCE_OF(timeBomb) ;
   0029 12s00r00           1064 	lcall	_createInstanceOf_timeBomb
                           1065 ;	../src/main_C8051F040.c:54: calculator = STATE_MACHINE_CREATE_INSTANCE_OF(calculator) ;
   002C 12s00r00           1066 	lcall	_createInstanceOf_calculator
   002F AA 82              1067 	mov	r2,dpl
   0031 AB 83              1068 	mov	r3,dph
   0033 AC F0              1069 	mov	r4,b
                           1070 ;	../src/main_C8051F040.c:56: if(calculator)
   0035 EA                 1071 	mov	a,r2
   0036 4B                 1072 	orl	a,r3
   0037 4C                 1073 	orl	a,r4
   0038 60 09              1074 	jz	00108$
                           1075 ;	../src/main_C8051F040.c:58: REGISTER_STATE_MACHINE(calculator) ;
   003A 8A 82              1076 	mov	dpl,r2
   003C 8B 83              1077 	mov	dph,r3
   003E 8C F0              1078 	mov	b,r4
   0040 12s00r00           1079 	lcall	_registerStateMachine
                           1080 ;	../src/main_C8051F040.c:61: while(true)
   0043                    1081 00108$:
                           1082 ;	../src/main_C8051F040.c:65: if(timeForTickProcessing)
                           1083 ;	../src/main_C8051F040.c:67: timeForTickProcessing = false ;
   0043 10*00 02           1084 	jbc	_timeForTickProcessing,00117$
   0046 80 FB              1085 	sjmp	00108$
   0048                    1086 00117$:
                           1087 ;	../src/main_C8051F040.c:71: if(!processed)
   0048 20*01 F8           1088 	jb	_main_processed_2_4,00108$
                           1089 ;	../src/main_C8051F040.c:73: processed = true ;
   004B D2*01              1090 	setb	_main_processed_2_4
                           1091 ;	../src/main_C8051F040.c:75: puts("loop") ;
   004D 90s00r2B           1092 	mov	dptr,#__str_1
   0050 75 F0 80           1093 	mov	b,#0x80
   0053 12s00r00           1094 	lcall	_puts
                           1095 ;	../src/main_C8051F040.c:77: ITERATE_ALL_STATE_MACHINES() ;
   0056 12s00r00           1096 	lcall	_iterateAllStateMachines
   0059 80 E8              1097 	sjmp	00108$
                           1098 ;------------------------------------------------------------
                           1099 ;Allocation info for local variables in function 'taskSwitcherTickHook'
                           1100 ;------------------------------------------------------------
                           1101 ;------------------------------------------------------------
                           1102 ;	../src/main_C8051F040.c:84: void taskSwitcherTickHook(	void)
                           1103 ;	-----------------------------------------
                           1104 ;	 function taskSwitcherTickHook
                           1105 ;	-----------------------------------------
   005B                    1106 _taskSwitcherTickHook:
                           1107 ;	../src/main_C8051F040.c:86: timeForTickProcessing = true ;
   005B D2*00              1108 	setb	_timeForTickProcessing
   005D 22                 1109 	ret
                           1110 ;------------------------------------------------------------
                           1111 ;Allocation info for local variables in function 'gpio_init_projectSpecific'
                           1112 ;------------------------------------------------------------
                           1113 ;SFRPAGE_SAVE              Allocated with name '_gpio_init_projectSpecific_SFRPAGE_SAVE_1_1'
                           1114 ;------------------------------------------------------------
                           1115 ;	../src/projectSpecificHardwareInterface_C8051F040.c:17: void gpio_init_projectSpecific(	void)
                           1116 ;	-----------------------------------------
                           1117 ;	 function gpio_init_projectSpecific
                           1118 ;	-----------------------------------------
   005E                    1119 _gpio_init_projectSpecific:
                           1120 ;	../src/projectSpecificHardwareInterface_C8051F040.c:21: SFRPAGE_SAVE = SFRPAGE ;
   005E AA 84              1121 	mov	r2,_SFRPAGE
                           1122 ;	../src/projectSpecificHardwareInterface_C8051F040.c:23: SFRPAGE	 = SPI0_PAGE ;
   0060 75 84 00           1123 	mov	_SFRPAGE,#0x00
                           1124 ;	../src/projectSpecificHardwareInterface_C8051F040.c:24: SPI0CN	 = 0x00 ;	// Set the SPI module into 3 pin mode so NSS doesn't get assigned to a pin in the crossbar setup below
   0063 75 F8 00           1125 	mov	_SPI0CN,#0x00
                           1126 ;	../src/projectSpecificHardwareInterface_C8051F040.c:26: SFRPAGE	 = CONFIG_PAGE ;
   0066 75 84 0F           1127 	mov	_SFRPAGE,#0x0F
                           1128 ;	../src/projectSpecificHardwareInterface_C8051F040.c:27: XBR0	 = 0x00 ;	// Start with a clean slate
   0069 75 E1 00           1129 	mov	_XBR0,#0x00
                           1130 ;	../src/projectSpecificHardwareInterface_C8051F040.c:28: XBR1	 = 0x00 ;
   006C 75 E2 00           1131 	mov	_XBR1,#0x00
                           1132 ;	../src/projectSpecificHardwareInterface_C8051F040.c:29: XBR2	 = 0x00 ;
   006F 75 E3 00           1133 	mov	_XBR2,#0x00
                           1134 ;	../src/projectSpecificHardwareInterface_C8051F040.c:30: XBR3	 = 0x00 ;
   0072 75 E4 00           1135 	mov	_XBR3,#0x00
                           1136 ;	../src/projectSpecificHardwareInterface_C8051F040.c:32: XBR0	|= 0x04 ;	// Route UART0 to P0.0-P0.1
   0075 43 E1 04           1137 	orl	_XBR0,#0x04
                           1138 ;	../src/projectSpecificHardwareInterface_C8051F040.c:33: XBR0	|= 0x02 ;	// Route SPI0 to P0.2-P0.4
   0078 43 E1 02           1139 	orl	_XBR0,#0x02
                           1140 ;	../src/projectSpecificHardwareInterface_C8051F040.c:34: XBR0	|= 0x01 ;	// Route SMB0 to P0.5-P0.6
   007B 43 E1 01           1141 	orl	_XBR0,#0x01
                           1142 ;	../src/projectSpecificHardwareInterface_C8051F040.c:35: XBR2	|= 0x04 ;	// Route UART1 to P0.7-P1.0
   007E 43 E3 04           1143 	orl	_XBR2,#0x04
                           1144 ;	../src/projectSpecificHardwareInterface_C8051F040.c:36: XBR0	|= 0x30 ;	// Route CEXn to P1.1-P1.6
   0081 43 E1 30           1145 	orl	_XBR0,#0x30
                           1146 ;	../src/projectSpecificHardwareInterface_C8051F040.c:37: XBR0	|= 0x80 ;	// Route CP0 to P1.7
   0084 43 E1 80           1147 	orl	_XBR0,#0x80
                           1148 ;	../src/projectSpecificHardwareInterface_C8051F040.c:38: XBR3	|= 0x08 ;	// Route CP2 to P2.0
   0087 43 E4 08           1149 	orl	_XBR3,#0x08
                           1150 ;	../src/projectSpecificHardwareInterface_C8051F040.c:39: XBR1	|= 0x04 ;	// Route INT0# to P2.1
   008A 43 E2 04           1151 	orl	_XBR1,#0x04
                           1152 ;	../src/projectSpecificHardwareInterface_C8051F040.c:40: XBR1	|= 0x20 ;	// Route T2 from P2.2
   008D 43 E2 20           1153 	orl	_XBR1,#0x20
                           1154 ;	../src/projectSpecificHardwareInterface_C8051F040.c:41: XBR3	|= 0x01 ;	// Route T3 to P2.3
   0090 43 E4 01           1155 	orl	_XBR3,#0x01
                           1156 ;	../src/projectSpecificHardwareInterface_C8051F040.c:43: P0MDOUT |= 0x01 ;	// Set TX0 (P0.0) to push-pull
   0093 43 A4 01           1157 	orl	_P0MDOUT,#0x01
                           1158 ;	../src/projectSpecificHardwareInterface_C8051F040.c:45: P1MDOUT	|= 0x02 ;	// Set CEX0 (P1.1) to push-pull
   0096 43 A5 02           1159 	orl	_P1MDOUT,#0x02
                           1160 ;	../src/projectSpecificHardwareInterface_C8051F040.c:46: P1MDOUT	|= 0x04 ;	// Set CEX1 (P1.2) to push-pull
   0099 43 A5 04           1161 	orl	_P1MDOUT,#0x04
                           1162 ;	../src/projectSpecificHardwareInterface_C8051F040.c:47: P1MDOUT	|= 0x08 ;	// Set CEX2 (P1.3) to push-pull
   009C 43 A5 08           1163 	orl	_P1MDOUT,#0x08
                           1164 ;	../src/projectSpecificHardwareInterface_C8051F040.c:48: P1MDOUT	|= 0x10 ;	// Set CEX3 (P1.4) to push-pull
   009F 43 A5 10           1165 	orl	_P1MDOUT,#0x10
                           1166 ;	../src/projectSpecificHardwareInterface_C8051F040.c:49: P1MDOUT	|= 0x20 ;	// Set CEX4 (P1.5) to push-pull
   00A2 43 A5 20           1167 	orl	_P1MDOUT,#0x20
                           1168 ;	../src/projectSpecificHardwareInterface_C8051F040.c:50: P1MDOUT |= 0x40 ;	// Set CEX5 (P1.6) to push-pull
   00A5 43 A5 40           1169 	orl	_P1MDOUT,#0x40
                           1170 ;	../src/projectSpecificHardwareInterface_C8051F040.c:52: P1MDOUT |= 0x80 ;	// Set TX1 (P1.7) to push-pull
   00A8 43 A5 80           1171 	orl	_P1MDOUT,#0x80
                           1172 ;	../src/projectSpecificHardwareInterface_C8051F040.c:53: P2MDOUT	&= ~0x02 ;	// Set INT0# (P2.1) to be a digital input
                           1173 ;	../src/projectSpecificHardwareInterface_C8051F040.c:54: P2MDOUT	&= ~0x04 ;	// Set T2 (P2.2) to be a digital input
   00AB 53 A6 F9           1174 	anl	_P2MDOUT,#(0xFD&0xFB)
                           1175 ;	../src/projectSpecificHardwareInterface_C8051F040.c:55: P2MDOUT	|= 0x08 ;	// Set P2.3 to be the Timer3 output pin
   00AE 43 A6 08           1176 	orl	_P2MDOUT,#0x08
                           1177 ;	../src/projectSpecificHardwareInterface_C8051F040.c:57: P3MDIN	 = 0x00 ;	// Configure as analog inputs. This forces the weak pullup for these pins to be disconnected
   00B1 75 AF 00           1178 	mov	_P3MDIN,#0x00
                           1179 ;	../src/projectSpecificHardwareInterface_C8051F040.c:58: P3MDOUT	 = 0x00 ;	// Force the output driver for these pins to open drain output mode
   00B4 75 A7 00           1180 	mov	_P3MDOUT,#0x00
                           1181 ;	../src/projectSpecificHardwareInterface_C8051F040.c:59: P3		 = 0xFF ;	// Force the input driver for these pins to high impedance
   00B7 75 B0 FF           1182 	mov	_P3,#0xFF
                           1183 ;	../src/projectSpecificHardwareInterface_C8051F040.c:61: XBR3	|= 0x80 ;	// Configure CAN TX pin (CTX) as push-pull digital output
   00BA 43 E4 80           1184 	orl	_XBR3,#0x80
                           1185 ;	../src/projectSpecificHardwareInterface_C8051F040.c:63: P4MDOUT	|= 0xFF ;	// Set LCD drive pins to push-pull
   00BD E5 9C              1186 	mov	a,_P4MDOUT
   00BF 75 9C FF           1187 	mov	_P4MDOUT,#0xFF
                           1188 ;	../src/projectSpecificHardwareInterface_C8051F040.c:64: P5MDOUT	|= 0xFF ;	// Set state machine debug pins to push-pull
   00C2 E5 9D              1189 	mov	a,_P5MDOUT
   00C4 75 9D FF           1190 	mov	_P5MDOUT,#0xFF
                           1191 ;	../src/projectSpecificHardwareInterface_C8051F040.c:65: P6MDOUT	|= 0xFF ;	// Set general purpose debug pins to push-pull
   00C7 E5 9E              1192 	mov	a,_P6MDOUT
   00C9 75 9E FF           1193 	mov	_P6MDOUT,#0xFF
                           1194 ;	../src/projectSpecificHardwareInterface_C8051F040.c:67: P4		 = 0x00 ;	// Set all debugging pins to low
   00CC 75 C8 00           1195 	mov	_P4,#0x00
                           1196 ;	../src/projectSpecificHardwareInterface_C8051F040.c:68: P5		 = 0x00 ;
   00CF 75 D8 00           1197 	mov	_P5,#0x00
                           1198 ;	../src/projectSpecificHardwareInterface_C8051F040.c:69: P6		 = 0x00 ;
   00D2 75 E8 00           1199 	mov	_P6,#0x00
                           1200 ;	../src/projectSpecificHardwareInterface_C8051F040.c:71: P2MDIN	&= 0x0F ;	// set comparator analog inputs up as per Section 17.1.5 of the C8050F040 manual
   00D5 53 AE 0F           1201 	anl	_P2MDIN,#0x0F
                           1202 ;	../src/projectSpecificHardwareInterface_C8051F040.c:72: P2MDOUT	&= 0x0F ;
   00D8 53 A6 0F           1203 	anl	_P2MDOUT,#0x0F
                           1204 ;	../src/projectSpecificHardwareInterface_C8051F040.c:73: P2		|= 0xF0 ;
   00DB 43 A0 F0           1205 	orl	_P2,#0xF0
                           1206 ;	../src/projectSpecificHardwareInterface_C8051F040.c:78: XBR2	|= 0x40 ;	// Enable Crossbar/low ports and turn on global weak pullups
   00DE 43 E3 40           1207 	orl	_XBR2,#0x40
                           1208 ;	../src/projectSpecificHardwareInterface_C8051F040.c:79: SFRPAGE	 = SFRPAGE_SAVE ;
   00E1 8A 84              1209 	mov	_SFRPAGE,r2
   00E3 22                 1210 	ret
                           1211 ;------------------------------------------------------------
                           1212 ;Allocation info for local variables in function 'pwm_init_projectSpecific'
                           1213 ;------------------------------------------------------------
                           1214 ;channelNumber             Allocated with name '_pwm_init_projectSpecific_channelNumber_1_1'
                           1215 ;SFRPAGE_save              Allocated with name '_pwm_init_projectSpecific_SFRPAGE_save_1_1'
                           1216 ;------------------------------------------------------------
                           1217 ;	../src/projectSpecificHardwareInterface_C8051F040.c:83: void pwm_init_projectSpecific(								unsigned char channelNumber)
                           1218 ;	-----------------------------------------
                           1219 ;	 function pwm_init_projectSpecific
                           1220 ;	-----------------------------------------
   00E4                    1221 _pwm_init_projectSpecific:
   00E4 E5 82              1222 	mov	a,dpl
   00E6 90s00r00           1223 	mov	dptr,#_pwm_init_projectSpecific_channelNumber_1_1
   00E9 F0                 1224 	movx	@dptr,a
                           1225 ;	../src/projectSpecificHardwareInterface_C8051F040.c:132: char		SFRPAGE_save = SFRPAGE ;	// Save current SFR Page
   00EA AA 84              1226 	mov	r2,_SFRPAGE
                           1227 ;	../src/projectSpecificHardwareInterface_C8051F040.c:134: SFRPAGE = PCA0_PAGE ;
   00EC 75 84 00           1228 	mov	_SFRPAGE,#0x00
                           1229 ;	../src/projectSpecificHardwareInterface_C8051F040.c:136: if(!initialized)
   00EF 20*02 2A           1230 	jb	_pwm_init_projectSpecific_initialized_1_1,00102$
                           1231 ;	../src/projectSpecificHardwareInterface_C8051F040.c:138: PCA0CN = 0x00 ;				// Stop counter; clear all flags
   00F2 75 D8 00           1232 	mov	_PCA0CN,#0x00
                           1233 ;	../src/projectSpecificHardwareInterface_C8051F040.c:139: PCA0MD = 0x08 ;				// Use SYSCLK as time base
   00F5 75 D9 08           1234 	mov	_PCA0MD,#0x08
                           1235 ;	../src/projectSpecificHardwareInterface_C8051F040.c:141: PCA0CPM0 = 0x00 ;			// Module 0 = Off
   00F8 75 DA 00           1236 	mov	_PCA0CPM0,#0x00
                           1237 ;	../src/projectSpecificHardwareInterface_C8051F040.c:142: PCA0CPH0 = 0x00 ;			// Configure initial PWM duty cycle = 100%. This will result in a continuously high output which, since it's active low, will disable any output.
   00FB 75 FC 00           1238 	mov	_PCA0CPH0,#0x00
                           1239 ;	../src/projectSpecificHardwareInterface_C8051F040.c:144: PCA0CPM0 = 0x00 ;			// Module 1 = Off
   00FE 75 DA 00           1240 	mov	_PCA0CPM0,#0x00
                           1241 ;	../src/projectSpecificHardwareInterface_C8051F040.c:145: PCA0CPH1 = 0x00 ;			// Configure initial PWM duty cycle = 100%. This will result in a continuously high output which, since it's active low, will disable any output.
   0101 75 FE 00           1242 	mov	_PCA0CPH1,#0x00
                           1243 ;	../src/projectSpecificHardwareInterface_C8051F040.c:147: PCA0CPM0 = 0x00 ;			// Module 2 = Off
   0104 75 DA 00           1244 	mov	_PCA0CPM0,#0x00
                           1245 ;	../src/projectSpecificHardwareInterface_C8051F040.c:148: PCA0CPH2 = 0x00 ;			// Configure initial PWM duty cycle = 100%. This will result in a continuously high output which, since it's active low, will disable any output.
   0107 75 EA 00           1246 	mov	_PCA0CPH2,#0x00
                           1247 ;	../src/projectSpecificHardwareInterface_C8051F040.c:150: PCA0CPM0 = 0x00 ;			// Module 3 = Off
   010A 75 DA 00           1248 	mov	_PCA0CPM0,#0x00
                           1249 ;	../src/projectSpecificHardwareInterface_C8051F040.c:151: PCA0CPH3 = 0x00 ;			// Configure initial PWM duty cycle = 100%. This will result in a continuously high output which, since it's active low, will disable any output.
   010D 75 EC 00           1250 	mov	_PCA0CPH3,#0x00
                           1251 ;	../src/projectSpecificHardwareInterface_C8051F040.c:153: PCA0CPM0 = 0x00 ;			// Module 4 = Off
   0110 75 DA 00           1252 	mov	_PCA0CPM0,#0x00
                           1253 ;	../src/projectSpecificHardwareInterface_C8051F040.c:154: PCA0CPH4 = 0x00 ;			// Configure initial PWM duty cycle = 100%. This will result in a continuously high output which, since it's active low, will disable any output.
   0113 75 EE 00           1254 	mov	_PCA0CPH4,#0x00
                           1255 ;	../src/projectSpecificHardwareInterface_C8051F040.c:156: PCA0CPM0 = 0x00 ;			// Module 5 = Off
   0116 75 DA 00           1256 	mov	_PCA0CPM0,#0x00
                           1257 ;	../src/projectSpecificHardwareInterface_C8051F040.c:157: PCA0CPH5 = 0x00 ;			// Configure initial PWM duty cycle = 100%. This will result in a continuously high output which, since it's active low, will disable any output.
   0119 75 E2 00           1258 	mov	_PCA0CPH5,#0x00
   011C                    1259 00102$:
                           1260 ;	../src/projectSpecificHardwareInterface_C8051F040.c:164: if(channelNumber == ioMapping_PWM_TO_TICK_SYNCHRONIZER_CHANNEL)
   011C 90s00r00           1261 	mov	dptr,#_pwm_init_projectSpecific_channelNumber_1_1
   011F E0                 1262 	movx	a,@dptr
   0120 FB                 1263 	mov	r3,a
   0121 70 06              1264 	jnz	00104$
                           1265 ;	../src/projectSpecificHardwareInterface_C8051F040.c:170: PWM_B50_MODE		= 0x42 ;						// Module 1 = 8-bit PWM mode
   0123 75 DA 42           1266 	mov	_PCA0CPM0,#0x42
                           1267 ;	../src/projectSpecificHardwareInterface_C8051F040.c:171: PWM_B50_HIGH_BYTE	= FIFTY_PERCENT_DUTY_CYCLE ;	// Configure initial PWM duty cycle = 50%
   0126 75 FC 80           1268 	mov	_PCA0CPH0,#0x80
   0129                    1269 00104$:
                           1270 ;	../src/projectSpecificHardwareInterface_C8051F040.c:174: if(!initialized)
   0129 20*02 04           1271 	jb	_pwm_init_projectSpecific_initialized_1_1,00106$
                           1272 ;	../src/projectSpecificHardwareInterface_C8051F040.c:176: initialized = true ;
   012C D2*02              1273 	setb	_pwm_init_projectSpecific_initialized_1_1
                           1274 ;	../src/projectSpecificHardwareInterface_C8051F040.c:178: CR = 1 ;					// Start PCA counter
   012E D2 DE              1275 	setb	_CR
   0130                    1276 00106$:
                           1277 ;	../src/projectSpecificHardwareInterface_C8051F040.c:181: SFRPAGE = SFRPAGE_save ;
   0130 8A 84              1278 	mov	_SFRPAGE,r2
   0132 22                 1279 	ret
                           1280 ;------------------------------------------------------------
                           1281 ;Allocation info for local variables in function 'pwm_incrementDutyCycle_projectSpecific'
                           1282 ;------------------------------------------------------------
                           1283 ;channelNumber             Allocated with name '_pwm_incrementDutyCycle_projectSpecific_channelNumber_1_1'
                           1284 ;------------------------------------------------------------
                           1285 ;	../src/projectSpecificHardwareInterface_C8051F040.c:185: void pwm_incrementDutyCycle_projectSpecific(				unsigned char channelNumber)
                           1286 ;	-----------------------------------------
                           1287 ;	 function pwm_incrementDutyCycle_projectSpecific
                           1288 ;	-----------------------------------------
   0133                    1289 _pwm_incrementDutyCycle_projectSpecific:
                           1290 ;	../src/projectSpecificHardwareInterface_C8051F040.c:187: (void)channelNumber ;	// unused at this time
   0133 22                 1291 	ret
                           1292 ;------------------------------------------------------------
                           1293 ;Allocation info for local variables in function 'pwm_decrementDutyCycle_projectSpecific'
                           1294 ;------------------------------------------------------------
                           1295 ;channelNumber             Allocated with name '_pwm_decrementDutyCycle_projectSpecific_channelNumber_1_1'
                           1296 ;------------------------------------------------------------
                           1297 ;	../src/projectSpecificHardwareInterface_C8051F040.c:191: void pwm_decrementDutyCycle_projectSpecific(				unsigned char channelNumber)
                           1298 ;	-----------------------------------------
                           1299 ;	 function pwm_decrementDutyCycle_projectSpecific
                           1300 ;	-----------------------------------------
   0134                    1301 _pwm_decrementDutyCycle_projectSpecific:
                           1302 ;	../src/projectSpecificHardwareInterface_C8051F040.c:193: (void)channelNumber ;	// unused at this time
   0134 22                 1303 	ret
                           1304 ;------------------------------------------------------------
                           1305 ;Allocation info for local variables in function 'pwm_getDutyCycle_projectSpecific'
                           1306 ;------------------------------------------------------------
                           1307 ;channelNumber             Allocated with name '_pwm_getDutyCycle_projectSpecific_channelNumber_1_1'
                           1308 ;------------------------------------------------------------
                           1309 ;	../src/projectSpecificHardwareInterface_C8051F040.c:197: uint8_t pwm_getDutyCycle_projectSpecific(					unsigned char channelNumber)
                           1310 ;	-----------------------------------------
                           1311 ;	 function pwm_getDutyCycle_projectSpecific
                           1312 ;	-----------------------------------------
   0135                    1313 _pwm_getDutyCycle_projectSpecific:
                           1314 ;	../src/projectSpecificHardwareInterface_C8051F040.c:201: return 0 ;
   0135 75 82 00           1315 	mov	dpl,#0x00
   0138 22                 1316 	ret
                           1317 ;------------------------------------------------------------
                           1318 ;Allocation info for local variables in function 'pwm_setDutyCycle_projectSpecific'
                           1319 ;------------------------------------------------------------
                           1320 ;newDutyCycle              Allocated with name '_pwm_setDutyCycle_projectSpecific_PARM_2'
                           1321 ;channelNumber             Allocated with name '_pwm_setDutyCycle_projectSpecific_channelNumber_1_1'
                           1322 ;------------------------------------------------------------
                           1323 ;	../src/projectSpecificHardwareInterface_C8051F040.c:205: void pwm_setDutyCycle_projectSpecific(						unsigned char channelNumber, uint8_t newDutyCycle)
                           1324 ;	-----------------------------------------
                           1325 ;	 function pwm_setDutyCycle_projectSpecific
                           1326 ;	-----------------------------------------
   0139                    1327 _pwm_setDutyCycle_projectSpecific:
                           1328 ;	../src/projectSpecificHardwareInterface_C8051F040.c:208: (void)newDutyCycle ;	// unused at this time
   0139 22                 1329 	ret
                           1330 ;------------------------------------------------------------
                           1331 ;Allocation info for local variables in function 'pwm_adjustDutyCycle_projectSpecific'
                           1332 ;------------------------------------------------------------
                           1333 ;dutyCycleAdjustment       Allocated with name '_pwm_adjustDutyCycle_projectSpecific_PARM_2'
                           1334 ;channelNumber             Allocated with name '_pwm_adjustDutyCycle_projectSpecific_channelNumber_1_1'
                           1335 ;------------------------------------------------------------
                           1336 ;	../src/projectSpecificHardwareInterface_C8051F040.c:212: void pwm_adjustDutyCycle_projectSpecific(					unsigned char channelNumber, int8_t dutyCycleAdjustment)
                           1337 ;	-----------------------------------------
                           1338 ;	 function pwm_adjustDutyCycle_projectSpecific
                           1339 ;	-----------------------------------------
   013A                    1340 _pwm_adjustDutyCycle_projectSpecific:
                           1341 ;	../src/projectSpecificHardwareInterface_C8051F040.c:215: (void)dutyCycleAdjustment ;	// unused at this time
   013A 22                 1342 	ret
                           1343 ;------------------------------------------------------------
                           1344 ;Allocation info for local variables in function 'pwm_setDutyCycleAsPercentage_projectSpecific'
                           1345 ;------------------------------------------------------------
                           1346 ;newDutyCycle              Allocated with name '_pwm_setDutyCycleAsPercentage_projectSpecific_PARM_2'
                           1347 ;channelNumber             Allocated with name '_pwm_setDutyCycleAsPercentage_projectSpecific_channelNumber_1_1'
                           1348 ;------------------------------------------------------------
                           1349 ;	../src/projectSpecificHardwareInterface_C8051F040.c:219: void pwm_setDutyCycleAsPercentage_projectSpecific(			unsigned char channelNumber, unsigned char newDutyCycle)
                           1350 ;	-----------------------------------------
                           1351 ;	 function pwm_setDutyCycleAsPercentage_projectSpecific
                           1352 ;	-----------------------------------------
   013B                    1353 _pwm_setDutyCycleAsPercentage_projectSpecific:
                           1354 ;	../src/projectSpecificHardwareInterface_C8051F040.c:222: (void)newDutyCycle ;		// unused at this time
   013B 22                 1355 	ret
                           1356 ;------------------------------------------------------------
                           1357 ;Allocation info for local variables in function 'pwm_getDutyCycleAsPercentage_projectSpecific'
                           1358 ;------------------------------------------------------------
                           1359 ;channelNumber             Allocated with name '_pwm_getDutyCycleAsPercentage_projectSpecific_channelNumber_1_1'
                           1360 ;currentPercentage         Allocated with name '_pwm_getDutyCycleAsPercentage_projectSpecific_currentPercentage_1_1'
                           1361 ;divisor                   Allocated with name '_pwm_getDutyCycleAsPercentage_projectSpecific_divisor_1_1'
                           1362 ;------------------------------------------------------------
                           1363 ;	../src/projectSpecificHardwareInterface_C8051F040.c:226: unsigned char pwm_getDutyCycleAsPercentage_projectSpecific(	unsigned char channelNumber)
                           1364 ;	-----------------------------------------
                           1365 ;	 function pwm_getDutyCycleAsPercentage_projectSpecific
                           1366 ;	-----------------------------------------
   013C                    1367 _pwm_getDutyCycleAsPercentage_projectSpecific:
                           1368 ;	../src/projectSpecificHardwareInterface_C8051F040.c:237: return (unsigned char)0 ;//min(currentPercentage, 100) ;
   013C 75 82 00           1369 	mov	dpl,#0x00
   013F 22                 1370 	ret
                           1371 ;------------------------------------------------------------
                           1372 ;Allocation info for local variables in function 'IsEmpty'
                           1373 ;------------------------------------------------------------
                           1374 ;Q                         Allocated with name '_IsEmpty_Q_1_1'
                           1375 ;------------------------------------------------------------
                           1376 ;	../src/projectSpecificHardwareInterface_C8051F040.c:273: unsigned char IsEmpty(QUEUE_TYPE* Q)
                           1377 ;	-----------------------------------------
                           1378 ;	 function IsEmpty
                           1379 ;	-----------------------------------------
   0140                    1380 _IsEmpty:
   0140 AA F0              1381 	mov	r2,b
   0142 AB 83              1382 	mov	r3,dph
   0144 E5 82              1383 	mov	a,dpl
   0146 90s04r50           1384 	mov	dptr,#_IsEmpty_Q_1_1
   0149 F0                 1385 	movx	@dptr,a
   014A A3                 1386 	inc	dptr
   014B EB                 1387 	mov	a,r3
   014C F0                 1388 	movx	@dptr,a
   014D A3                 1389 	inc	dptr
   014E EA                 1390 	mov	a,r2
   014F F0                 1391 	movx	@dptr,a
                           1392 ;	../src/projectSpecificHardwareInterface_C8051F040.c:275: return Q->Size == 0 ;
   0150 90s04r50           1393 	mov	dptr,#_IsEmpty_Q_1_1
   0153 E0                 1394 	movx	a,@dptr
   0154 FA                 1395 	mov	r2,a
   0155 A3                 1396 	inc	dptr
   0156 E0                 1397 	movx	a,@dptr
   0157 FB                 1398 	mov	r3,a
   0158 A3                 1399 	inc	dptr
   0159 E0                 1400 	movx	a,@dptr
   015A FC                 1401 	mov	r4,a
   015B 74 06              1402 	mov	a,#0x06
   015D 2A                 1403 	add	a,r2
   015E FA                 1404 	mov	r2,a
   015F E4                 1405 	clr	a
   0160 3B                 1406 	addc	a,r3
   0161 FB                 1407 	mov	r3,a
   0162 8A 82              1408 	mov	dpl,r2
   0164 8B 83              1409 	mov	dph,r3
   0166 8C F0              1410 	mov	b,r4
   0168 12s00r00           1411 	lcall	__gptrget
   016B FA                 1412 	mov	r2,a
   016C A3                 1413 	inc	dptr
   016D 12s00r00           1414 	lcall	__gptrget
   0170 FB                 1415 	mov	r3,a
   0171 E4                 1416 	clr	a
   0172 BA 00 04           1417 	cjne	r2,#0x00,00103$
   0175 BB 00 01           1418 	cjne	r3,#0x00,00103$
   0178 04                 1419 	inc	a
   0179                    1420 00103$:
   0179 F5 82              1421 	mov	dpl,a
   017B 22                 1422 	ret
                           1423 ;------------------------------------------------------------
                           1424 ;Allocation info for local variables in function 'IsFull'
                           1425 ;------------------------------------------------------------
                           1426 ;Q                         Allocated with name '_IsFull_Q_1_1'
                           1427 ;------------------------------------------------------------
                           1428 ;	../src/projectSpecificHardwareInterface_C8051F040.c:278: unsigned char IsFull(QUEUE_TYPE* Q)
                           1429 ;	-----------------------------------------
                           1430 ;	 function IsFull
                           1431 ;	-----------------------------------------
   017C                    1432 _IsFull:
   017C AA F0              1433 	mov	r2,b
   017E AB 83              1434 	mov	r3,dph
   0180 E5 82              1435 	mov	a,dpl
   0182 90s04r53           1436 	mov	dptr,#_IsFull_Q_1_1
   0185 F0                 1437 	movx	@dptr,a
   0186 A3                 1438 	inc	dptr
   0187 EB                 1439 	mov	a,r3
   0188 F0                 1440 	movx	@dptr,a
   0189 A3                 1441 	inc	dptr
   018A EA                 1442 	mov	a,r2
   018B F0                 1443 	movx	@dptr,a
                           1444 ;	../src/projectSpecificHardwareInterface_C8051F040.c:280: return Q->Size == Q->Capacity ;
   018C 90s04r53           1445 	mov	dptr,#_IsFull_Q_1_1
   018F E0                 1446 	movx	a,@dptr
   0190 FA                 1447 	mov	r2,a
   0191 A3                 1448 	inc	dptr
   0192 E0                 1449 	movx	a,@dptr
   0193 FB                 1450 	mov	r3,a
   0194 A3                 1451 	inc	dptr
   0195 E0                 1452 	movx	a,@dptr
   0196 FC                 1453 	mov	r4,a
   0197 74 06              1454 	mov	a,#0x06
   0199 2A                 1455 	add	a,r2
   019A FD                 1456 	mov	r5,a
   019B E4                 1457 	clr	a
   019C 3B                 1458 	addc	a,r3
   019D FE                 1459 	mov	r6,a
   019E 8C 07              1460 	mov	ar7,r4
   01A0 8D 82              1461 	mov	dpl,r5
   01A2 8E 83              1462 	mov	dph,r6
   01A4 8F F0              1463 	mov	b,r7
   01A6 12s00r00           1464 	lcall	__gptrget
   01A9 FD                 1465 	mov	r5,a
   01AA A3                 1466 	inc	dptr
   01AB 12s00r00           1467 	lcall	__gptrget
   01AE FE                 1468 	mov	r6,a
   01AF 8A 82              1469 	mov	dpl,r2
   01B1 8B 83              1470 	mov	dph,r3
   01B3 8C F0              1471 	mov	b,r4
   01B5 12s00r00           1472 	lcall	__gptrget
   01B8 FA                 1473 	mov	r2,a
   01B9 A3                 1474 	inc	dptr
   01BA 12s00r00           1475 	lcall	__gptrget
   01BD FB                 1476 	mov	r3,a
   01BE ED                 1477 	mov	a,r5
   01BF B5 02 08           1478 	cjne	a,ar2,00103$
   01C2 EE                 1479 	mov	a,r6
   01C3 B5 03 04           1480 	cjne	a,ar3,00103$
   01C6 74 01              1481 	mov	a,#0x01
   01C8 80 01              1482 	sjmp	00104$
   01CA                    1483 00103$:
   01CA E4                 1484 	clr	a
   01CB                    1485 00104$:
   01CB F5 82              1486 	mov	dpl,a
   01CD 22                 1487 	ret
                           1488 ;------------------------------------------------------------
                           1489 ;Allocation info for local variables in function 'Succ'
                           1490 ;------------------------------------------------------------
                           1491 ;Q                         Allocated with name '_Succ_PARM_2'
                           1492 ;Value                     Allocated with name '_Succ_Value_1_1'
                           1493 ;------------------------------------------------------------
                           1494 ;	../src/projectSpecificHardwareInterface_C8051F040.c:283: static unsigned short Succ(unsigned short Value, QUEUE_TYPE* Q)
                           1495 ;	-----------------------------------------
                           1496 ;	 function Succ
                           1497 ;	-----------------------------------------
   01CE                    1498 _Succ:
   01CE AA 83              1499 	mov	r2,dph
   01D0 E5 82              1500 	mov	a,dpl
   01D2 90s04r59           1501 	mov	dptr,#_Succ_Value_1_1
   01D5 F0                 1502 	movx	@dptr,a
   01D6 A3                 1503 	inc	dptr
   01D7 EA                 1504 	mov	a,r2
   01D8 F0                 1505 	movx	@dptr,a
                           1506 ;	../src/projectSpecificHardwareInterface_C8051F040.c:285: if(++Value == Q->Capacity)
   01D9 90s04r59           1507 	mov	dptr,#_Succ_Value_1_1
   01DC E0                 1508 	movx	a,@dptr
   01DD 24 01              1509 	add	a,#0x01
   01DF F0                 1510 	movx	@dptr,a
   01E0 A3                 1511 	inc	dptr
   01E1 E0                 1512 	movx	a,@dptr
   01E2 34 00              1513 	addc	a,#0x00
   01E4 F0                 1514 	movx	@dptr,a
   01E5 90s04r56           1515 	mov	dptr,#_Succ_PARM_2
   01E8 E0                 1516 	movx	a,@dptr
   01E9 FA                 1517 	mov	r2,a
   01EA A3                 1518 	inc	dptr
   01EB E0                 1519 	movx	a,@dptr
   01EC FB                 1520 	mov	r3,a
   01ED A3                 1521 	inc	dptr
   01EE E0                 1522 	movx	a,@dptr
   01EF FC                 1523 	mov	r4,a
   01F0 8A 82              1524 	mov	dpl,r2
   01F2 8B 83              1525 	mov	dph,r3
   01F4 8C F0              1526 	mov	b,r4
   01F6 12s00r00           1527 	lcall	__gptrget
   01F9 FA                 1528 	mov	r2,a
   01FA A3                 1529 	inc	dptr
   01FB 12s00r00           1530 	lcall	__gptrget
   01FE FB                 1531 	mov	r3,a
   01FF 90s04r59           1532 	mov	dptr,#_Succ_Value_1_1
   0202 E0                 1533 	movx	a,@dptr
   0203 FC                 1534 	mov	r4,a
   0204 A3                 1535 	inc	dptr
   0205 E0                 1536 	movx	a,@dptr
   0206 FD                 1537 	mov	r5,a
   0207 EC                 1538 	mov	a,r4
   0208 B5 02 0B           1539 	cjne	a,ar2,00102$
   020B ED                 1540 	mov	a,r5
   020C B5 03 07           1541 	cjne	a,ar3,00102$
                           1542 ;	../src/projectSpecificHardwareInterface_C8051F040.c:287: Value = 0 ;
   020F 90s04r59           1543 	mov	dptr,#_Succ_Value_1_1
   0212 E4                 1544 	clr	a
   0213 F0                 1545 	movx	@dptr,a
   0214 A3                 1546 	inc	dptr
   0215 F0                 1547 	movx	@dptr,a
   0216                    1548 00102$:
                           1549 ;	../src/projectSpecificHardwareInterface_C8051F040.c:290: return Value ;
   0216 90s04r59           1550 	mov	dptr,#_Succ_Value_1_1
   0219 E0                 1551 	movx	a,@dptr
   021A FA                 1552 	mov	r2,a
   021B A3                 1553 	inc	dptr
   021C E0                 1554 	movx	a,@dptr
   021D 8A 82              1555 	mov	dpl,r2
   021F F5 83              1556 	mov	dph,a
   0221 22                 1557 	ret
                           1558 ;------------------------------------------------------------
                           1559 ;Allocation info for local variables in function 'task_UART_init_projectSpecific'
                           1560 ;------------------------------------------------------------
                           1561 ;channelNumber             Allocated with name '_task_UART_init_projectSpecific_channelNumber_1_1'
                           1562 ;Q                         Allocated with name '_task_UART_init_projectSpecific_Q_1_1'
                           1563 ;SFRPAGE_SAVE              Allocated with name '_task_UART_init_projectSpecific_SFRPAGE_SAVE_3_3'
                           1564 ;------------------------------------------------------------
                           1565 ;	../src/projectSpecificHardwareInterface_C8051F040.c:321: void task_UART_init_projectSpecific(	unsigned char channelNumber)
                           1566 ;	-----------------------------------------
                           1567 ;	 function task_UART_init_projectSpecific
                           1568 ;	-----------------------------------------
   0222                    1569 _task_UART_init_projectSpecific:
   0222 E5 82              1570 	mov	a,dpl
   0224 90s08rCB           1571 	mov	dptr,#_task_UART_init_projectSpecific_channelNumber_1_1
   0227 F0                 1572 	movx	@dptr,a
                           1573 ;	../src/projectSpecificHardwareInterface_C8051F040.c:325: QUEUE_TYPE*	Q = &transmitBuffers[channelNumber] ;
   0228 90s08rCB           1574 	mov	dptr,#_task_UART_init_projectSpecific_channelNumber_1_1
   022B E0                 1575 	movx	a,@dptr
   022C FA                 1576 	mov	r2,a
   022D 75 F0 0B           1577 	mov	b,#0x0B
   0230 A4                 1578 	mul	ab
   0231 FB                 1579 	mov	r3,a
   0232 24rB3              1580 	add	a,#_transmitBuffers
   0234 FC                 1581 	mov	r4,a
   0235 E4                 1582 	clr	a
   0236 34s08              1583 	addc	a,#(_transmitBuffers >> 8)
   0238 FD                 1584 	mov	r5,a
   0239 7E 00              1585 	mov	r6,#0x00
                           1586 ;	../src/projectSpecificHardwareInterface_C8051F040.c:327: Q->Capacity	= TRANSMIT_BUFFER_SIZE ;
   023B 8C 82              1587 	mov	dpl,r4
   023D 8D 83              1588 	mov	dph,r5
   023F 8E F0              1589 	mov	b,r6
   0241 74 4C              1590 	mov	a,#0x4C
   0243 12s00r00           1591 	lcall	__gptrput
   0246 A3                 1592 	inc	dptr
   0247 74 04              1593 	mov	a,#0x04
   0249 12s00r00           1594 	lcall	__gptrput
                           1595 ;	../src/projectSpecificHardwareInterface_C8051F040.c:328: Q->Size		= 0 ;
   024C 74 06              1596 	mov	a,#0x06
   024E 2C                 1597 	add	a,r4
   024F FF                 1598 	mov	r7,a
   0250 E4                 1599 	clr	a
   0251 3D                 1600 	addc	a,r5
   0252 F8                 1601 	mov	r0,a
   0253 8E 01              1602 	mov	ar1,r6
   0255 8F 82              1603 	mov	dpl,r7
   0257 88 83              1604 	mov	dph,r0
   0259 89 F0              1605 	mov	b,r1
   025B E4                 1606 	clr	a
   025C 12s00r00           1607 	lcall	__gptrput
   025F A3                 1608 	inc	dptr
   0260 E4                 1609 	clr	a
   0261 12s00r00           1610 	lcall	__gptrput
                           1611 ;	../src/projectSpecificHardwareInterface_C8051F040.c:329: Q->Front	= 1 ;
   0264 74 02              1612 	mov	a,#0x02
   0266 2C                 1613 	add	a,r4
   0267 FF                 1614 	mov	r7,a
   0268 E4                 1615 	clr	a
   0269 3D                 1616 	addc	a,r5
   026A F8                 1617 	mov	r0,a
   026B 8E 01              1618 	mov	ar1,r6
   026D 8F 82              1619 	mov	dpl,r7
   026F 88 83              1620 	mov	dph,r0
   0271 89 F0              1621 	mov	b,r1
   0273 74 01              1622 	mov	a,#0x01
   0275 12s00r00           1623 	lcall	__gptrput
   0278 A3                 1624 	inc	dptr
   0279 E4                 1625 	clr	a
   027A 12s00r00           1626 	lcall	__gptrput
                           1627 ;	../src/projectSpecificHardwareInterface_C8051F040.c:330: Q->Rear		= 0 ;
   027D 74 04              1628 	mov	a,#0x04
   027F 2C                 1629 	add	a,r4
   0280 FF                 1630 	mov	r7,a
   0281 E4                 1631 	clr	a
   0282 3D                 1632 	addc	a,r5
   0283 F8                 1633 	mov	r0,a
   0284 8E 01              1634 	mov	ar1,r6
   0286 8F 82              1635 	mov	dpl,r7
   0288 88 83              1636 	mov	dph,r0
   028A 89 F0              1637 	mov	b,r1
   028C E4                 1638 	clr	a
   028D 12s00r00           1639 	lcall	__gptrput
   0290 A3                 1640 	inc	dptr
   0291 E4                 1641 	clr	a
   0292 12s00r00           1642 	lcall	__gptrput
                           1643 ;	../src/projectSpecificHardwareInterface_C8051F040.c:331: Q->Array	= transmitBuffer[0] ;
   0295 74 08              1644 	mov	a,#0x08
   0297 2C                 1645 	add	a,r4
   0298 FC                 1646 	mov	r4,a
   0299 E4                 1647 	clr	a
   029A 3D                 1648 	addc	a,r5
   029B FD                 1649 	mov	r5,a
   029C 8C 82              1650 	mov	dpl,r4
   029E 8D 83              1651 	mov	dph,r5
   02A0 8E F0              1652 	mov	b,r6
   02A2 74r5B              1653 	mov	a,#_transmitBuffer
   02A4 12s00r00           1654 	lcall	__gptrput
   02A7 A3                 1655 	inc	dptr
   02A8 74s04              1656 	mov	a,#(_transmitBuffer >> 8)
   02AA 12s00r00           1657 	lcall	__gptrput
   02AD A3                 1658 	inc	dptr
   02AE E4                 1659 	clr	a
   02AF 12s00r00           1660 	lcall	__gptrput
                           1661 ;	../src/projectSpecificHardwareInterface_C8051F040.c:333: Q = &receiveBuffers[channelNumber] ;
   02B2 EB                 1662 	mov	a,r3
   02B3 24rBE              1663 	add	a,#_receiveBuffers
   02B5 FB                 1664 	mov	r3,a
   02B6 E4                 1665 	clr	a
   02B7 34s08              1666 	addc	a,#(_receiveBuffers >> 8)
   02B9 FC                 1667 	mov	r4,a
   02BA 7D 00              1668 	mov	r5,#0x00
                           1669 ;	../src/projectSpecificHardwareInterface_C8051F040.c:335: Q->Capacity	= RECEIVE_BUFFER_SIZE ;
   02BC 8B 82              1670 	mov	dpl,r3
   02BE 8C 83              1671 	mov	dph,r4
   02C0 8D F0              1672 	mov	b,r5
   02C2 74 0A              1673 	mov	a,#0x0A
   02C4 12s00r00           1674 	lcall	__gptrput
   02C7 A3                 1675 	inc	dptr
   02C8 E4                 1676 	clr	a
   02C9 12s00r00           1677 	lcall	__gptrput
                           1678 ;	../src/projectSpecificHardwareInterface_C8051F040.c:336: Q->Size		= 0 ;
   02CC 74 06              1679 	mov	a,#0x06
   02CE 2B                 1680 	add	a,r3
   02CF FE                 1681 	mov	r6,a
   02D0 E4                 1682 	clr	a
   02D1 3C                 1683 	addc	a,r4
   02D2 FF                 1684 	mov	r7,a
   02D3 8D 00              1685 	mov	ar0,r5
   02D5 8E 82              1686 	mov	dpl,r6
   02D7 8F 83              1687 	mov	dph,r7
   02D9 88 F0              1688 	mov	b,r0
   02DB E4                 1689 	clr	a
   02DC 12s00r00           1690 	lcall	__gptrput
   02DF A3                 1691 	inc	dptr
   02E0 E4                 1692 	clr	a
   02E1 12s00r00           1693 	lcall	__gptrput
                           1694 ;	../src/projectSpecificHardwareInterface_C8051F040.c:337: Q->Front	= 1 ;
   02E4 74 02              1695 	mov	a,#0x02
   02E6 2B                 1696 	add	a,r3
   02E7 FE                 1697 	mov	r6,a
   02E8 E4                 1698 	clr	a
   02E9 3C                 1699 	addc	a,r4
   02EA FF                 1700 	mov	r7,a
   02EB 8D 00              1701 	mov	ar0,r5
   02ED 8E 82              1702 	mov	dpl,r6
   02EF 8F 83              1703 	mov	dph,r7
   02F1 88 F0              1704 	mov	b,r0
   02F3 74 01              1705 	mov	a,#0x01
   02F5 12s00r00           1706 	lcall	__gptrput
   02F8 A3                 1707 	inc	dptr
   02F9 E4                 1708 	clr	a
   02FA 12s00r00           1709 	lcall	__gptrput
                           1710 ;	../src/projectSpecificHardwareInterface_C8051F040.c:338: Q->Rear		= 0 ;
   02FD 74 04              1711 	mov	a,#0x04
   02FF 2B                 1712 	add	a,r3
   0300 FE                 1713 	mov	r6,a
   0301 E4                 1714 	clr	a
   0302 3C                 1715 	addc	a,r4
   0303 FF                 1716 	mov	r7,a
   0304 8D 00              1717 	mov	ar0,r5
   0306 8E 82              1718 	mov	dpl,r6
   0308 8F 83              1719 	mov	dph,r7
   030A 88 F0              1720 	mov	b,r0
   030C E4                 1721 	clr	a
   030D 12s00r00           1722 	lcall	__gptrput
   0310 A3                 1723 	inc	dptr
   0311 E4                 1724 	clr	a
   0312 12s00r00           1725 	lcall	__gptrput
                           1726 ;	../src/projectSpecificHardwareInterface_C8051F040.c:339: Q->Array	= receiveBuffer[0] ;
   0315 74 08              1727 	mov	a,#0x08
   0317 2B                 1728 	add	a,r3
   0318 FB                 1729 	mov	r3,a
   0319 E4                 1730 	clr	a
   031A 3C                 1731 	addc	a,r4
   031B FC                 1732 	mov	r4,a
   031C 8B 82              1733 	mov	dpl,r3
   031E 8C 83              1734 	mov	dph,r4
   0320 8D F0              1735 	mov	b,r5
   0322 74rA8              1736 	mov	a,#_receiveBuffer
   0324 12s00r00           1737 	lcall	__gptrput
   0327 A3                 1738 	inc	dptr
   0328 74s08              1739 	mov	a,#(_receiveBuffer >> 8)
   032A 12s00r00           1740 	lcall	__gptrput
   032D A3                 1741 	inc	dptr
   032E E4                 1742 	clr	a
   032F 12s00r00           1743 	lcall	__gptrput
                           1744 ;	../src/projectSpecificHardwareInterface_C8051F040.c:341: charSent[channelNumber]		= false ;
   0332 EA                 1745 	mov	a,r2
   0333 24rC9              1746 	add	a,#_charSent
   0335 F5 82              1747 	mov	dpl,a
   0337 E4                 1748 	clr	a
   0338 34s08              1749 	addc	a,#(_charSent >> 8)
   033A F5 83              1750 	mov	dph,a
   033C E4                 1751 	clr	a
   033D F0                 1752 	movx	@dptr,a
                           1753 ;	../src/projectSpecificHardwareInterface_C8051F040.c:342: lineReady[channelNumber]	= false ;
   033E EA                 1754 	mov	a,r2
   033F 24rCA              1755 	add	a,#_lineReady
   0341 F5 82              1756 	mov	dpl,a
   0343 E4                 1757 	clr	a
   0344 34s08              1758 	addc	a,#(_lineReady >> 8)
   0346 F5 83              1759 	mov	dph,a
   0348 E4                 1760 	clr	a
   0349 F0                 1761 	movx	@dptr,a
                           1762 ;	../src/projectSpecificHardwareInterface_C8051F040.c:344: if(!timer1initialized)
   034A 20*03 20           1763 	jb	_task_UART_init_projectSpecific_timer1initialized_1_1,00102$
                           1764 ;	../src/projectSpecificHardwareInterface_C8051F040.c:346: timer1initialized = true ;
   034D D2*03              1765 	setb	_task_UART_init_projectSpecific_timer1initialized_1_1
                           1766 ;	../src/projectSpecificHardwareInterface_C8051F040.c:348: portSET_REGISTER_GROUP(TIMER01_PAGE)
   034F AA 84              1767 	mov	r2,_SFRPAGE
   0351 75 84 00           1768 	mov	_SFRPAGE,#0x00
                           1769 ;	../src/projectSpecificHardwareInterface_C8051F040.c:351: TMOD &= 0x08 ;
   0354 53 89 08           1770 	anl	_TMOD,#0x08
                           1771 ;	../src/projectSpecificHardwareInterface_C8051F040.c:352: TMOD |= ser8BIT_WITH_RELOAD ;
   0357 43 89 20           1772 	orl	_TMOD,#0x20
                           1773 ;	../src/projectSpecificHardwareInterface_C8051F040.c:353: SSTA0 |= serSMOD ;
   035A 43 91 10           1774 	orl	_SSTA0,#0x10
                           1775 ;	../src/projectSpecificHardwareInterface_C8051F040.c:354: CKCON |= 0x10 ;
   035D 43 8E 10           1776 	orl	_CKCON,#0x10
                           1777 ;	../src/projectSpecificHardwareInterface_C8051F040.c:357: TL1 = ( unsigned char ) 0xB2 ;	// B8 = 9600 BAUD on unmoded eval boards, B2 = 9615 on 24MHz systems
   0360 75 8B B2           1778 	mov	_TL1,#0xB2
                           1779 ;	../src/projectSpecificHardwareInterface_C8051F040.c:358: TH1 = ( unsigned char ) 0xB2 ;
   0363 75 8D B2           1780 	mov	_TH1,#0xB2
                           1781 ;	../src/projectSpecificHardwareInterface_C8051F040.c:360: SCON = ser8_BIT_MODE | serRX_ENABLE ;	/* Setup the control register for standard n, 8, 1 - variable baud rate. */
   0366 75 98 50           1782 	mov	_SCON,#0x50
                           1783 ;	../src/projectSpecificHardwareInterface_C8051F040.c:362: TR1 = 1 ;							/* Start the timer. */
   0369 D2 8E              1784 	setb	_TR1
                           1785 ;	../src/projectSpecificHardwareInterface_C8051F040.c:364: portRESTORE_REGISTER_GROUP()
   036B 8A 84              1786 	mov	_SFRPAGE,r2
   036D                    1787 00102$:
                           1788 ;	../src/projectSpecificHardwareInterface_C8051F040.c:367: if(channelNumber == 0)
   036D 90s08rCB           1789 	mov	dptr,#_task_UART_init_projectSpecific_channelNumber_1_1
   0370 E0                 1790 	movx	a,@dptr
   0371 FA                 1791 	mov	r2,a
   0372 70 03              1792 	jnz	00106$
                           1793 ;	../src/projectSpecificHardwareInterface_C8051F040.c:369: UART0_Init() ;
   0374 02s09r1B           1794 	ljmp	_UART0_Init
   0377                    1795 00106$:
                           1796 ;	../src/projectSpecificHardwareInterface_C8051F040.c:371: else if(channelNumber == 1)
   0377 BA 01 03           1797 	cjne	r2,#0x01,00108$
                           1798 ;	../src/projectSpecificHardwareInterface_C8051F040.c:373: UART1_Init() ;
   037A 02s09r29           1799 	ljmp	_UART1_Init
   037D                    1800 00108$:
   037D 22                 1801 	ret
                           1802 ;------------------------------------------------------------
                           1803 ;Allocation info for local variables in function 'task_UART_core_projectSpecific'
                           1804 ;------------------------------------------------------------
                           1805 ;sloc0                     Allocated with name '_task_UART_core_projectSpecific_sloc0_1_0'
                           1806 ;sloc1                     Allocated with name '_task_UART_core_projectSpecific_sloc1_1_0'
                           1807 ;sloc2                     Allocated with name '_task_UART_core_projectSpecific_sloc2_1_0'
                           1808 ;sloc3                     Allocated with name '_task_UART_core_projectSpecific_sloc3_1_0'
                           1809 ;channelNumber             Allocated with name '_task_UART_core_projectSpecific_channelNumber_1_1'
                           1810 ;SFRPAGE_SAVE              Allocated with name '_task_UART_core_projectSpecific_SFRPAGE_SAVE_3_3'
                           1811 ;Q                         Allocated with name '_task_UART_core_projectSpecific_Q_4_4'
                           1812 ;charReceived              Allocated with name '_task_UART_core_projectSpecific_charReceived_6_6'
                           1813 ;byteToSend                Allocated with name '_task_UART_core_projectSpecific_byteToSend_5_10'
                           1814 ;------------------------------------------------------------
                           1815 ;	../src/projectSpecificHardwareInterface_C8051F040.c:382: void task_UART_core_projectSpecific(	unsigned char channelNumber)
                           1816 ;	-----------------------------------------
                           1817 ;	 function task_UART_core_projectSpecific
                           1818 ;	-----------------------------------------
   037E                    1819 _task_UART_core_projectSpecific:
   037E E5 82              1820 	mov	a,dpl
   0380 90s08rCC           1821 	mov	dptr,#_task_UART_core_projectSpecific_channelNumber_1_1
   0383 F0                 1822 	movx	@dptr,a
                           1823 ;	../src/projectSpecificHardwareInterface_C8051F040.c:384: if(channelNumber < NUMBER_OF_UARTS)
   0384 90s08rCC           1824 	mov	dptr,#_task_UART_core_projectSpecific_channelNumber_1_1
   0387 E0                 1825 	movx	a,@dptr
   0388 FA                 1826 	mov	r2,a
   0389 BA 01 00           1827 	cjne	r2,#0x01,00125$
   038C                    1828 00125$:
   038C 40 01              1829 	jc	00126$
   038E 22                 1830 	ret
   038F                    1831 00126$:
                           1832 ;	../src/projectSpecificHardwareInterface_C8051F040.c:386: portSET_REGISTER_GROUP(UART0_PAGE)
   038F AB 84              1833 	mov	r3,_SFRPAGE
   0391 75 84 00           1834 	mov	_SFRPAGE,#0x00
                           1835 ;	../src/projectSpecificHardwareInterface_C8051F040.c:388: QUEUE_TYPE*	Q = &receiveBuffers[channelNumber] ;
   0394 EA                 1836 	mov	a,r2
   0395 75 F0 0B           1837 	mov	b,#0x0B
   0398 A4                 1838 	mul	ab
   0399 24rBE              1839 	add	a,#_receiveBuffers
   039B FC                 1840 	mov	r4,a
   039C E4                 1841 	clr	a
   039D 34s08              1842 	addc	a,#(_receiveBuffers >> 8)
   039F FD                 1843 	mov	r5,a
   03A0 7E 00              1844 	mov	r6,#0x00
   03A2 90s08rCD           1845 	mov	dptr,#_task_UART_core_projectSpecific_Q_4_4
   03A5 EC                 1846 	mov	a,r4
   03A6 F0                 1847 	movx	@dptr,a
   03A7 A3                 1848 	inc	dptr
   03A8 ED                 1849 	mov	a,r5
   03A9 F0                 1850 	movx	@dptr,a
   03AA A3                 1851 	inc	dptr
   03AB EE                 1852 	mov	a,r6
   03AC F0                 1853 	movx	@dptr,a
                           1854 ;	../src/projectSpecificHardwareInterface_C8051F040.c:390: if(RI0)
   03AD 20 98 03           1855 	jb	_RI0,00127$
   03B0 02s04rC3           1856 	ljmp	00106$
   03B3                    1857 00127$:
                           1858 ;	../src/projectSpecificHardwareInterface_C8051F040.c:392: if(!IsFull(Q))
   03B3 8C 82              1859 	mov	dpl,r4
   03B5 8D 83              1860 	mov	dph,r5
   03B7 8E F0              1861 	mov	b,r6
   03B9 C0 02              1862 	push	ar2
   03BB C0 03              1863 	push	ar3
   03BD 12s01r7C           1864 	lcall	_IsFull
   03C0 E5 82              1865 	mov	a,dpl
   03C2 D0 03              1866 	pop	ar3
   03C4 D0 02              1867 	pop	ar2
   03C6 60 03              1868 	jz	00128$
   03C8 02s04rC1           1869 	ljmp	00104$
   03CB                    1870 00128$:
                           1871 ;	../src/projectSpecificHardwareInterface_C8051F040.c:394: char	charReceived = SBUF0 ;
   03CB C0 03              1872 	push	ar3
   03CD 85 99*00           1873 	mov	_task_UART_core_projectSpecific_sloc0_1_0,_SBUF0
                           1874 ;	../src/projectSpecificHardwareInterface_C8051F040.c:396: Q->Size++ ;
   03D0 90s08rCD           1875 	mov	dptr,#_task_UART_core_projectSpecific_Q_4_4
   03D3 E0                 1876 	movx	a,@dptr
   03D4 FD                 1877 	mov	r5,a
   03D5 A3                 1878 	inc	dptr
   03D6 E0                 1879 	movx	a,@dptr
   03D7 FE                 1880 	mov	r6,a
   03D8 A3                 1881 	inc	dptr
   03D9 E0                 1882 	movx	a,@dptr
   03DA FF                 1883 	mov	r7,a
   03DB 74 06              1884 	mov	a,#0x06
   03DD 2D                 1885 	add	a,r5
   03DE F5*01              1886 	mov	_task_UART_core_projectSpecific_sloc1_1_0,a
   03E0 E4                 1887 	clr	a
   03E1 3E                 1888 	addc	a,r6
   03E2 F5*02              1889 	mov	(_task_UART_core_projectSpecific_sloc1_1_0 + 1),a
   03E4 8F*03              1890 	mov	(_task_UART_core_projectSpecific_sloc1_1_0 + 2),r7
   03E6 85*01 82           1891 	mov	dpl,_task_UART_core_projectSpecific_sloc1_1_0
   03E9 85*02 83           1892 	mov	dph,(_task_UART_core_projectSpecific_sloc1_1_0 + 1)
   03EC 85*03 F0           1893 	mov	b,(_task_UART_core_projectSpecific_sloc1_1_0 + 2)
   03EF 12s00r00           1894 	lcall	__gptrget
   03F2 FC                 1895 	mov	r4,a
   03F3 A3                 1896 	inc	dptr
   03F4 12s00r00           1897 	lcall	__gptrget
   03F7 FB                 1898 	mov	r3,a
   03F8 0C                 1899 	inc	r4
   03F9 BC 00 01           1900 	cjne	r4,#0x00,00129$
   03FC 0B                 1901 	inc	r3
   03FD                    1902 00129$:
   03FD 85*01 82           1903 	mov	dpl,_task_UART_core_projectSpecific_sloc1_1_0
   0400 85*02 83           1904 	mov	dph,(_task_UART_core_projectSpecific_sloc1_1_0 + 1)
   0403 85*03 F0           1905 	mov	b,(_task_UART_core_projectSpecific_sloc1_1_0 + 2)
   0406 EC                 1906 	mov	a,r4
   0407 12s00r00           1907 	lcall	__gptrput
   040A A3                 1908 	inc	dptr
   040B EB                 1909 	mov	a,r3
   040C 12s00r00           1910 	lcall	__gptrput
                           1911 ;	../src/projectSpecificHardwareInterface_C8051F040.c:397: Q->Rear = Succ(Q->Rear, Q) ;
   040F 74 04              1912 	mov	a,#0x04
   0411 2D                 1913 	add	a,r5
   0412 F5*01              1914 	mov	_task_UART_core_projectSpecific_sloc1_1_0,a
   0414 E4                 1915 	clr	a
   0415 3E                 1916 	addc	a,r6
   0416 F5*02              1917 	mov	(_task_UART_core_projectSpecific_sloc1_1_0 + 1),a
   0418 8F*03              1918 	mov	(_task_UART_core_projectSpecific_sloc1_1_0 + 2),r7
   041A 85*01 82           1919 	mov	dpl,_task_UART_core_projectSpecific_sloc1_1_0
   041D 85*02 83           1920 	mov	dph,(_task_UART_core_projectSpecific_sloc1_1_0 + 1)
   0420 85*03 F0           1921 	mov	b,(_task_UART_core_projectSpecific_sloc1_1_0 + 2)
   0423 12s00r00           1922 	lcall	__gptrget
   0426 F9                 1923 	mov	r1,a
   0427 A3                 1924 	inc	dptr
   0428 12s00r00           1925 	lcall	__gptrget
   042B FB                 1926 	mov	r3,a
   042C 90s04r56           1927 	mov	dptr,#_Succ_PARM_2
   042F ED                 1928 	mov	a,r5
   0430 F0                 1929 	movx	@dptr,a
   0431 A3                 1930 	inc	dptr
   0432 EE                 1931 	mov	a,r6
   0433 F0                 1932 	movx	@dptr,a
   0434 A3                 1933 	inc	dptr
   0435 EF                 1934 	mov	a,r7
   0436 F0                 1935 	movx	@dptr,a
   0437 89 82              1936 	mov	dpl,r1
   0439 8B 83              1937 	mov	dph,r3
   043B C0 02              1938 	push	ar2
   043D 12s01rCE           1939 	lcall	_Succ
   0440 AB 82              1940 	mov	r3,dpl
   0442 AC 83              1941 	mov	r4,dph
   0444 D0 02              1942 	pop	ar2
   0446 85*01 82           1943 	mov	dpl,_task_UART_core_projectSpecific_sloc1_1_0
   0449 85*02 83           1944 	mov	dph,(_task_UART_core_projectSpecific_sloc1_1_0 + 1)
   044C 85*03 F0           1945 	mov	b,(_task_UART_core_projectSpecific_sloc1_1_0 + 2)
   044F EB                 1946 	mov	a,r3
   0450 12s00r00           1947 	lcall	__gptrput
   0453 A3                 1948 	inc	dptr
   0454 EC                 1949 	mov	a,r4
   0455 12s00r00           1950 	lcall	__gptrput
                           1951 ;	../src/projectSpecificHardwareInterface_C8051F040.c:398: Q->Array[Q->Rear] = charReceived ;
   0458 90s08rCD           1952 	mov	dptr,#_task_UART_core_projectSpecific_Q_4_4
   045B E0                 1953 	movx	a,@dptr
   045C FB                 1954 	mov	r3,a
   045D A3                 1955 	inc	dptr
   045E E0                 1956 	movx	a,@dptr
   045F FC                 1957 	mov	r4,a
   0460 A3                 1958 	inc	dptr
   0461 E0                 1959 	movx	a,@dptr
   0462 FD                 1960 	mov	r5,a
   0463 74 08              1961 	mov	a,#0x08
   0465 2B                 1962 	add	a,r3
   0466 FE                 1963 	mov	r6,a
   0467 E4                 1964 	clr	a
   0468 3C                 1965 	addc	a,r4
   0469 FF                 1966 	mov	r7,a
   046A 8D 00              1967 	mov	ar0,r5
   046C 8E 82              1968 	mov	dpl,r6
   046E 8F 83              1969 	mov	dph,r7
   0470 88 F0              1970 	mov	b,r0
   0472 12s00r00           1971 	lcall	__gptrget
   0475 FE                 1972 	mov	r6,a
   0476 A3                 1973 	inc	dptr
   0477 12s00r00           1974 	lcall	__gptrget
   047A FF                 1975 	mov	r7,a
   047B A3                 1976 	inc	dptr
   047C 12s00r00           1977 	lcall	__gptrget
   047F F8                 1978 	mov	r0,a
   0480 74 04              1979 	mov	a,#0x04
   0482 2B                 1980 	add	a,r3
   0483 FB                 1981 	mov	r3,a
   0484 E4                 1982 	clr	a
   0485 3C                 1983 	addc	a,r4
   0486 FC                 1984 	mov	r4,a
   0487 8B 82              1985 	mov	dpl,r3
   0489 8C 83              1986 	mov	dph,r4
   048B 8D F0              1987 	mov	b,r5
   048D 12s00r00           1988 	lcall	__gptrget
   0490 FB                 1989 	mov	r3,a
   0491 A3                 1990 	inc	dptr
   0492 12s00r00           1991 	lcall	__gptrget
   0495 FC                 1992 	mov	r4,a
   0496 EB                 1993 	mov	a,r3
   0497 2E                 1994 	add	a,r6
   0498 FE                 1995 	mov	r6,a
   0499 EC                 1996 	mov	a,r4
   049A 3F                 1997 	addc	a,r7
   049B FF                 1998 	mov	r7,a
   049C 8E 82              1999 	mov	dpl,r6
   049E 8F 83              2000 	mov	dph,r7
   04A0 88 F0              2001 	mov	b,r0
   04A2 E5*00              2002 	mov	a,_task_UART_core_projectSpecific_sloc0_1_0
   04A4 12s00r00           2003 	lcall	__gptrput
                           2004 ;	../src/projectSpecificHardwareInterface_C8051F040.c:400: if(charReceived == '\n')
   04A7 74 0A              2005 	mov	a,#0x0A
   04A9 B5*00 02           2006 	cjne	a,_task_UART_core_projectSpecific_sloc0_1_0,00130$
   04AC 80 04              2007 	sjmp	00131$
   04AE                    2008 00130$:
   04AE D0 03              2009 	pop	ar3
   04B0 80 0F              2010 	sjmp	00104$
   04B2                    2011 00131$:
   04B2 D0 03              2012 	pop	ar3
                           2013 ;	../src/projectSpecificHardwareInterface_C8051F040.c:402: lineReady[channelNumber] = true ;
   04B4 EA                 2014 	mov	a,r2
   04B5 24rCA              2015 	add	a,#_lineReady
   04B7 F5 82              2016 	mov	dpl,a
   04B9 E4                 2017 	clr	a
   04BA 34s08              2018 	addc	a,#(_lineReady >> 8)
   04BC F5 83              2019 	mov	dph,a
   04BE 74 01              2020 	mov	a,#0x01
   04C0 F0                 2021 	movx	@dptr,a
   04C1                    2022 00104$:
                           2023 ;	../src/projectSpecificHardwareInterface_C8051F040.c:406: RI0 = 0 ;
   04C1 C2 98              2024 	clr	_RI0
   04C3                    2025 00106$:
                           2026 ;	../src/projectSpecificHardwareInterface_C8051F040.c:409: Q = &transmitBuffers[channelNumber] ;
   04C3 90s08rCC           2027 	mov	dptr,#_task_UART_core_projectSpecific_channelNumber_1_1
   04C6 E0                 2028 	movx	a,@dptr
   04C7 FA                 2029 	mov	r2,a
   04C8 75 F0 0B           2030 	mov	b,#0x0B
   04CB A4                 2031 	mul	ab
   04CC 24rB3              2032 	add	a,#_transmitBuffers
   04CE FC                 2033 	mov	r4,a
   04CF E4                 2034 	clr	a
   04D0 34s08              2035 	addc	a,#(_transmitBuffers >> 8)
   04D2 FD                 2036 	mov	r5,a
   04D3 7E 00              2037 	mov	r6,#0x00
   04D5 90s08rCD           2038 	mov	dptr,#_task_UART_core_projectSpecific_Q_4_4
   04D8 EC                 2039 	mov	a,r4
   04D9 F0                 2040 	movx	@dptr,a
   04DA A3                 2041 	inc	dptr
   04DB ED                 2042 	mov	a,r5
   04DC F0                 2043 	movx	@dptr,a
   04DD A3                 2044 	inc	dptr
   04DE EE                 2045 	mov	a,r6
   04DF F0                 2046 	movx	@dptr,a
                           2047 ;	../src/projectSpecificHardwareInterface_C8051F040.c:411: if(charSent[channelNumber] == true)
   04E0 EA                 2048 	mov	a,r2
   04E1 24rC9              2049 	add	a,#_charSent
   04E3 FA                 2050 	mov	r2,a
   04E4 E4                 2051 	clr	a
   04E5 34s08              2052 	addc	a,#(_charSent >> 8)
   04E7 FF                 2053 	mov	r7,a
   04E8 8A 82              2054 	mov	dpl,r2
   04EA 8F 83              2055 	mov	dph,r7
   04EC E0                 2056 	movx	a,@dptr
   04ED F8                 2057 	mov	r0,a
   04EE B8 01 09           2058 	cjne	r0,#0x01,00111$
                           2059 ;	../src/projectSpecificHardwareInterface_C8051F040.c:413: charSent[channelNumber] = false ;
   04F1 8A 82              2060 	mov	dpl,r2
   04F3 8F 83              2061 	mov	dph,r7
   04F5 E4                 2062 	clr	a
   04F6 F0                 2063 	movx	@dptr,a
                           2064 ;	../src/projectSpecificHardwareInterface_C8051F040.c:417: while(TI0 == 0) { /* empty loop */} ;
   04F7                    2065 00107$:
   04F7 30 99 FD           2066 	jnb	_TI0,00107$
   04FA                    2067 00111$:
                           2068 ;	../src/projectSpecificHardwareInterface_C8051F040.c:420: if(!IsEmpty(Q))
   04FA 8C 82              2069 	mov	dpl,r4
   04FC 8D 83              2070 	mov	dph,r5
   04FE 8E F0              2071 	mov	b,r6
   0500 C0 03              2072 	push	ar3
   0502 12s01r40           2073 	lcall	_IsEmpty
   0505 E5 82              2074 	mov	a,dpl
   0507 D0 03              2075 	pop	ar3
   0509 60 03              2076 	jz	00135$
   050B 02s05rDF           2077 	ljmp	00113$
   050E                    2078 00135$:
                           2079 ;	../src/projectSpecificHardwareInterface_C8051F040.c:422: unsigned char byteToSend = Q->Array[Q->Front] ;
   050E C0 03              2080 	push	ar3
   0510 90s08rCD           2081 	mov	dptr,#_task_UART_core_projectSpecific_Q_4_4
   0513 E0                 2082 	movx	a,@dptr
   0514 FA                 2083 	mov	r2,a
   0515 A3                 2084 	inc	dptr
   0516 E0                 2085 	movx	a,@dptr
   0517 FC                 2086 	mov	r4,a
   0518 A3                 2087 	inc	dptr
   0519 E0                 2088 	movx	a,@dptr
   051A FD                 2089 	mov	r5,a
   051B 74 08              2090 	mov	a,#0x08
   051D 2A                 2091 	add	a,r2
   051E FE                 2092 	mov	r6,a
   051F E4                 2093 	clr	a
   0520 3C                 2094 	addc	a,r4
   0521 FF                 2095 	mov	r7,a
   0522 8D 00              2096 	mov	ar0,r5
   0524 8E 82              2097 	mov	dpl,r6
   0526 8F 83              2098 	mov	dph,r7
   0528 88 F0              2099 	mov	b,r0
   052A 12s00r00           2100 	lcall	__gptrget
   052D F5*01              2101 	mov	_task_UART_core_projectSpecific_sloc1_1_0,a
   052F A3                 2102 	inc	dptr
   0530 12s00r00           2103 	lcall	__gptrget
   0533 F5*02              2104 	mov	(_task_UART_core_projectSpecific_sloc1_1_0 + 1),a
   0535 A3                 2105 	inc	dptr
   0536 12s00r00           2106 	lcall	__gptrget
   0539 F5*03              2107 	mov	(_task_UART_core_projectSpecific_sloc1_1_0 + 2),a
   053B 74 02              2108 	mov	a,#0x02
   053D 2A                 2109 	add	a,r2
   053E F5*06              2110 	mov	_task_UART_core_projectSpecific_sloc3_1_0,a
   0540 E4                 2111 	clr	a
   0541 3C                 2112 	addc	a,r4
   0542 F5*07              2113 	mov	(_task_UART_core_projectSpecific_sloc3_1_0 + 1),a
   0544 8D*08              2114 	mov	(_task_UART_core_projectSpecific_sloc3_1_0 + 2),r5
   0546 85*06 82           2115 	mov	dpl,_task_UART_core_projectSpecific_sloc3_1_0
   0549 85*07 83           2116 	mov	dph,(_task_UART_core_projectSpecific_sloc3_1_0 + 1)
   054C 85*08 F0           2117 	mov	b,(_task_UART_core_projectSpecific_sloc3_1_0 + 2)
   054F 12s00r00           2118 	lcall	__gptrget
   0552 F5*04              2119 	mov	_task_UART_core_projectSpecific_sloc2_1_0,a
   0554 A3                 2120 	inc	dptr
   0555 12s00r00           2121 	lcall	__gptrget
   0558 F5*05              2122 	mov	(_task_UART_core_projectSpecific_sloc2_1_0 + 1),a
   055A E5*04              2123 	mov	a,_task_UART_core_projectSpecific_sloc2_1_0
   055C 25*01              2124 	add	a,_task_UART_core_projectSpecific_sloc1_1_0
   055E FF                 2125 	mov	r7,a
   055F E5*05              2126 	mov	a,(_task_UART_core_projectSpecific_sloc2_1_0 + 1)
   0561 35*02              2127 	addc	a,(_task_UART_core_projectSpecific_sloc1_1_0 + 1)
   0563 F8                 2128 	mov	r0,a
   0564 AB*03              2129 	mov	r3,(_task_UART_core_projectSpecific_sloc1_1_0 + 2)
   0566 8F 82              2130 	mov	dpl,r7
   0568 88 83              2131 	mov	dph,r0
   056A 8B F0              2132 	mov	b,r3
   056C 12s00r00           2133 	lcall	__gptrget
   056F F5*01              2134 	mov	_task_UART_core_projectSpecific_sloc1_1_0,a
                           2135 ;	../src/projectSpecificHardwareInterface_C8051F040.c:424: Q->Size-- ;
   0571 74 06              2136 	mov	a,#0x06
   0573 2A                 2137 	add	a,r2
   0574 FB                 2138 	mov	r3,a
   0575 E4                 2139 	clr	a
   0576 3C                 2140 	addc	a,r4
   0577 FE                 2141 	mov	r6,a
   0578 8D 00              2142 	mov	ar0,r5
   057A 8B 82              2143 	mov	dpl,r3
   057C 8E 83              2144 	mov	dph,r6
   057E 88 F0              2145 	mov	b,r0
   0580 12s00r00           2146 	lcall	__gptrget
   0583 F9                 2147 	mov	r1,a
   0584 A3                 2148 	inc	dptr
   0585 12s00r00           2149 	lcall	__gptrget
   0588 FF                 2150 	mov	r7,a
   0589 19                 2151 	dec	r1
   058A B9 FF 01           2152 	cjne	r1,#0xff,00136$
   058D 1F                 2153 	dec	r7
   058E                    2154 00136$:
   058E 8B 82              2155 	mov	dpl,r3
   0590 8E 83              2156 	mov	dph,r6
   0592 88 F0              2157 	mov	b,r0
   0594 E9                 2158 	mov	a,r1
   0595 12s00r00           2159 	lcall	__gptrput
   0598 A3                 2160 	inc	dptr
   0599 EF                 2161 	mov	a,r7
   059A 12s00r00           2162 	lcall	__gptrput
                           2163 ;	../src/projectSpecificHardwareInterface_C8051F040.c:425: Q->Front = Succ(Q->Front, Q) ;
   059D 90s04r56           2164 	mov	dptr,#_Succ_PARM_2
   05A0 EA                 2165 	mov	a,r2
   05A1 F0                 2166 	movx	@dptr,a
   05A2 A3                 2167 	inc	dptr
   05A3 EC                 2168 	mov	a,r4
   05A4 F0                 2169 	movx	@dptr,a
   05A5 A3                 2170 	inc	dptr
   05A6 ED                 2171 	mov	a,r5
   05A7 F0                 2172 	movx	@dptr,a
   05A8 85*04 82           2173 	mov	dpl,_task_UART_core_projectSpecific_sloc2_1_0
   05AB 85*05 83           2174 	mov	dph,(_task_UART_core_projectSpecific_sloc2_1_0 + 1)
   05AE 12s01rCE           2175 	lcall	_Succ
   05B1 AA 82              2176 	mov	r2,dpl
   05B3 AB 83              2177 	mov	r3,dph
   05B5 85*06 82           2178 	mov	dpl,_task_UART_core_projectSpecific_sloc3_1_0
   05B8 85*07 83           2179 	mov	dph,(_task_UART_core_projectSpecific_sloc3_1_0 + 1)
   05BB 85*08 F0           2180 	mov	b,(_task_UART_core_projectSpecific_sloc3_1_0 + 2)
   05BE EA                 2181 	mov	a,r2
   05BF 12s00r00           2182 	lcall	__gptrput
   05C2 A3                 2183 	inc	dptr
   05C3 EB                 2184 	mov	a,r3
   05C4 12s00r00           2185 	lcall	__gptrput
                           2186 ;	../src/projectSpecificHardwareInterface_C8051F040.c:427: TI0 = 0 ;	// clear it and send the next character
   05C7 C2 99              2187 	clr	_TI0
                           2188 ;	../src/projectSpecificHardwareInterface_C8051F040.c:429: SBUF0 = byteToSend ;
   05C9 85*01 99           2189 	mov	_SBUF0,_task_UART_core_projectSpecific_sloc1_1_0
                           2190 ;	../src/projectSpecificHardwareInterface_C8051F040.c:431: charSent[channelNumber] = true ;
   05CC 90s08rCC           2191 	mov	dptr,#_task_UART_core_projectSpecific_channelNumber_1_1
   05CF E0                 2192 	movx	a,@dptr
   05D0 FA                 2193 	mov	r2,a
   05D1 24rC9              2194 	add	a,#_charSent
   05D3 F5 82              2195 	mov	dpl,a
   05D5 E4                 2196 	clr	a
   05D6 34s08              2197 	addc	a,#(_charSent >> 8)
   05D8 F5 83              2198 	mov	dph,a
   05DA 74 01              2199 	mov	a,#0x01
   05DC F0                 2200 	movx	@dptr,a
                           2201 ;	../src/projectSpecificHardwareInterface_C8051F040.c:434: portRESTORE_REGISTER_GROUP()
   05DD D0 03              2202 	pop	ar3
                           2203 ;	../src/projectSpecificHardwareInterface_C8051F040.c:431: charSent[channelNumber] = true ;
   05DF                    2204 00113$:
                           2205 ;	../src/projectSpecificHardwareInterface_C8051F040.c:434: portRESTORE_REGISTER_GROUP()
   05DF 8B 84              2206 	mov	_SFRPAGE,r3
   05E1 22                 2207 	ret
                           2208 ;------------------------------------------------------------
                           2209 ;Allocation info for local variables in function 'task_UART_putchar_projectSpecific'
                           2210 ;------------------------------------------------------------
                           2211 ;charToSend                Allocated with name '_task_UART_putchar_projectSpecific_PARM_2'
                           2212 ;channelNumber             Allocated with name '_task_UART_putchar_projectSpecific_channelNumber_1_1'
                           2213 ;Q                         Allocated with name '_task_UART_putchar_projectSpecific_Q_2_2'
                           2214 ;------------------------------------------------------------
                           2215 ;	../src/projectSpecificHardwareInterface_C8051F040.c:439: bool task_UART_putchar_projectSpecific(	unsigned char channelNumber, char charToSend)
                           2216 ;	-----------------------------------------
                           2217 ;	 function task_UART_putchar_projectSpecific
                           2218 ;	-----------------------------------------
   05E2                    2219 _task_UART_putchar_projectSpecific:
   05E2 E5 82              2220 	mov	a,dpl
   05E4 90s08rD1           2221 	mov	dptr,#_task_UART_putchar_projectSpecific_channelNumber_1_1
   05E7 F0                 2222 	movx	@dptr,a
                           2223 ;	../src/projectSpecificHardwareInterface_C8051F040.c:441: task_UART_core(0) ;
   05E8 75 82 00           2224 	mov	dpl,#0x00
   05EB 12s00r00           2225 	lcall	_task_UART_core
                           2226 ;	../src/projectSpecificHardwareInterface_C8051F040.c:443: portDISABLE_INTERRUPTS() ;
   05EE C2 AF              2227 	clr	_EA
                           2228 ;	../src/projectSpecificHardwareInterface_C8051F040.c:445: if(channelNumber < NUMBER_OF_UARTS)
   05F0 90s08rD1           2229 	mov	dptr,#_task_UART_putchar_projectSpecific_channelNumber_1_1
   05F3 E0                 2230 	movx	a,@dptr
   05F4 FA                 2231 	mov	r2,a
   05F5 BA 01 00           2232 	cjne	r2,#0x01,00109$
   05F8                    2233 00109$:
   05F8 40 03              2234 	jc	00110$
   05FA 02s06rFB           2235 	ljmp	00104$
   05FD                    2236 00110$:
                           2237 ;	../src/projectSpecificHardwareInterface_C8051F040.c:447: QUEUE_TYPE*	Q = &transmitBuffers[channelNumber] ;
   05FD EA                 2238 	mov	a,r2
   05FE 75 F0 0B           2239 	mov	b,#0x0B
   0601 A4                 2240 	mul	ab
   0602 24rB3              2241 	add	a,#_transmitBuffers
   0604 FA                 2242 	mov	r2,a
   0605 E4                 2243 	clr	a
   0606 34s08              2244 	addc	a,#(_transmitBuffers >> 8)
   0608 FB                 2245 	mov	r3,a
   0609 7C 00              2246 	mov	r4,#0x00
   060B 90s08rD2           2247 	mov	dptr,#_task_UART_putchar_projectSpecific_Q_2_2
   060E EA                 2248 	mov	a,r2
   060F F0                 2249 	movx	@dptr,a
   0610 A3                 2250 	inc	dptr
   0611 EB                 2251 	mov	a,r3
   0612 F0                 2252 	movx	@dptr,a
   0613 A3                 2253 	inc	dptr
   0614 EC                 2254 	mov	a,r4
   0615 F0                 2255 	movx	@dptr,a
                           2256 ;	../src/projectSpecificHardwareInterface_C8051F040.c:449: if(!IsFull(Q))
   0616 8A 82              2257 	mov	dpl,r2
   0618 8B 83              2258 	mov	dph,r3
   061A 8C F0              2259 	mov	b,r4
   061C 12s01r7C           2260 	lcall	_IsFull
   061F E5 82              2261 	mov	a,dpl
   0621 60 03              2262 	jz	00111$
   0623 02s06rFB           2263 	ljmp	00104$
   0626                    2264 00111$:
                           2265 ;	../src/projectSpecificHardwareInterface_C8051F040.c:451: Q->Size++ ;
   0626 90s08rD2           2266 	mov	dptr,#_task_UART_putchar_projectSpecific_Q_2_2
   0629 E0                 2267 	movx	a,@dptr
   062A FA                 2268 	mov	r2,a
   062B A3                 2269 	inc	dptr
   062C E0                 2270 	movx	a,@dptr
   062D FB                 2271 	mov	r3,a
   062E A3                 2272 	inc	dptr
   062F E0                 2273 	movx	a,@dptr
   0630 FC                 2274 	mov	r4,a
   0631 74 06              2275 	mov	a,#0x06
   0633 2A                 2276 	add	a,r2
   0634 FD                 2277 	mov	r5,a
   0635 E4                 2278 	clr	a
   0636 3B                 2279 	addc	a,r3
   0637 FE                 2280 	mov	r6,a
   0638 8C 07              2281 	mov	ar7,r4
   063A 8D 82              2282 	mov	dpl,r5
   063C 8E 83              2283 	mov	dph,r6
   063E 8F F0              2284 	mov	b,r7
   0640 12s00r00           2285 	lcall	__gptrget
   0643 F8                 2286 	mov	r0,a
   0644 A3                 2287 	inc	dptr
   0645 12s00r00           2288 	lcall	__gptrget
   0648 F9                 2289 	mov	r1,a
   0649 08                 2290 	inc	r0
   064A B8 00 01           2291 	cjne	r0,#0x00,00112$
   064D 09                 2292 	inc	r1
   064E                    2293 00112$:
   064E 8D 82              2294 	mov	dpl,r5
   0650 8E 83              2295 	mov	dph,r6
   0652 8F F0              2296 	mov	b,r7
   0654 E8                 2297 	mov	a,r0
   0655 12s00r00           2298 	lcall	__gptrput
   0658 A3                 2299 	inc	dptr
   0659 E9                 2300 	mov	a,r1
   065A 12s00r00           2301 	lcall	__gptrput
                           2302 ;	../src/projectSpecificHardwareInterface_C8051F040.c:452: Q->Rear = Succ(Q->Rear, Q) ;
   065D 74 04              2303 	mov	a,#0x04
   065F 2A                 2304 	add	a,r2
   0660 FD                 2305 	mov	r5,a
   0661 E4                 2306 	clr	a
   0662 3B                 2307 	addc	a,r3
   0663 FE                 2308 	mov	r6,a
   0664 8C 07              2309 	mov	ar7,r4
   0666 8D 82              2310 	mov	dpl,r5
   0668 8E 83              2311 	mov	dph,r6
   066A 8F F0              2312 	mov	b,r7
   066C 12s00r00           2313 	lcall	__gptrget
   066F F8                 2314 	mov	r0,a
   0670 A3                 2315 	inc	dptr
   0671 12s00r00           2316 	lcall	__gptrget
   0674 F9                 2317 	mov	r1,a
   0675 90s04r56           2318 	mov	dptr,#_Succ_PARM_2
   0678 EA                 2319 	mov	a,r2
   0679 F0                 2320 	movx	@dptr,a
   067A A3                 2321 	inc	dptr
   067B EB                 2322 	mov	a,r3
   067C F0                 2323 	movx	@dptr,a
   067D A3                 2324 	inc	dptr
   067E EC                 2325 	mov	a,r4
   067F F0                 2326 	movx	@dptr,a
   0680 88 82              2327 	mov	dpl,r0
   0682 89 83              2328 	mov	dph,r1
   0684 C0 05              2329 	push	ar5
   0686 C0 06              2330 	push	ar6
   0688 C0 07              2331 	push	ar7
   068A 12s01rCE           2332 	lcall	_Succ
   068D AA 82              2333 	mov	r2,dpl
   068F AB 83              2334 	mov	r3,dph
   0691 D0 07              2335 	pop	ar7
   0693 D0 06              2336 	pop	ar6
   0695 D0 05              2337 	pop	ar5
   0697 8D 82              2338 	mov	dpl,r5
   0699 8E 83              2339 	mov	dph,r6
   069B 8F F0              2340 	mov	b,r7
   069D EA                 2341 	mov	a,r2
   069E 12s00r00           2342 	lcall	__gptrput
   06A1 A3                 2343 	inc	dptr
   06A2 EB                 2344 	mov	a,r3
   06A3 12s00r00           2345 	lcall	__gptrput
                           2346 ;	../src/projectSpecificHardwareInterface_C8051F040.c:453: Q->Array[Q->Rear] = charToSend ;
   06A6 90s08rD2           2347 	mov	dptr,#_task_UART_putchar_projectSpecific_Q_2_2
   06A9 E0                 2348 	movx	a,@dptr
   06AA FA                 2349 	mov	r2,a
   06AB A3                 2350 	inc	dptr
   06AC E0                 2351 	movx	a,@dptr
   06AD FB                 2352 	mov	r3,a
   06AE A3                 2353 	inc	dptr
   06AF E0                 2354 	movx	a,@dptr
   06B0 FC                 2355 	mov	r4,a
   06B1 74 08              2356 	mov	a,#0x08
   06B3 2A                 2357 	add	a,r2
   06B4 FD                 2358 	mov	r5,a
   06B5 E4                 2359 	clr	a
   06B6 3B                 2360 	addc	a,r3
   06B7 FE                 2361 	mov	r6,a
   06B8 8C 07              2362 	mov	ar7,r4
   06BA 8D 82              2363 	mov	dpl,r5
   06BC 8E 83              2364 	mov	dph,r6
   06BE 8F F0              2365 	mov	b,r7
   06C0 12s00r00           2366 	lcall	__gptrget
   06C3 FD                 2367 	mov	r5,a
   06C4 A3                 2368 	inc	dptr
   06C5 12s00r00           2369 	lcall	__gptrget
   06C8 FE                 2370 	mov	r6,a
   06C9 A3                 2371 	inc	dptr
   06CA 12s00r00           2372 	lcall	__gptrget
   06CD FF                 2373 	mov	r7,a
   06CE 74 04              2374 	mov	a,#0x04
   06D0 2A                 2375 	add	a,r2
   06D1 FA                 2376 	mov	r2,a
   06D2 E4                 2377 	clr	a
   06D3 3B                 2378 	addc	a,r3
   06D4 FB                 2379 	mov	r3,a
   06D5 8A 82              2380 	mov	dpl,r2
   06D7 8B 83              2381 	mov	dph,r3
   06D9 8C F0              2382 	mov	b,r4
   06DB 12s00r00           2383 	lcall	__gptrget
   06DE FA                 2384 	mov	r2,a
   06DF A3                 2385 	inc	dptr
   06E0 12s00r00           2386 	lcall	__gptrget
   06E3 FB                 2387 	mov	r3,a
   06E4 EA                 2388 	mov	a,r2
   06E5 2D                 2389 	add	a,r5
   06E6 FD                 2390 	mov	r5,a
   06E7 EB                 2391 	mov	a,r3
   06E8 3E                 2392 	addc	a,r6
   06E9 FE                 2393 	mov	r6,a
   06EA 90s08rD0           2394 	mov	dptr,#_task_UART_putchar_projectSpecific_PARM_2
   06ED E0                 2395 	movx	a,@dptr
   06EE 8D 82              2396 	mov	dpl,r5
   06F0 8E 83              2397 	mov	dph,r6
   06F2 8F F0              2398 	mov	b,r7
   06F4 12s00r00           2399 	lcall	__gptrput
                           2400 ;	../src/projectSpecificHardwareInterface_C8051F040.c:455: portENABLE_INTERRUPTS() ;
   06F7 D2 AF              2401 	setb	_EA
                           2402 ;	../src/projectSpecificHardwareInterface_C8051F040.c:457: return true ;
   06F9 D3                 2403 	setb	c
   06FA 22                 2404 	ret
   06FB                    2405 00104$:
                           2406 ;	../src/projectSpecificHardwareInterface_C8051F040.c:461: portENABLE_INTERRUPTS() ;
   06FB D2 AF              2407 	setb	_EA
                           2408 ;	../src/projectSpecificHardwareInterface_C8051F040.c:465: return false ;
   06FD C3                 2409 	clr	c
   06FE 22                 2410 	ret
                           2411 ;------------------------------------------------------------
                           2412 ;Allocation info for local variables in function 'task_UART_puts_projectSpecific'
                           2413 ;------------------------------------------------------------
                           2414 ;buffer                    Allocated with name '_task_UART_puts_projectSpecific_PARM_2'
                           2415 ;channelNumber             Allocated with name '_task_UART_puts_projectSpecific_channelNumber_1_1'
                           2416 ;myBuffer                  Allocated with name '_task_UART_puts_projectSpecific_myBuffer_2_2'
                           2417 ;------------------------------------------------------------
                           2418 ;	../src/projectSpecificHardwareInterface_C8051F040.c:469: void task_UART_puts_projectSpecific(	unsigned char channelNumber, const char *buffer)
                           2419 ;	-----------------------------------------
                           2420 ;	 function task_UART_puts_projectSpecific
                           2421 ;	-----------------------------------------
   06FF                    2422 _task_UART_puts_projectSpecific:
   06FF E5 82              2423 	mov	a,dpl
   0701 90s08rD8           2424 	mov	dptr,#_task_UART_puts_projectSpecific_channelNumber_1_1
   0704 F0                 2425 	movx	@dptr,a
                           2426 ;	../src/projectSpecificHardwareInterface_C8051F040.c:471: if(channelNumber < NUMBER_OF_UARTS)
   0705 90s08rD8           2427 	mov	dptr,#_task_UART_puts_projectSpecific_channelNumber_1_1
   0708 E0                 2428 	movx	a,@dptr
   0709 FA                 2429 	mov	r2,a
   070A BA 01 00           2430 	cjne	r2,#0x01,00119$
   070D                    2431 00119$:
   070D 50 6C              2432 	jnc	00112$
                           2433 ;	../src/projectSpecificHardwareInterface_C8051F040.c:473: unsigned char* myBuffer = buffer ;
   070F 90s08rD5           2434 	mov	dptr,#_task_UART_puts_projectSpecific_PARM_2
   0712 E0                 2435 	movx	a,@dptr
   0713 FB                 2436 	mov	r3,a
   0714 A3                 2437 	inc	dptr
   0715 E0                 2438 	movx	a,@dptr
   0716 FC                 2439 	mov	r4,a
   0717 A3                 2440 	inc	dptr
   0718 E0                 2441 	movx	a,@dptr
   0719 FD                 2442 	mov	r5,a
                           2443 ;	../src/projectSpecificHardwareInterface_C8051F040.c:475: while(*myBuffer)
   071A 8A 06              2444 	mov	ar6,r2
   071C                    2445 00107$:
   071C 8B 82              2446 	mov	dpl,r3
   071E 8C 83              2447 	mov	dph,r4
   0720 8D F0              2448 	mov	b,r5
   0722 12s00r00           2449 	lcall	__gptrget
   0725 FF                 2450 	mov	r7,a
   0726 60 53              2451 	jz	00112$
                           2452 ;	../src/projectSpecificHardwareInterface_C8051F040.c:477: if((*myBuffer) == '\n')
   0728 BF 0A 21           2453 	cjne	r7,#0x0A,00104$
                           2454 ;	../src/projectSpecificHardwareInterface_C8051F040.c:479: if(!task_UART_putchar(channelNumber, '\r'))
   072B 90s00r00           2455 	mov	dptr,#_task_UART_putchar_PARM_2
   072E 74 0D              2456 	mov	a,#0x0D
   0730 F0                 2457 	movx	@dptr,a
   0731 8E 82              2458 	mov	dpl,r6
   0733 C0 02              2459 	push	ar2
   0735 C0 03              2460 	push	ar3
   0737 C0 04              2461 	push	ar4
   0739 C0 05              2462 	push	ar5
   073B C0 06              2463 	push	ar6
   073D 12s00r00           2464 	lcall	_task_UART_putchar
   0740 D0 06              2465 	pop	ar6
   0742 D0 05              2466 	pop	ar5
   0744 D0 04              2467 	pop	ar4
   0746 D0 03              2468 	pop	ar3
   0748 D0 02              2469 	pop	ar2
   074A 50 2F              2470 	jnc	00112$
                           2471 ;	../src/projectSpecificHardwareInterface_C8051F040.c:481: break ;
   074C                    2472 00104$:
                           2473 ;	../src/projectSpecificHardwareInterface_C8051F040.c:485: if(!task_UART_putchar(channelNumber, *myBuffer++))
   074C 8B 82              2474 	mov	dpl,r3
   074E 8C 83              2475 	mov	dph,r4
   0750 8D F0              2476 	mov	b,r5
   0752 12s00r00           2477 	lcall	__gptrget
   0755 FF                 2478 	mov	r7,a
   0756 A3                 2479 	inc	dptr
   0757 AB 82              2480 	mov	r3,dpl
   0759 AC 83              2481 	mov	r4,dph
   075B 90s00r00           2482 	mov	dptr,#_task_UART_putchar_PARM_2
   075E EF                 2483 	mov	a,r7
   075F F0                 2484 	movx	@dptr,a
   0760 8A 82              2485 	mov	dpl,r2
   0762 C0 02              2486 	push	ar2
   0764 C0 03              2487 	push	ar3
   0766 C0 04              2488 	push	ar4
   0768 C0 05              2489 	push	ar5
   076A C0 06              2490 	push	ar6
   076C 12s00r00           2491 	lcall	_task_UART_putchar
   076F D0 06              2492 	pop	ar6
   0771 D0 05              2493 	pop	ar5
   0773 D0 04              2494 	pop	ar4
   0775 D0 03              2495 	pop	ar3
   0777 D0 02              2496 	pop	ar2
   0779 40 A1              2497 	jc	00107$
                           2498 ;	../src/projectSpecificHardwareInterface_C8051F040.c:487: break ;
   077B                    2499 00112$:
   077B 22                 2500 	ret
                           2501 ;------------------------------------------------------------
                           2502 ;Allocation info for local variables in function 'task_UART_getchar_projectSpecific'
                           2503 ;------------------------------------------------------------
                           2504 ;sloc0                     Allocated with name '_task_UART_getchar_projectSpecific_sloc0_1_0'
                           2505 ;sloc1                     Allocated with name '_task_UART_getchar_projectSpecific_sloc1_1_0'
                           2506 ;sloc2                     Allocated with name '_task_UART_getchar_projectSpecific_sloc2_1_0'
                           2507 ;channelNumber             Allocated with name '_task_UART_getchar_projectSpecific_channelNumber_1_1'
                           2508 ;Q                         Allocated with name '_task_UART_getchar_projectSpecific_Q_2_2'
                           2509 ;byteReceived              Allocated with name '_task_UART_getchar_projectSpecific_byteReceived_3_3'
                           2510 ;------------------------------------------------------------
                           2511 ;	../src/projectSpecificHardwareInterface_C8051F040.c:494: char task_UART_getchar_projectSpecific(	unsigned char channelNumber)
                           2512 ;	-----------------------------------------
                           2513 ;	 function task_UART_getchar_projectSpecific
                           2514 ;	-----------------------------------------
   077C                    2515 _task_UART_getchar_projectSpecific:
   077C E5 82              2516 	mov	a,dpl
   077E 90s08rD9           2517 	mov	dptr,#_task_UART_getchar_projectSpecific_channelNumber_1_1
   0781 F0                 2518 	movx	@dptr,a
                           2519 ;	../src/projectSpecificHardwareInterface_C8051F040.c:496: if(channelNumber < NUMBER_OF_UARTS)
   0782 90s08rD9           2520 	mov	dptr,#_task_UART_getchar_projectSpecific_channelNumber_1_1
   0785 E0                 2521 	movx	a,@dptr
   0786 FA                 2522 	mov	r2,a
   0787 BA 01 00           2523 	cjne	r2,#0x01,00109$
   078A                    2524 00109$:
   078A 40 03              2525 	jc	00110$
   078C 02s08r73           2526 	ljmp	00104$
   078F                    2527 00110$:
                           2528 ;	../src/projectSpecificHardwareInterface_C8051F040.c:498: QUEUE_TYPE*	Q = &receiveBuffers[channelNumber] ;
   078F EA                 2529 	mov	a,r2
   0790 75 F0 0B           2530 	mov	b,#0x0B
   0793 A4                 2531 	mul	ab
   0794 24rBE              2532 	add	a,#_receiveBuffers
   0796 FA                 2533 	mov	r2,a
   0797 E4                 2534 	clr	a
   0798 34s08              2535 	addc	a,#(_receiveBuffers >> 8)
   079A FB                 2536 	mov	r3,a
   079B 7C 00              2537 	mov	r4,#0x00
   079D 90s08rDA           2538 	mov	dptr,#_task_UART_getchar_projectSpecific_Q_2_2
   07A0 EA                 2539 	mov	a,r2
   07A1 F0                 2540 	movx	@dptr,a
   07A2 A3                 2541 	inc	dptr
   07A3 EB                 2542 	mov	a,r3
   07A4 F0                 2543 	movx	@dptr,a
   07A5 A3                 2544 	inc	dptr
   07A6 EC                 2545 	mov	a,r4
   07A7 F0                 2546 	movx	@dptr,a
                           2547 ;	../src/projectSpecificHardwareInterface_C8051F040.c:500: if(!IsEmpty(Q))
   07A8 8A 82              2548 	mov	dpl,r2
   07AA 8B 83              2549 	mov	dph,r3
   07AC 8C F0              2550 	mov	b,r4
   07AE 12s01r40           2551 	lcall	_IsEmpty
   07B1 E5 82              2552 	mov	a,dpl
   07B3 60 03              2553 	jz	00111$
   07B5 02s08r73           2554 	ljmp	00104$
   07B8                    2555 00111$:
                           2556 ;	../src/projectSpecificHardwareInterface_C8051F040.c:502: unsigned char byteReceived = Q->Array[Q->Front] ;
   07B8 90s08rDA           2557 	mov	dptr,#_task_UART_getchar_projectSpecific_Q_2_2
   07BB E0                 2558 	movx	a,@dptr
   07BC FA                 2559 	mov	r2,a
   07BD A3                 2560 	inc	dptr
   07BE E0                 2561 	movx	a,@dptr
   07BF FB                 2562 	mov	r3,a
   07C0 A3                 2563 	inc	dptr
   07C1 E0                 2564 	movx	a,@dptr
   07C2 FC                 2565 	mov	r4,a
   07C3 74 08              2566 	mov	a,#0x08
   07C5 2A                 2567 	add	a,r2
   07C6 FD                 2568 	mov	r5,a
   07C7 E4                 2569 	clr	a
   07C8 3B                 2570 	addc	a,r3
   07C9 FE                 2571 	mov	r6,a
   07CA 8C 07              2572 	mov	ar7,r4
   07CC 8D 82              2573 	mov	dpl,r5
   07CE 8E 83              2574 	mov	dph,r6
   07D0 8F F0              2575 	mov	b,r7
   07D2 12s00r00           2576 	lcall	__gptrget
   07D5 F5*09              2577 	mov	_task_UART_getchar_projectSpecific_sloc0_1_0,a
   07D7 A3                 2578 	inc	dptr
   07D8 12s00r00           2579 	lcall	__gptrget
   07DB F5*0A              2580 	mov	(_task_UART_getchar_projectSpecific_sloc0_1_0 + 1),a
   07DD A3                 2581 	inc	dptr
   07DE 12s00r00           2582 	lcall	__gptrget
   07E1 F5*0B              2583 	mov	(_task_UART_getchar_projectSpecific_sloc0_1_0 + 2),a
   07E3 74 02              2584 	mov	a,#0x02
   07E5 2A                 2585 	add	a,r2
   07E6 F5*0E              2586 	mov	_task_UART_getchar_projectSpecific_sloc2_1_0,a
   07E8 E4                 2587 	clr	a
   07E9 3B                 2588 	addc	a,r3
   07EA F5*0F              2589 	mov	(_task_UART_getchar_projectSpecific_sloc2_1_0 + 1),a
   07EC 8C*10              2590 	mov	(_task_UART_getchar_projectSpecific_sloc2_1_0 + 2),r4
   07EE 85*0E 82           2591 	mov	dpl,_task_UART_getchar_projectSpecific_sloc2_1_0
   07F1 85*0F 83           2592 	mov	dph,(_task_UART_getchar_projectSpecific_sloc2_1_0 + 1)
   07F4 85*10 F0           2593 	mov	b,(_task_UART_getchar_projectSpecific_sloc2_1_0 + 2)
   07F7 12s00r00           2594 	lcall	__gptrget
   07FA F5*0C              2595 	mov	_task_UART_getchar_projectSpecific_sloc1_1_0,a
   07FC A3                 2596 	inc	dptr
   07FD 12s00r00           2597 	lcall	__gptrget
   0800 F5*0D              2598 	mov	(_task_UART_getchar_projectSpecific_sloc1_1_0 + 1),a
   0802 E5*0C              2599 	mov	a,_task_UART_getchar_projectSpecific_sloc1_1_0
   0804 25*09              2600 	add	a,_task_UART_getchar_projectSpecific_sloc0_1_0
   0806 FE                 2601 	mov	r6,a
   0807 E5*0D              2602 	mov	a,(_task_UART_getchar_projectSpecific_sloc1_1_0 + 1)
   0809 35*0A              2603 	addc	a,(_task_UART_getchar_projectSpecific_sloc0_1_0 + 1)
   080B FF                 2604 	mov	r7,a
   080C AD*0B              2605 	mov	r5,(_task_UART_getchar_projectSpecific_sloc0_1_0 + 2)
   080E 8E 82              2606 	mov	dpl,r6
   0810 8F 83              2607 	mov	dph,r7
   0812 8D F0              2608 	mov	b,r5
   0814 12s00r00           2609 	lcall	__gptrget
   0817 F5*09              2610 	mov	_task_UART_getchar_projectSpecific_sloc0_1_0,a
                           2611 ;	../src/projectSpecificHardwareInterface_C8051F040.c:504: Q->Size-- ;
   0819 74 06              2612 	mov	a,#0x06
   081B 2A                 2613 	add	a,r2
   081C FD                 2614 	mov	r5,a
   081D E4                 2615 	clr	a
   081E 3B                 2616 	addc	a,r3
   081F FF                 2617 	mov	r7,a
   0820 8C 00              2618 	mov	ar0,r4
   0822 8D 82              2619 	mov	dpl,r5
   0824 8F 83              2620 	mov	dph,r7
   0826 88 F0              2621 	mov	b,r0
   0828 12s00r00           2622 	lcall	__gptrget
   082B F9                 2623 	mov	r1,a
   082C A3                 2624 	inc	dptr
   082D 12s00r00           2625 	lcall	__gptrget
   0830 FE                 2626 	mov	r6,a
   0831 19                 2627 	dec	r1
   0832 B9 FF 01           2628 	cjne	r1,#0xff,00112$
   0835 1E                 2629 	dec	r6
   0836                    2630 00112$:
   0836 8D 82              2631 	mov	dpl,r5
   0838 8F 83              2632 	mov	dph,r7
   083A 88 F0              2633 	mov	b,r0
   083C E9                 2634 	mov	a,r1
   083D 12s00r00           2635 	lcall	__gptrput
   0840 A3                 2636 	inc	dptr
   0841 EE                 2637 	mov	a,r6
   0842 12s00r00           2638 	lcall	__gptrput
                           2639 ;	../src/projectSpecificHardwareInterface_C8051F040.c:505: Q->Front = Succ(Q->Front, Q) ;
   0845 90s04r56           2640 	mov	dptr,#_Succ_PARM_2
   0848 EA                 2641 	mov	a,r2
   0849 F0                 2642 	movx	@dptr,a
   084A A3                 2643 	inc	dptr
   084B EB                 2644 	mov	a,r3
   084C F0                 2645 	movx	@dptr,a
   084D A3                 2646 	inc	dptr
   084E EC                 2647 	mov	a,r4
   084F F0                 2648 	movx	@dptr,a
   0850 85*0C 82           2649 	mov	dpl,_task_UART_getchar_projectSpecific_sloc1_1_0
   0853 85*0D 83           2650 	mov	dph,(_task_UART_getchar_projectSpecific_sloc1_1_0 + 1)
   0856 12s01rCE           2651 	lcall	_Succ
   0859 AA 82              2652 	mov	r2,dpl
   085B AB 83              2653 	mov	r3,dph
   085D 85*0E 82           2654 	mov	dpl,_task_UART_getchar_projectSpecific_sloc2_1_0
   0860 85*0F 83           2655 	mov	dph,(_task_UART_getchar_projectSpecific_sloc2_1_0 + 1)
   0863 85*10 F0           2656 	mov	b,(_task_UART_getchar_projectSpecific_sloc2_1_0 + 2)
   0866 EA                 2657 	mov	a,r2
   0867 12s00r00           2658 	lcall	__gptrput
   086A A3                 2659 	inc	dptr
   086B EB                 2660 	mov	a,r3
   086C 12s00r00           2661 	lcall	__gptrput
                           2662 ;	../src/projectSpecificHardwareInterface_C8051F040.c:507: return byteReceived ;
   086F 85*09 82           2663 	mov	dpl,_task_UART_getchar_projectSpecific_sloc0_1_0
                           2664 ;	../src/projectSpecificHardwareInterface_C8051F040.c:511: return -1 ;
   0872 22                 2665 	ret
   0873                    2666 00104$:
   0873 75 82 FF           2667 	mov	dpl,#0xFF
   0876 22                 2668 	ret
                           2669 ;------------------------------------------------------------
                           2670 ;Allocation info for local variables in function 'task_UART_gets_projectSpecific'
                           2671 ;------------------------------------------------------------
                           2672 ;sloc0                     Allocated with name '_task_UART_gets_projectSpecific_sloc0_1_0'
                           2673 ;sloc1                     Allocated with name '_task_UART_gets_projectSpecific_sloc1_1_0'
                           2674 ;buffer                    Allocated with name '_task_UART_gets_projectSpecific_PARM_2'
                           2675 ;maxBufferLength           Allocated with name '_task_UART_gets_projectSpecific_PARM_3'
                           2676 ;channelNumber             Allocated with name '_task_UART_gets_projectSpecific_channelNumber_1_1'
                           2677 ;charsReturned             Allocated with name '_task_UART_gets_projectSpecific_charsReturned_2_2'
                           2678 ;latestCharInBuffer        Allocated with name '_task_UART_gets_projectSpecific_latestCharInBuffer_3_3'
                           2679 ;------------------------------------------------------------
                           2680 ;	../src/projectSpecificHardwareInterface_C8051F040.c:515: char* task_UART_gets_projectSpecific(	unsigned char channelNumber, char* buffer, unsigned short maxBufferLength)
                           2681 ;	-----------------------------------------
                           2682 ;	 function task_UART_gets_projectSpecific
                           2683 ;	-----------------------------------------
   0877                    2684 _task_UART_gets_projectSpecific:
   0877 E5 82              2685 	mov	a,dpl
   0879 90s08rE2           2686 	mov	dptr,#_task_UART_gets_projectSpecific_channelNumber_1_1
   087C F0                 2687 	movx	@dptr,a
                           2688 ;	../src/projectSpecificHardwareInterface_C8051F040.c:517: if(channelNumber < NUMBER_OF_UARTS)
   087D 90s08rE2           2689 	mov	dptr,#_task_UART_gets_projectSpecific_channelNumber_1_1
   0880 E0                 2690 	movx	a,@dptr
   0881 FA                 2691 	mov	r2,a
   0882 BA 01 00           2692 	cjne	r2,#0x01,00119$
   0885                    2693 00119$:
   0885 50 74              2694 	jnc	00110$
                           2695 ;	../src/projectSpecificHardwareInterface_C8051F040.c:521: while(charsReturned < maxBufferLength)
   0887 90s08rE0           2696 	mov	dptr,#_task_UART_gets_projectSpecific_PARM_3
   088A E0                 2697 	movx	a,@dptr
   088B F5*12              2698 	mov	_task_UART_gets_projectSpecific_sloc1_1_0,a
   088D A3                 2699 	inc	dptr
   088E E0                 2700 	movx	a,@dptr
   088F F5*13              2701 	mov	(_task_UART_gets_projectSpecific_sloc1_1_0 + 1),a
   0891 90s08rDD           2702 	mov	dptr,#_task_UART_gets_projectSpecific_PARM_2
   0894 E0                 2703 	movx	a,@dptr
   0895 FD                 2704 	mov	r5,a
   0896 A3                 2705 	inc	dptr
   0897 E0                 2706 	movx	a,@dptr
   0898 FE                 2707 	mov	r6,a
   0899 A3                 2708 	inc	dptr
   089A E0                 2709 	movx	a,@dptr
   089B FF                 2710 	mov	r7,a
   089C 78 00              2711 	mov	r0,#0x00
   089E 79 00              2712 	mov	r1,#0x00
   08A0                    2713 00106$:
   08A0 C3                 2714 	clr	c
   08A1 E8                 2715 	mov	a,r0
   08A2 95*12              2716 	subb	a,_task_UART_gets_projectSpecific_sloc1_1_0
   08A4 E9                 2717 	mov	a,r1
   08A5 95*13              2718 	subb	a,(_task_UART_gets_projectSpecific_sloc1_1_0 + 1)
   08A7 50 52              2719 	jnc	00110$
                           2720 ;	../src/projectSpecificHardwareInterface_C8051F040.c:523: char latestCharInBuffer = task_UART_getchar(channelNumber) ;
   08A9 8A 82              2721 	mov	dpl,r2
   08AB C0 02              2722 	push	ar2
   08AD C0 05              2723 	push	ar5
   08AF C0 06              2724 	push	ar6
   08B1 C0 07              2725 	push	ar7
   08B3 C0 00              2726 	push	ar0
   08B5 C0 01              2727 	push	ar1
   08B7 12s00r00           2728 	lcall	_task_UART_getchar
   08BA 85 82*11           2729 	mov	_task_UART_gets_projectSpecific_sloc0_1_0,dpl
   08BD D0 01              2730 	pop	ar1
   08BF D0 00              2731 	pop	ar0
   08C1 D0 07              2732 	pop	ar7
   08C3 D0 06              2733 	pop	ar6
   08C5 D0 05              2734 	pop	ar5
   08C7 D0 02              2735 	pop	ar2
                           2736 ;	../src/projectSpecificHardwareInterface_C8051F040.c:525: if(latestCharInBuffer <= 0)	// break on a NULL or a -1
   08C9 C3                 2737 	clr	c
   08CA 74 80              2738 	mov	a,#(0x00 ^ 0x80)
   08CC 85*11 F0           2739 	mov	b,_task_UART_gets_projectSpecific_sloc0_1_0
   08CF 63 F0 80           2740 	xrl	b,#0x80
   08D2 95 F0              2741 	subb	a,b
   08D4 50 25              2742 	jnc	00110$
                           2743 ;	../src/projectSpecificHardwareInterface_C8051F040.c:529: else if(latestCharInBuffer == '\r')	// Skip carriage returns
   08D6 74 0D              2744 	mov	a,#0x0D
   08D8 B5*11 02           2745 	cjne	a,_task_UART_gets_projectSpecific_sloc0_1_0,00123$
   08DB 80 C3              2746 	sjmp	00106$
   08DD                    2747 00123$:
                           2748 ;	../src/projectSpecificHardwareInterface_C8051F040.c:534: buffer[charsReturned] = latestCharInBuffer ;
   08DD C0 02              2749 	push	ar2
   08DF E8                 2750 	mov	a,r0
   08E0 2D                 2751 	add	a,r5
   08E1 FA                 2752 	mov	r2,a
   08E2 E9                 2753 	mov	a,r1
   08E3 3E                 2754 	addc	a,r6
   08E4 FB                 2755 	mov	r3,a
   08E5 8F 04              2756 	mov	ar4,r7
   08E7 8A 82              2757 	mov	dpl,r2
   08E9 8B 83              2758 	mov	dph,r3
   08EB 8C F0              2759 	mov	b,r4
   08ED E5*11              2760 	mov	a,_task_UART_gets_projectSpecific_sloc0_1_0
   08EF 12s00r00           2761 	lcall	__gptrput
                           2762 ;	../src/projectSpecificHardwareInterface_C8051F040.c:536: charsReturned++ ;
   08F2 08                 2763 	inc	r0
   08F3 B8 00 01           2764 	cjne	r0,#0x00,00124$
   08F6 09                 2765 	inc	r1
   08F7                    2766 00124$:
   08F7 D0 02              2767 	pop	ar2
   08F9 80 A5              2768 	sjmp	00106$
   08FB                    2769 00110$:
                           2770 ;	../src/projectSpecificHardwareInterface_C8051F040.c:540: return 0 ;
   08FB 90 00 00           2771 	mov	dptr,#0x0000
   08FE 75 F0 00           2772 	mov	b,#0x00
   0901 22                 2773 	ret
                           2774 ;------------------------------------------------------------
                           2775 ;Allocation info for local variables in function 'task_UART_isLineReady'
                           2776 ;------------------------------------------------------------
                           2777 ;channelNumber             Allocated with name '_task_UART_isLineReady_channelNumber_1_1'
                           2778 ;------------------------------------------------------------
                           2779 ;	../src/projectSpecificHardwareInterface_C8051F040.c:544: bool task_UART_isLineReady(	unsigned char channelNumber)
                           2780 ;	-----------------------------------------
                           2781 ;	 function task_UART_isLineReady
                           2782 ;	-----------------------------------------
   0902                    2783 _task_UART_isLineReady:
   0902 E5 82              2784 	mov	a,dpl
   0904 90s08rE3           2785 	mov	dptr,#_task_UART_isLineReady_channelNumber_1_1
   0907 F0                 2786 	movx	@dptr,a
                           2787 ;	../src/projectSpecificHardwareInterface_C8051F040.c:546: return lineReady[channelNumber] ;
   0908 90s08rE3           2788 	mov	dptr,#_task_UART_isLineReady_channelNumber_1_1
   090B E0                 2789 	movx	a,@dptr
   090C 24rCA              2790 	add	a,#_lineReady
   090E F5 82              2791 	mov	dpl,a
   0910 E4                 2792 	clr	a
   0911 34s08              2793 	addc	a,#(_lineReady >> 8)
   0913 F5 83              2794 	mov	dph,a
   0915 E0                 2795 	movx	a,@dptr
   0916 24 FF              2796 	add	a,#0xff
   0918 92*04              2797 	mov  _task_UART_isLineReady_sloc0_1_0,c
   091A 22                 2798 	ret
                           2799 ;------------------------------------------------------------
                           2800 ;Allocation info for local variables in function 'UART0_Init'
                           2801 ;------------------------------------------------------------
                           2802 ;SFRPAGE_SAVE              Allocated with name '_UART0_Init_SFRPAGE_SAVE_1_1'
                           2803 ;------------------------------------------------------------
                           2804 ;	../src/projectSpecificHardwareInterface_C8051F040.c:550: void UART0_Init(void)
                           2805 ;	-----------------------------------------
                           2806 ;	 function UART0_Init
                           2807 ;	-----------------------------------------
   091B                    2808 _UART0_Init:
                           2809 ;	../src/projectSpecificHardwareInterface_C8051F040.c:554: SFRPAGE_SAVE = SFRPAGE;             // Preserve SFRPAGE
   091B AA 84              2810 	mov	r2,_SFRPAGE
                           2811 ;	../src/projectSpecificHardwareInterface_C8051F040.c:556: SFRPAGE = UART0_PAGE;
   091D 75 84 00           2812 	mov	_SFRPAGE,#0x00
                           2813 ;	../src/projectSpecificHardwareInterface_C8051F040.c:558: SCON0 = 0x52;                       // 8-bit variable baud rate;
   0920 75 98 52           2814 	mov	_SCON0,#0x52
                           2815 ;	../src/projectSpecificHardwareInterface_C8051F040.c:561: SSTA0 = 0x10;                       // Clear all flags; enable baud rate
   0923 75 91 10           2816 	mov	_SSTA0,#0x10
                           2817 ;	../src/projectSpecificHardwareInterface_C8051F040.c:568: SFRPAGE = SFRPAGE_SAVE;
   0926 8A 84              2818 	mov	_SFRPAGE,r2
   0928 22                 2819 	ret
                           2820 ;------------------------------------------------------------
                           2821 ;Allocation info for local variables in function 'UART1_Init'
                           2822 ;------------------------------------------------------------
                           2823 ;SFRPAGE_SAVE              Allocated with name '_UART1_Init_SFRPAGE_SAVE_2_2'
                           2824 ;------------------------------------------------------------
                           2825 ;	../src/projectSpecificHardwareInterface_C8051F040.c:589: void UART1_Init(void)
                           2826 ;	-----------------------------------------
                           2827 ;	 function UART1_Init
                           2828 ;	-----------------------------------------
   0929                    2829 _UART1_Init:
                           2830 ;	../src/projectSpecificHardwareInterface_C8051F040.c:591: portSET_REGISTER_GROUP(UART1_PAGE)
   0929 AA 84              2831 	mov	r2,_SFRPAGE
   092B 75 84 01           2832 	mov	_SFRPAGE,#0x01
                           2833 ;	../src/projectSpecificHardwareInterface_C8051F040.c:593: SCON1 = 0x10 ;	// 8-bit variable baud rate;
   092E 75 98 10           2834 	mov	_SCON1,#0x10
                           2835 ;	../src/projectSpecificHardwareInterface_C8051F040.c:599: portRESTORE_REGISTER_GROUP()
   0931 8A 84              2836 	mov	_SFRPAGE,r2
   0933 22                 2837 	ret
                           2838 ;------------------------------------------------------------
                           2839 ;Allocation info for local variables in function 'putchar'
                           2840 ;------------------------------------------------------------
                           2841 ;c                         Allocated with name '_putchar_c_1_1'
                           2842 ;------------------------------------------------------------
                           2843 ;	../src/projectSpecificHardwareInterface_C8051F040.c:603: void putchar(char c)
                           2844 ;	-----------------------------------------
                           2845 ;	 function putchar
                           2846 ;	-----------------------------------------
   0934                    2847 _putchar:
   0934 E5 82              2848 	mov	a,dpl
   0936 90s08rE4           2849 	mov	dptr,#_putchar_c_1_1
   0939 F0                 2850 	movx	@dptr,a
                           2851 ;	../src/projectSpecificHardwareInterface_C8051F040.c:605: if(c == '\n')
   093A 90s08rE4           2852 	mov	dptr,#_putchar_c_1_1
   093D E0                 2853 	movx	a,@dptr
   093E FA                 2854 	mov	r2,a
   093F BA 0A 0C           2855 	cjne	r2,#0x0A,00102$
                           2856 ;	../src/projectSpecificHardwareInterface_C8051F040.c:607: task_UART_putchar(0, '\r') ;
   0942 90s00r00           2857 	mov	dptr,#_task_UART_putchar_PARM_2
   0945 74 0D              2858 	mov	a,#0x0D
   0947 F0                 2859 	movx	@dptr,a
   0948 75 82 00           2860 	mov	dpl,#0x00
   094B 12s00r00           2861 	lcall	_task_UART_putchar
   094E                    2862 00102$:
                           2863 ;	../src/projectSpecificHardwareInterface_C8051F040.c:610: task_UART_putchar(0, c) ;
   094E 90s08rE4           2864 	mov	dptr,#_putchar_c_1_1
   0951 E0                 2865 	movx	a,@dptr
   0952 90s00r00           2866 	mov	dptr,#_task_UART_putchar_PARM_2
   0955 F0                 2867 	movx	@dptr,a
   0956 75 82 00           2868 	mov	dpl,#0x00
   0959 02s00r00           2869 	ljmp	_task_UART_putchar
                           2870 ;------------------------------------------------------------
                           2871 ;Allocation info for local variables in function 'prvSetupSystemClock'
                           2872 ;------------------------------------------------------------
                           2873 ;n                         Allocated with name '_prvSetupSystemClock_n_1_1'
                           2874 ;------------------------------------------------------------
                           2875 ;	../src/projectSpecificHardwareInterface_C8051F040.c:632: static void prvSetupSystemClock( void )
                           2876 ;	-----------------------------------------
                           2877 ;	 function prvSetupSystemClock
                           2878 ;	-----------------------------------------
   095C                    2879 _prvSetupSystemClock:
                           2880 ;	../src/projectSpecificHardwareInterface_C8051F040.c:635: SFRPAGE = CONFIG_PAGE ;			// switch to config page to config oscillator
   095C 75 84 0F           2881 	mov	_SFRPAGE,#0x0F
                           2882 ;	../src/projectSpecificHardwareInterface_C8051F040.c:637: OSCXCN = 0x77 ;					// start external oscillator; 24 MHz Crystal
   095F 75 8C 77           2883 	mov	_OSCXCN,#0x77
                           2884 ;	../src/projectSpecificHardwareInterface_C8051F040.c:641: for( n = 0 ; n < 255 ; n++ ) ;	// delay about 1ms
   0962 7A FF              2885 	mov	r2,#0xFF
   0964 7B 00              2886 	mov	r3,#0x00
   0966                    2887 00106$:
   0966 1A                 2888 	dec	r2
   0967 BA FF 01           2889 	cjne	r2,#0xff,00114$
   096A 1B                 2890 	dec	r3
   096B                    2891 00114$:
   096B EA                 2892 	mov	a,r2
   096C 4B                 2893 	orl	a,r3
   096D 70 F7              2894 	jnz	00106$
                           2895 ;	../src/projectSpecificHardwareInterface_C8051F040.c:642: while((OSCXCN & 0x80) == 0) ;	// wait for oscillator to stabilize
   096F                    2896 00101$:
   096F E5 8C              2897 	mov	a,_OSCXCN
   0971 30 E7 FB           2898 	jnb	acc.7,00101$
                           2899 ;	../src/projectSpecificHardwareInterface_C8051F040.c:644: CLKSEL |= 0x01 ;				// switch to external oscillator
   0974 43 97 01           2900 	orl	_CLKSEL,#0x01
                           2901 ;	../src/projectSpecificHardwareInterface_C8051F040.c:646: OSCICN = 0xC2 ;					// Turn off the internal oscillator to save a little power
   0977 75 8A C2           2902 	mov	_OSCICN,#0xC2
   097A 22                 2903 	ret
                           2904 ;------------------------------------------------------------
                           2905 ;Allocation info for local variables in function 'prvSetupTimerInterrupt'
                           2906 ;------------------------------------------------------------
                           2907 ;ucOriginalSFRPage         Allocated with name '_prvSetupTimerInterrupt_ucOriginalSFRPage_1_1'
                           2908 ;ulTicksPerSecond          Allocated with name '_prvSetupTimerInterrupt_ulTicksPerSecond_1_1'
                           2909 ;ulCaptureTime             Allocated with name '_prvSetupTimerInterrupt_ulCaptureTime_1_1'
                           2910 ;ulCaptureValue            Allocated with name '_prvSetupTimerInterrupt_ulCaptureValue_1_1'
                           2911 ;ucLowCaptureByte          Allocated with name '_prvSetupTimerInterrupt_ucLowCaptureByte_1_1'
                           2912 ;ucHighCaptureByte         Allocated with name '_prvSetupTimerInterrupt_ucHighCaptureByte_1_1'
                           2913 ;------------------------------------------------------------
                           2914 ;	../src/projectSpecificHardwareInterface_C8051F040.c:650: static void prvSetupTimerInterrupt( void )
                           2915 ;	-----------------------------------------
                           2916 ;	 function prvSetupTimerInterrupt
                           2917 ;	-----------------------------------------
   097B                    2918 _prvSetupTimerInterrupt:
                           2919 ;	../src/projectSpecificHardwareInterface_C8051F040.c:664: ucOriginalSFRPage = SFRPAGE;
   097B 90s08rE5           2920 	mov	dptr,#_prvSetupTimerInterrupt_ucOriginalSFRPage_1_1
   097E E5 84              2921 	mov	a,_SFRPAGE
   0980 F0                 2922 	movx	@dptr,a
                           2923 ;	../src/projectSpecificHardwareInterface_C8051F040.c:665: SFRPAGE = 0;
   0981 75 84 00           2924 	mov	_SFRPAGE,#0x00
                           2925 ;	../src/projectSpecificHardwareInterface_C8051F040.c:668: TMR2CF = ( unsigned char ) 0;
   0984 75 C9 00           2926 	mov	_TMR2CF,#0x00
                           2927 ;	../src/projectSpecificHardwareInterface_C8051F040.c:671: RCAP2L = ucLowCaptureByte;
   0987 75 CA D1           2928 	mov	_RCAP2L,#0xD1
                           2929 ;	../src/projectSpecificHardwareInterface_C8051F040.c:672: RCAP2H = ucHighCaptureByte;
   098A 75 CB FF           2930 	mov	_RCAP2H,#0xFF
                           2931 ;	../src/projectSpecificHardwareInterface_C8051F040.c:675: TMR2L = ucLowCaptureByte;
   098D 75 CC D1           2932 	mov	_TMR2L,#0xD1
                           2933 ;	../src/projectSpecificHardwareInterface_C8051F040.c:676: TMR2H = ucHighCaptureByte;
   0990 75 CD FF           2934 	mov	_TMR2H,#0xFF
                           2935 ;	../src/projectSpecificHardwareInterface_C8051F040.c:679: IE |= portTIMER_2_INTERRUPT_ENABLE;
   0993 43 A8 20           2936 	orl	_IE,#0x20
                           2937 ;	../src/projectSpecificHardwareInterface_C8051F040.c:682: TMR2CN = portENABLE_TIMER ;
   0996 75 C8 06           2938 	mov	_TMR2CN,#0x06
                           2939 ;	../src/projectSpecificHardwareInterface_C8051F040.c:685: SFRPAGE	= 1 ;
   0999 75 84 01           2940 	mov	_SFRPAGE,#0x01
                           2941 ;	../src/projectSpecificHardwareInterface_C8051F040.c:686: TMR3CF	= 0x0A ;
   099C 75 C9 0A           2942 	mov	_TMR3CF,#0x0A
                           2943 ;	../src/projectSpecificHardwareInterface_C8051F040.c:688: RCAP3L	= 0xCE ;	// 120kHz on boost boards
   099F 75 CA CE           2944 	mov	_RCAP3L,#0xCE
                           2945 ;	../src/projectSpecificHardwareInterface_C8051F040.c:689: RCAP3H	= 0xFF ;	// 120kHz on boost boards
   09A2 75 CB FF           2946 	mov	_RCAP3H,#0xFF
                           2947 ;	../src/projectSpecificHardwareInterface_C8051F040.c:691: TMR3L	= 0xF0 ;
   09A5 75 CC F0           2948 	mov	_TMR3L,#0xF0
                           2949 ;	../src/projectSpecificHardwareInterface_C8051F040.c:692: TMR3H	= 0xFF ;
   09A8 75 CD FF           2950 	mov	_TMR3H,#0xFF
                           2951 ;	../src/projectSpecificHardwareInterface_C8051F040.c:693: TMR3CN	= 0x04 ;
   09AB 75 C8 04           2952 	mov	_TMR3CN,#0x04
                           2953 ;	../src/projectSpecificHardwareInterface_C8051F040.c:697: SFRPAGE = ucOriginalSFRPage;
   09AE 90s08rE5           2954 	mov	dptr,#_prvSetupTimerInterrupt_ucOriginalSFRPage_1_1
   09B1 E0                 2955 	movx	a,@dptr
   09B2 F5 84              2956 	mov	_SFRPAGE,a
   09B4 22                 2957 	ret
                           2958 ;------------------------------------------------------------
                           2959 ;Allocation info for local variables in function 'addTickCounter'
                           2960 ;------------------------------------------------------------
                           2961 ;pointerToIncrement        Allocated with name '_addTickCounter_pointerToIncrement_1_1'
                           2962 ;i                         Allocated with name '_addTickCounter_i_1_1'
                           2963 ;sloc0                     Allocated with name '_addTickCounter_sloc0_1_0'
                           2964 ;------------------------------------------------------------
                           2965 ;	../src/projectSpecificHardwareInterface_C8051F040.c:705: void addTickCounter(							unsigned short* pointerToIncrement)
                           2966 ;	-----------------------------------------
                           2967 ;	 function addTickCounter
                           2968 ;	-----------------------------------------
   09B5                    2969 _addTickCounter:
   09B5 AA F0              2970 	mov	r2,b
   09B7 AB 83              2971 	mov	r3,dph
   09B9 E5 82              2972 	mov	a,dpl
   09BB 90s09r04           2973 	mov	dptr,#_addTickCounter_pointerToIncrement_1_1
   09BE F0                 2974 	movx	@dptr,a
   09BF A3                 2975 	inc	dptr
   09C0 EB                 2976 	mov	a,r3
   09C1 F0                 2977 	movx	@dptr,a
   09C2 A3                 2978 	inc	dptr
   09C3 EA                 2979 	mov	a,r2
   09C4 F0                 2980 	movx	@dptr,a
                           2981 ;	../src/projectSpecificHardwareInterface_C8051F040.c:709: for( i = 0 ; i < configNUMBER_OF_TICK_COUNTERS ; i++ )
   09C5 7A 00              2982 	mov	r2,#0x00
   09C7                    2983 00105$:
   09C7 BA 0A 00           2984 	cjne	r2,#0x0A,00115$
   09CA                    2985 00115$:
   09CA 50 4B              2986 	jnc	00109$
                           2987 ;	../src/projectSpecificHardwareInterface_C8051F040.c:713: if(tickCounterToIncrement[i] == pointerToIncrement)
   09CC EA                 2988 	mov	a,r2
   09CD 75 F0 03           2989 	mov	b,#0x03
   09D0 A4                 2990 	mul	ab
   09D1 24rE6              2991 	add	a,#_tickCounterToIncrement
   09D3 FB                 2992 	mov	r3,a
   09D4 E4                 2993 	clr	a
   09D5 34s08              2994 	addc	a,#(_tickCounterToIncrement >> 8)
   09D7 FC                 2995 	mov	r4,a
   09D8 8B 82              2996 	mov	dpl,r3
   09DA 8C 83              2997 	mov	dph,r4
   09DC E0                 2998 	movx	a,@dptr
   09DD FD                 2999 	mov	r5,a
   09DE A3                 3000 	inc	dptr
   09DF E0                 3001 	movx	a,@dptr
   09E0 FE                 3002 	mov	r6,a
   09E1 A3                 3003 	inc	dptr
   09E2 E0                 3004 	movx	a,@dptr
   09E3 FF                 3005 	mov	r7,a
   09E4 90s09r04           3006 	mov	dptr,#_addTickCounter_pointerToIncrement_1_1
   09E7 E0                 3007 	movx	a,@dptr
   09E8 F5*00              3008 	mov	_addTickCounter_sloc0_1_0,a
   09EA A3                 3009 	inc	dptr
   09EB E0                 3010 	movx	a,@dptr
   09EC F5*01              3011 	mov	(_addTickCounter_sloc0_1_0 + 1),a
   09EE A3                 3012 	inc	dptr
   09EF E0                 3013 	movx	a,@dptr
   09F0 F5*02              3014 	mov	(_addTickCounter_sloc0_1_0 + 2),a
   09F2 ED                 3015 	mov	a,r5
   09F3 B5*00 09           3016 	cjne	a,_addTickCounter_sloc0_1_0,00117$
   09F6 EE                 3017 	mov	a,r6
   09F7 B5*01 05           3018 	cjne	a,(_addTickCounter_sloc0_1_0 + 1),00117$
   09FA EF                 3019 	mov	a,r7
   09FB B5*02 01           3020 	cjne	a,(_addTickCounter_sloc0_1_0 + 2),00117$
   09FE 22                 3021 	ret
   09FF                    3022 00117$:
                           3023 ;	../src/projectSpecificHardwareInterface_C8051F040.c:718: if(tickCounterToIncrement[i] == 0)
   09FF ED                 3024 	mov	a,r5
   0A00 4E                 3025 	orl	a,r6
   0A01 4F                 3026 	orl	a,r7
   0A02 70 10              3027 	jnz	00107$
                           3028 ;	../src/projectSpecificHardwareInterface_C8051F040.c:720: tickCounterToIncrement[i] = pointerToIncrement ;
   0A04 8B 82              3029 	mov	dpl,r3
   0A06 8C 83              3030 	mov	dph,r4
   0A08 E5*00              3031 	mov	a,_addTickCounter_sloc0_1_0
   0A0A F0                 3032 	movx	@dptr,a
   0A0B A3                 3033 	inc	dptr
   0A0C E5*01              3034 	mov	a,(_addTickCounter_sloc0_1_0 + 1)
   0A0E F0                 3035 	movx	@dptr,a
   0A0F A3                 3036 	inc	dptr
   0A10 E5*02              3037 	mov	a,(_addTickCounter_sloc0_1_0 + 2)
   0A12 F0                 3038 	movx	@dptr,a
                           3039 ;	../src/projectSpecificHardwareInterface_C8051F040.c:722: break ;
   0A13 22                 3040 	ret
   0A14                    3041 00107$:
                           3042 ;	../src/projectSpecificHardwareInterface_C8051F040.c:709: for( i = 0 ; i < configNUMBER_OF_TICK_COUNTERS ; i++ )
   0A14 0A                 3043 	inc	r2
   0A15 80 B0              3044 	sjmp	00105$
   0A17                    3045 00109$:
   0A17 22                 3046 	ret
                           3047 ;------------------------------------------------------------
                           3048 ;Allocation info for local variables in function 'vTimer2ISR'
                           3049 ;------------------------------------------------------------
                           3050 ;i                         Allocated with name '_vTimer2ISR_i_1_1'
                           3051 ;------------------------------------------------------------
                           3052 ;	../src/projectSpecificHardwareInterface_C8051F040.c:731: void vTimer2ISR( void ) interrupt 5
                           3053 ;	-----------------------------------------
                           3054 ;	 function vTimer2ISR
                           3055 ;	-----------------------------------------
   0A18                    3056 _vTimer2ISR:
   0A18 C0*00              3057 	push	bits
   0A1A C0 E0              3058 	push	acc
   0A1C C0 F0              3059 	push	b
   0A1E C0 82              3060 	push	dpl
   0A20 C0 83              3061 	push	dph
   0A22 C0 02              3062 	push	(0+2)
   0A24 C0 03              3063 	push	(0+3)
   0A26 C0 04              3064 	push	(0+4)
   0A28 C0 05              3065 	push	(0+5)
   0A2A C0 06              3066 	push	(0+6)
   0A2C C0 07              3067 	push	(0+7)
   0A2E C0 00              3068 	push	(0+0)
   0A30 C0 01              3069 	push	(0+1)
   0A32 C0 D0              3070 	push	psw
   0A34 75 D0 00           3071 	mov	psw,#0x00
                           3072 ;	../src/projectSpecificHardwareInterface_C8051F040.c:735: for( i = 0 ; i < configNUMBER_OF_TICK_COUNTERS ; i++ )
   0A37 7A 00              3073 	mov	r2,#0x00
   0A39                    3074 00103$:
   0A39 BA 0A 00           3075 	cjne	r2,#0x0A,00113$
   0A3C                    3076 00113$:
   0A3C 50 41              3077 	jnc	00106$
                           3078 ;	../src/projectSpecificHardwareInterface_C8051F040.c:737: if(tickCounterToIncrement[i])
   0A3E EA                 3079 	mov	a,r2
   0A3F 75 F0 03           3080 	mov	b,#0x03
   0A42 A4                 3081 	mul	ab
   0A43 24rE6              3082 	add	a,#_tickCounterToIncrement
   0A45 F5 82              3083 	mov	dpl,a
   0A47 E4                 3084 	clr	a
   0A48 34s08              3085 	addc	a,#(_tickCounterToIncrement >> 8)
   0A4A F5 83              3086 	mov	dph,a
   0A4C E0                 3087 	movx	a,@dptr
   0A4D FB                 3088 	mov	r3,a
   0A4E A3                 3089 	inc	dptr
   0A4F E0                 3090 	movx	a,@dptr
   0A50 FC                 3091 	mov	r4,a
   0A51 A3                 3092 	inc	dptr
   0A52 E0                 3093 	movx	a,@dptr
   0A53 FD                 3094 	mov	r5,a
   0A54 EB                 3095 	mov	a,r3
   0A55 4C                 3096 	orl	a,r4
   0A56 4D                 3097 	orl	a,r5
   0A57 60 23              3098 	jz	00105$
                           3099 ;	../src/projectSpecificHardwareInterface_C8051F040.c:739: *tickCounterToIncrement[i] += 1 ;
   0A59 8B 82              3100 	mov	dpl,r3
   0A5B 8C 83              3101 	mov	dph,r4
   0A5D 8D F0              3102 	mov	b,r5
   0A5F 12s00r00           3103 	lcall	__gptrget
   0A62 FE                 3104 	mov	r6,a
   0A63 A3                 3105 	inc	dptr
   0A64 12s00r00           3106 	lcall	__gptrget
   0A67 FF                 3107 	mov	r7,a
   0A68 0E                 3108 	inc	r6
   0A69 BE 00 01           3109 	cjne	r6,#0x00,00116$
   0A6C 0F                 3110 	inc	r7
   0A6D                    3111 00116$:
   0A6D 8B 82              3112 	mov	dpl,r3
   0A6F 8C 83              3113 	mov	dph,r4
   0A71 8D F0              3114 	mov	b,r5
   0A73 EE                 3115 	mov	a,r6
   0A74 12s00r00           3116 	lcall	__gptrput
   0A77 A3                 3117 	inc	dptr
   0A78 EF                 3118 	mov	a,r7
   0A79 12s00r00           3119 	lcall	__gptrput
   0A7C                    3120 00105$:
                           3121 ;	../src/projectSpecificHardwareInterface_C8051F040.c:735: for( i = 0 ; i < configNUMBER_OF_TICK_COUNTERS ; i++ )
   0A7C 0A                 3122 	inc	r2
   0A7D 80 BA              3123 	sjmp	00103$
   0A7F                    3124 00106$:
                           3125 ;	../src/projectSpecificHardwareInterface_C8051F040.c:743: taskSwitcherTickHook() ;
   0A7F 12s00r5B           3126 	lcall	_taskSwitcherTickHook
                           3127 ;	../src/projectSpecificHardwareInterface_C8051F040.c:745: portCLEAR_INTERRUPT_FLAG() ;
   0A82 53 C8 7F           3128 	anl	_TMR2CN,#0x7F
   0A85 D0 D0              3129 	pop	psw
   0A87 D0 01              3130 	pop	(0+1)
   0A89 D0 00              3131 	pop	(0+0)
   0A8B D0 07              3132 	pop	(0+7)
   0A8D D0 06              3133 	pop	(0+6)
   0A8F D0 05              3134 	pop	(0+5)
   0A91 D0 04              3135 	pop	(0+4)
   0A93 D0 03              3136 	pop	(0+3)
   0A95 D0 02              3137 	pop	(0+2)
   0A97 D0 83              3138 	pop	dph
   0A99 D0 82              3139 	pop	dpl
   0A9B D0 F0              3140 	pop	b
   0A9D D0 E0              3141 	pop	acc
   0A9F D0*00              3142 	pop	bits
   0AA1 32                 3143 	reti
                           3144 	.area CSEG    (CODE)
                           3145 	.area CONST   (CODE)
   0000                    3146 __str_0:
   0000 34 74 68 20 47 65  3147 	.ascii "4th Generation state machine test started."
        6E 65 72 61 74 69
        6F 6E 20 73 74 61
        74 65 20 6D 61 63
        68 69 6E 65 20 74
        65 73 74 20 73 74
        61 72 74 65 64 2E
   002A 00                 3148 	.db 0x00
   002B                    3149 __str_1:
   002B 6C 6F 6F 70        3150 	.ascii "loop"
   002F 00                 3151 	.db 0x00
                           3152 	.area XINIT   (CODE)
   0000                    3153 __xinit__countdown:
   0000 05 00              3154 	.byte #0x05,#0x00
                           3155 	.area CABS    (ABS,CODE)
