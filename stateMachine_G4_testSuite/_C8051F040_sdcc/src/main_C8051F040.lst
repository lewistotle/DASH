                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.0 #5416 (Mar 22 2009) (MINGW32)
                              4 ; This file was generated Mon Dec 28 02:58:58 2009
                              5 ;--------------------------------------------------------
                              6 	.module main_C8051F040
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _vTimer2ISR
                             13 	.globl _addTickCounter
                             14 	.globl _IsFull
                             15 	.globl _IsEmpty
                             16 	.globl _main
                             17 	.globl _P7_7
                             18 	.globl _P7_6
                             19 	.globl _P7_5
                             20 	.globl _P7_4
                             21 	.globl _P7_3
                             22 	.globl _P7_2
                             23 	.globl _P7_1
                             24 	.globl _P7_0
                             25 	.globl _CANTEST
                             26 	.globl _CANCCE
                             27 	.globl _CANDAR
                             28 	.globl _CANIF
                             29 	.globl _CANEIE
                             30 	.globl _CANSIE
                             31 	.globl _CANIE
                             32 	.globl _CANINIT
                             33 	.globl _SPIF
                             34 	.globl _WCOL
                             35 	.globl _MODF
                             36 	.globl _RXOVRN
                             37 	.globl _NSSMD1
                             38 	.globl _NSSMD0
                             39 	.globl _TXBMT
                             40 	.globl _SPIEN
                             41 	.globl _P6_7
                             42 	.globl _P6_6
                             43 	.globl _P6_5
                             44 	.globl _P6_4
                             45 	.globl _P6_3
                             46 	.globl _P6_2
                             47 	.globl _P6_1
                             48 	.globl _P6_0
                             49 	.globl _AD2EN
                             50 	.globl _AD2TM
                             51 	.globl _AD2INT
                             52 	.globl _AD2BUSY
                             53 	.globl _AD2CM2
                             54 	.globl _AD2CM1
                             55 	.globl _AD2CM0
                             56 	.globl _AD2WINT
                             57 	.globl _AD0EN
                             58 	.globl _AD0TM
                             59 	.globl _AD0INT
                             60 	.globl _AD0BUSY
                             61 	.globl _AD0CM1
                             62 	.globl _AD0CM0
                             63 	.globl _AD0WINT
                             64 	.globl _AD0LJST
                             65 	.globl _P5_7
                             66 	.globl _P5_6
                             67 	.globl _P5_5
                             68 	.globl _P5_4
                             69 	.globl _P5_3
                             70 	.globl _P5_2
                             71 	.globl _P5_1
                             72 	.globl _P5_0
                             73 	.globl _CF
                             74 	.globl _CR
                             75 	.globl _CCF5
                             76 	.globl _CCF4
                             77 	.globl _CCF3
                             78 	.globl _CCF2
                             79 	.globl _CCF1
                             80 	.globl _CCF0
                             81 	.globl _CY
                             82 	.globl _AC
                             83 	.globl _F0
                             84 	.globl _RS1
                             85 	.globl _RS0
                             86 	.globl _OV
                             87 	.globl _F1
                             88 	.globl _P
                             89 	.globl _P4_7
                             90 	.globl _P4_6
                             91 	.globl _P4_5
                             92 	.globl _P4_4
                             93 	.globl _P4_3
                             94 	.globl _P4_2
                             95 	.globl _P4_1
                             96 	.globl _P4_0
                             97 	.globl _TF4
                             98 	.globl _EXF4
                             99 	.globl _EXEN4
                            100 	.globl _TR4
                            101 	.globl _CT4
                            102 	.globl _CPRL4
                            103 	.globl _TF3
                            104 	.globl _EXF3
                            105 	.globl _EXEN3
                            106 	.globl _TR3
                            107 	.globl _CT3
                            108 	.globl _CPRL3
                            109 	.globl _TF2
                            110 	.globl _EXF2
                            111 	.globl _EXEN2
                            112 	.globl _TR2
                            113 	.globl _CT2
                            114 	.globl _CPRL2
                            115 	.globl _CANBOFF
                            116 	.globl _CANEWARN
                            117 	.globl _CANEPASS
                            118 	.globl _CANRXOK
                            119 	.globl _CANTXOK
                            120 	.globl _BUSY
                            121 	.globl _ENSMB
                            122 	.globl _STA
                            123 	.globl _STO
                            124 	.globl _SI
                            125 	.globl _AA
                            126 	.globl _SMBFTE
                            127 	.globl _SMBTOE
                            128 	.globl _PT2
                            129 	.globl _PS
                            130 	.globl _PS0
                            131 	.globl _PT1
                            132 	.globl _PX1
                            133 	.globl _PT0
                            134 	.globl _PX0
                            135 	.globl _P3_7
                            136 	.globl _P3_6
                            137 	.globl _P3_5
                            138 	.globl _P3_4
                            139 	.globl _P3_3
                            140 	.globl _P3_2
                            141 	.globl _P3_1
                            142 	.globl _P3_0
                            143 	.globl _EA
                            144 	.globl _ET2
                            145 	.globl _ES
                            146 	.globl _ES0
                            147 	.globl _ET1
                            148 	.globl _EX1
                            149 	.globl _ET0
                            150 	.globl _EX0
                            151 	.globl _P2_7
                            152 	.globl _P2_6
                            153 	.globl _P2_5
                            154 	.globl _P2_4
                            155 	.globl _P2_3
                            156 	.globl _P2_2
                            157 	.globl _P2_1
                            158 	.globl _P2_0
                            159 	.globl _S1MODE
                            160 	.globl _MCE1
                            161 	.globl _REN1
                            162 	.globl _TB81
                            163 	.globl _RB81
                            164 	.globl _TI1
                            165 	.globl _RI1
                            166 	.globl _SM00
                            167 	.globl _SM10
                            168 	.globl _SM20
                            169 	.globl _REN
                            170 	.globl _REN0
                            171 	.globl _TB80
                            172 	.globl _RB80
                            173 	.globl _TI
                            174 	.globl _TI0
                            175 	.globl _RI
                            176 	.globl _RI0
                            177 	.globl _P1_7
                            178 	.globl _P1_6
                            179 	.globl _P1_5
                            180 	.globl _P1_4
                            181 	.globl _P1_3
                            182 	.globl _P1_2
                            183 	.globl _P1_1
                            184 	.globl _P1_0
                            185 	.globl _CP2EN
                            186 	.globl _CP2OUT
                            187 	.globl _CP2RIF
                            188 	.globl _CP2FIF
                            189 	.globl _CP2HYP1
                            190 	.globl _CP2HYP0
                            191 	.globl _CP2HYN1
                            192 	.globl _CP2HYN0
                            193 	.globl _CP1EN
                            194 	.globl _CP1OUT
                            195 	.globl _CP1RIF
                            196 	.globl _CP1FIF
                            197 	.globl _CP1HYP1
                            198 	.globl _CP1HYP0
                            199 	.globl _CP1HYN1
                            200 	.globl _CP1HYN0
                            201 	.globl _CP0EN
                            202 	.globl _CP0OUT
                            203 	.globl _CP0RIF
                            204 	.globl _CP0FIF
                            205 	.globl _CP0HYP1
                            206 	.globl _CP0HYP0
                            207 	.globl _CP0HYN1
                            208 	.globl _CP0HYN0
                            209 	.globl _TF1
                            210 	.globl _TR1
                            211 	.globl _TF0
                            212 	.globl _TR0
                            213 	.globl _IE1
                            214 	.globl _IT1
                            215 	.globl _IE0
                            216 	.globl _IT0
                            217 	.globl _P0_7
                            218 	.globl _P0_6
                            219 	.globl _P0_5
                            220 	.globl _P0_4
                            221 	.globl _P0_3
                            222 	.globl _P0_2
                            223 	.globl _P0_1
                            224 	.globl _P0_0
                            225 	.globl _P7
                            226 	.globl _P6
                            227 	.globl _XBR3
                            228 	.globl _XBR2
                            229 	.globl _XBR1
                            230 	.globl _XBR0
                            231 	.globl _P5
                            232 	.globl _P4
                            233 	.globl _FLACL
                            234 	.globl _P3MDIN
                            235 	.globl _P2MDIN
                            236 	.globl _P1MDIN
                            237 	.globl _P3MDOUT
                            238 	.globl _P2MDOUT
                            239 	.globl _P1MDOUT
                            240 	.globl _P0MDOUT
                            241 	.globl _P7MDOUT
                            242 	.globl _P6MDOUT
                            243 	.globl _P5MDOUT
                            244 	.globl _P4MDOUT
                            245 	.globl _CLKSEL
                            246 	.globl _SFRPGCN
                            247 	.globl _OSCXCN
                            248 	.globl _OSCICL
                            249 	.globl _OSCICN
                            250 	.globl _CPT2MD
                            251 	.globl _CPT2CN
                            252 	.globl _ADC2CN
                            253 	.globl _TMR4H
                            254 	.globl _TMR4L
                            255 	.globl _RCAP4H
                            256 	.globl _RCAP4L
                            257 	.globl _TMR4CF
                            258 	.globl _TMR4CN
                            259 	.globl _ADC2LT
                            260 	.globl _ADC2GT
                            261 	.globl _ADC2
                            262 	.globl _ADC2CF
                            263 	.globl _AMX2SL
                            264 	.globl _AMX2CF
                            265 	.globl _CPT1MD
                            266 	.globl _CPT1CN
                            267 	.globl _CAN0CN
                            268 	.globl _CAN0TST
                            269 	.globl _CAN0ADR
                            270 	.globl _CAN0DATH
                            271 	.globl _CAN0DATL
                            272 	.globl _DAC1CN
                            273 	.globl _DAC1H
                            274 	.globl _DAC1L
                            275 	.globl _TMR3H
                            276 	.globl _TMR3L
                            277 	.globl _RCAP3H
                            278 	.globl _RCAP3L
                            279 	.globl _TMR3CF
                            280 	.globl _TMR3CN
                            281 	.globl _CAN0STA
                            282 	.globl _SBUF1
                            283 	.globl _SCON1
                            284 	.globl _CPT0MD
                            285 	.globl _CPT0CN
                            286 	.globl _PCA0CPH1
                            287 	.globl _PCA0CPL1
                            288 	.globl _PCA0CPH0
                            289 	.globl _PCA0CPL0
                            290 	.globl _PCA0H
                            291 	.globl _PCA0L
                            292 	.globl _SPI0CN
                            293 	.globl _RSTSRC
                            294 	.globl _PCA0CPH4
                            295 	.globl _PCA0CPL4
                            296 	.globl _PCA0CPH3
                            297 	.globl _PCA0CPL3
                            298 	.globl _PCA0CPH2
                            299 	.globl _PCA0CPL2
                            300 	.globl _ADC0CN
                            301 	.globl _PCA0CPH5
                            302 	.globl _PCA0CPL5
                            303 	.globl _PCA0CPM5
                            304 	.globl _PCA0CPM4
                            305 	.globl _PCA0CPM3
                            306 	.globl _PCA0CPM2
                            307 	.globl _PCA0CPM1
                            308 	.globl _PCA0CPM0
                            309 	.globl _PCA0MD
                            310 	.globl _PCA0CN
                            311 	.globl _HVA0CN
                            312 	.globl _DAC0CN
                            313 	.globl _DAC0H
                            314 	.globl _DAC0L
                            315 	.globl _REF0CN
                            316 	.globl _SMB0CR
                            317 	.globl _TH2
                            318 	.globl _TMR2H
                            319 	.globl _TL2
                            320 	.globl _TMR2L
                            321 	.globl _RCAP2H
                            322 	.globl _RCAP2L
                            323 	.globl _TMR2CF
                            324 	.globl _TMR2CN
                            325 	.globl _ADC0LTH
                            326 	.globl _ADC0LTL
                            327 	.globl _ADC0GTH
                            328 	.globl _ADC0GTL
                            329 	.globl _SMB0ADR
                            330 	.globl _SMB0DAT
                            331 	.globl _SMB0STA
                            332 	.globl _SMB0CN
                            333 	.globl _ADC0H
                            334 	.globl _ADC0L
                            335 	.globl _AMX0PRT
                            336 	.globl _ADC0CF
                            337 	.globl _AMX0SL
                            338 	.globl _AMX0CF
                            339 	.globl _SADEN0
                            340 	.globl _FLSCL
                            341 	.globl _SADDR0
                            342 	.globl _EMI0CF
                            343 	.globl __XPAGE
                            344 	.globl _EMI0CN
                            345 	.globl _EMI0TC
                            346 	.globl _SPI0CKR
                            347 	.globl _SPI0DAT
                            348 	.globl _SPI0CFG
                            349 	.globl _SBUF
                            350 	.globl _SBUF0
                            351 	.globl _SCON
                            352 	.globl _SCON0
                            353 	.globl _SSTA0
                            354 	.globl _PSCTL
                            355 	.globl _CKCON
                            356 	.globl _TH1
                            357 	.globl _TH0
                            358 	.globl _TL1
                            359 	.globl _TL0
                            360 	.globl _TMOD
                            361 	.globl _TCON
                            362 	.globl _WDTCN
                            363 	.globl _EIP2
                            364 	.globl _EIP1
                            365 	.globl _B
                            366 	.globl _EIE2
                            367 	.globl _EIE1
                            368 	.globl _ACC
                            369 	.globl _PSW
                            370 	.globl _IP
                            371 	.globl _P3
                            372 	.globl _IE
                            373 	.globl _P2
                            374 	.globl _P1
                            375 	.globl _PCON
                            376 	.globl _SFRLAST
                            377 	.globl _SFRNEXT
                            378 	.globl _SFRPAGE
                            379 	.globl _DPH
                            380 	.globl _DPL
                            381 	.globl _SP
                            382 	.globl _P0
                            383 	.globl _tickCounterToIncrement
                            384 	.globl _task_UART_gets_projectSpecific_PARM_3
                            385 	.globl _task_UART_gets_projectSpecific_PARM_2
                            386 	.globl _task_UART_puts_projectSpecific_PARM_2
                            387 	.globl _task_UART_putchar_projectSpecific_PARM_2
                            388 	.globl _Succ_PARM_2
                            389 	.globl _UARTtempBuffer
                            390 	.globl _pwm_setDutyCycleAsPercentage_projectSpecific_PARM_2
                            391 	.globl _pwm_adjustDutyCycle_projectSpecific_PARM_2
                            392 	.globl _pwm_setDutyCycle_projectSpecific_PARM_2
                            393 	.globl _taskSwitcherTickHook
                            394 	.globl _gpio_init_projectSpecific
                            395 	.globl _pwm_init_projectSpecific
                            396 	.globl _pwm_incrementDutyCycle_projectSpecific
                            397 	.globl _pwm_decrementDutyCycle_projectSpecific
                            398 	.globl _pwm_getDutyCycle_projectSpecific
                            399 	.globl _pwm_setDutyCycle_projectSpecific
                            400 	.globl _pwm_adjustDutyCycle_projectSpecific
                            401 	.globl _pwm_setDutyCycleAsPercentage_projectSpecific
                            402 	.globl _pwm_getDutyCycleAsPercentage_projectSpecific
                            403 	.globl _task_UART_init_projectSpecific
                            404 	.globl _task_UART_core_projectSpecific
                            405 	.globl _task_UART_putchar_projectSpecific
                            406 	.globl _task_UART_puts_projectSpecific
                            407 	.globl _task_UART_getchar_projectSpecific
                            408 	.globl _task_UART_gets_projectSpecific
                            409 	.globl _task_UART_isLineReady
                            410 	.globl _UART0_Init
                            411 	.globl _UART1_Init
                            412 	.globl _putchar
                            413 ;--------------------------------------------------------
                            414 ; special function registers
                            415 ;--------------------------------------------------------
                            416 	.area RSEG    (DATA)
                    0080    417 _P0	=	0x0080
                    0081    418 _SP	=	0x0081
                    0082    419 _DPL	=	0x0082
                    0083    420 _DPH	=	0x0083
                    0084    421 _SFRPAGE	=	0x0084
                    0085    422 _SFRNEXT	=	0x0085
                    0086    423 _SFRLAST	=	0x0086
                    0087    424 _PCON	=	0x0087
                    0090    425 _P1	=	0x0090
                    00A0    426 _P2	=	0x00a0
                    00A8    427 _IE	=	0x00a8
                    00B0    428 _P3	=	0x00b0
                    00B8    429 _IP	=	0x00b8
                    00D0    430 _PSW	=	0x00d0
                    00E0    431 _ACC	=	0x00e0
                    00E6    432 _EIE1	=	0x00e6
                    00E7    433 _EIE2	=	0x00e7
                    00F0    434 _B	=	0x00f0
                    00F6    435 _EIP1	=	0x00f6
                    00F7    436 _EIP2	=	0x00f7
                    00FF    437 _WDTCN	=	0x00ff
                    0088    438 _TCON	=	0x0088
                    0089    439 _TMOD	=	0x0089
                    008A    440 _TL0	=	0x008a
                    008B    441 _TL1	=	0x008b
                    008C    442 _TH0	=	0x008c
                    008D    443 _TH1	=	0x008d
                    008E    444 _CKCON	=	0x008e
                    008F    445 _PSCTL	=	0x008f
                    0091    446 _SSTA0	=	0x0091
                    0098    447 _SCON0	=	0x0098
                    0098    448 _SCON	=	0x0098
                    0099    449 _SBUF0	=	0x0099
                    0099    450 _SBUF	=	0x0099
                    009A    451 _SPI0CFG	=	0x009a
                    009B    452 _SPI0DAT	=	0x009b
                    009D    453 _SPI0CKR	=	0x009d
                    00A1    454 _EMI0TC	=	0x00a1
                    00A2    455 _EMI0CN	=	0x00a2
                    00A2    456 __XPAGE	=	0x00a2
                    00A3    457 _EMI0CF	=	0x00a3
                    00A9    458 _SADDR0	=	0x00a9
                    00B7    459 _FLSCL	=	0x00b7
                    00B9    460 _SADEN0	=	0x00b9
                    00BA    461 _AMX0CF	=	0x00ba
                    00BB    462 _AMX0SL	=	0x00bb
                    00BC    463 _ADC0CF	=	0x00bc
                    00BD    464 _AMX0PRT	=	0x00bd
                    00BE    465 _ADC0L	=	0x00be
                    00BF    466 _ADC0H	=	0x00bf
                    00C0    467 _SMB0CN	=	0x00c0
                    00C1    468 _SMB0STA	=	0x00c1
                    00C2    469 _SMB0DAT	=	0x00c2
                    00C3    470 _SMB0ADR	=	0x00c3
                    00C4    471 _ADC0GTL	=	0x00c4
                    00C5    472 _ADC0GTH	=	0x00c5
                    00C6    473 _ADC0LTL	=	0x00c6
                    00C7    474 _ADC0LTH	=	0x00c7
                    00C8    475 _TMR2CN	=	0x00c8
                    00C9    476 _TMR2CF	=	0x00c9
                    00CA    477 _RCAP2L	=	0x00ca
                    00CB    478 _RCAP2H	=	0x00cb
                    00CC    479 _TMR2L	=	0x00cc
                    00CC    480 _TL2	=	0x00cc
                    00CD    481 _TMR2H	=	0x00cd
                    00CD    482 _TH2	=	0x00cd
                    00CF    483 _SMB0CR	=	0x00cf
                    00D1    484 _REF0CN	=	0x00d1
                    00D2    485 _DAC0L	=	0x00d2
                    00D3    486 _DAC0H	=	0x00d3
                    00D4    487 _DAC0CN	=	0x00d4
                    00D6    488 _HVA0CN	=	0x00d6
                    00D8    489 _PCA0CN	=	0x00d8
                    00D9    490 _PCA0MD	=	0x00d9
                    00DA    491 _PCA0CPM0	=	0x00da
                    00DB    492 _PCA0CPM1	=	0x00db
                    00DC    493 _PCA0CPM2	=	0x00dc
                    00DD    494 _PCA0CPM3	=	0x00dd
                    00DE    495 _PCA0CPM4	=	0x00de
                    00DF    496 _PCA0CPM5	=	0x00df
                    00E1    497 _PCA0CPL5	=	0x00e1
                    00E2    498 _PCA0CPH5	=	0x00e2
                    00E8    499 _ADC0CN	=	0x00e8
                    00E9    500 _PCA0CPL2	=	0x00e9
                    00EA    501 _PCA0CPH2	=	0x00ea
                    00EB    502 _PCA0CPL3	=	0x00eb
                    00EC    503 _PCA0CPH3	=	0x00ec
                    00ED    504 _PCA0CPL4	=	0x00ed
                    00EE    505 _PCA0CPH4	=	0x00ee
                    00EF    506 _RSTSRC	=	0x00ef
                    00F8    507 _SPI0CN	=	0x00f8
                    00F9    508 _PCA0L	=	0x00f9
                    00FA    509 _PCA0H	=	0x00fa
                    00FB    510 _PCA0CPL0	=	0x00fb
                    00FC    511 _PCA0CPH0	=	0x00fc
                    00FD    512 _PCA0CPL1	=	0x00fd
                    00FE    513 _PCA0CPH1	=	0x00fe
                    0088    514 _CPT0CN	=	0x0088
                    0089    515 _CPT0MD	=	0x0089
                    0098    516 _SCON1	=	0x0098
                    0099    517 _SBUF1	=	0x0099
                    00C0    518 _CAN0STA	=	0x00c0
                    00C8    519 _TMR3CN	=	0x00c8
                    00C9    520 _TMR3CF	=	0x00c9
                    00CA    521 _RCAP3L	=	0x00ca
                    00CB    522 _RCAP3H	=	0x00cb
                    00CC    523 _TMR3L	=	0x00cc
                    00CD    524 _TMR3H	=	0x00cd
                    00D2    525 _DAC1L	=	0x00d2
                    00D3    526 _DAC1H	=	0x00d3
                    00D4    527 _DAC1CN	=	0x00d4
                    00D8    528 _CAN0DATL	=	0x00d8
                    00D9    529 _CAN0DATH	=	0x00d9
                    00DA    530 _CAN0ADR	=	0x00da
                    00DB    531 _CAN0TST	=	0x00db
                    00F8    532 _CAN0CN	=	0x00f8
                    0088    533 _CPT1CN	=	0x0088
                    0089    534 _CPT1MD	=	0x0089
                    00BA    535 _AMX2CF	=	0x00ba
                    00BB    536 _AMX2SL	=	0x00bb
                    00BC    537 _ADC2CF	=	0x00bc
                    00BE    538 _ADC2	=	0x00be
                    00C4    539 _ADC2GT	=	0x00c4
                    00C6    540 _ADC2LT	=	0x00c6
                    00C8    541 _TMR4CN	=	0x00c8
                    00C9    542 _TMR4CF	=	0x00c9
                    00CA    543 _RCAP4L	=	0x00ca
                    00CB    544 _RCAP4H	=	0x00cb
                    00CC    545 _TMR4L	=	0x00cc
                    00CD    546 _TMR4H	=	0x00cd
                    00E8    547 _ADC2CN	=	0x00e8
                    0088    548 _CPT2CN	=	0x0088
                    0089    549 _CPT2MD	=	0x0089
                    008A    550 _OSCICN	=	0x008a
                    008B    551 _OSCICL	=	0x008b
                    008C    552 _OSCXCN	=	0x008c
                    0096    553 _SFRPGCN	=	0x0096
                    0097    554 _CLKSEL	=	0x0097
                    009C    555 _P4MDOUT	=	0x009c
                    009D    556 _P5MDOUT	=	0x009d
                    009E    557 _P6MDOUT	=	0x009e
                    009F    558 _P7MDOUT	=	0x009f
                    00A4    559 _P0MDOUT	=	0x00a4
                    00A5    560 _P1MDOUT	=	0x00a5
                    00A6    561 _P2MDOUT	=	0x00a6
                    00A7    562 _P3MDOUT	=	0x00a7
                    00AD    563 _P1MDIN	=	0x00ad
                    00AE    564 _P2MDIN	=	0x00ae
                    00AF    565 _P3MDIN	=	0x00af
                    00B7    566 _FLACL	=	0x00b7
                    00C8    567 _P4	=	0x00c8
                    00D8    568 _P5	=	0x00d8
                    00E1    569 _XBR0	=	0x00e1
                    00E2    570 _XBR1	=	0x00e2
                    00E3    571 _XBR2	=	0x00e3
                    00E4    572 _XBR3	=	0x00e4
                    00E8    573 _P6	=	0x00e8
                    00F8    574 _P7	=	0x00f8
                            575 ;--------------------------------------------------------
                            576 ; special function bits
                            577 ;--------------------------------------------------------
                            578 	.area RSEG    (DATA)
                    0080    579 _P0_0	=	0x0080
                    0081    580 _P0_1	=	0x0081
                    0082    581 _P0_2	=	0x0082
                    0083    582 _P0_3	=	0x0083
                    0084    583 _P0_4	=	0x0084
                    0085    584 _P0_5	=	0x0085
                    0086    585 _P0_6	=	0x0086
                    0087    586 _P0_7	=	0x0087
                    0088    587 _IT0	=	0x0088
                    0089    588 _IE0	=	0x0089
                    008A    589 _IT1	=	0x008a
                    008B    590 _IE1	=	0x008b
                    008C    591 _TR0	=	0x008c
                    008D    592 _TF0	=	0x008d
                    008E    593 _TR1	=	0x008e
                    008F    594 _TF1	=	0x008f
                    0088    595 _CP0HYN0	=	0x0088
                    0089    596 _CP0HYN1	=	0x0089
                    008A    597 _CP0HYP0	=	0x008a
                    008B    598 _CP0HYP1	=	0x008b
                    008C    599 _CP0FIF	=	0x008c
                    008D    600 _CP0RIF	=	0x008d
                    008E    601 _CP0OUT	=	0x008e
                    008F    602 _CP0EN	=	0x008f
                    0088    603 _CP1HYN0	=	0x0088
                    0089    604 _CP1HYN1	=	0x0089
                    008A    605 _CP1HYP0	=	0x008a
                    008B    606 _CP1HYP1	=	0x008b
                    008C    607 _CP1FIF	=	0x008c
                    008D    608 _CP1RIF	=	0x008d
                    008E    609 _CP1OUT	=	0x008e
                    008F    610 _CP1EN	=	0x008f
                    0088    611 _CP2HYN0	=	0x0088
                    0089    612 _CP2HYN1	=	0x0089
                    008A    613 _CP2HYP0	=	0x008a
                    008B    614 _CP2HYP1	=	0x008b
                    008C    615 _CP2FIF	=	0x008c
                    008D    616 _CP2RIF	=	0x008d
                    008E    617 _CP2OUT	=	0x008e
                    008F    618 _CP2EN	=	0x008f
                    0090    619 _P1_0	=	0x0090
                    0091    620 _P1_1	=	0x0091
                    0092    621 _P1_2	=	0x0092
                    0093    622 _P1_3	=	0x0093
                    0094    623 _P1_4	=	0x0094
                    0095    624 _P1_5	=	0x0095
                    0096    625 _P1_6	=	0x0096
                    0097    626 _P1_7	=	0x0097
                    0098    627 _RI0	=	0x0098
                    0098    628 _RI	=	0x0098
                    0099    629 _TI0	=	0x0099
                    0099    630 _TI	=	0x0099
                    009A    631 _RB80	=	0x009a
                    009B    632 _TB80	=	0x009b
                    009C    633 _REN0	=	0x009c
                    009C    634 _REN	=	0x009c
                    009D    635 _SM20	=	0x009d
                    009E    636 _SM10	=	0x009e
                    009F    637 _SM00	=	0x009f
                    0098    638 _RI1	=	0x0098
                    0099    639 _TI1	=	0x0099
                    009A    640 _RB81	=	0x009a
                    009B    641 _TB81	=	0x009b
                    009C    642 _REN1	=	0x009c
                    009D    643 _MCE1	=	0x009d
                    009F    644 _S1MODE	=	0x009f
                    00A0    645 _P2_0	=	0x00a0
                    00A1    646 _P2_1	=	0x00a1
                    00A2    647 _P2_2	=	0x00a2
                    00A3    648 _P2_3	=	0x00a3
                    00A4    649 _P2_4	=	0x00a4
                    00A5    650 _P2_5	=	0x00a5
                    00A6    651 _P2_6	=	0x00a6
                    00A7    652 _P2_7	=	0x00a7
                    00A8    653 _EX0	=	0x00a8
                    00A9    654 _ET0	=	0x00a9
                    00AA    655 _EX1	=	0x00aa
                    00AB    656 _ET1	=	0x00ab
                    00AC    657 _ES0	=	0x00ac
                    00AC    658 _ES	=	0x00ac
                    00AD    659 _ET2	=	0x00ad
                    00AF    660 _EA	=	0x00af
                    00B0    661 _P3_0	=	0x00b0
                    00B1    662 _P3_1	=	0x00b1
                    00B2    663 _P3_2	=	0x00b2
                    00B3    664 _P3_3	=	0x00b3
                    00B4    665 _P3_4	=	0x00b4
                    00B5    666 _P3_5	=	0x00b5
                    00B6    667 _P3_6	=	0x00b6
                    00B7    668 _P3_7	=	0x00b7
                    00B8    669 _PX0	=	0x00b8
                    00B9    670 _PT0	=	0x00b9
                    00BA    671 _PX1	=	0x00ba
                    00BB    672 _PT1	=	0x00bb
                    00BC    673 _PS0	=	0x00bc
                    00BC    674 _PS	=	0x00bc
                    00BD    675 _PT2	=	0x00bd
                    00C0    676 _SMBTOE	=	0x00c0
                    00C1    677 _SMBFTE	=	0x00c1
                    00C2    678 _AA	=	0x00c2
                    00C3    679 _SI	=	0x00c3
                    00C4    680 _STO	=	0x00c4
                    00C5    681 _STA	=	0x00c5
                    00C6    682 _ENSMB	=	0x00c6
                    00C7    683 _BUSY	=	0x00c7
                    00C3    684 _CANTXOK	=	0x00c3
                    00C4    685 _CANRXOK	=	0x00c4
                    00C5    686 _CANEPASS	=	0x00c5
                    00C6    687 _CANEWARN	=	0x00c6
                    00C7    688 _CANBOFF	=	0x00c7
                    00C8    689 _CPRL2	=	0x00c8
                    00C9    690 _CT2	=	0x00c9
                    00CA    691 _TR2	=	0x00ca
                    00CB    692 _EXEN2	=	0x00cb
                    00CE    693 _EXF2	=	0x00ce
                    00CF    694 _TF2	=	0x00cf
                    00C8    695 _CPRL3	=	0x00c8
                    00C9    696 _CT3	=	0x00c9
                    00CA    697 _TR3	=	0x00ca
                    00CB    698 _EXEN3	=	0x00cb
                    00CE    699 _EXF3	=	0x00ce
                    00CF    700 _TF3	=	0x00cf
                    00C8    701 _CPRL4	=	0x00c8
                    00C9    702 _CT4	=	0x00c9
                    00CA    703 _TR4	=	0x00ca
                    00CB    704 _EXEN4	=	0x00cb
                    00CE    705 _EXF4	=	0x00ce
                    00CF    706 _TF4	=	0x00cf
                    00C8    707 _P4_0	=	0x00c8
                    00C9    708 _P4_1	=	0x00c9
                    00CA    709 _P4_2	=	0x00ca
                    00CB    710 _P4_3	=	0x00cb
                    00CC    711 _P4_4	=	0x00cc
                    00CD    712 _P4_5	=	0x00cd
                    00CE    713 _P4_6	=	0x00ce
                    00CF    714 _P4_7	=	0x00cf
                    00D0    715 _P	=	0x00d0
                    00D1    716 _F1	=	0x00d1
                    00D2    717 _OV	=	0x00d2
                    00D3    718 _RS0	=	0x00d3
                    00D4    719 _RS1	=	0x00d4
                    00D5    720 _F0	=	0x00d5
                    00D6    721 _AC	=	0x00d6
                    00D7    722 _CY	=	0x00d7
                    00D8    723 _CCF0	=	0x00d8
                    00D9    724 _CCF1	=	0x00d9
                    00DA    725 _CCF2	=	0x00da
                    00DB    726 _CCF3	=	0x00db
                    00DC    727 _CCF4	=	0x00dc
                    00DD    728 _CCF5	=	0x00dd
                    00DE    729 _CR	=	0x00de
                    00DF    730 _CF	=	0x00df
                    00D8    731 _P5_0	=	0x00d8
                    00D9    732 _P5_1	=	0x00d9
                    00DA    733 _P5_2	=	0x00da
                    00DB    734 _P5_3	=	0x00db
                    00DC    735 _P5_4	=	0x00dc
                    00DD    736 _P5_5	=	0x00dd
                    00DE    737 _P5_6	=	0x00de
                    00DF    738 _P5_7	=	0x00df
                    00E8    739 _AD0LJST	=	0x00e8
                    00E9    740 _AD0WINT	=	0x00e9
                    00EA    741 _AD0CM0	=	0x00ea
                    00EB    742 _AD0CM1	=	0x00eb
                    00EC    743 _AD0BUSY	=	0x00ec
                    00ED    744 _AD0INT	=	0x00ed
                    00EE    745 _AD0TM	=	0x00ee
                    00EF    746 _AD0EN	=	0x00ef
                    00E8    747 _AD2WINT	=	0x00e8
                    00E9    748 _AD2CM0	=	0x00e9
                    00EA    749 _AD2CM1	=	0x00ea
                    00EB    750 _AD2CM2	=	0x00eb
                    00EC    751 _AD2BUSY	=	0x00ec
                    00ED    752 _AD2INT	=	0x00ed
                    00EE    753 _AD2TM	=	0x00ee
                    00EF    754 _AD2EN	=	0x00ef
                    00E8    755 _P6_0	=	0x00e8
                    00E9    756 _P6_1	=	0x00e9
                    00EA    757 _P6_2	=	0x00ea
                    00EB    758 _P6_3	=	0x00eb
                    00EC    759 _P6_4	=	0x00ec
                    00ED    760 _P6_5	=	0x00ed
                    00EE    761 _P6_6	=	0x00ee
                    00EF    762 _P6_7	=	0x00ef
                    00F8    763 _SPIEN	=	0x00f8
                    00F9    764 _TXBMT	=	0x00f9
                    00FA    765 _NSSMD0	=	0x00fa
                    00FB    766 _NSSMD1	=	0x00fb
                    00FC    767 _RXOVRN	=	0x00fc
                    00FD    768 _MODF	=	0x00fd
                    00FE    769 _WCOL	=	0x00fe
                    00FF    770 _SPIF	=	0x00ff
                    00F8    771 _CANINIT	=	0x00f8
                    00F9    772 _CANIE	=	0x00f9
                    00FA    773 _CANSIE	=	0x00fa
                    00FB    774 _CANEIE	=	0x00fb
                    00FC    775 _CANIF	=	0x00fc
                    00FD    776 _CANDAR	=	0x00fd
                    00FE    777 _CANCCE	=	0x00fe
                    00FF    778 _CANTEST	=	0x00ff
                    00F8    779 _P7_0	=	0x00f8
                    00F9    780 _P7_1	=	0x00f9
                    00FA    781 _P7_2	=	0x00fa
                    00FB    782 _P7_3	=	0x00fb
                    00FC    783 _P7_4	=	0x00fc
                    00FD    784 _P7_5	=	0x00fd
                    00FE    785 _P7_6	=	0x00fe
                    00FF    786 _P7_7	=	0x00ff
                            787 ;--------------------------------------------------------
                            788 ; overlayable register banks
                            789 ;--------------------------------------------------------
                            790 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     791 	.ds 8
                            792 ;--------------------------------------------------------
                            793 ; overlayable bit register bank
                            794 ;--------------------------------------------------------
                            795 	.area BIT_BANK	(REL,OVR,DATA)
   0000                     796 bits:
   0000                     797 	.ds 1
                    8000    798 	b0 = bits[0]
                    8100    799 	b1 = bits[1]
                    8200    800 	b2 = bits[2]
                    8300    801 	b3 = bits[3]
                    8400    802 	b4 = bits[4]
                    8500    803 	b5 = bits[5]
                    8600    804 	b6 = bits[6]
                    8700    805 	b7 = bits[7]
                            806 ;--------------------------------------------------------
                            807 ; internal ram data
                            808 ;--------------------------------------------------------
                            809 	.area DSEG    (DATA)
   0000                     810 _task_UART_core_projectSpecific_sloc0_1_0:
   0000                     811 	.ds 1
   0001                     812 _task_UART_core_projectSpecific_sloc1_1_0:
   0001                     813 	.ds 3
   0004                     814 _task_UART_core_projectSpecific_sloc2_1_0:
   0004                     815 	.ds 2
   0006                     816 _task_UART_core_projectSpecific_sloc3_1_0:
   0006                     817 	.ds 3
   0009                     818 _task_UART_getchar_projectSpecific_sloc0_1_0:
   0009                     819 	.ds 3
   000C                     820 _task_UART_getchar_projectSpecific_sloc1_1_0:
   000C                     821 	.ds 2
   000E                     822 _task_UART_getchar_projectSpecific_sloc2_1_0:
   000E                     823 	.ds 3
   0011                     824 _task_UART_gets_projectSpecific_sloc0_1_0:
   0011                     825 	.ds 1
   0012                     826 _task_UART_gets_projectSpecific_sloc1_1_0:
   0012                     827 	.ds 2
                            828 ;--------------------------------------------------------
                            829 ; overlayable items in internal ram 
                            830 ;--------------------------------------------------------
                            831 	.area	OSEG    (OVR,DATA)
   0000                     832 _addTickCounter_sloc0_1_0::
   0000                     833 	.ds 3
                            834 ;--------------------------------------------------------
                            835 ; Stack segment in internal ram 
                            836 ;--------------------------------------------------------
                            837 	.area	SSEG	(DATA)
   0000                     838 __start__stack:
   0000                     839 	.ds	1
                            840 
                            841 ;--------------------------------------------------------
                            842 ; indirectly addressable internal ram data
                            843 ;--------------------------------------------------------
                            844 	.area ISEG    (DATA)
                            845 ;--------------------------------------------------------
                            846 ; absolute internal ram data
                            847 ;--------------------------------------------------------
                            848 	.area IABS    (ABS,DATA)
                            849 	.area IABS    (ABS,DATA)
                            850 ;--------------------------------------------------------
                            851 ; bit data
                            852 ;--------------------------------------------------------
                            853 	.area BSEG    (BIT)
   0000                     854 _timeForTickProcessing:
   0000                     855 	.ds 1
   0001                     856 _pwm_init_projectSpecific_initialized_1_1:
   0001                     857 	.ds 1
   0002                     858 _task_UART_init_projectSpecific_timer1initialized_1_1:
   0002                     859 	.ds 1
   0003                     860 _task_UART_isLineReady_sloc0_1_0:
   0003                     861 	.ds 1
                            862 ;--------------------------------------------------------
                            863 ; paged external ram data
                            864 ;--------------------------------------------------------
                            865 	.area PSEG    (PAG,XDATA)
                            866 ;--------------------------------------------------------
                            867 ; external ram data
                            868 ;--------------------------------------------------------
                            869 	.area XSEG    (XDATA)
   0000                     870 _main_delayTimer_2_4:
   0000                     871 	.ds 2
   0002                     872 _pwm_init_projectSpecific_channelNumber_1_1:
   0002                     873 	.ds 1
   0003                     874 _pwm_setDutyCycle_projectSpecific_PARM_2:
   0003                     875 	.ds 1
   0004                     876 _pwm_adjustDutyCycle_projectSpecific_PARM_2:
   0004                     877 	.ds 1
   0005                     878 _pwm_setDutyCycleAsPercentage_projectSpecific_PARM_2:
   0005                     879 	.ds 1
   0006                     880 _UARTtempBuffer::
   0006                     881 	.ds 1100
   0452                     882 _IsEmpty_Q_1_1:
   0452                     883 	.ds 3
   0455                     884 _IsFull_Q_1_1:
   0455                     885 	.ds 3
   0458                     886 _Succ_PARM_2:
   0458                     887 	.ds 3
   045B                     888 _Succ_Value_1_1:
   045B                     889 	.ds 2
   045D                     890 _transmitBuffer:
   045D                     891 	.ds 1101
   08AA                     892 _receiveBuffer:
   08AA                     893 	.ds 11
   08B5                     894 _transmitBuffers:
   08B5                     895 	.ds 11
   08C0                     896 _receiveBuffers:
   08C0                     897 	.ds 11
   08CB                     898 _charSent:
   08CB                     899 	.ds 1
   08CC                     900 _lineReady:
   08CC                     901 	.ds 1
   08CD                     902 _task_UART_init_projectSpecific_channelNumber_1_1:
   08CD                     903 	.ds 1
   08CE                     904 _task_UART_core_projectSpecific_channelNumber_1_1:
   08CE                     905 	.ds 1
   08CF                     906 _task_UART_core_projectSpecific_Q_4_4:
   08CF                     907 	.ds 3
   08D2                     908 _task_UART_putchar_projectSpecific_PARM_2:
   08D2                     909 	.ds 1
   08D3                     910 _task_UART_putchar_projectSpecific_channelNumber_1_1:
   08D3                     911 	.ds 1
   08D4                     912 _task_UART_putchar_projectSpecific_Q_2_2:
   08D4                     913 	.ds 3
   08D7                     914 _task_UART_puts_projectSpecific_PARM_2:
   08D7                     915 	.ds 3
   08DA                     916 _task_UART_puts_projectSpecific_channelNumber_1_1:
   08DA                     917 	.ds 1
   08DB                     918 _task_UART_getchar_projectSpecific_channelNumber_1_1:
   08DB                     919 	.ds 1
   08DC                     920 _task_UART_getchar_projectSpecific_Q_2_2:
   08DC                     921 	.ds 3
   08DF                     922 _task_UART_gets_projectSpecific_PARM_2:
   08DF                     923 	.ds 3
   08E2                     924 _task_UART_gets_projectSpecific_PARM_3:
   08E2                     925 	.ds 2
   08E4                     926 _task_UART_gets_projectSpecific_channelNumber_1_1:
   08E4                     927 	.ds 1
   08E5                     928 _task_UART_isLineReady_channelNumber_1_1:
   08E5                     929 	.ds 1
   08E6                     930 _putchar_c_1_1:
   08E6                     931 	.ds 1
   08E7                     932 _prvSetupTimerInterrupt_ucOriginalSFRPage_1_1:
   08E7                     933 	.ds 1
   08E8                     934 _tickCounterToIncrement::
   08E8                     935 	.ds 30
   0906                     936 _addTickCounter_pointerToIncrement_1_1:
   0906                     937 	.ds 3
                            938 ;--------------------------------------------------------
                            939 ; absolute external ram data
                            940 ;--------------------------------------------------------
                            941 	.area XABS    (ABS,XDATA)
                            942 ;--------------------------------------------------------
                            943 ; external initialized ram data
                            944 ;--------------------------------------------------------
                            945 	.area XISEG   (XDATA)
   0000                     946 _countdown:
   0000                     947 	.ds 2
                            948 	.area HOME    (CODE)
                            949 	.area GSINIT0 (CODE)
                            950 	.area GSINIT1 (CODE)
                            951 	.area GSINIT2 (CODE)
                            952 	.area GSINIT3 (CODE)
                            953 	.area GSINIT4 (CODE)
                            954 	.area GSINIT5 (CODE)
                            955 	.area GSINIT  (CODE)
                            956 	.area GSFINAL (CODE)
                            957 	.area CSEG    (CODE)
                            958 ;--------------------------------------------------------
                            959 ; interrupt vector 
                            960 ;--------------------------------------------------------
                            961 	.area HOME    (CODE)
   0000                     962 __interrupt_vect:
   0000 02s00r00            963 	ljmp	__sdcc_gsinit_startup
   0003 32                  964 	reti
   0004                     965 	.ds	7
   000B 32                  966 	reti
   000C                     967 	.ds	7
   0013 32                  968 	reti
   0014                     969 	.ds	7
   001B 32                  970 	reti
   001C                     971 	.ds	7
   0023 32                  972 	reti
   0024                     973 	.ds	7
   002B 02s0Ar3C            974 	ljmp	_vTimer2ISR
                            975 ;--------------------------------------------------------
                            976 ; global & static initialisations
                            977 ;--------------------------------------------------------
                            978 	.area HOME    (CODE)
                            979 	.area GSINIT  (CODE)
                            980 	.area GSFINAL (CODE)
                            981 	.area GSINIT  (CODE)
                            982 	.globl __sdcc_gsinit_startup
                            983 	.globl __sdcc_program_startup
                            984 	.globl __start__stack
                            985 	.globl __mcs51_genXINIT
                            986 	.globl __mcs51_genXRAMCLEAR
                            987 	.globl __mcs51_genRAMCLEAR
                            988 ;------------------------------------------------------------
                            989 ;Allocation info for local variables in function 'task_UART_init_projectSpecific'
                            990 ;------------------------------------------------------------
                            991 ;channelNumber             Allocated with name '_task_UART_init_projectSpecific_channelNumber_1_1'
                            992 ;Q                         Allocated with name '_task_UART_init_projectSpecific_Q_1_1'
                            993 ;SFRPAGE_SAVE              Allocated with name '_task_UART_init_projectSpecific_SFRPAGE_SAVE_3_3'
                            994 ;------------------------------------------------------------
                            995 ;	../src/projectSpecificHardwareInterface_C8051F040.c:323: static bool	timer1initialized = false ;
   0000 C2*02               996 	clr	_task_UART_init_projectSpecific_timer1initialized_1_1
                            997 	.area GSFINAL (CODE)
   0000 02s00r2E            998 	ljmp	__sdcc_program_startup
                            999 ;--------------------------------------------------------
                           1000 ; Home
                           1001 ;--------------------------------------------------------
                           1002 	.area HOME    (CODE)
                           1003 	.area HOME    (CODE)
   002E                    1004 __sdcc_program_startup:
   002E 12s00r00           1005 	lcall	_main
                           1006 ;	return from main will lock up
   0031 80 FE              1007 	sjmp .
                           1008 ;--------------------------------------------------------
                           1009 ; code
                           1010 ;--------------------------------------------------------
                           1011 	.area CSEG    (CODE)
                           1012 ;------------------------------------------------------------
                           1013 ;Allocation info for local variables in function 'main'
                           1014 ;------------------------------------------------------------
                           1015 ;bomb                      Allocated with name '_main_bomb_1_1'
                           1016 ;calculator                Allocated with name '_main_calculator_1_1'
                           1017 ;delayTimer                Allocated with name '_main_delayTimer_2_4'
                           1018 ;------------------------------------------------------------
                           1019 ;	../src/main_C8051F040.c:27: void main(	void)
                           1020 ;	-----------------------------------------
                           1021 ;	 function main
                           1022 ;	-----------------------------------------
   0000                    1023 _main:
                    0002   1024 	ar2 = 0x02
                    0003   1025 	ar3 = 0x03
                    0004   1026 	ar4 = 0x04
                    0005   1027 	ar5 = 0x05
                    0006   1028 	ar6 = 0x06
                    0007   1029 	ar7 = 0x07
                    0000   1030 	ar0 = 0x00
                    0001   1031 	ar1 = 0x01
                           1032 ;	../src/main_C8051F040.c:33: WDTCN = 0xDE ;	// Disable the watchdog timer
   0000 75 FF DE           1033 	mov	_WDTCN,#0xDE
                           1034 ;	../src/main_C8051F040.c:34: WDTCN = 0xAD ;
   0003 75 FF AD           1035 	mov	_WDTCN,#0xAD
                           1036 ;	../src/main_C8051F040.c:35: WDTCN = 0xFF ;	// Disable any future ability to modify the watchdog timer
   0006 75 FF FF           1037 	mov	_WDTCN,#0xFF
                           1038 ;	../src/main_C8051F040.c:37: prvSetupSystemClock() ;
   0009 12s09r80           1039 	lcall	_prvSetupSystemClock
                           1040 ;	../src/main_C8051F040.c:38: gpio_init() ;
   000C 12s00r82           1041 	lcall	_gpio_init_projectSpecific
                           1042 ;	../src/main_C8051F040.c:39: pwm_init(ioMapping_PWM_TO_TICK_SYNCHRONIZER_CHANNEL) ;
   000F 75 82 00           1043 	mov	dpl,#0x00
   0012 12s00r00           1044 	lcall	_pwm_init
                           1045 ;	../src/main_C8051F040.c:40: prvSetupTimerInterrupt() ;
   0015 12s09r9F           1046 	lcall	_prvSetupTimerInterrupt
                           1047 ;	../src/main_C8051F040.c:41: task_UART_init(0) ;
   0018 75 82 00           1048 	mov	dpl,#0x00
   001B 12s00r00           1049 	lcall	_task_UART_init
                           1050 ;	../src/main_C8051F040.c:43: portENABLE_INTERRUPTS() ;
   001E D2 AF              1051 	setb	_EA
                           1052 ;	../src/main_C8051F040.c:45: puts("4th Generation state machine test started.") ;
   0020 90s00r00           1053 	mov	dptr,#__str_0
   0023 75 F0 80           1054 	mov	b,#0x80
   0026 12s00r00           1055 	lcall	_puts
                           1056 ;	../src/main_C8051F040.c:47: bomb = STATE_MACHINE_CREATE_INSTANCE_OF(timeBomb) ;
   0029 12s00r00           1057 	lcall	_createInstanceOf_timeBomb
                           1058 ;	../src/main_C8051F040.c:54: calculator = STATE_MACHINE_CREATE_INSTANCE_OF(calculator) ;
   002C 12s00r00           1059 	lcall	_createInstanceOf_calculator
   002F AA 82              1060 	mov	r2,dpl
   0031 AB 83              1061 	mov	r3,dph
   0033 AC F0              1062 	mov	r4,b
                           1063 ;	../src/main_C8051F040.c:56: if(calculator)
   0035 EA                 1064 	mov	a,r2
   0036 4B                 1065 	orl	a,r3
   0037 4C                 1066 	orl	a,r4
   0038 60 09              1067 	jz	00108$
                           1068 ;	../src/main_C8051F040.c:58: REGISTER_STATE_MACHINE(calculator) ;
   003A 8A 82              1069 	mov	dpl,r2
   003C 8B 83              1070 	mov	dph,r3
   003E 8C F0              1071 	mov	b,r4
   0040 12s00r00           1072 	lcall	_registerStateMachine
                           1073 ;	../src/main_C8051F040.c:61: while(true)
   0043                    1074 00108$:
                           1075 ;	../src/main_C8051F040.c:65: if(timeForTickProcessing)
                           1076 ;	../src/main_C8051F040.c:67: timeForTickProcessing = false ;
   0043 10*00 02           1077 	jbc	_timeForTickProcessing,00121$
   0046 80 FB              1078 	sjmp	00108$
   0048                    1079 00121$:
                           1080 ;	../src/main_C8051F040.c:71: if(delayTimer++ > 500)
   0048 90s00r00           1081 	mov	dptr,#_main_delayTimer_2_4
   004B E0                 1082 	movx	a,@dptr
   004C FA                 1083 	mov	r2,a
   004D A3                 1084 	inc	dptr
   004E E0                 1085 	movx	a,@dptr
   004F FB                 1086 	mov	r3,a
   0050 90s00r00           1087 	mov	dptr,#_main_delayTimer_2_4
   0053 74 01              1088 	mov	a,#0x01
   0055 2A                 1089 	add	a,r2
   0056 F0                 1090 	movx	@dptr,a
   0057 E4                 1091 	clr	a
   0058 3B                 1092 	addc	a,r3
   0059 A3                 1093 	inc	dptr
   005A F0                 1094 	movx	@dptr,a
   005B C3                 1095 	clr	c
   005C 74 F4              1096 	mov	a,#0xF4
   005E 9A                 1097 	subb	a,r2
   005F 74 81              1098 	mov	a,#(0x01 ^ 0x80)
   0061 8B F0              1099 	mov	b,r3
   0063 63 F0 80           1100 	xrl	b,#0x80
   0066 95 F0              1101 	subb	a,b
   0068 50 D9              1102 	jnc	00108$
                           1103 ;	../src/main_C8051F040.c:73: delayTimer = 0 ;
   006A 90s00r00           1104 	mov	dptr,#_main_delayTimer_2_4
   006D E4                 1105 	clr	a
   006E F0                 1106 	movx	@dptr,a
   006F A3                 1107 	inc	dptr
   0070 F0                 1108 	movx	@dptr,a
                           1109 ;	../src/main_C8051F040.c:75: puts("loop") ;
   0071 90s00r2B           1110 	mov	dptr,#__str_1
   0074 75 F0 80           1111 	mov	b,#0x80
   0077 12s00r00           1112 	lcall	_puts
                           1113 ;	../src/main_C8051F040.c:77: ITERATE_ALL_STATE_MACHINES() ;
   007A 12s00r00           1114 	lcall	_iterateAllStateMachines
                           1115 ;	../src/main_C8051F040.c:100: puts("\n4th Generation state machine test done.") ;
   007D 80 C4              1116 	sjmp	00108$
                           1117 ;------------------------------------------------------------
                           1118 ;Allocation info for local variables in function 'taskSwitcherTickHook'
                           1119 ;------------------------------------------------------------
                           1120 ;------------------------------------------------------------
                           1121 ;	../src/main_C8051F040.c:104: void taskSwitcherTickHook(	void)
                           1122 ;	-----------------------------------------
                           1123 ;	 function taskSwitcherTickHook
                           1124 ;	-----------------------------------------
   007F                    1125 _taskSwitcherTickHook:
                           1126 ;	../src/main_C8051F040.c:106: timeForTickProcessing = true ;
   007F D2*00              1127 	setb	_timeForTickProcessing
   0081 22                 1128 	ret
                           1129 ;------------------------------------------------------------
                           1130 ;Allocation info for local variables in function 'gpio_init_projectSpecific'
                           1131 ;------------------------------------------------------------
                           1132 ;SFRPAGE_SAVE              Allocated with name '_gpio_init_projectSpecific_SFRPAGE_SAVE_1_1'
                           1133 ;------------------------------------------------------------
                           1134 ;	../src/projectSpecificHardwareInterface_C8051F040.c:17: void gpio_init_projectSpecific(	void)
                           1135 ;	-----------------------------------------
                           1136 ;	 function gpio_init_projectSpecific
                           1137 ;	-----------------------------------------
   0082                    1138 _gpio_init_projectSpecific:
                           1139 ;	../src/projectSpecificHardwareInterface_C8051F040.c:21: SFRPAGE_SAVE = SFRPAGE ;
   0082 AA 84              1140 	mov	r2,_SFRPAGE
                           1141 ;	../src/projectSpecificHardwareInterface_C8051F040.c:23: SFRPAGE	 = SPI0_PAGE ;
   0084 75 84 00           1142 	mov	_SFRPAGE,#0x00
                           1143 ;	../src/projectSpecificHardwareInterface_C8051F040.c:24: SPI0CN	 = 0x00 ;	// Set the SPI module into 3 pin mode so NSS doesn't get assigned to a pin in the crossbar setup below
   0087 75 F8 00           1144 	mov	_SPI0CN,#0x00
                           1145 ;	../src/projectSpecificHardwareInterface_C8051F040.c:26: SFRPAGE	 = CONFIG_PAGE ;
   008A 75 84 0F           1146 	mov	_SFRPAGE,#0x0F
                           1147 ;	../src/projectSpecificHardwareInterface_C8051F040.c:27: XBR0	 = 0x00 ;	// Start with a clean slate
   008D 75 E1 00           1148 	mov	_XBR0,#0x00
                           1149 ;	../src/projectSpecificHardwareInterface_C8051F040.c:28: XBR1	 = 0x00 ;
   0090 75 E2 00           1150 	mov	_XBR1,#0x00
                           1151 ;	../src/projectSpecificHardwareInterface_C8051F040.c:29: XBR2	 = 0x00 ;
   0093 75 E3 00           1152 	mov	_XBR2,#0x00
                           1153 ;	../src/projectSpecificHardwareInterface_C8051F040.c:30: XBR3	 = 0x00 ;
   0096 75 E4 00           1154 	mov	_XBR3,#0x00
                           1155 ;	../src/projectSpecificHardwareInterface_C8051F040.c:32: XBR0	|= 0x04 ;	// Route UART0 to P0.0-P0.1
   0099 43 E1 04           1156 	orl	_XBR0,#0x04
                           1157 ;	../src/projectSpecificHardwareInterface_C8051F040.c:33: XBR0	|= 0x02 ;	// Route SPI0 to P0.2-P0.4
   009C 43 E1 02           1158 	orl	_XBR0,#0x02
                           1159 ;	../src/projectSpecificHardwareInterface_C8051F040.c:34: XBR0	|= 0x01 ;	// Route SMB0 to P0.5-P0.6
   009F 43 E1 01           1160 	orl	_XBR0,#0x01
                           1161 ;	../src/projectSpecificHardwareInterface_C8051F040.c:35: XBR2	|= 0x04 ;	// Route UART1 to P0.7-P1.0
   00A2 43 E3 04           1162 	orl	_XBR2,#0x04
                           1163 ;	../src/projectSpecificHardwareInterface_C8051F040.c:36: XBR0	|= 0x30 ;	// Route CEXn to P1.1-P1.6
   00A5 43 E1 30           1164 	orl	_XBR0,#0x30
                           1165 ;	../src/projectSpecificHardwareInterface_C8051F040.c:37: XBR0	|= 0x80 ;	// Route CP0 to P1.7
   00A8 43 E1 80           1166 	orl	_XBR0,#0x80
                           1167 ;	../src/projectSpecificHardwareInterface_C8051F040.c:38: XBR3	|= 0x08 ;	// Route CP2 to P2.0
   00AB 43 E4 08           1168 	orl	_XBR3,#0x08
                           1169 ;	../src/projectSpecificHardwareInterface_C8051F040.c:39: XBR1	|= 0x04 ;	// Route INT0# to P2.1
   00AE 43 E2 04           1170 	orl	_XBR1,#0x04
                           1171 ;	../src/projectSpecificHardwareInterface_C8051F040.c:40: XBR1	|= 0x20 ;	// Route T2 from P2.2
   00B1 43 E2 20           1172 	orl	_XBR1,#0x20
                           1173 ;	../src/projectSpecificHardwareInterface_C8051F040.c:41: XBR3	|= 0x01 ;	// Route T3 to P2.3
   00B4 43 E4 01           1174 	orl	_XBR3,#0x01
                           1175 ;	../src/projectSpecificHardwareInterface_C8051F040.c:43: P0MDOUT |= 0x01 ;	// Set TX0 (P0.0) to push-pull
   00B7 43 A4 01           1176 	orl	_P0MDOUT,#0x01
                           1177 ;	../src/projectSpecificHardwareInterface_C8051F040.c:45: P1MDOUT	|= 0x02 ;	// Set CEX0 (P1.1) to push-pull
   00BA 43 A5 02           1178 	orl	_P1MDOUT,#0x02
                           1179 ;	../src/projectSpecificHardwareInterface_C8051F040.c:46: P1MDOUT	|= 0x04 ;	// Set CEX1 (P1.2) to push-pull
   00BD 43 A5 04           1180 	orl	_P1MDOUT,#0x04
                           1181 ;	../src/projectSpecificHardwareInterface_C8051F040.c:47: P1MDOUT	|= 0x08 ;	// Set CEX2 (P1.3) to push-pull
   00C0 43 A5 08           1182 	orl	_P1MDOUT,#0x08
                           1183 ;	../src/projectSpecificHardwareInterface_C8051F040.c:48: P1MDOUT	|= 0x10 ;	// Set CEX3 (P1.4) to push-pull
   00C3 43 A5 10           1184 	orl	_P1MDOUT,#0x10
                           1185 ;	../src/projectSpecificHardwareInterface_C8051F040.c:49: P1MDOUT	|= 0x20 ;	// Set CEX4 (P1.5) to push-pull
   00C6 43 A5 20           1186 	orl	_P1MDOUT,#0x20
                           1187 ;	../src/projectSpecificHardwareInterface_C8051F040.c:50: P1MDOUT |= 0x40 ;	// Set CEX5 (P1.6) to push-pull
   00C9 43 A5 40           1188 	orl	_P1MDOUT,#0x40
                           1189 ;	../src/projectSpecificHardwareInterface_C8051F040.c:52: P1MDOUT |= 0x80 ;	// Set TX1 (P1.7) to push-pull
   00CC 43 A5 80           1190 	orl	_P1MDOUT,#0x80
                           1191 ;	../src/projectSpecificHardwareInterface_C8051F040.c:53: P2MDOUT	&= ~0x02 ;	// Set INT0# (P2.1) to be a digital input
                           1192 ;	../src/projectSpecificHardwareInterface_C8051F040.c:54: P2MDOUT	&= ~0x04 ;	// Set T2 (P2.2) to be a digital input
   00CF 53 A6 F9           1193 	anl	_P2MDOUT,#(0xFD&0xFB)
                           1194 ;	../src/projectSpecificHardwareInterface_C8051F040.c:55: P2MDOUT	|= 0x08 ;	// Set P2.3 to be the Timer3 output pin
   00D2 43 A6 08           1195 	orl	_P2MDOUT,#0x08
                           1196 ;	../src/projectSpecificHardwareInterface_C8051F040.c:57: P3MDIN	 = 0x00 ;	// Configure as analog inputs. This forces the weak pullup for these pins to be disconnected
   00D5 75 AF 00           1197 	mov	_P3MDIN,#0x00
                           1198 ;	../src/projectSpecificHardwareInterface_C8051F040.c:58: P3MDOUT	 = 0x00 ;	// Force the output driver for these pins to open drain output mode
   00D8 75 A7 00           1199 	mov	_P3MDOUT,#0x00
                           1200 ;	../src/projectSpecificHardwareInterface_C8051F040.c:59: P3		 = 0xFF ;	// Force the input driver for these pins to high impedance
   00DB 75 B0 FF           1201 	mov	_P3,#0xFF
                           1202 ;	../src/projectSpecificHardwareInterface_C8051F040.c:61: XBR3	|= 0x80 ;	// Configure CAN TX pin (CTX) as push-pull digital output
   00DE 43 E4 80           1203 	orl	_XBR3,#0x80
                           1204 ;	../src/projectSpecificHardwareInterface_C8051F040.c:63: P4MDOUT	|= 0xFF ;	// Set LCD drive pins to push-pull
   00E1 E5 9C              1205 	mov	a,_P4MDOUT
   00E3 75 9C FF           1206 	mov	_P4MDOUT,#0xFF
                           1207 ;	../src/projectSpecificHardwareInterface_C8051F040.c:64: P5MDOUT	|= 0xFF ;	// Set state machine debug pins to push-pull
   00E6 E5 9D              1208 	mov	a,_P5MDOUT
   00E8 75 9D FF           1209 	mov	_P5MDOUT,#0xFF
                           1210 ;	../src/projectSpecificHardwareInterface_C8051F040.c:65: P6MDOUT	|= 0xFF ;	// Set general purpose debug pins to push-pull
   00EB E5 9E              1211 	mov	a,_P6MDOUT
   00ED 75 9E FF           1212 	mov	_P6MDOUT,#0xFF
                           1213 ;	../src/projectSpecificHardwareInterface_C8051F040.c:67: P4		 = 0x00 ;	// Set all debugging pins to low
   00F0 75 C8 00           1214 	mov	_P4,#0x00
                           1215 ;	../src/projectSpecificHardwareInterface_C8051F040.c:68: P5		 = 0x00 ;
   00F3 75 D8 00           1216 	mov	_P5,#0x00
                           1217 ;	../src/projectSpecificHardwareInterface_C8051F040.c:69: P6		 = 0x00 ;
   00F6 75 E8 00           1218 	mov	_P6,#0x00
                           1219 ;	../src/projectSpecificHardwareInterface_C8051F040.c:71: P2MDIN	&= 0x0F ;	// set comparator analog inputs up as per Section 17.1.5 of the C8050F040 manual
   00F9 53 AE 0F           1220 	anl	_P2MDIN,#0x0F
                           1221 ;	../src/projectSpecificHardwareInterface_C8051F040.c:72: P2MDOUT	&= 0x0F ;
   00FC 53 A6 0F           1222 	anl	_P2MDOUT,#0x0F
                           1223 ;	../src/projectSpecificHardwareInterface_C8051F040.c:73: P2		|= 0xF0 ;
   00FF 43 A0 F0           1224 	orl	_P2,#0xF0
                           1225 ;	../src/projectSpecificHardwareInterface_C8051F040.c:78: XBR2	|= 0x40 ;	// Enable Crossbar/low ports and turn on global weak pullups
   0102 43 E3 40           1226 	orl	_XBR2,#0x40
                           1227 ;	../src/projectSpecificHardwareInterface_C8051F040.c:79: SFRPAGE	 = SFRPAGE_SAVE ;
   0105 8A 84              1228 	mov	_SFRPAGE,r2
   0107 22                 1229 	ret
                           1230 ;------------------------------------------------------------
                           1231 ;Allocation info for local variables in function 'pwm_init_projectSpecific'
                           1232 ;------------------------------------------------------------
                           1233 ;channelNumber             Allocated with name '_pwm_init_projectSpecific_channelNumber_1_1'
                           1234 ;SFRPAGE_save              Allocated with name '_pwm_init_projectSpecific_SFRPAGE_save_1_1'
                           1235 ;------------------------------------------------------------
                           1236 ;	../src/projectSpecificHardwareInterface_C8051F040.c:83: void pwm_init_projectSpecific(								unsigned char channelNumber)
                           1237 ;	-----------------------------------------
                           1238 ;	 function pwm_init_projectSpecific
                           1239 ;	-----------------------------------------
   0108                    1240 _pwm_init_projectSpecific:
   0108 E5 82              1241 	mov	a,dpl
   010A 90s00r02           1242 	mov	dptr,#_pwm_init_projectSpecific_channelNumber_1_1
   010D F0                 1243 	movx	@dptr,a
                           1244 ;	../src/projectSpecificHardwareInterface_C8051F040.c:132: char		SFRPAGE_save = SFRPAGE ;	// Save current SFR Page
   010E AA 84              1245 	mov	r2,_SFRPAGE
                           1246 ;	../src/projectSpecificHardwareInterface_C8051F040.c:134: SFRPAGE = PCA0_PAGE ;
   0110 75 84 00           1247 	mov	_SFRPAGE,#0x00
                           1248 ;	../src/projectSpecificHardwareInterface_C8051F040.c:136: if(!initialized)
   0113 20*01 2A           1249 	jb	_pwm_init_projectSpecific_initialized_1_1,00102$
                           1250 ;	../src/projectSpecificHardwareInterface_C8051F040.c:138: PCA0CN = 0x00 ;				// Stop counter; clear all flags
   0116 75 D8 00           1251 	mov	_PCA0CN,#0x00
                           1252 ;	../src/projectSpecificHardwareInterface_C8051F040.c:139: PCA0MD = 0x08 ;				// Use SYSCLK as time base
   0119 75 D9 08           1253 	mov	_PCA0MD,#0x08
                           1254 ;	../src/projectSpecificHardwareInterface_C8051F040.c:141: PCA0CPM0 = 0x00 ;			// Module 0 = Off
   011C 75 DA 00           1255 	mov	_PCA0CPM0,#0x00
                           1256 ;	../src/projectSpecificHardwareInterface_C8051F040.c:142: PCA0CPH0 = 0x00 ;			// Configure initial PWM duty cycle = 100%. This will result in a continuously high output which, since it's active low, will disable any output.
   011F 75 FC 00           1257 	mov	_PCA0CPH0,#0x00
                           1258 ;	../src/projectSpecificHardwareInterface_C8051F040.c:144: PCA0CPM0 = 0x00 ;			// Module 1 = Off
   0122 75 DA 00           1259 	mov	_PCA0CPM0,#0x00
                           1260 ;	../src/projectSpecificHardwareInterface_C8051F040.c:145: PCA0CPH1 = 0x00 ;			// Configure initial PWM duty cycle = 100%. This will result in a continuously high output which, since it's active low, will disable any output.
   0125 75 FE 00           1261 	mov	_PCA0CPH1,#0x00
                           1262 ;	../src/projectSpecificHardwareInterface_C8051F040.c:147: PCA0CPM0 = 0x00 ;			// Module 2 = Off
   0128 75 DA 00           1263 	mov	_PCA0CPM0,#0x00
                           1264 ;	../src/projectSpecificHardwareInterface_C8051F040.c:148: PCA0CPH2 = 0x00 ;			// Configure initial PWM duty cycle = 100%. This will result in a continuously high output which, since it's active low, will disable any output.
   012B 75 EA 00           1265 	mov	_PCA0CPH2,#0x00
                           1266 ;	../src/projectSpecificHardwareInterface_C8051F040.c:150: PCA0CPM0 = 0x00 ;			// Module 3 = Off
   012E 75 DA 00           1267 	mov	_PCA0CPM0,#0x00
                           1268 ;	../src/projectSpecificHardwareInterface_C8051F040.c:151: PCA0CPH3 = 0x00 ;			// Configure initial PWM duty cycle = 100%. This will result in a continuously high output which, since it's active low, will disable any output.
   0131 75 EC 00           1269 	mov	_PCA0CPH3,#0x00
                           1270 ;	../src/projectSpecificHardwareInterface_C8051F040.c:153: PCA0CPM0 = 0x00 ;			// Module 4 = Off
   0134 75 DA 00           1271 	mov	_PCA0CPM0,#0x00
                           1272 ;	../src/projectSpecificHardwareInterface_C8051F040.c:154: PCA0CPH4 = 0x00 ;			// Configure initial PWM duty cycle = 100%. This will result in a continuously high output which, since it's active low, will disable any output.
   0137 75 EE 00           1273 	mov	_PCA0CPH4,#0x00
                           1274 ;	../src/projectSpecificHardwareInterface_C8051F040.c:156: PCA0CPM0 = 0x00 ;			// Module 5 = Off
   013A 75 DA 00           1275 	mov	_PCA0CPM0,#0x00
                           1276 ;	../src/projectSpecificHardwareInterface_C8051F040.c:157: PCA0CPH5 = 0x00 ;			// Configure initial PWM duty cycle = 100%. This will result in a continuously high output which, since it's active low, will disable any output.
   013D 75 E2 00           1277 	mov	_PCA0CPH5,#0x00
   0140                    1278 00102$:
                           1279 ;	../src/projectSpecificHardwareInterface_C8051F040.c:164: if(channelNumber == ioMapping_PWM_TO_TICK_SYNCHRONIZER_CHANNEL)
   0140 90s00r02           1280 	mov	dptr,#_pwm_init_projectSpecific_channelNumber_1_1
   0143 E0                 1281 	movx	a,@dptr
   0144 FB                 1282 	mov	r3,a
   0145 70 06              1283 	jnz	00104$
                           1284 ;	../src/projectSpecificHardwareInterface_C8051F040.c:170: PWM_B50_MODE		= 0x42 ;						// Module 1 = 8-bit PWM mode
   0147 75 DA 42           1285 	mov	_PCA0CPM0,#0x42
                           1286 ;	../src/projectSpecificHardwareInterface_C8051F040.c:171: PWM_B50_HIGH_BYTE	= FIFTY_PERCENT_DUTY_CYCLE ;	// Configure initial PWM duty cycle = 50%
   014A 75 FC 80           1287 	mov	_PCA0CPH0,#0x80
   014D                    1288 00104$:
                           1289 ;	../src/projectSpecificHardwareInterface_C8051F040.c:174: if(!initialized)
   014D 20*01 04           1290 	jb	_pwm_init_projectSpecific_initialized_1_1,00106$
                           1291 ;	../src/projectSpecificHardwareInterface_C8051F040.c:176: initialized = true ;
   0150 D2*01              1292 	setb	_pwm_init_projectSpecific_initialized_1_1
                           1293 ;	../src/projectSpecificHardwareInterface_C8051F040.c:178: CR = 1 ;					// Start PCA counter
   0152 D2 DE              1294 	setb	_CR
   0154                    1295 00106$:
                           1296 ;	../src/projectSpecificHardwareInterface_C8051F040.c:181: SFRPAGE = SFRPAGE_save ;
   0154 8A 84              1297 	mov	_SFRPAGE,r2
   0156 22                 1298 	ret
                           1299 ;------------------------------------------------------------
                           1300 ;Allocation info for local variables in function 'pwm_incrementDutyCycle_projectSpecific'
                           1301 ;------------------------------------------------------------
                           1302 ;channelNumber             Allocated with name '_pwm_incrementDutyCycle_projectSpecific_channelNumber_1_1'
                           1303 ;------------------------------------------------------------
                           1304 ;	../src/projectSpecificHardwareInterface_C8051F040.c:185: void pwm_incrementDutyCycle_projectSpecific(				unsigned char channelNumber)
                           1305 ;	-----------------------------------------
                           1306 ;	 function pwm_incrementDutyCycle_projectSpecific
                           1307 ;	-----------------------------------------
   0157                    1308 _pwm_incrementDutyCycle_projectSpecific:
                           1309 ;	../src/projectSpecificHardwareInterface_C8051F040.c:187: (void)channelNumber ;	// unused at this time
   0157 22                 1310 	ret
                           1311 ;------------------------------------------------------------
                           1312 ;Allocation info for local variables in function 'pwm_decrementDutyCycle_projectSpecific'
                           1313 ;------------------------------------------------------------
                           1314 ;channelNumber             Allocated with name '_pwm_decrementDutyCycle_projectSpecific_channelNumber_1_1'
                           1315 ;------------------------------------------------------------
                           1316 ;	../src/projectSpecificHardwareInterface_C8051F040.c:191: void pwm_decrementDutyCycle_projectSpecific(				unsigned char channelNumber)
                           1317 ;	-----------------------------------------
                           1318 ;	 function pwm_decrementDutyCycle_projectSpecific
                           1319 ;	-----------------------------------------
   0158                    1320 _pwm_decrementDutyCycle_projectSpecific:
                           1321 ;	../src/projectSpecificHardwareInterface_C8051F040.c:193: (void)channelNumber ;	// unused at this time
   0158 22                 1322 	ret
                           1323 ;------------------------------------------------------------
                           1324 ;Allocation info for local variables in function 'pwm_getDutyCycle_projectSpecific'
                           1325 ;------------------------------------------------------------
                           1326 ;channelNumber             Allocated with name '_pwm_getDutyCycle_projectSpecific_channelNumber_1_1'
                           1327 ;------------------------------------------------------------
                           1328 ;	../src/projectSpecificHardwareInterface_C8051F040.c:197: uint8_t pwm_getDutyCycle_projectSpecific(					unsigned char channelNumber)
                           1329 ;	-----------------------------------------
                           1330 ;	 function pwm_getDutyCycle_projectSpecific
                           1331 ;	-----------------------------------------
   0159                    1332 _pwm_getDutyCycle_projectSpecific:
                           1333 ;	../src/projectSpecificHardwareInterface_C8051F040.c:201: return 0 ;
   0159 75 82 00           1334 	mov	dpl,#0x00
   015C 22                 1335 	ret
                           1336 ;------------------------------------------------------------
                           1337 ;Allocation info for local variables in function 'pwm_setDutyCycle_projectSpecific'
                           1338 ;------------------------------------------------------------
                           1339 ;newDutyCycle              Allocated with name '_pwm_setDutyCycle_projectSpecific_PARM_2'
                           1340 ;channelNumber             Allocated with name '_pwm_setDutyCycle_projectSpecific_channelNumber_1_1'
                           1341 ;------------------------------------------------------------
                           1342 ;	../src/projectSpecificHardwareInterface_C8051F040.c:205: void pwm_setDutyCycle_projectSpecific(						unsigned char channelNumber, uint8_t newDutyCycle)
                           1343 ;	-----------------------------------------
                           1344 ;	 function pwm_setDutyCycle_projectSpecific
                           1345 ;	-----------------------------------------
   015D                    1346 _pwm_setDutyCycle_projectSpecific:
                           1347 ;	../src/projectSpecificHardwareInterface_C8051F040.c:208: (void)newDutyCycle ;	// unused at this time
   015D 22                 1348 	ret
                           1349 ;------------------------------------------------------------
                           1350 ;Allocation info for local variables in function 'pwm_adjustDutyCycle_projectSpecific'
                           1351 ;------------------------------------------------------------
                           1352 ;dutyCycleAdjustment       Allocated with name '_pwm_adjustDutyCycle_projectSpecific_PARM_2'
                           1353 ;channelNumber             Allocated with name '_pwm_adjustDutyCycle_projectSpecific_channelNumber_1_1'
                           1354 ;------------------------------------------------------------
                           1355 ;	../src/projectSpecificHardwareInterface_C8051F040.c:212: void pwm_adjustDutyCycle_projectSpecific(					unsigned char channelNumber, int8_t dutyCycleAdjustment)
                           1356 ;	-----------------------------------------
                           1357 ;	 function pwm_adjustDutyCycle_projectSpecific
                           1358 ;	-----------------------------------------
   015E                    1359 _pwm_adjustDutyCycle_projectSpecific:
                           1360 ;	../src/projectSpecificHardwareInterface_C8051F040.c:215: (void)dutyCycleAdjustment ;	// unused at this time
   015E 22                 1361 	ret
                           1362 ;------------------------------------------------------------
                           1363 ;Allocation info for local variables in function 'pwm_setDutyCycleAsPercentage_projectSpecific'
                           1364 ;------------------------------------------------------------
                           1365 ;newDutyCycle              Allocated with name '_pwm_setDutyCycleAsPercentage_projectSpecific_PARM_2'
                           1366 ;channelNumber             Allocated with name '_pwm_setDutyCycleAsPercentage_projectSpecific_channelNumber_1_1'
                           1367 ;------------------------------------------------------------
                           1368 ;	../src/projectSpecificHardwareInterface_C8051F040.c:219: void pwm_setDutyCycleAsPercentage_projectSpecific(			unsigned char channelNumber, unsigned char newDutyCycle)
                           1369 ;	-----------------------------------------
                           1370 ;	 function pwm_setDutyCycleAsPercentage_projectSpecific
                           1371 ;	-----------------------------------------
   015F                    1372 _pwm_setDutyCycleAsPercentage_projectSpecific:
                           1373 ;	../src/projectSpecificHardwareInterface_C8051F040.c:222: (void)newDutyCycle ;		// unused at this time
   015F 22                 1374 	ret
                           1375 ;------------------------------------------------------------
                           1376 ;Allocation info for local variables in function 'pwm_getDutyCycleAsPercentage_projectSpecific'
                           1377 ;------------------------------------------------------------
                           1378 ;channelNumber             Allocated with name '_pwm_getDutyCycleAsPercentage_projectSpecific_channelNumber_1_1'
                           1379 ;currentPercentage         Allocated with name '_pwm_getDutyCycleAsPercentage_projectSpecific_currentPercentage_1_1'
                           1380 ;divisor                   Allocated with name '_pwm_getDutyCycleAsPercentage_projectSpecific_divisor_1_1'
                           1381 ;------------------------------------------------------------
                           1382 ;	../src/projectSpecificHardwareInterface_C8051F040.c:226: unsigned char pwm_getDutyCycleAsPercentage_projectSpecific(	unsigned char channelNumber)
                           1383 ;	-----------------------------------------
                           1384 ;	 function pwm_getDutyCycleAsPercentage_projectSpecific
                           1385 ;	-----------------------------------------
   0160                    1386 _pwm_getDutyCycleAsPercentage_projectSpecific:
                           1387 ;	../src/projectSpecificHardwareInterface_C8051F040.c:237: return (unsigned char)0 ;//min(currentPercentage, 100) ;
   0160 75 82 00           1388 	mov	dpl,#0x00
   0163 22                 1389 	ret
                           1390 ;------------------------------------------------------------
                           1391 ;Allocation info for local variables in function 'IsEmpty'
                           1392 ;------------------------------------------------------------
                           1393 ;Q                         Allocated with name '_IsEmpty_Q_1_1'
                           1394 ;------------------------------------------------------------
                           1395 ;	../src/projectSpecificHardwareInterface_C8051F040.c:273: unsigned char IsEmpty(QUEUE_TYPE* Q)
                           1396 ;	-----------------------------------------
                           1397 ;	 function IsEmpty
                           1398 ;	-----------------------------------------
   0164                    1399 _IsEmpty:
   0164 AA F0              1400 	mov	r2,b
   0166 AB 83              1401 	mov	r3,dph
   0168 E5 82              1402 	mov	a,dpl
   016A 90s04r52           1403 	mov	dptr,#_IsEmpty_Q_1_1
   016D F0                 1404 	movx	@dptr,a
   016E A3                 1405 	inc	dptr
   016F EB                 1406 	mov	a,r3
   0170 F0                 1407 	movx	@dptr,a
   0171 A3                 1408 	inc	dptr
   0172 EA                 1409 	mov	a,r2
   0173 F0                 1410 	movx	@dptr,a
                           1411 ;	../src/projectSpecificHardwareInterface_C8051F040.c:275: return Q->Size == 0 ;
   0174 90s04r52           1412 	mov	dptr,#_IsEmpty_Q_1_1
   0177 E0                 1413 	movx	a,@dptr
   0178 FA                 1414 	mov	r2,a
   0179 A3                 1415 	inc	dptr
   017A E0                 1416 	movx	a,@dptr
   017B FB                 1417 	mov	r3,a
   017C A3                 1418 	inc	dptr
   017D E0                 1419 	movx	a,@dptr
   017E FC                 1420 	mov	r4,a
   017F 74 06              1421 	mov	a,#0x06
   0181 2A                 1422 	add	a,r2
   0182 FA                 1423 	mov	r2,a
   0183 E4                 1424 	clr	a
   0184 3B                 1425 	addc	a,r3
   0185 FB                 1426 	mov	r3,a
   0186 8A 82              1427 	mov	dpl,r2
   0188 8B 83              1428 	mov	dph,r3
   018A 8C F0              1429 	mov	b,r4
   018C 12s00r00           1430 	lcall	__gptrget
   018F FA                 1431 	mov	r2,a
   0190 A3                 1432 	inc	dptr
   0191 12s00r00           1433 	lcall	__gptrget
   0194 FB                 1434 	mov	r3,a
   0195 E4                 1435 	clr	a
   0196 BA 00 04           1436 	cjne	r2,#0x00,00103$
   0199 BB 00 01           1437 	cjne	r3,#0x00,00103$
   019C 04                 1438 	inc	a
   019D                    1439 00103$:
   019D F5 82              1440 	mov	dpl,a
   019F 22                 1441 	ret
                           1442 ;------------------------------------------------------------
                           1443 ;Allocation info for local variables in function 'IsFull'
                           1444 ;------------------------------------------------------------
                           1445 ;Q                         Allocated with name '_IsFull_Q_1_1'
                           1446 ;------------------------------------------------------------
                           1447 ;	../src/projectSpecificHardwareInterface_C8051F040.c:278: unsigned char IsFull(QUEUE_TYPE* Q)
                           1448 ;	-----------------------------------------
                           1449 ;	 function IsFull
                           1450 ;	-----------------------------------------
   01A0                    1451 _IsFull:
   01A0 AA F0              1452 	mov	r2,b
   01A2 AB 83              1453 	mov	r3,dph
   01A4 E5 82              1454 	mov	a,dpl
   01A6 90s04r55           1455 	mov	dptr,#_IsFull_Q_1_1
   01A9 F0                 1456 	movx	@dptr,a
   01AA A3                 1457 	inc	dptr
   01AB EB                 1458 	mov	a,r3
   01AC F0                 1459 	movx	@dptr,a
   01AD A3                 1460 	inc	dptr
   01AE EA                 1461 	mov	a,r2
   01AF F0                 1462 	movx	@dptr,a
                           1463 ;	../src/projectSpecificHardwareInterface_C8051F040.c:280: return Q->Size == Q->Capacity ;
   01B0 90s04r55           1464 	mov	dptr,#_IsFull_Q_1_1
   01B3 E0                 1465 	movx	a,@dptr
   01B4 FA                 1466 	mov	r2,a
   01B5 A3                 1467 	inc	dptr
   01B6 E0                 1468 	movx	a,@dptr
   01B7 FB                 1469 	mov	r3,a
   01B8 A3                 1470 	inc	dptr
   01B9 E0                 1471 	movx	a,@dptr
   01BA FC                 1472 	mov	r4,a
   01BB 74 06              1473 	mov	a,#0x06
   01BD 2A                 1474 	add	a,r2
   01BE FD                 1475 	mov	r5,a
   01BF E4                 1476 	clr	a
   01C0 3B                 1477 	addc	a,r3
   01C1 FE                 1478 	mov	r6,a
   01C2 8C 07              1479 	mov	ar7,r4
   01C4 8D 82              1480 	mov	dpl,r5
   01C6 8E 83              1481 	mov	dph,r6
   01C8 8F F0              1482 	mov	b,r7
   01CA 12s00r00           1483 	lcall	__gptrget
   01CD FD                 1484 	mov	r5,a
   01CE A3                 1485 	inc	dptr
   01CF 12s00r00           1486 	lcall	__gptrget
   01D2 FE                 1487 	mov	r6,a
   01D3 8A 82              1488 	mov	dpl,r2
   01D5 8B 83              1489 	mov	dph,r3
   01D7 8C F0              1490 	mov	b,r4
   01D9 12s00r00           1491 	lcall	__gptrget
   01DC FA                 1492 	mov	r2,a
   01DD A3                 1493 	inc	dptr
   01DE 12s00r00           1494 	lcall	__gptrget
   01E1 FB                 1495 	mov	r3,a
   01E2 ED                 1496 	mov	a,r5
   01E3 B5 02 08           1497 	cjne	a,ar2,00103$
   01E6 EE                 1498 	mov	a,r6
   01E7 B5 03 04           1499 	cjne	a,ar3,00103$
   01EA 74 01              1500 	mov	a,#0x01
   01EC 80 01              1501 	sjmp	00104$
   01EE                    1502 00103$:
   01EE E4                 1503 	clr	a
   01EF                    1504 00104$:
   01EF F5 82              1505 	mov	dpl,a
   01F1 22                 1506 	ret
                           1507 ;------------------------------------------------------------
                           1508 ;Allocation info for local variables in function 'Succ'
                           1509 ;------------------------------------------------------------
                           1510 ;Q                         Allocated with name '_Succ_PARM_2'
                           1511 ;Value                     Allocated with name '_Succ_Value_1_1'
                           1512 ;------------------------------------------------------------
                           1513 ;	../src/projectSpecificHardwareInterface_C8051F040.c:283: static unsigned short Succ(unsigned short Value, QUEUE_TYPE* Q)
                           1514 ;	-----------------------------------------
                           1515 ;	 function Succ
                           1516 ;	-----------------------------------------
   01F2                    1517 _Succ:
   01F2 AA 83              1518 	mov	r2,dph
   01F4 E5 82              1519 	mov	a,dpl
   01F6 90s04r5B           1520 	mov	dptr,#_Succ_Value_1_1
   01F9 F0                 1521 	movx	@dptr,a
   01FA A3                 1522 	inc	dptr
   01FB EA                 1523 	mov	a,r2
   01FC F0                 1524 	movx	@dptr,a
                           1525 ;	../src/projectSpecificHardwareInterface_C8051F040.c:285: if(++Value == Q->Capacity)
   01FD 90s04r5B           1526 	mov	dptr,#_Succ_Value_1_1
   0200 E0                 1527 	movx	a,@dptr
   0201 24 01              1528 	add	a,#0x01
   0203 F0                 1529 	movx	@dptr,a
   0204 A3                 1530 	inc	dptr
   0205 E0                 1531 	movx	a,@dptr
   0206 34 00              1532 	addc	a,#0x00
   0208 F0                 1533 	movx	@dptr,a
   0209 90s04r58           1534 	mov	dptr,#_Succ_PARM_2
   020C E0                 1535 	movx	a,@dptr
   020D FA                 1536 	mov	r2,a
   020E A3                 1537 	inc	dptr
   020F E0                 1538 	movx	a,@dptr
   0210 FB                 1539 	mov	r3,a
   0211 A3                 1540 	inc	dptr
   0212 E0                 1541 	movx	a,@dptr
   0213 FC                 1542 	mov	r4,a
   0214 8A 82              1543 	mov	dpl,r2
   0216 8B 83              1544 	mov	dph,r3
   0218 8C F0              1545 	mov	b,r4
   021A 12s00r00           1546 	lcall	__gptrget
   021D FA                 1547 	mov	r2,a
   021E A3                 1548 	inc	dptr
   021F 12s00r00           1549 	lcall	__gptrget
   0222 FB                 1550 	mov	r3,a
   0223 90s04r5B           1551 	mov	dptr,#_Succ_Value_1_1
   0226 E0                 1552 	movx	a,@dptr
   0227 FC                 1553 	mov	r4,a
   0228 A3                 1554 	inc	dptr
   0229 E0                 1555 	movx	a,@dptr
   022A FD                 1556 	mov	r5,a
   022B EC                 1557 	mov	a,r4
   022C B5 02 0B           1558 	cjne	a,ar2,00102$
   022F ED                 1559 	mov	a,r5
   0230 B5 03 07           1560 	cjne	a,ar3,00102$
                           1561 ;	../src/projectSpecificHardwareInterface_C8051F040.c:287: Value = 0 ;
   0233 90s04r5B           1562 	mov	dptr,#_Succ_Value_1_1
   0236 E4                 1563 	clr	a
   0237 F0                 1564 	movx	@dptr,a
   0238 A3                 1565 	inc	dptr
   0239 F0                 1566 	movx	@dptr,a
   023A                    1567 00102$:
                           1568 ;	../src/projectSpecificHardwareInterface_C8051F040.c:290: return Value ;
   023A 90s04r5B           1569 	mov	dptr,#_Succ_Value_1_1
   023D E0                 1570 	movx	a,@dptr
   023E FA                 1571 	mov	r2,a
   023F A3                 1572 	inc	dptr
   0240 E0                 1573 	movx	a,@dptr
   0241 8A 82              1574 	mov	dpl,r2
   0243 F5 83              1575 	mov	dph,a
   0245 22                 1576 	ret
                           1577 ;------------------------------------------------------------
                           1578 ;Allocation info for local variables in function 'task_UART_init_projectSpecific'
                           1579 ;------------------------------------------------------------
                           1580 ;channelNumber             Allocated with name '_task_UART_init_projectSpecific_channelNumber_1_1'
                           1581 ;Q                         Allocated with name '_task_UART_init_projectSpecific_Q_1_1'
                           1582 ;SFRPAGE_SAVE              Allocated with name '_task_UART_init_projectSpecific_SFRPAGE_SAVE_3_3'
                           1583 ;------------------------------------------------------------
                           1584 ;	../src/projectSpecificHardwareInterface_C8051F040.c:321: void task_UART_init_projectSpecific(	unsigned char channelNumber)
                           1585 ;	-----------------------------------------
                           1586 ;	 function task_UART_init_projectSpecific
                           1587 ;	-----------------------------------------
   0246                    1588 _task_UART_init_projectSpecific:
   0246 E5 82              1589 	mov	a,dpl
   0248 90s08rCD           1590 	mov	dptr,#_task_UART_init_projectSpecific_channelNumber_1_1
   024B F0                 1591 	movx	@dptr,a
                           1592 ;	../src/projectSpecificHardwareInterface_C8051F040.c:325: QUEUE_TYPE*	Q = &transmitBuffers[channelNumber] ;
   024C 90s08rCD           1593 	mov	dptr,#_task_UART_init_projectSpecific_channelNumber_1_1
   024F E0                 1594 	movx	a,@dptr
   0250 FA                 1595 	mov	r2,a
   0251 75 F0 0B           1596 	mov	b,#0x0B
   0254 A4                 1597 	mul	ab
   0255 FB                 1598 	mov	r3,a
   0256 24rB5              1599 	add	a,#_transmitBuffers
   0258 FC                 1600 	mov	r4,a
   0259 E4                 1601 	clr	a
   025A 34s08              1602 	addc	a,#(_transmitBuffers >> 8)
   025C FD                 1603 	mov	r5,a
   025D 7E 00              1604 	mov	r6,#0x00
                           1605 ;	../src/projectSpecificHardwareInterface_C8051F040.c:327: Q->Capacity	= TRANSMIT_BUFFER_SIZE ;
   025F 8C 82              1606 	mov	dpl,r4
   0261 8D 83              1607 	mov	dph,r5
   0263 8E F0              1608 	mov	b,r6
   0265 74 4C              1609 	mov	a,#0x4C
   0267 12s00r00           1610 	lcall	__gptrput
   026A A3                 1611 	inc	dptr
   026B 74 04              1612 	mov	a,#0x04
   026D 12s00r00           1613 	lcall	__gptrput
                           1614 ;	../src/projectSpecificHardwareInterface_C8051F040.c:328: Q->Size		= 0 ;
   0270 74 06              1615 	mov	a,#0x06
   0272 2C                 1616 	add	a,r4
   0273 FF                 1617 	mov	r7,a
   0274 E4                 1618 	clr	a
   0275 3D                 1619 	addc	a,r5
   0276 F8                 1620 	mov	r0,a
   0277 8E 01              1621 	mov	ar1,r6
   0279 8F 82              1622 	mov	dpl,r7
   027B 88 83              1623 	mov	dph,r0
   027D 89 F0              1624 	mov	b,r1
   027F E4                 1625 	clr	a
   0280 12s00r00           1626 	lcall	__gptrput
   0283 A3                 1627 	inc	dptr
   0284 E4                 1628 	clr	a
   0285 12s00r00           1629 	lcall	__gptrput
                           1630 ;	../src/projectSpecificHardwareInterface_C8051F040.c:329: Q->Front	= 1 ;
   0288 74 02              1631 	mov	a,#0x02
   028A 2C                 1632 	add	a,r4
   028B FF                 1633 	mov	r7,a
   028C E4                 1634 	clr	a
   028D 3D                 1635 	addc	a,r5
   028E F8                 1636 	mov	r0,a
   028F 8E 01              1637 	mov	ar1,r6
   0291 8F 82              1638 	mov	dpl,r7
   0293 88 83              1639 	mov	dph,r0
   0295 89 F0              1640 	mov	b,r1
   0297 74 01              1641 	mov	a,#0x01
   0299 12s00r00           1642 	lcall	__gptrput
   029C A3                 1643 	inc	dptr
   029D E4                 1644 	clr	a
   029E 12s00r00           1645 	lcall	__gptrput
                           1646 ;	../src/projectSpecificHardwareInterface_C8051F040.c:330: Q->Rear		= 0 ;
   02A1 74 04              1647 	mov	a,#0x04
   02A3 2C                 1648 	add	a,r4
   02A4 FF                 1649 	mov	r7,a
   02A5 E4                 1650 	clr	a
   02A6 3D                 1651 	addc	a,r5
   02A7 F8                 1652 	mov	r0,a
   02A8 8E 01              1653 	mov	ar1,r6
   02AA 8F 82              1654 	mov	dpl,r7
   02AC 88 83              1655 	mov	dph,r0
   02AE 89 F0              1656 	mov	b,r1
   02B0 E4                 1657 	clr	a
   02B1 12s00r00           1658 	lcall	__gptrput
   02B4 A3                 1659 	inc	dptr
   02B5 E4                 1660 	clr	a
   02B6 12s00r00           1661 	lcall	__gptrput
                           1662 ;	../src/projectSpecificHardwareInterface_C8051F040.c:331: Q->Array	= transmitBuffer[0] ;
   02B9 74 08              1663 	mov	a,#0x08
   02BB 2C                 1664 	add	a,r4
   02BC FC                 1665 	mov	r4,a
   02BD E4                 1666 	clr	a
   02BE 3D                 1667 	addc	a,r5
   02BF FD                 1668 	mov	r5,a
   02C0 8C 82              1669 	mov	dpl,r4
   02C2 8D 83              1670 	mov	dph,r5
   02C4 8E F0              1671 	mov	b,r6
   02C6 74r5D              1672 	mov	a,#_transmitBuffer
   02C8 12s00r00           1673 	lcall	__gptrput
   02CB A3                 1674 	inc	dptr
   02CC 74s04              1675 	mov	a,#(_transmitBuffer >> 8)
   02CE 12s00r00           1676 	lcall	__gptrput
   02D1 A3                 1677 	inc	dptr
   02D2 E4                 1678 	clr	a
   02D3 12s00r00           1679 	lcall	__gptrput
                           1680 ;	../src/projectSpecificHardwareInterface_C8051F040.c:333: Q = &receiveBuffers[channelNumber] ;
   02D6 EB                 1681 	mov	a,r3
   02D7 24rC0              1682 	add	a,#_receiveBuffers
   02D9 FB                 1683 	mov	r3,a
   02DA E4                 1684 	clr	a
   02DB 34s08              1685 	addc	a,#(_receiveBuffers >> 8)
   02DD FC                 1686 	mov	r4,a
   02DE 7D 00              1687 	mov	r5,#0x00
                           1688 ;	../src/projectSpecificHardwareInterface_C8051F040.c:335: Q->Capacity	= RECEIVE_BUFFER_SIZE ;
   02E0 8B 82              1689 	mov	dpl,r3
   02E2 8C 83              1690 	mov	dph,r4
   02E4 8D F0              1691 	mov	b,r5
   02E6 74 0A              1692 	mov	a,#0x0A
   02E8 12s00r00           1693 	lcall	__gptrput
   02EB A3                 1694 	inc	dptr
   02EC E4                 1695 	clr	a
   02ED 12s00r00           1696 	lcall	__gptrput
                           1697 ;	../src/projectSpecificHardwareInterface_C8051F040.c:336: Q->Size		= 0 ;
   02F0 74 06              1698 	mov	a,#0x06
   02F2 2B                 1699 	add	a,r3
   02F3 FE                 1700 	mov	r6,a
   02F4 E4                 1701 	clr	a
   02F5 3C                 1702 	addc	a,r4
   02F6 FF                 1703 	mov	r7,a
   02F7 8D 00              1704 	mov	ar0,r5
   02F9 8E 82              1705 	mov	dpl,r6
   02FB 8F 83              1706 	mov	dph,r7
   02FD 88 F0              1707 	mov	b,r0
   02FF E4                 1708 	clr	a
   0300 12s00r00           1709 	lcall	__gptrput
   0303 A3                 1710 	inc	dptr
   0304 E4                 1711 	clr	a
   0305 12s00r00           1712 	lcall	__gptrput
                           1713 ;	../src/projectSpecificHardwareInterface_C8051F040.c:337: Q->Front	= 1 ;
   0308 74 02              1714 	mov	a,#0x02
   030A 2B                 1715 	add	a,r3
   030B FE                 1716 	mov	r6,a
   030C E4                 1717 	clr	a
   030D 3C                 1718 	addc	a,r4
   030E FF                 1719 	mov	r7,a
   030F 8D 00              1720 	mov	ar0,r5
   0311 8E 82              1721 	mov	dpl,r6
   0313 8F 83              1722 	mov	dph,r7
   0315 88 F0              1723 	mov	b,r0
   0317 74 01              1724 	mov	a,#0x01
   0319 12s00r00           1725 	lcall	__gptrput
   031C A3                 1726 	inc	dptr
   031D E4                 1727 	clr	a
   031E 12s00r00           1728 	lcall	__gptrput
                           1729 ;	../src/projectSpecificHardwareInterface_C8051F040.c:338: Q->Rear		= 0 ;
   0321 74 04              1730 	mov	a,#0x04
   0323 2B                 1731 	add	a,r3
   0324 FE                 1732 	mov	r6,a
   0325 E4                 1733 	clr	a
   0326 3C                 1734 	addc	a,r4
   0327 FF                 1735 	mov	r7,a
   0328 8D 00              1736 	mov	ar0,r5
   032A 8E 82              1737 	mov	dpl,r6
   032C 8F 83              1738 	mov	dph,r7
   032E 88 F0              1739 	mov	b,r0
   0330 E4                 1740 	clr	a
   0331 12s00r00           1741 	lcall	__gptrput
   0334 A3                 1742 	inc	dptr
   0335 E4                 1743 	clr	a
   0336 12s00r00           1744 	lcall	__gptrput
                           1745 ;	../src/projectSpecificHardwareInterface_C8051F040.c:339: Q->Array	= receiveBuffer[0] ;
   0339 74 08              1746 	mov	a,#0x08
   033B 2B                 1747 	add	a,r3
   033C FB                 1748 	mov	r3,a
   033D E4                 1749 	clr	a
   033E 3C                 1750 	addc	a,r4
   033F FC                 1751 	mov	r4,a
   0340 8B 82              1752 	mov	dpl,r3
   0342 8C 83              1753 	mov	dph,r4
   0344 8D F0              1754 	mov	b,r5
   0346 74rAA              1755 	mov	a,#_receiveBuffer
   0348 12s00r00           1756 	lcall	__gptrput
   034B A3                 1757 	inc	dptr
   034C 74s08              1758 	mov	a,#(_receiveBuffer >> 8)
   034E 12s00r00           1759 	lcall	__gptrput
   0351 A3                 1760 	inc	dptr
   0352 E4                 1761 	clr	a
   0353 12s00r00           1762 	lcall	__gptrput
                           1763 ;	../src/projectSpecificHardwareInterface_C8051F040.c:341: charSent[channelNumber]		= false ;
   0356 EA                 1764 	mov	a,r2
   0357 24rCB              1765 	add	a,#_charSent
   0359 F5 82              1766 	mov	dpl,a
   035B E4                 1767 	clr	a
   035C 34s08              1768 	addc	a,#(_charSent >> 8)
   035E F5 83              1769 	mov	dph,a
   0360 E4                 1770 	clr	a
   0361 F0                 1771 	movx	@dptr,a
                           1772 ;	../src/projectSpecificHardwareInterface_C8051F040.c:342: lineReady[channelNumber]	= false ;
   0362 EA                 1773 	mov	a,r2
   0363 24rCC              1774 	add	a,#_lineReady
   0365 F5 82              1775 	mov	dpl,a
   0367 E4                 1776 	clr	a
   0368 34s08              1777 	addc	a,#(_lineReady >> 8)
   036A F5 83              1778 	mov	dph,a
   036C E4                 1779 	clr	a
   036D F0                 1780 	movx	@dptr,a
                           1781 ;	../src/projectSpecificHardwareInterface_C8051F040.c:344: if(!timer1initialized)
   036E 20*02 20           1782 	jb	_task_UART_init_projectSpecific_timer1initialized_1_1,00102$
                           1783 ;	../src/projectSpecificHardwareInterface_C8051F040.c:346: timer1initialized = true ;
   0371 D2*02              1784 	setb	_task_UART_init_projectSpecific_timer1initialized_1_1
                           1785 ;	../src/projectSpecificHardwareInterface_C8051F040.c:348: portSET_REGISTER_GROUP(TIMER01_PAGE)
   0373 AA 84              1786 	mov	r2,_SFRPAGE
   0375 75 84 00           1787 	mov	_SFRPAGE,#0x00
                           1788 ;	../src/projectSpecificHardwareInterface_C8051F040.c:351: TMOD &= 0x08 ;
   0378 53 89 08           1789 	anl	_TMOD,#0x08
                           1790 ;	../src/projectSpecificHardwareInterface_C8051F040.c:352: TMOD |= ser8BIT_WITH_RELOAD ;
   037B 43 89 20           1791 	orl	_TMOD,#0x20
                           1792 ;	../src/projectSpecificHardwareInterface_C8051F040.c:353: SSTA0 |= serSMOD ;
   037E 43 91 10           1793 	orl	_SSTA0,#0x10
                           1794 ;	../src/projectSpecificHardwareInterface_C8051F040.c:354: CKCON |= 0x10 ;
   0381 43 8E 10           1795 	orl	_CKCON,#0x10
                           1796 ;	../src/projectSpecificHardwareInterface_C8051F040.c:357: TL1 = ( unsigned char ) 0xB2 ;	// B8 = 9600 BAUD on unmoded eval boards, B2 = 9615 on 24MHz systems
   0384 75 8B B2           1797 	mov	_TL1,#0xB2
                           1798 ;	../src/projectSpecificHardwareInterface_C8051F040.c:358: TH1 = ( unsigned char ) 0xB2 ;
   0387 75 8D B2           1799 	mov	_TH1,#0xB2
                           1800 ;	../src/projectSpecificHardwareInterface_C8051F040.c:360: SCON = ser8_BIT_MODE | serRX_ENABLE ;	/* Setup the control register for standard n, 8, 1 - variable baud rate. */
   038A 75 98 50           1801 	mov	_SCON,#0x50
                           1802 ;	../src/projectSpecificHardwareInterface_C8051F040.c:362: TR1 = 1 ;							/* Start the timer. */
   038D D2 8E              1803 	setb	_TR1
                           1804 ;	../src/projectSpecificHardwareInterface_C8051F040.c:364: portRESTORE_REGISTER_GROUP()
   038F 8A 84              1805 	mov	_SFRPAGE,r2
   0391                    1806 00102$:
                           1807 ;	../src/projectSpecificHardwareInterface_C8051F040.c:367: if(channelNumber == 0)
   0391 90s08rCD           1808 	mov	dptr,#_task_UART_init_projectSpecific_channelNumber_1_1
   0394 E0                 1809 	movx	a,@dptr
   0395 FA                 1810 	mov	r2,a
   0396 70 03              1811 	jnz	00106$
                           1812 ;	../src/projectSpecificHardwareInterface_C8051F040.c:369: UART0_Init() ;
   0398 02s09r3F           1813 	ljmp	_UART0_Init
   039B                    1814 00106$:
                           1815 ;	../src/projectSpecificHardwareInterface_C8051F040.c:371: else if(channelNumber == 1)
   039B BA 01 03           1816 	cjne	r2,#0x01,00108$
                           1817 ;	../src/projectSpecificHardwareInterface_C8051F040.c:373: UART1_Init() ;
   039E 02s09r4D           1818 	ljmp	_UART1_Init
   03A1                    1819 00108$:
   03A1 22                 1820 	ret
                           1821 ;------------------------------------------------------------
                           1822 ;Allocation info for local variables in function 'task_UART_core_projectSpecific'
                           1823 ;------------------------------------------------------------
                           1824 ;sloc0                     Allocated with name '_task_UART_core_projectSpecific_sloc0_1_0'
                           1825 ;sloc1                     Allocated with name '_task_UART_core_projectSpecific_sloc1_1_0'
                           1826 ;sloc2                     Allocated with name '_task_UART_core_projectSpecific_sloc2_1_0'
                           1827 ;sloc3                     Allocated with name '_task_UART_core_projectSpecific_sloc3_1_0'
                           1828 ;channelNumber             Allocated with name '_task_UART_core_projectSpecific_channelNumber_1_1'
                           1829 ;SFRPAGE_SAVE              Allocated with name '_task_UART_core_projectSpecific_SFRPAGE_SAVE_3_3'
                           1830 ;Q                         Allocated with name '_task_UART_core_projectSpecific_Q_4_4'
                           1831 ;charReceived              Allocated with name '_task_UART_core_projectSpecific_charReceived_6_6'
                           1832 ;byteToSend                Allocated with name '_task_UART_core_projectSpecific_byteToSend_5_10'
                           1833 ;------------------------------------------------------------
                           1834 ;	../src/projectSpecificHardwareInterface_C8051F040.c:382: void task_UART_core_projectSpecific(	unsigned char channelNumber)
                           1835 ;	-----------------------------------------
                           1836 ;	 function task_UART_core_projectSpecific
                           1837 ;	-----------------------------------------
   03A2                    1838 _task_UART_core_projectSpecific:
   03A2 E5 82              1839 	mov	a,dpl
   03A4 90s08rCE           1840 	mov	dptr,#_task_UART_core_projectSpecific_channelNumber_1_1
   03A7 F0                 1841 	movx	@dptr,a
                           1842 ;	../src/projectSpecificHardwareInterface_C8051F040.c:384: if(channelNumber < NUMBER_OF_UARTS)
   03A8 90s08rCE           1843 	mov	dptr,#_task_UART_core_projectSpecific_channelNumber_1_1
   03AB E0                 1844 	movx	a,@dptr
   03AC FA                 1845 	mov	r2,a
   03AD BA 01 00           1846 	cjne	r2,#0x01,00125$
   03B0                    1847 00125$:
   03B0 40 01              1848 	jc	00126$
   03B2 22                 1849 	ret
   03B3                    1850 00126$:
                           1851 ;	../src/projectSpecificHardwareInterface_C8051F040.c:386: portSET_REGISTER_GROUP(UART0_PAGE)
   03B3 AB 84              1852 	mov	r3,_SFRPAGE
   03B5 75 84 00           1853 	mov	_SFRPAGE,#0x00
                           1854 ;	../src/projectSpecificHardwareInterface_C8051F040.c:388: QUEUE_TYPE*	Q = &receiveBuffers[channelNumber] ;
   03B8 EA                 1855 	mov	a,r2
   03B9 75 F0 0B           1856 	mov	b,#0x0B
   03BC A4                 1857 	mul	ab
   03BD 24rC0              1858 	add	a,#_receiveBuffers
   03BF FC                 1859 	mov	r4,a
   03C0 E4                 1860 	clr	a
   03C1 34s08              1861 	addc	a,#(_receiveBuffers >> 8)
   03C3 FD                 1862 	mov	r5,a
   03C4 7E 00              1863 	mov	r6,#0x00
   03C6 90s08rCF           1864 	mov	dptr,#_task_UART_core_projectSpecific_Q_4_4
   03C9 EC                 1865 	mov	a,r4
   03CA F0                 1866 	movx	@dptr,a
   03CB A3                 1867 	inc	dptr
   03CC ED                 1868 	mov	a,r5
   03CD F0                 1869 	movx	@dptr,a
   03CE A3                 1870 	inc	dptr
   03CF EE                 1871 	mov	a,r6
   03D0 F0                 1872 	movx	@dptr,a
                           1873 ;	../src/projectSpecificHardwareInterface_C8051F040.c:390: if(RI0)
   03D1 20 98 03           1874 	jb	_RI0,00127$
   03D4 02s04rE7           1875 	ljmp	00106$
   03D7                    1876 00127$:
                           1877 ;	../src/projectSpecificHardwareInterface_C8051F040.c:392: if(!IsFull(Q))
   03D7 8C 82              1878 	mov	dpl,r4
   03D9 8D 83              1879 	mov	dph,r5
   03DB 8E F0              1880 	mov	b,r6
   03DD C0 02              1881 	push	ar2
   03DF C0 03              1882 	push	ar3
   03E1 12s01rA0           1883 	lcall	_IsFull
   03E4 E5 82              1884 	mov	a,dpl
   03E6 D0 03              1885 	pop	ar3
   03E8 D0 02              1886 	pop	ar2
   03EA 60 03              1887 	jz	00128$
   03EC 02s04rE5           1888 	ljmp	00104$
   03EF                    1889 00128$:
                           1890 ;	../src/projectSpecificHardwareInterface_C8051F040.c:394: char	charReceived = SBUF0 ;
   03EF C0 03              1891 	push	ar3
   03F1 85 99*00           1892 	mov	_task_UART_core_projectSpecific_sloc0_1_0,_SBUF0
                           1893 ;	../src/projectSpecificHardwareInterface_C8051F040.c:396: Q->Size++ ;
   03F4 90s08rCF           1894 	mov	dptr,#_task_UART_core_projectSpecific_Q_4_4
   03F7 E0                 1895 	movx	a,@dptr
   03F8 FD                 1896 	mov	r5,a
   03F9 A3                 1897 	inc	dptr
   03FA E0                 1898 	movx	a,@dptr
   03FB FE                 1899 	mov	r6,a
   03FC A3                 1900 	inc	dptr
   03FD E0                 1901 	movx	a,@dptr
   03FE FF                 1902 	mov	r7,a
   03FF 74 06              1903 	mov	a,#0x06
   0401 2D                 1904 	add	a,r5
   0402 F5*01              1905 	mov	_task_UART_core_projectSpecific_sloc1_1_0,a
   0404 E4                 1906 	clr	a
   0405 3E                 1907 	addc	a,r6
   0406 F5*02              1908 	mov	(_task_UART_core_projectSpecific_sloc1_1_0 + 1),a
   0408 8F*03              1909 	mov	(_task_UART_core_projectSpecific_sloc1_1_0 + 2),r7
   040A 85*01 82           1910 	mov	dpl,_task_UART_core_projectSpecific_sloc1_1_0
   040D 85*02 83           1911 	mov	dph,(_task_UART_core_projectSpecific_sloc1_1_0 + 1)
   0410 85*03 F0           1912 	mov	b,(_task_UART_core_projectSpecific_sloc1_1_0 + 2)
   0413 12s00r00           1913 	lcall	__gptrget
   0416 FC                 1914 	mov	r4,a
   0417 A3                 1915 	inc	dptr
   0418 12s00r00           1916 	lcall	__gptrget
   041B FB                 1917 	mov	r3,a
   041C 0C                 1918 	inc	r4
   041D BC 00 01           1919 	cjne	r4,#0x00,00129$
   0420 0B                 1920 	inc	r3
   0421                    1921 00129$:
   0421 85*01 82           1922 	mov	dpl,_task_UART_core_projectSpecific_sloc1_1_0
   0424 85*02 83           1923 	mov	dph,(_task_UART_core_projectSpecific_sloc1_1_0 + 1)
   0427 85*03 F0           1924 	mov	b,(_task_UART_core_projectSpecific_sloc1_1_0 + 2)
   042A EC                 1925 	mov	a,r4
   042B 12s00r00           1926 	lcall	__gptrput
   042E A3                 1927 	inc	dptr
   042F EB                 1928 	mov	a,r3
   0430 12s00r00           1929 	lcall	__gptrput
                           1930 ;	../src/projectSpecificHardwareInterface_C8051F040.c:397: Q->Rear = Succ(Q->Rear, Q) ;
   0433 74 04              1931 	mov	a,#0x04
   0435 2D                 1932 	add	a,r5
   0436 F5*01              1933 	mov	_task_UART_core_projectSpecific_sloc1_1_0,a
   0438 E4                 1934 	clr	a
   0439 3E                 1935 	addc	a,r6
   043A F5*02              1936 	mov	(_task_UART_core_projectSpecific_sloc1_1_0 + 1),a
   043C 8F*03              1937 	mov	(_task_UART_core_projectSpecific_sloc1_1_0 + 2),r7
   043E 85*01 82           1938 	mov	dpl,_task_UART_core_projectSpecific_sloc1_1_0
   0441 85*02 83           1939 	mov	dph,(_task_UART_core_projectSpecific_sloc1_1_0 + 1)
   0444 85*03 F0           1940 	mov	b,(_task_UART_core_projectSpecific_sloc1_1_0 + 2)
   0447 12s00r00           1941 	lcall	__gptrget
   044A F9                 1942 	mov	r1,a
   044B A3                 1943 	inc	dptr
   044C 12s00r00           1944 	lcall	__gptrget
   044F FB                 1945 	mov	r3,a
   0450 90s04r58           1946 	mov	dptr,#_Succ_PARM_2
   0453 ED                 1947 	mov	a,r5
   0454 F0                 1948 	movx	@dptr,a
   0455 A3                 1949 	inc	dptr
   0456 EE                 1950 	mov	a,r6
   0457 F0                 1951 	movx	@dptr,a
   0458 A3                 1952 	inc	dptr
   0459 EF                 1953 	mov	a,r7
   045A F0                 1954 	movx	@dptr,a
   045B 89 82              1955 	mov	dpl,r1
   045D 8B 83              1956 	mov	dph,r3
   045F C0 02              1957 	push	ar2
   0461 12s01rF2           1958 	lcall	_Succ
   0464 AB 82              1959 	mov	r3,dpl
   0466 AC 83              1960 	mov	r4,dph
   0468 D0 02              1961 	pop	ar2
   046A 85*01 82           1962 	mov	dpl,_task_UART_core_projectSpecific_sloc1_1_0
   046D 85*02 83           1963 	mov	dph,(_task_UART_core_projectSpecific_sloc1_1_0 + 1)
   0470 85*03 F0           1964 	mov	b,(_task_UART_core_projectSpecific_sloc1_1_0 + 2)
   0473 EB                 1965 	mov	a,r3
   0474 12s00r00           1966 	lcall	__gptrput
   0477 A3                 1967 	inc	dptr
   0478 EC                 1968 	mov	a,r4
   0479 12s00r00           1969 	lcall	__gptrput
                           1970 ;	../src/projectSpecificHardwareInterface_C8051F040.c:398: Q->Array[Q->Rear] = charReceived ;
   047C 90s08rCF           1971 	mov	dptr,#_task_UART_core_projectSpecific_Q_4_4
   047F E0                 1972 	movx	a,@dptr
   0480 FB                 1973 	mov	r3,a
   0481 A3                 1974 	inc	dptr
   0482 E0                 1975 	movx	a,@dptr
   0483 FC                 1976 	mov	r4,a
   0484 A3                 1977 	inc	dptr
   0485 E0                 1978 	movx	a,@dptr
   0486 FD                 1979 	mov	r5,a
   0487 74 08              1980 	mov	a,#0x08
   0489 2B                 1981 	add	a,r3
   048A FE                 1982 	mov	r6,a
   048B E4                 1983 	clr	a
   048C 3C                 1984 	addc	a,r4
   048D FF                 1985 	mov	r7,a
   048E 8D 00              1986 	mov	ar0,r5
   0490 8E 82              1987 	mov	dpl,r6
   0492 8F 83              1988 	mov	dph,r7
   0494 88 F0              1989 	mov	b,r0
   0496 12s00r00           1990 	lcall	__gptrget
   0499 FE                 1991 	mov	r6,a
   049A A3                 1992 	inc	dptr
   049B 12s00r00           1993 	lcall	__gptrget
   049E FF                 1994 	mov	r7,a
   049F A3                 1995 	inc	dptr
   04A0 12s00r00           1996 	lcall	__gptrget
   04A3 F8                 1997 	mov	r0,a
   04A4 74 04              1998 	mov	a,#0x04
   04A6 2B                 1999 	add	a,r3
   04A7 FB                 2000 	mov	r3,a
   04A8 E4                 2001 	clr	a
   04A9 3C                 2002 	addc	a,r4
   04AA FC                 2003 	mov	r4,a
   04AB 8B 82              2004 	mov	dpl,r3
   04AD 8C 83              2005 	mov	dph,r4
   04AF 8D F0              2006 	mov	b,r5
   04B1 12s00r00           2007 	lcall	__gptrget
   04B4 FB                 2008 	mov	r3,a
   04B5 A3                 2009 	inc	dptr
   04B6 12s00r00           2010 	lcall	__gptrget
   04B9 FC                 2011 	mov	r4,a
   04BA EB                 2012 	mov	a,r3
   04BB 2E                 2013 	add	a,r6
   04BC FE                 2014 	mov	r6,a
   04BD EC                 2015 	mov	a,r4
   04BE 3F                 2016 	addc	a,r7
   04BF FF                 2017 	mov	r7,a
   04C0 8E 82              2018 	mov	dpl,r6
   04C2 8F 83              2019 	mov	dph,r7
   04C4 88 F0              2020 	mov	b,r0
   04C6 E5*00              2021 	mov	a,_task_UART_core_projectSpecific_sloc0_1_0
   04C8 12s00r00           2022 	lcall	__gptrput
                           2023 ;	../src/projectSpecificHardwareInterface_C8051F040.c:400: if(charReceived == '\n')
   04CB 74 0A              2024 	mov	a,#0x0A
   04CD B5*00 02           2025 	cjne	a,_task_UART_core_projectSpecific_sloc0_1_0,00130$
   04D0 80 04              2026 	sjmp	00131$
   04D2                    2027 00130$:
   04D2 D0 03              2028 	pop	ar3
   04D4 80 0F              2029 	sjmp	00104$
   04D6                    2030 00131$:
   04D6 D0 03              2031 	pop	ar3
                           2032 ;	../src/projectSpecificHardwareInterface_C8051F040.c:402: lineReady[channelNumber] = true ;
   04D8 EA                 2033 	mov	a,r2
   04D9 24rCC              2034 	add	a,#_lineReady
   04DB F5 82              2035 	mov	dpl,a
   04DD E4                 2036 	clr	a
   04DE 34s08              2037 	addc	a,#(_lineReady >> 8)
   04E0 F5 83              2038 	mov	dph,a
   04E2 74 01              2039 	mov	a,#0x01
   04E4 F0                 2040 	movx	@dptr,a
   04E5                    2041 00104$:
                           2042 ;	../src/projectSpecificHardwareInterface_C8051F040.c:406: RI0 = 0 ;
   04E5 C2 98              2043 	clr	_RI0
   04E7                    2044 00106$:
                           2045 ;	../src/projectSpecificHardwareInterface_C8051F040.c:409: Q = &transmitBuffers[channelNumber] ;
   04E7 90s08rCE           2046 	mov	dptr,#_task_UART_core_projectSpecific_channelNumber_1_1
   04EA E0                 2047 	movx	a,@dptr
   04EB FA                 2048 	mov	r2,a
   04EC 75 F0 0B           2049 	mov	b,#0x0B
   04EF A4                 2050 	mul	ab
   04F0 24rB5              2051 	add	a,#_transmitBuffers
   04F2 FC                 2052 	mov	r4,a
   04F3 E4                 2053 	clr	a
   04F4 34s08              2054 	addc	a,#(_transmitBuffers >> 8)
   04F6 FD                 2055 	mov	r5,a
   04F7 7E 00              2056 	mov	r6,#0x00
   04F9 90s08rCF           2057 	mov	dptr,#_task_UART_core_projectSpecific_Q_4_4
   04FC EC                 2058 	mov	a,r4
   04FD F0                 2059 	movx	@dptr,a
   04FE A3                 2060 	inc	dptr
   04FF ED                 2061 	mov	a,r5
   0500 F0                 2062 	movx	@dptr,a
   0501 A3                 2063 	inc	dptr
   0502 EE                 2064 	mov	a,r6
   0503 F0                 2065 	movx	@dptr,a
                           2066 ;	../src/projectSpecificHardwareInterface_C8051F040.c:411: if(charSent[channelNumber] == true)
   0504 EA                 2067 	mov	a,r2
   0505 24rCB              2068 	add	a,#_charSent
   0507 FA                 2069 	mov	r2,a
   0508 E4                 2070 	clr	a
   0509 34s08              2071 	addc	a,#(_charSent >> 8)
   050B FF                 2072 	mov	r7,a
   050C 8A 82              2073 	mov	dpl,r2
   050E 8F 83              2074 	mov	dph,r7
   0510 E0                 2075 	movx	a,@dptr
   0511 F8                 2076 	mov	r0,a
   0512 B8 01 09           2077 	cjne	r0,#0x01,00111$
                           2078 ;	../src/projectSpecificHardwareInterface_C8051F040.c:413: charSent[channelNumber] = false ;
   0515 8A 82              2079 	mov	dpl,r2
   0517 8F 83              2080 	mov	dph,r7
   0519 E4                 2081 	clr	a
   051A F0                 2082 	movx	@dptr,a
                           2083 ;	../src/projectSpecificHardwareInterface_C8051F040.c:417: while(TI0 == 0) { /* empty loop */} ;
   051B                    2084 00107$:
   051B 30 99 FD           2085 	jnb	_TI0,00107$
   051E                    2086 00111$:
                           2087 ;	../src/projectSpecificHardwareInterface_C8051F040.c:420: if(!IsEmpty(Q))
   051E 8C 82              2088 	mov	dpl,r4
   0520 8D 83              2089 	mov	dph,r5
   0522 8E F0              2090 	mov	b,r6
   0524 C0 03              2091 	push	ar3
   0526 12s01r64           2092 	lcall	_IsEmpty
   0529 E5 82              2093 	mov	a,dpl
   052B D0 03              2094 	pop	ar3
   052D 60 03              2095 	jz	00135$
   052F 02s06r03           2096 	ljmp	00113$
   0532                    2097 00135$:
                           2098 ;	../src/projectSpecificHardwareInterface_C8051F040.c:422: unsigned char byteToSend = Q->Array[Q->Front] ;
   0532 C0 03              2099 	push	ar3
   0534 90s08rCF           2100 	mov	dptr,#_task_UART_core_projectSpecific_Q_4_4
   0537 E0                 2101 	movx	a,@dptr
   0538 FA                 2102 	mov	r2,a
   0539 A3                 2103 	inc	dptr
   053A E0                 2104 	movx	a,@dptr
   053B FC                 2105 	mov	r4,a
   053C A3                 2106 	inc	dptr
   053D E0                 2107 	movx	a,@dptr
   053E FD                 2108 	mov	r5,a
   053F 74 08              2109 	mov	a,#0x08
   0541 2A                 2110 	add	a,r2
   0542 FE                 2111 	mov	r6,a
   0543 E4                 2112 	clr	a
   0544 3C                 2113 	addc	a,r4
   0545 FF                 2114 	mov	r7,a
   0546 8D 00              2115 	mov	ar0,r5
   0548 8E 82              2116 	mov	dpl,r6
   054A 8F 83              2117 	mov	dph,r7
   054C 88 F0              2118 	mov	b,r0
   054E 12s00r00           2119 	lcall	__gptrget
   0551 F5*01              2120 	mov	_task_UART_core_projectSpecific_sloc1_1_0,a
   0553 A3                 2121 	inc	dptr
   0554 12s00r00           2122 	lcall	__gptrget
   0557 F5*02              2123 	mov	(_task_UART_core_projectSpecific_sloc1_1_0 + 1),a
   0559 A3                 2124 	inc	dptr
   055A 12s00r00           2125 	lcall	__gptrget
   055D F5*03              2126 	mov	(_task_UART_core_projectSpecific_sloc1_1_0 + 2),a
   055F 74 02              2127 	mov	a,#0x02
   0561 2A                 2128 	add	a,r2
   0562 F5*06              2129 	mov	_task_UART_core_projectSpecific_sloc3_1_0,a
   0564 E4                 2130 	clr	a
   0565 3C                 2131 	addc	a,r4
   0566 F5*07              2132 	mov	(_task_UART_core_projectSpecific_sloc3_1_0 + 1),a
   0568 8D*08              2133 	mov	(_task_UART_core_projectSpecific_sloc3_1_0 + 2),r5
   056A 85*06 82           2134 	mov	dpl,_task_UART_core_projectSpecific_sloc3_1_0
   056D 85*07 83           2135 	mov	dph,(_task_UART_core_projectSpecific_sloc3_1_0 + 1)
   0570 85*08 F0           2136 	mov	b,(_task_UART_core_projectSpecific_sloc3_1_0 + 2)
   0573 12s00r00           2137 	lcall	__gptrget
   0576 F5*04              2138 	mov	_task_UART_core_projectSpecific_sloc2_1_0,a
   0578 A3                 2139 	inc	dptr
   0579 12s00r00           2140 	lcall	__gptrget
   057C F5*05              2141 	mov	(_task_UART_core_projectSpecific_sloc2_1_0 + 1),a
   057E E5*04              2142 	mov	a,_task_UART_core_projectSpecific_sloc2_1_0
   0580 25*01              2143 	add	a,_task_UART_core_projectSpecific_sloc1_1_0
   0582 FF                 2144 	mov	r7,a
   0583 E5*05              2145 	mov	a,(_task_UART_core_projectSpecific_sloc2_1_0 + 1)
   0585 35*02              2146 	addc	a,(_task_UART_core_projectSpecific_sloc1_1_0 + 1)
   0587 F8                 2147 	mov	r0,a
   0588 AB*03              2148 	mov	r3,(_task_UART_core_projectSpecific_sloc1_1_0 + 2)
   058A 8F 82              2149 	mov	dpl,r7
   058C 88 83              2150 	mov	dph,r0
   058E 8B F0              2151 	mov	b,r3
   0590 12s00r00           2152 	lcall	__gptrget
   0593 F5*01              2153 	mov	_task_UART_core_projectSpecific_sloc1_1_0,a
                           2154 ;	../src/projectSpecificHardwareInterface_C8051F040.c:424: Q->Size-- ;
   0595 74 06              2155 	mov	a,#0x06
   0597 2A                 2156 	add	a,r2
   0598 FB                 2157 	mov	r3,a
   0599 E4                 2158 	clr	a
   059A 3C                 2159 	addc	a,r4
   059B FE                 2160 	mov	r6,a
   059C 8D 00              2161 	mov	ar0,r5
   059E 8B 82              2162 	mov	dpl,r3
   05A0 8E 83              2163 	mov	dph,r6
   05A2 88 F0              2164 	mov	b,r0
   05A4 12s00r00           2165 	lcall	__gptrget
   05A7 F9                 2166 	mov	r1,a
   05A8 A3                 2167 	inc	dptr
   05A9 12s00r00           2168 	lcall	__gptrget
   05AC FF                 2169 	mov	r7,a
   05AD 19                 2170 	dec	r1
   05AE B9 FF 01           2171 	cjne	r1,#0xff,00136$
   05B1 1F                 2172 	dec	r7
   05B2                    2173 00136$:
   05B2 8B 82              2174 	mov	dpl,r3
   05B4 8E 83              2175 	mov	dph,r6
   05B6 88 F0              2176 	mov	b,r0
   05B8 E9                 2177 	mov	a,r1
   05B9 12s00r00           2178 	lcall	__gptrput
   05BC A3                 2179 	inc	dptr
   05BD EF                 2180 	mov	a,r7
   05BE 12s00r00           2181 	lcall	__gptrput
                           2182 ;	../src/projectSpecificHardwareInterface_C8051F040.c:425: Q->Front = Succ(Q->Front, Q) ;
   05C1 90s04r58           2183 	mov	dptr,#_Succ_PARM_2
   05C4 EA                 2184 	mov	a,r2
   05C5 F0                 2185 	movx	@dptr,a
   05C6 A3                 2186 	inc	dptr
   05C7 EC                 2187 	mov	a,r4
   05C8 F0                 2188 	movx	@dptr,a
   05C9 A3                 2189 	inc	dptr
   05CA ED                 2190 	mov	a,r5
   05CB F0                 2191 	movx	@dptr,a
   05CC 85*04 82           2192 	mov	dpl,_task_UART_core_projectSpecific_sloc2_1_0
   05CF 85*05 83           2193 	mov	dph,(_task_UART_core_projectSpecific_sloc2_1_0 + 1)
   05D2 12s01rF2           2194 	lcall	_Succ
   05D5 AA 82              2195 	mov	r2,dpl
   05D7 AB 83              2196 	mov	r3,dph
   05D9 85*06 82           2197 	mov	dpl,_task_UART_core_projectSpecific_sloc3_1_0
   05DC 85*07 83           2198 	mov	dph,(_task_UART_core_projectSpecific_sloc3_1_0 + 1)
   05DF 85*08 F0           2199 	mov	b,(_task_UART_core_projectSpecific_sloc3_1_0 + 2)
   05E2 EA                 2200 	mov	a,r2
   05E3 12s00r00           2201 	lcall	__gptrput
   05E6 A3                 2202 	inc	dptr
   05E7 EB                 2203 	mov	a,r3
   05E8 12s00r00           2204 	lcall	__gptrput
                           2205 ;	../src/projectSpecificHardwareInterface_C8051F040.c:427: TI0 = 0 ;	// clear it and send the next character
   05EB C2 99              2206 	clr	_TI0
                           2207 ;	../src/projectSpecificHardwareInterface_C8051F040.c:429: SBUF0 = byteToSend ;
   05ED 85*01 99           2208 	mov	_SBUF0,_task_UART_core_projectSpecific_sloc1_1_0
                           2209 ;	../src/projectSpecificHardwareInterface_C8051F040.c:431: charSent[channelNumber] = true ;
   05F0 90s08rCE           2210 	mov	dptr,#_task_UART_core_projectSpecific_channelNumber_1_1
   05F3 E0                 2211 	movx	a,@dptr
   05F4 FA                 2212 	mov	r2,a
   05F5 24rCB              2213 	add	a,#_charSent
   05F7 F5 82              2214 	mov	dpl,a
   05F9 E4                 2215 	clr	a
   05FA 34s08              2216 	addc	a,#(_charSent >> 8)
   05FC F5 83              2217 	mov	dph,a
   05FE 74 01              2218 	mov	a,#0x01
   0600 F0                 2219 	movx	@dptr,a
                           2220 ;	../src/projectSpecificHardwareInterface_C8051F040.c:434: portRESTORE_REGISTER_GROUP()
   0601 D0 03              2221 	pop	ar3
                           2222 ;	../src/projectSpecificHardwareInterface_C8051F040.c:431: charSent[channelNumber] = true ;
   0603                    2223 00113$:
                           2224 ;	../src/projectSpecificHardwareInterface_C8051F040.c:434: portRESTORE_REGISTER_GROUP()
   0603 8B 84              2225 	mov	_SFRPAGE,r3
   0605 22                 2226 	ret
                           2227 ;------------------------------------------------------------
                           2228 ;Allocation info for local variables in function 'task_UART_putchar_projectSpecific'
                           2229 ;------------------------------------------------------------
                           2230 ;charToSend                Allocated with name '_task_UART_putchar_projectSpecific_PARM_2'
                           2231 ;channelNumber             Allocated with name '_task_UART_putchar_projectSpecific_channelNumber_1_1'
                           2232 ;Q                         Allocated with name '_task_UART_putchar_projectSpecific_Q_2_2'
                           2233 ;------------------------------------------------------------
                           2234 ;	../src/projectSpecificHardwareInterface_C8051F040.c:439: bool task_UART_putchar_projectSpecific(	unsigned char channelNumber, char charToSend)
                           2235 ;	-----------------------------------------
                           2236 ;	 function task_UART_putchar_projectSpecific
                           2237 ;	-----------------------------------------
   0606                    2238 _task_UART_putchar_projectSpecific:
   0606 E5 82              2239 	mov	a,dpl
   0608 90s08rD3           2240 	mov	dptr,#_task_UART_putchar_projectSpecific_channelNumber_1_1
   060B F0                 2241 	movx	@dptr,a
                           2242 ;	../src/projectSpecificHardwareInterface_C8051F040.c:441: task_UART_core(0) ;
   060C 75 82 00           2243 	mov	dpl,#0x00
   060F 12s00r00           2244 	lcall	_task_UART_core
                           2245 ;	../src/projectSpecificHardwareInterface_C8051F040.c:443: portDISABLE_INTERRUPTS() ;
   0612 C2 AF              2246 	clr	_EA
                           2247 ;	../src/projectSpecificHardwareInterface_C8051F040.c:445: if(channelNumber < NUMBER_OF_UARTS)
   0614 90s08rD3           2248 	mov	dptr,#_task_UART_putchar_projectSpecific_channelNumber_1_1
   0617 E0                 2249 	movx	a,@dptr
   0618 FA                 2250 	mov	r2,a
   0619 BA 01 00           2251 	cjne	r2,#0x01,00109$
   061C                    2252 00109$:
   061C 40 03              2253 	jc	00110$
   061E 02s07r1F           2254 	ljmp	00104$
   0621                    2255 00110$:
                           2256 ;	../src/projectSpecificHardwareInterface_C8051F040.c:447: QUEUE_TYPE*	Q = &transmitBuffers[channelNumber] ;
   0621 EA                 2257 	mov	a,r2
   0622 75 F0 0B           2258 	mov	b,#0x0B
   0625 A4                 2259 	mul	ab
   0626 24rB5              2260 	add	a,#_transmitBuffers
   0628 FA                 2261 	mov	r2,a
   0629 E4                 2262 	clr	a
   062A 34s08              2263 	addc	a,#(_transmitBuffers >> 8)
   062C FB                 2264 	mov	r3,a
   062D 7C 00              2265 	mov	r4,#0x00
   062F 90s08rD4           2266 	mov	dptr,#_task_UART_putchar_projectSpecific_Q_2_2
   0632 EA                 2267 	mov	a,r2
   0633 F0                 2268 	movx	@dptr,a
   0634 A3                 2269 	inc	dptr
   0635 EB                 2270 	mov	a,r3
   0636 F0                 2271 	movx	@dptr,a
   0637 A3                 2272 	inc	dptr
   0638 EC                 2273 	mov	a,r4
   0639 F0                 2274 	movx	@dptr,a
                           2275 ;	../src/projectSpecificHardwareInterface_C8051F040.c:449: if(!IsFull(Q))
   063A 8A 82              2276 	mov	dpl,r2
   063C 8B 83              2277 	mov	dph,r3
   063E 8C F0              2278 	mov	b,r4
   0640 12s01rA0           2279 	lcall	_IsFull
   0643 E5 82              2280 	mov	a,dpl
   0645 60 03              2281 	jz	00111$
   0647 02s07r1F           2282 	ljmp	00104$
   064A                    2283 00111$:
                           2284 ;	../src/projectSpecificHardwareInterface_C8051F040.c:451: Q->Size++ ;
   064A 90s08rD4           2285 	mov	dptr,#_task_UART_putchar_projectSpecific_Q_2_2
   064D E0                 2286 	movx	a,@dptr
   064E FA                 2287 	mov	r2,a
   064F A3                 2288 	inc	dptr
   0650 E0                 2289 	movx	a,@dptr
   0651 FB                 2290 	mov	r3,a
   0652 A3                 2291 	inc	dptr
   0653 E0                 2292 	movx	a,@dptr
   0654 FC                 2293 	mov	r4,a
   0655 74 06              2294 	mov	a,#0x06
   0657 2A                 2295 	add	a,r2
   0658 FD                 2296 	mov	r5,a
   0659 E4                 2297 	clr	a
   065A 3B                 2298 	addc	a,r3
   065B FE                 2299 	mov	r6,a
   065C 8C 07              2300 	mov	ar7,r4
   065E 8D 82              2301 	mov	dpl,r5
   0660 8E 83              2302 	mov	dph,r6
   0662 8F F0              2303 	mov	b,r7
   0664 12s00r00           2304 	lcall	__gptrget
   0667 F8                 2305 	mov	r0,a
   0668 A3                 2306 	inc	dptr
   0669 12s00r00           2307 	lcall	__gptrget
   066C F9                 2308 	mov	r1,a
   066D 08                 2309 	inc	r0
   066E B8 00 01           2310 	cjne	r0,#0x00,00112$
   0671 09                 2311 	inc	r1
   0672                    2312 00112$:
   0672 8D 82              2313 	mov	dpl,r5
   0674 8E 83              2314 	mov	dph,r6
   0676 8F F0              2315 	mov	b,r7
   0678 E8                 2316 	mov	a,r0
   0679 12s00r00           2317 	lcall	__gptrput
   067C A3                 2318 	inc	dptr
   067D E9                 2319 	mov	a,r1
   067E 12s00r00           2320 	lcall	__gptrput
                           2321 ;	../src/projectSpecificHardwareInterface_C8051F040.c:452: Q->Rear = Succ(Q->Rear, Q) ;
   0681 74 04              2322 	mov	a,#0x04
   0683 2A                 2323 	add	a,r2
   0684 FD                 2324 	mov	r5,a
   0685 E4                 2325 	clr	a
   0686 3B                 2326 	addc	a,r3
   0687 FE                 2327 	mov	r6,a
   0688 8C 07              2328 	mov	ar7,r4
   068A 8D 82              2329 	mov	dpl,r5
   068C 8E 83              2330 	mov	dph,r6
   068E 8F F0              2331 	mov	b,r7
   0690 12s00r00           2332 	lcall	__gptrget
   0693 F8                 2333 	mov	r0,a
   0694 A3                 2334 	inc	dptr
   0695 12s00r00           2335 	lcall	__gptrget
   0698 F9                 2336 	mov	r1,a
   0699 90s04r58           2337 	mov	dptr,#_Succ_PARM_2
   069C EA                 2338 	mov	a,r2
   069D F0                 2339 	movx	@dptr,a
   069E A3                 2340 	inc	dptr
   069F EB                 2341 	mov	a,r3
   06A0 F0                 2342 	movx	@dptr,a
   06A1 A3                 2343 	inc	dptr
   06A2 EC                 2344 	mov	a,r4
   06A3 F0                 2345 	movx	@dptr,a
   06A4 88 82              2346 	mov	dpl,r0
   06A6 89 83              2347 	mov	dph,r1
   06A8 C0 05              2348 	push	ar5
   06AA C0 06              2349 	push	ar6
   06AC C0 07              2350 	push	ar7
   06AE 12s01rF2           2351 	lcall	_Succ
   06B1 AA 82              2352 	mov	r2,dpl
   06B3 AB 83              2353 	mov	r3,dph
   06B5 D0 07              2354 	pop	ar7
   06B7 D0 06              2355 	pop	ar6
   06B9 D0 05              2356 	pop	ar5
   06BB 8D 82              2357 	mov	dpl,r5
   06BD 8E 83              2358 	mov	dph,r6
   06BF 8F F0              2359 	mov	b,r7
   06C1 EA                 2360 	mov	a,r2
   06C2 12s00r00           2361 	lcall	__gptrput
   06C5 A3                 2362 	inc	dptr
   06C6 EB                 2363 	mov	a,r3
   06C7 12s00r00           2364 	lcall	__gptrput
                           2365 ;	../src/projectSpecificHardwareInterface_C8051F040.c:453: Q->Array[Q->Rear] = charToSend ;
   06CA 90s08rD4           2366 	mov	dptr,#_task_UART_putchar_projectSpecific_Q_2_2
   06CD E0                 2367 	movx	a,@dptr
   06CE FA                 2368 	mov	r2,a
   06CF A3                 2369 	inc	dptr
   06D0 E0                 2370 	movx	a,@dptr
   06D1 FB                 2371 	mov	r3,a
   06D2 A3                 2372 	inc	dptr
   06D3 E0                 2373 	movx	a,@dptr
   06D4 FC                 2374 	mov	r4,a
   06D5 74 08              2375 	mov	a,#0x08
   06D7 2A                 2376 	add	a,r2
   06D8 FD                 2377 	mov	r5,a
   06D9 E4                 2378 	clr	a
   06DA 3B                 2379 	addc	a,r3
   06DB FE                 2380 	mov	r6,a
   06DC 8C 07              2381 	mov	ar7,r4
   06DE 8D 82              2382 	mov	dpl,r5
   06E0 8E 83              2383 	mov	dph,r6
   06E2 8F F0              2384 	mov	b,r7
   06E4 12s00r00           2385 	lcall	__gptrget
   06E7 FD                 2386 	mov	r5,a
   06E8 A3                 2387 	inc	dptr
   06E9 12s00r00           2388 	lcall	__gptrget
   06EC FE                 2389 	mov	r6,a
   06ED A3                 2390 	inc	dptr
   06EE 12s00r00           2391 	lcall	__gptrget
   06F1 FF                 2392 	mov	r7,a
   06F2 74 04              2393 	mov	a,#0x04
   06F4 2A                 2394 	add	a,r2
   06F5 FA                 2395 	mov	r2,a
   06F6 E4                 2396 	clr	a
   06F7 3B                 2397 	addc	a,r3
   06F8 FB                 2398 	mov	r3,a
   06F9 8A 82              2399 	mov	dpl,r2
   06FB 8B 83              2400 	mov	dph,r3
   06FD 8C F0              2401 	mov	b,r4
   06FF 12s00r00           2402 	lcall	__gptrget
   0702 FA                 2403 	mov	r2,a
   0703 A3                 2404 	inc	dptr
   0704 12s00r00           2405 	lcall	__gptrget
   0707 FB                 2406 	mov	r3,a
   0708 EA                 2407 	mov	a,r2
   0709 2D                 2408 	add	a,r5
   070A FD                 2409 	mov	r5,a
   070B EB                 2410 	mov	a,r3
   070C 3E                 2411 	addc	a,r6
   070D FE                 2412 	mov	r6,a
   070E 90s08rD2           2413 	mov	dptr,#_task_UART_putchar_projectSpecific_PARM_2
   0711 E0                 2414 	movx	a,@dptr
   0712 8D 82              2415 	mov	dpl,r5
   0714 8E 83              2416 	mov	dph,r6
   0716 8F F0              2417 	mov	b,r7
   0718 12s00r00           2418 	lcall	__gptrput
                           2419 ;	../src/projectSpecificHardwareInterface_C8051F040.c:455: portENABLE_INTERRUPTS() ;
   071B D2 AF              2420 	setb	_EA
                           2421 ;	../src/projectSpecificHardwareInterface_C8051F040.c:457: return true ;
   071D D3                 2422 	setb	c
   071E 22                 2423 	ret
   071F                    2424 00104$:
                           2425 ;	../src/projectSpecificHardwareInterface_C8051F040.c:461: portENABLE_INTERRUPTS() ;
   071F D2 AF              2426 	setb	_EA
                           2427 ;	../src/projectSpecificHardwareInterface_C8051F040.c:465: return false ;
   0721 C3                 2428 	clr	c
   0722 22                 2429 	ret
                           2430 ;------------------------------------------------------------
                           2431 ;Allocation info for local variables in function 'task_UART_puts_projectSpecific'
                           2432 ;------------------------------------------------------------
                           2433 ;buffer                    Allocated with name '_task_UART_puts_projectSpecific_PARM_2'
                           2434 ;channelNumber             Allocated with name '_task_UART_puts_projectSpecific_channelNumber_1_1'
                           2435 ;myBuffer                  Allocated with name '_task_UART_puts_projectSpecific_myBuffer_2_2'
                           2436 ;------------------------------------------------------------
                           2437 ;	../src/projectSpecificHardwareInterface_C8051F040.c:469: void task_UART_puts_projectSpecific(	unsigned char channelNumber, const char *buffer)
                           2438 ;	-----------------------------------------
                           2439 ;	 function task_UART_puts_projectSpecific
                           2440 ;	-----------------------------------------
   0723                    2441 _task_UART_puts_projectSpecific:
   0723 E5 82              2442 	mov	a,dpl
   0725 90s08rDA           2443 	mov	dptr,#_task_UART_puts_projectSpecific_channelNumber_1_1
   0728 F0                 2444 	movx	@dptr,a
                           2445 ;	../src/projectSpecificHardwareInterface_C8051F040.c:471: if(channelNumber < NUMBER_OF_UARTS)
   0729 90s08rDA           2446 	mov	dptr,#_task_UART_puts_projectSpecific_channelNumber_1_1
   072C E0                 2447 	movx	a,@dptr
   072D FA                 2448 	mov	r2,a
   072E BA 01 00           2449 	cjne	r2,#0x01,00119$
   0731                    2450 00119$:
   0731 50 6C              2451 	jnc	00112$
                           2452 ;	../src/projectSpecificHardwareInterface_C8051F040.c:473: unsigned char* myBuffer = buffer ;
   0733 90s08rD7           2453 	mov	dptr,#_task_UART_puts_projectSpecific_PARM_2
   0736 E0                 2454 	movx	a,@dptr
   0737 FB                 2455 	mov	r3,a
   0738 A3                 2456 	inc	dptr
   0739 E0                 2457 	movx	a,@dptr
   073A FC                 2458 	mov	r4,a
   073B A3                 2459 	inc	dptr
   073C E0                 2460 	movx	a,@dptr
   073D FD                 2461 	mov	r5,a
                           2462 ;	../src/projectSpecificHardwareInterface_C8051F040.c:475: while(*myBuffer)
   073E 8A 06              2463 	mov	ar6,r2
   0740                    2464 00107$:
   0740 8B 82              2465 	mov	dpl,r3
   0742 8C 83              2466 	mov	dph,r4
   0744 8D F0              2467 	mov	b,r5
   0746 12s00r00           2468 	lcall	__gptrget
   0749 FF                 2469 	mov	r7,a
   074A 60 53              2470 	jz	00112$
                           2471 ;	../src/projectSpecificHardwareInterface_C8051F040.c:477: if((*myBuffer) == '\n')
   074C BF 0A 21           2472 	cjne	r7,#0x0A,00104$
                           2473 ;	../src/projectSpecificHardwareInterface_C8051F040.c:479: if(!task_UART_putchar(channelNumber, '\r'))
   074F 90s00r00           2474 	mov	dptr,#_task_UART_putchar_PARM_2
   0752 74 0D              2475 	mov	a,#0x0D
   0754 F0                 2476 	movx	@dptr,a
   0755 8E 82              2477 	mov	dpl,r6
   0757 C0 02              2478 	push	ar2
   0759 C0 03              2479 	push	ar3
   075B C0 04              2480 	push	ar4
   075D C0 05              2481 	push	ar5
   075F C0 06              2482 	push	ar6
   0761 12s00r00           2483 	lcall	_task_UART_putchar
   0764 D0 06              2484 	pop	ar6
   0766 D0 05              2485 	pop	ar5
   0768 D0 04              2486 	pop	ar4
   076A D0 03              2487 	pop	ar3
   076C D0 02              2488 	pop	ar2
   076E 50 2F              2489 	jnc	00112$
                           2490 ;	../src/projectSpecificHardwareInterface_C8051F040.c:481: break ;
   0770                    2491 00104$:
                           2492 ;	../src/projectSpecificHardwareInterface_C8051F040.c:485: if(!task_UART_putchar(channelNumber, *myBuffer++))
   0770 8B 82              2493 	mov	dpl,r3
   0772 8C 83              2494 	mov	dph,r4
   0774 8D F0              2495 	mov	b,r5
   0776 12s00r00           2496 	lcall	__gptrget
   0779 FF                 2497 	mov	r7,a
   077A A3                 2498 	inc	dptr
   077B AB 82              2499 	mov	r3,dpl
   077D AC 83              2500 	mov	r4,dph
   077F 90s00r00           2501 	mov	dptr,#_task_UART_putchar_PARM_2
   0782 EF                 2502 	mov	a,r7
   0783 F0                 2503 	movx	@dptr,a
   0784 8A 82              2504 	mov	dpl,r2
   0786 C0 02              2505 	push	ar2
   0788 C0 03              2506 	push	ar3
   078A C0 04              2507 	push	ar4
   078C C0 05              2508 	push	ar5
   078E C0 06              2509 	push	ar6
   0790 12s00r00           2510 	lcall	_task_UART_putchar
   0793 D0 06              2511 	pop	ar6
   0795 D0 05              2512 	pop	ar5
   0797 D0 04              2513 	pop	ar4
   0799 D0 03              2514 	pop	ar3
   079B D0 02              2515 	pop	ar2
   079D 40 A1              2516 	jc	00107$
                           2517 ;	../src/projectSpecificHardwareInterface_C8051F040.c:487: break ;
   079F                    2518 00112$:
   079F 22                 2519 	ret
                           2520 ;------------------------------------------------------------
                           2521 ;Allocation info for local variables in function 'task_UART_getchar_projectSpecific'
                           2522 ;------------------------------------------------------------
                           2523 ;sloc0                     Allocated with name '_task_UART_getchar_projectSpecific_sloc0_1_0'
                           2524 ;sloc1                     Allocated with name '_task_UART_getchar_projectSpecific_sloc1_1_0'
                           2525 ;sloc2                     Allocated with name '_task_UART_getchar_projectSpecific_sloc2_1_0'
                           2526 ;channelNumber             Allocated with name '_task_UART_getchar_projectSpecific_channelNumber_1_1'
                           2527 ;Q                         Allocated with name '_task_UART_getchar_projectSpecific_Q_2_2'
                           2528 ;byteReceived              Allocated with name '_task_UART_getchar_projectSpecific_byteReceived_3_3'
                           2529 ;------------------------------------------------------------
                           2530 ;	../src/projectSpecificHardwareInterface_C8051F040.c:494: char task_UART_getchar_projectSpecific(	unsigned char channelNumber)
                           2531 ;	-----------------------------------------
                           2532 ;	 function task_UART_getchar_projectSpecific
                           2533 ;	-----------------------------------------
   07A0                    2534 _task_UART_getchar_projectSpecific:
   07A0 E5 82              2535 	mov	a,dpl
   07A2 90s08rDB           2536 	mov	dptr,#_task_UART_getchar_projectSpecific_channelNumber_1_1
   07A5 F0                 2537 	movx	@dptr,a
                           2538 ;	../src/projectSpecificHardwareInterface_C8051F040.c:496: if(channelNumber < NUMBER_OF_UARTS)
   07A6 90s08rDB           2539 	mov	dptr,#_task_UART_getchar_projectSpecific_channelNumber_1_1
   07A9 E0                 2540 	movx	a,@dptr
   07AA FA                 2541 	mov	r2,a
   07AB BA 01 00           2542 	cjne	r2,#0x01,00109$
   07AE                    2543 00109$:
   07AE 40 03              2544 	jc	00110$
   07B0 02s08r97           2545 	ljmp	00104$
   07B3                    2546 00110$:
                           2547 ;	../src/projectSpecificHardwareInterface_C8051F040.c:498: QUEUE_TYPE*	Q = &receiveBuffers[channelNumber] ;
   07B3 EA                 2548 	mov	a,r2
   07B4 75 F0 0B           2549 	mov	b,#0x0B
   07B7 A4                 2550 	mul	ab
   07B8 24rC0              2551 	add	a,#_receiveBuffers
   07BA FA                 2552 	mov	r2,a
   07BB E4                 2553 	clr	a
   07BC 34s08              2554 	addc	a,#(_receiveBuffers >> 8)
   07BE FB                 2555 	mov	r3,a
   07BF 7C 00              2556 	mov	r4,#0x00
   07C1 90s08rDC           2557 	mov	dptr,#_task_UART_getchar_projectSpecific_Q_2_2
   07C4 EA                 2558 	mov	a,r2
   07C5 F0                 2559 	movx	@dptr,a
   07C6 A3                 2560 	inc	dptr
   07C7 EB                 2561 	mov	a,r3
   07C8 F0                 2562 	movx	@dptr,a
   07C9 A3                 2563 	inc	dptr
   07CA EC                 2564 	mov	a,r4
   07CB F0                 2565 	movx	@dptr,a
                           2566 ;	../src/projectSpecificHardwareInterface_C8051F040.c:500: if(!IsEmpty(Q))
   07CC 8A 82              2567 	mov	dpl,r2
   07CE 8B 83              2568 	mov	dph,r3
   07D0 8C F0              2569 	mov	b,r4
   07D2 12s01r64           2570 	lcall	_IsEmpty
   07D5 E5 82              2571 	mov	a,dpl
   07D7 60 03              2572 	jz	00111$
   07D9 02s08r97           2573 	ljmp	00104$
   07DC                    2574 00111$:
                           2575 ;	../src/projectSpecificHardwareInterface_C8051F040.c:502: unsigned char byteReceived = Q->Array[Q->Front] ;
   07DC 90s08rDC           2576 	mov	dptr,#_task_UART_getchar_projectSpecific_Q_2_2
   07DF E0                 2577 	movx	a,@dptr
   07E0 FA                 2578 	mov	r2,a
   07E1 A3                 2579 	inc	dptr
   07E2 E0                 2580 	movx	a,@dptr
   07E3 FB                 2581 	mov	r3,a
   07E4 A3                 2582 	inc	dptr
   07E5 E0                 2583 	movx	a,@dptr
   07E6 FC                 2584 	mov	r4,a
   07E7 74 08              2585 	mov	a,#0x08
   07E9 2A                 2586 	add	a,r2
   07EA FD                 2587 	mov	r5,a
   07EB E4                 2588 	clr	a
   07EC 3B                 2589 	addc	a,r3
   07ED FE                 2590 	mov	r6,a
   07EE 8C 07              2591 	mov	ar7,r4
   07F0 8D 82              2592 	mov	dpl,r5
   07F2 8E 83              2593 	mov	dph,r6
   07F4 8F F0              2594 	mov	b,r7
   07F6 12s00r00           2595 	lcall	__gptrget
   07F9 F5*09              2596 	mov	_task_UART_getchar_projectSpecific_sloc0_1_0,a
   07FB A3                 2597 	inc	dptr
   07FC 12s00r00           2598 	lcall	__gptrget
   07FF F5*0A              2599 	mov	(_task_UART_getchar_projectSpecific_sloc0_1_0 + 1),a
   0801 A3                 2600 	inc	dptr
   0802 12s00r00           2601 	lcall	__gptrget
   0805 F5*0B              2602 	mov	(_task_UART_getchar_projectSpecific_sloc0_1_0 + 2),a
   0807 74 02              2603 	mov	a,#0x02
   0809 2A                 2604 	add	a,r2
   080A F5*0E              2605 	mov	_task_UART_getchar_projectSpecific_sloc2_1_0,a
   080C E4                 2606 	clr	a
   080D 3B                 2607 	addc	a,r3
   080E F5*0F              2608 	mov	(_task_UART_getchar_projectSpecific_sloc2_1_0 + 1),a
   0810 8C*10              2609 	mov	(_task_UART_getchar_projectSpecific_sloc2_1_0 + 2),r4
   0812 85*0E 82           2610 	mov	dpl,_task_UART_getchar_projectSpecific_sloc2_1_0
   0815 85*0F 83           2611 	mov	dph,(_task_UART_getchar_projectSpecific_sloc2_1_0 + 1)
   0818 85*10 F0           2612 	mov	b,(_task_UART_getchar_projectSpecific_sloc2_1_0 + 2)
   081B 12s00r00           2613 	lcall	__gptrget
   081E F5*0C              2614 	mov	_task_UART_getchar_projectSpecific_sloc1_1_0,a
   0820 A3                 2615 	inc	dptr
   0821 12s00r00           2616 	lcall	__gptrget
   0824 F5*0D              2617 	mov	(_task_UART_getchar_projectSpecific_sloc1_1_0 + 1),a
   0826 E5*0C              2618 	mov	a,_task_UART_getchar_projectSpecific_sloc1_1_0
   0828 25*09              2619 	add	a,_task_UART_getchar_projectSpecific_sloc0_1_0
   082A FE                 2620 	mov	r6,a
   082B E5*0D              2621 	mov	a,(_task_UART_getchar_projectSpecific_sloc1_1_0 + 1)
   082D 35*0A              2622 	addc	a,(_task_UART_getchar_projectSpecific_sloc0_1_0 + 1)
   082F FF                 2623 	mov	r7,a
   0830 AD*0B              2624 	mov	r5,(_task_UART_getchar_projectSpecific_sloc0_1_0 + 2)
   0832 8E 82              2625 	mov	dpl,r6
   0834 8F 83              2626 	mov	dph,r7
   0836 8D F0              2627 	mov	b,r5
   0838 12s00r00           2628 	lcall	__gptrget
   083B F5*09              2629 	mov	_task_UART_getchar_projectSpecific_sloc0_1_0,a
                           2630 ;	../src/projectSpecificHardwareInterface_C8051F040.c:504: Q->Size-- ;
   083D 74 06              2631 	mov	a,#0x06
   083F 2A                 2632 	add	a,r2
   0840 FD                 2633 	mov	r5,a
   0841 E4                 2634 	clr	a
   0842 3B                 2635 	addc	a,r3
   0843 FF                 2636 	mov	r7,a
   0844 8C 00              2637 	mov	ar0,r4
   0846 8D 82              2638 	mov	dpl,r5
   0848 8F 83              2639 	mov	dph,r7
   084A 88 F0              2640 	mov	b,r0
   084C 12s00r00           2641 	lcall	__gptrget
   084F F9                 2642 	mov	r1,a
   0850 A3                 2643 	inc	dptr
   0851 12s00r00           2644 	lcall	__gptrget
   0854 FE                 2645 	mov	r6,a
   0855 19                 2646 	dec	r1
   0856 B9 FF 01           2647 	cjne	r1,#0xff,00112$
   0859 1E                 2648 	dec	r6
   085A                    2649 00112$:
   085A 8D 82              2650 	mov	dpl,r5
   085C 8F 83              2651 	mov	dph,r7
   085E 88 F0              2652 	mov	b,r0
   0860 E9                 2653 	mov	a,r1
   0861 12s00r00           2654 	lcall	__gptrput
   0864 A3                 2655 	inc	dptr
   0865 EE                 2656 	mov	a,r6
   0866 12s00r00           2657 	lcall	__gptrput
                           2658 ;	../src/projectSpecificHardwareInterface_C8051F040.c:505: Q->Front = Succ(Q->Front, Q) ;
   0869 90s04r58           2659 	mov	dptr,#_Succ_PARM_2
   086C EA                 2660 	mov	a,r2
   086D F0                 2661 	movx	@dptr,a
   086E A3                 2662 	inc	dptr
   086F EB                 2663 	mov	a,r3
   0870 F0                 2664 	movx	@dptr,a
   0871 A3                 2665 	inc	dptr
   0872 EC                 2666 	mov	a,r4
   0873 F0                 2667 	movx	@dptr,a
   0874 85*0C 82           2668 	mov	dpl,_task_UART_getchar_projectSpecific_sloc1_1_0
   0877 85*0D 83           2669 	mov	dph,(_task_UART_getchar_projectSpecific_sloc1_1_0 + 1)
   087A 12s01rF2           2670 	lcall	_Succ
   087D AA 82              2671 	mov	r2,dpl
   087F AB 83              2672 	mov	r3,dph
   0881 85*0E 82           2673 	mov	dpl,_task_UART_getchar_projectSpecific_sloc2_1_0
   0884 85*0F 83           2674 	mov	dph,(_task_UART_getchar_projectSpecific_sloc2_1_0 + 1)
   0887 85*10 F0           2675 	mov	b,(_task_UART_getchar_projectSpecific_sloc2_1_0 + 2)
   088A EA                 2676 	mov	a,r2
   088B 12s00r00           2677 	lcall	__gptrput
   088E A3                 2678 	inc	dptr
   088F EB                 2679 	mov	a,r3
   0890 12s00r00           2680 	lcall	__gptrput
                           2681 ;	../src/projectSpecificHardwareInterface_C8051F040.c:507: return byteReceived ;
   0893 85*09 82           2682 	mov	dpl,_task_UART_getchar_projectSpecific_sloc0_1_0
                           2683 ;	../src/projectSpecificHardwareInterface_C8051F040.c:511: return -1 ;
   0896 22                 2684 	ret
   0897                    2685 00104$:
   0897 75 82 FF           2686 	mov	dpl,#0xFF
   089A 22                 2687 	ret
                           2688 ;------------------------------------------------------------
                           2689 ;Allocation info for local variables in function 'task_UART_gets_projectSpecific'
                           2690 ;------------------------------------------------------------
                           2691 ;sloc0                     Allocated with name '_task_UART_gets_projectSpecific_sloc0_1_0'
                           2692 ;sloc1                     Allocated with name '_task_UART_gets_projectSpecific_sloc1_1_0'
                           2693 ;buffer                    Allocated with name '_task_UART_gets_projectSpecific_PARM_2'
                           2694 ;maxBufferLength           Allocated with name '_task_UART_gets_projectSpecific_PARM_3'
                           2695 ;channelNumber             Allocated with name '_task_UART_gets_projectSpecific_channelNumber_1_1'
                           2696 ;charsReturned             Allocated with name '_task_UART_gets_projectSpecific_charsReturned_2_2'
                           2697 ;latestCharInBuffer        Allocated with name '_task_UART_gets_projectSpecific_latestCharInBuffer_3_3'
                           2698 ;------------------------------------------------------------
                           2699 ;	../src/projectSpecificHardwareInterface_C8051F040.c:515: char* task_UART_gets_projectSpecific(	unsigned char channelNumber, char* buffer, unsigned short maxBufferLength)
                           2700 ;	-----------------------------------------
                           2701 ;	 function task_UART_gets_projectSpecific
                           2702 ;	-----------------------------------------
   089B                    2703 _task_UART_gets_projectSpecific:
   089B E5 82              2704 	mov	a,dpl
   089D 90s08rE4           2705 	mov	dptr,#_task_UART_gets_projectSpecific_channelNumber_1_1
   08A0 F0                 2706 	movx	@dptr,a
                           2707 ;	../src/projectSpecificHardwareInterface_C8051F040.c:517: if(channelNumber < NUMBER_OF_UARTS)
   08A1 90s08rE4           2708 	mov	dptr,#_task_UART_gets_projectSpecific_channelNumber_1_1
   08A4 E0                 2709 	movx	a,@dptr
   08A5 FA                 2710 	mov	r2,a
   08A6 BA 01 00           2711 	cjne	r2,#0x01,00119$
   08A9                    2712 00119$:
   08A9 50 74              2713 	jnc	00110$
                           2714 ;	../src/projectSpecificHardwareInterface_C8051F040.c:521: while(charsReturned < maxBufferLength)
   08AB 90s08rE2           2715 	mov	dptr,#_task_UART_gets_projectSpecific_PARM_3
   08AE E0                 2716 	movx	a,@dptr
   08AF F5*12              2717 	mov	_task_UART_gets_projectSpecific_sloc1_1_0,a
   08B1 A3                 2718 	inc	dptr
   08B2 E0                 2719 	movx	a,@dptr
   08B3 F5*13              2720 	mov	(_task_UART_gets_projectSpecific_sloc1_1_0 + 1),a
   08B5 90s08rDF           2721 	mov	dptr,#_task_UART_gets_projectSpecific_PARM_2
   08B8 E0                 2722 	movx	a,@dptr
   08B9 FD                 2723 	mov	r5,a
   08BA A3                 2724 	inc	dptr
   08BB E0                 2725 	movx	a,@dptr
   08BC FE                 2726 	mov	r6,a
   08BD A3                 2727 	inc	dptr
   08BE E0                 2728 	movx	a,@dptr
   08BF FF                 2729 	mov	r7,a
   08C0 78 00              2730 	mov	r0,#0x00
   08C2 79 00              2731 	mov	r1,#0x00
   08C4                    2732 00106$:
   08C4 C3                 2733 	clr	c
   08C5 E8                 2734 	mov	a,r0
   08C6 95*12              2735 	subb	a,_task_UART_gets_projectSpecific_sloc1_1_0
   08C8 E9                 2736 	mov	a,r1
   08C9 95*13              2737 	subb	a,(_task_UART_gets_projectSpecific_sloc1_1_0 + 1)
   08CB 50 52              2738 	jnc	00110$
                           2739 ;	../src/projectSpecificHardwareInterface_C8051F040.c:523: char latestCharInBuffer = task_UART_getchar(channelNumber) ;
   08CD 8A 82              2740 	mov	dpl,r2
   08CF C0 02              2741 	push	ar2
   08D1 C0 05              2742 	push	ar5
   08D3 C0 06              2743 	push	ar6
   08D5 C0 07              2744 	push	ar7
   08D7 C0 00              2745 	push	ar0
   08D9 C0 01              2746 	push	ar1
   08DB 12s00r00           2747 	lcall	_task_UART_getchar
   08DE 85 82*11           2748 	mov	_task_UART_gets_projectSpecific_sloc0_1_0,dpl
   08E1 D0 01              2749 	pop	ar1
   08E3 D0 00              2750 	pop	ar0
   08E5 D0 07              2751 	pop	ar7
   08E7 D0 06              2752 	pop	ar6
   08E9 D0 05              2753 	pop	ar5
   08EB D0 02              2754 	pop	ar2
                           2755 ;	../src/projectSpecificHardwareInterface_C8051F040.c:525: if(latestCharInBuffer <= 0)	// break on a NULL or a -1
   08ED C3                 2756 	clr	c
   08EE 74 80              2757 	mov	a,#(0x00 ^ 0x80)
   08F0 85*11 F0           2758 	mov	b,_task_UART_gets_projectSpecific_sloc0_1_0
   08F3 63 F0 80           2759 	xrl	b,#0x80
   08F6 95 F0              2760 	subb	a,b
   08F8 50 25              2761 	jnc	00110$
                           2762 ;	../src/projectSpecificHardwareInterface_C8051F040.c:529: else if(latestCharInBuffer == '\r')	// Skip carriage returns
   08FA 74 0D              2763 	mov	a,#0x0D
   08FC B5*11 02           2764 	cjne	a,_task_UART_gets_projectSpecific_sloc0_1_0,00123$
   08FF 80 C3              2765 	sjmp	00106$
   0901                    2766 00123$:
                           2767 ;	../src/projectSpecificHardwareInterface_C8051F040.c:534: buffer[charsReturned] = latestCharInBuffer ;
   0901 C0 02              2768 	push	ar2
   0903 E8                 2769 	mov	a,r0
   0904 2D                 2770 	add	a,r5
   0905 FA                 2771 	mov	r2,a
   0906 E9                 2772 	mov	a,r1
   0907 3E                 2773 	addc	a,r6
   0908 FB                 2774 	mov	r3,a
   0909 8F 04              2775 	mov	ar4,r7
   090B 8A 82              2776 	mov	dpl,r2
   090D 8B 83              2777 	mov	dph,r3
   090F 8C F0              2778 	mov	b,r4
   0911 E5*11              2779 	mov	a,_task_UART_gets_projectSpecific_sloc0_1_0
   0913 12s00r00           2780 	lcall	__gptrput
                           2781 ;	../src/projectSpecificHardwareInterface_C8051F040.c:536: charsReturned++ ;
   0916 08                 2782 	inc	r0
   0917 B8 00 01           2783 	cjne	r0,#0x00,00124$
   091A 09                 2784 	inc	r1
   091B                    2785 00124$:
   091B D0 02              2786 	pop	ar2
   091D 80 A5              2787 	sjmp	00106$
   091F                    2788 00110$:
                           2789 ;	../src/projectSpecificHardwareInterface_C8051F040.c:540: return 0 ;
   091F 90 00 00           2790 	mov	dptr,#0x0000
   0922 75 F0 00           2791 	mov	b,#0x00
   0925 22                 2792 	ret
                           2793 ;------------------------------------------------------------
                           2794 ;Allocation info for local variables in function 'task_UART_isLineReady'
                           2795 ;------------------------------------------------------------
                           2796 ;channelNumber             Allocated with name '_task_UART_isLineReady_channelNumber_1_1'
                           2797 ;------------------------------------------------------------
                           2798 ;	../src/projectSpecificHardwareInterface_C8051F040.c:544: bool task_UART_isLineReady(	unsigned char channelNumber)
                           2799 ;	-----------------------------------------
                           2800 ;	 function task_UART_isLineReady
                           2801 ;	-----------------------------------------
   0926                    2802 _task_UART_isLineReady:
   0926 E5 82              2803 	mov	a,dpl
   0928 90s08rE5           2804 	mov	dptr,#_task_UART_isLineReady_channelNumber_1_1
   092B F0                 2805 	movx	@dptr,a
                           2806 ;	../src/projectSpecificHardwareInterface_C8051F040.c:546: return lineReady[channelNumber] ;
   092C 90s08rE5           2807 	mov	dptr,#_task_UART_isLineReady_channelNumber_1_1
   092F E0                 2808 	movx	a,@dptr
   0930 24rCC              2809 	add	a,#_lineReady
   0932 F5 82              2810 	mov	dpl,a
   0934 E4                 2811 	clr	a
   0935 34s08              2812 	addc	a,#(_lineReady >> 8)
   0937 F5 83              2813 	mov	dph,a
   0939 E0                 2814 	movx	a,@dptr
   093A 24 FF              2815 	add	a,#0xff
   093C 92*03              2816 	mov  _task_UART_isLineReady_sloc0_1_0,c
   093E 22                 2817 	ret
                           2818 ;------------------------------------------------------------
                           2819 ;Allocation info for local variables in function 'UART0_Init'
                           2820 ;------------------------------------------------------------
                           2821 ;SFRPAGE_SAVE              Allocated with name '_UART0_Init_SFRPAGE_SAVE_1_1'
                           2822 ;------------------------------------------------------------
                           2823 ;	../src/projectSpecificHardwareInterface_C8051F040.c:550: void UART0_Init(void)
                           2824 ;	-----------------------------------------
                           2825 ;	 function UART0_Init
                           2826 ;	-----------------------------------------
   093F                    2827 _UART0_Init:
                           2828 ;	../src/projectSpecificHardwareInterface_C8051F040.c:554: SFRPAGE_SAVE = SFRPAGE;             // Preserve SFRPAGE
   093F AA 84              2829 	mov	r2,_SFRPAGE
                           2830 ;	../src/projectSpecificHardwareInterface_C8051F040.c:556: SFRPAGE = UART0_PAGE;
   0941 75 84 00           2831 	mov	_SFRPAGE,#0x00
                           2832 ;	../src/projectSpecificHardwareInterface_C8051F040.c:558: SCON0 = 0x52;                       // 8-bit variable baud rate;
   0944 75 98 52           2833 	mov	_SCON0,#0x52
                           2834 ;	../src/projectSpecificHardwareInterface_C8051F040.c:561: SSTA0 = 0x10;                       // Clear all flags; enable baud rate
   0947 75 91 10           2835 	mov	_SSTA0,#0x10
                           2836 ;	../src/projectSpecificHardwareInterface_C8051F040.c:568: SFRPAGE = SFRPAGE_SAVE;
   094A 8A 84              2837 	mov	_SFRPAGE,r2
   094C 22                 2838 	ret
                           2839 ;------------------------------------------------------------
                           2840 ;Allocation info for local variables in function 'UART1_Init'
                           2841 ;------------------------------------------------------------
                           2842 ;SFRPAGE_SAVE              Allocated with name '_UART1_Init_SFRPAGE_SAVE_2_2'
                           2843 ;------------------------------------------------------------
                           2844 ;	../src/projectSpecificHardwareInterface_C8051F040.c:589: void UART1_Init(void)
                           2845 ;	-----------------------------------------
                           2846 ;	 function UART1_Init
                           2847 ;	-----------------------------------------
   094D                    2848 _UART1_Init:
                           2849 ;	../src/projectSpecificHardwareInterface_C8051F040.c:591: portSET_REGISTER_GROUP(UART1_PAGE)
   094D AA 84              2850 	mov	r2,_SFRPAGE
   094F 75 84 01           2851 	mov	_SFRPAGE,#0x01
                           2852 ;	../src/projectSpecificHardwareInterface_C8051F040.c:593: SCON1 = 0x10 ;	// 8-bit variable baud rate;
   0952 75 98 10           2853 	mov	_SCON1,#0x10
                           2854 ;	../src/projectSpecificHardwareInterface_C8051F040.c:599: portRESTORE_REGISTER_GROUP()
   0955 8A 84              2855 	mov	_SFRPAGE,r2
   0957 22                 2856 	ret
                           2857 ;------------------------------------------------------------
                           2858 ;Allocation info for local variables in function 'putchar'
                           2859 ;------------------------------------------------------------
                           2860 ;c                         Allocated with name '_putchar_c_1_1'
                           2861 ;------------------------------------------------------------
                           2862 ;	../src/projectSpecificHardwareInterface_C8051F040.c:603: void putchar(char c)
                           2863 ;	-----------------------------------------
                           2864 ;	 function putchar
                           2865 ;	-----------------------------------------
   0958                    2866 _putchar:
   0958 E5 82              2867 	mov	a,dpl
   095A 90s08rE6           2868 	mov	dptr,#_putchar_c_1_1
   095D F0                 2869 	movx	@dptr,a
                           2870 ;	../src/projectSpecificHardwareInterface_C8051F040.c:605: if(c == '\n')
   095E 90s08rE6           2871 	mov	dptr,#_putchar_c_1_1
   0961 E0                 2872 	movx	a,@dptr
   0962 FA                 2873 	mov	r2,a
   0963 BA 0A 0C           2874 	cjne	r2,#0x0A,00102$
                           2875 ;	../src/projectSpecificHardwareInterface_C8051F040.c:607: task_UART_putchar(0, '\r') ;
   0966 90s00r00           2876 	mov	dptr,#_task_UART_putchar_PARM_2
   0969 74 0D              2877 	mov	a,#0x0D
   096B F0                 2878 	movx	@dptr,a
   096C 75 82 00           2879 	mov	dpl,#0x00
   096F 12s00r00           2880 	lcall	_task_UART_putchar
   0972                    2881 00102$:
                           2882 ;	../src/projectSpecificHardwareInterface_C8051F040.c:610: task_UART_putchar(0, c) ;
   0972 90s08rE6           2883 	mov	dptr,#_putchar_c_1_1
   0975 E0                 2884 	movx	a,@dptr
   0976 90s00r00           2885 	mov	dptr,#_task_UART_putchar_PARM_2
   0979 F0                 2886 	movx	@dptr,a
   097A 75 82 00           2887 	mov	dpl,#0x00
   097D 02s00r00           2888 	ljmp	_task_UART_putchar
                           2889 ;------------------------------------------------------------
                           2890 ;Allocation info for local variables in function 'prvSetupSystemClock'
                           2891 ;------------------------------------------------------------
                           2892 ;n                         Allocated with name '_prvSetupSystemClock_n_1_1'
                           2893 ;------------------------------------------------------------
                           2894 ;	../src/projectSpecificHardwareInterface_C8051F040.c:632: static void prvSetupSystemClock( void )
                           2895 ;	-----------------------------------------
                           2896 ;	 function prvSetupSystemClock
                           2897 ;	-----------------------------------------
   0980                    2898 _prvSetupSystemClock:
                           2899 ;	../src/projectSpecificHardwareInterface_C8051F040.c:635: SFRPAGE = CONFIG_PAGE ;			// switch to config page to config oscillator
   0980 75 84 0F           2900 	mov	_SFRPAGE,#0x0F
                           2901 ;	../src/projectSpecificHardwareInterface_C8051F040.c:637: OSCXCN = 0x77 ;					// start external oscillator; 24 MHz Crystal
   0983 75 8C 77           2902 	mov	_OSCXCN,#0x77
                           2903 ;	../src/projectSpecificHardwareInterface_C8051F040.c:641: for( n = 0 ; n < 255 ; n++ ) ;	// delay about 1ms
   0986 7A FF              2904 	mov	r2,#0xFF
   0988 7B 00              2905 	mov	r3,#0x00
   098A                    2906 00106$:
   098A 1A                 2907 	dec	r2
   098B BA FF 01           2908 	cjne	r2,#0xff,00114$
   098E 1B                 2909 	dec	r3
   098F                    2910 00114$:
   098F EA                 2911 	mov	a,r2
   0990 4B                 2912 	orl	a,r3
   0991 70 F7              2913 	jnz	00106$
                           2914 ;	../src/projectSpecificHardwareInterface_C8051F040.c:642: while((OSCXCN & 0x80) == 0) ;	// wait for oscillator to stabilize
   0993                    2915 00101$:
   0993 E5 8C              2916 	mov	a,_OSCXCN
   0995 30 E7 FB           2917 	jnb	acc.7,00101$
                           2918 ;	../src/projectSpecificHardwareInterface_C8051F040.c:644: CLKSEL |= 0x01 ;				// switch to external oscillator
   0998 43 97 01           2919 	orl	_CLKSEL,#0x01
                           2920 ;	../src/projectSpecificHardwareInterface_C8051F040.c:646: OSCICN = 0xC2 ;					// Turn off the internal oscillator to save a little power
   099B 75 8A C2           2921 	mov	_OSCICN,#0xC2
   099E 22                 2922 	ret
                           2923 ;------------------------------------------------------------
                           2924 ;Allocation info for local variables in function 'prvSetupTimerInterrupt'
                           2925 ;------------------------------------------------------------
                           2926 ;ucOriginalSFRPage         Allocated with name '_prvSetupTimerInterrupt_ucOriginalSFRPage_1_1'
                           2927 ;ulTicksPerSecond          Allocated with name '_prvSetupTimerInterrupt_ulTicksPerSecond_1_1'
                           2928 ;ulCaptureTime             Allocated with name '_prvSetupTimerInterrupt_ulCaptureTime_1_1'
                           2929 ;ulCaptureValue            Allocated with name '_prvSetupTimerInterrupt_ulCaptureValue_1_1'
                           2930 ;ucLowCaptureByte          Allocated with name '_prvSetupTimerInterrupt_ucLowCaptureByte_1_1'
                           2931 ;ucHighCaptureByte         Allocated with name '_prvSetupTimerInterrupt_ucHighCaptureByte_1_1'
                           2932 ;------------------------------------------------------------
                           2933 ;	../src/projectSpecificHardwareInterface_C8051F040.c:650: static void prvSetupTimerInterrupt( void )
                           2934 ;	-----------------------------------------
                           2935 ;	 function prvSetupTimerInterrupt
                           2936 ;	-----------------------------------------
   099F                    2937 _prvSetupTimerInterrupt:
                           2938 ;	../src/projectSpecificHardwareInterface_C8051F040.c:664: ucOriginalSFRPage = SFRPAGE;
   099F 90s08rE7           2939 	mov	dptr,#_prvSetupTimerInterrupt_ucOriginalSFRPage_1_1
   09A2 E5 84              2940 	mov	a,_SFRPAGE
   09A4 F0                 2941 	movx	@dptr,a
                           2942 ;	../src/projectSpecificHardwareInterface_C8051F040.c:665: SFRPAGE = 0;
   09A5 75 84 00           2943 	mov	_SFRPAGE,#0x00
                           2944 ;	../src/projectSpecificHardwareInterface_C8051F040.c:668: TMR2CF = ( unsigned char ) 0;
   09A8 75 C9 00           2945 	mov	_TMR2CF,#0x00
                           2946 ;	../src/projectSpecificHardwareInterface_C8051F040.c:671: RCAP2L = ucLowCaptureByte;
   09AB 75 CA D1           2947 	mov	_RCAP2L,#0xD1
                           2948 ;	../src/projectSpecificHardwareInterface_C8051F040.c:672: RCAP2H = ucHighCaptureByte;
   09AE 75 CB FF           2949 	mov	_RCAP2H,#0xFF
                           2950 ;	../src/projectSpecificHardwareInterface_C8051F040.c:675: TMR2L = ucLowCaptureByte;
   09B1 75 CC D1           2951 	mov	_TMR2L,#0xD1
                           2952 ;	../src/projectSpecificHardwareInterface_C8051F040.c:676: TMR2H = ucHighCaptureByte;
   09B4 75 CD FF           2953 	mov	_TMR2H,#0xFF
                           2954 ;	../src/projectSpecificHardwareInterface_C8051F040.c:679: IE |= portTIMER_2_INTERRUPT_ENABLE;
   09B7 43 A8 20           2955 	orl	_IE,#0x20
                           2956 ;	../src/projectSpecificHardwareInterface_C8051F040.c:682: TMR2CN = portENABLE_TIMER ;
   09BA 75 C8 06           2957 	mov	_TMR2CN,#0x06
                           2958 ;	../src/projectSpecificHardwareInterface_C8051F040.c:685: SFRPAGE	= 1 ;
   09BD 75 84 01           2959 	mov	_SFRPAGE,#0x01
                           2960 ;	../src/projectSpecificHardwareInterface_C8051F040.c:686: TMR3CF	= 0x0A ;
   09C0 75 C9 0A           2961 	mov	_TMR3CF,#0x0A
                           2962 ;	../src/projectSpecificHardwareInterface_C8051F040.c:688: RCAP3L	= 0xCE ;	// 120kHz on boost boards
   09C3 75 CA CE           2963 	mov	_RCAP3L,#0xCE
                           2964 ;	../src/projectSpecificHardwareInterface_C8051F040.c:689: RCAP3H	= 0xFF ;	// 120kHz on boost boards
   09C6 75 CB FF           2965 	mov	_RCAP3H,#0xFF
                           2966 ;	../src/projectSpecificHardwareInterface_C8051F040.c:691: TMR3L	= 0xF0 ;
   09C9 75 CC F0           2967 	mov	_TMR3L,#0xF0
                           2968 ;	../src/projectSpecificHardwareInterface_C8051F040.c:692: TMR3H	= 0xFF ;
   09CC 75 CD FF           2969 	mov	_TMR3H,#0xFF
                           2970 ;	../src/projectSpecificHardwareInterface_C8051F040.c:693: TMR3CN	= 0x04 ;
   09CF 75 C8 04           2971 	mov	_TMR3CN,#0x04
                           2972 ;	../src/projectSpecificHardwareInterface_C8051F040.c:697: SFRPAGE = ucOriginalSFRPage;
   09D2 90s08rE7           2973 	mov	dptr,#_prvSetupTimerInterrupt_ucOriginalSFRPage_1_1
   09D5 E0                 2974 	movx	a,@dptr
   09D6 F5 84              2975 	mov	_SFRPAGE,a
   09D8 22                 2976 	ret
                           2977 ;------------------------------------------------------------
                           2978 ;Allocation info for local variables in function 'addTickCounter'
                           2979 ;------------------------------------------------------------
                           2980 ;pointerToIncrement        Allocated with name '_addTickCounter_pointerToIncrement_1_1'
                           2981 ;i                         Allocated with name '_addTickCounter_i_1_1'
                           2982 ;sloc0                     Allocated with name '_addTickCounter_sloc0_1_0'
                           2983 ;------------------------------------------------------------
                           2984 ;	../src/projectSpecificHardwareInterface_C8051F040.c:705: void addTickCounter(							unsigned short* pointerToIncrement)
                           2985 ;	-----------------------------------------
                           2986 ;	 function addTickCounter
                           2987 ;	-----------------------------------------
   09D9                    2988 _addTickCounter:
   09D9 AA F0              2989 	mov	r2,b
   09DB AB 83              2990 	mov	r3,dph
   09DD E5 82              2991 	mov	a,dpl
   09DF 90s09r06           2992 	mov	dptr,#_addTickCounter_pointerToIncrement_1_1
   09E2 F0                 2993 	movx	@dptr,a
   09E3 A3                 2994 	inc	dptr
   09E4 EB                 2995 	mov	a,r3
   09E5 F0                 2996 	movx	@dptr,a
   09E6 A3                 2997 	inc	dptr
   09E7 EA                 2998 	mov	a,r2
   09E8 F0                 2999 	movx	@dptr,a
                           3000 ;	../src/projectSpecificHardwareInterface_C8051F040.c:709: for( i = 0 ; i < configNUMBER_OF_TICK_COUNTERS ; i++ )
   09E9 7A 00              3001 	mov	r2,#0x00
   09EB                    3002 00105$:
   09EB BA 0A 00           3003 	cjne	r2,#0x0A,00115$
   09EE                    3004 00115$:
   09EE 50 4B              3005 	jnc	00109$
                           3006 ;	../src/projectSpecificHardwareInterface_C8051F040.c:713: if(tickCounterToIncrement[i] == pointerToIncrement)
   09F0 EA                 3007 	mov	a,r2
   09F1 75 F0 03           3008 	mov	b,#0x03
   09F4 A4                 3009 	mul	ab
   09F5 24rE8              3010 	add	a,#_tickCounterToIncrement
   09F7 FB                 3011 	mov	r3,a
   09F8 E4                 3012 	clr	a
   09F9 34s08              3013 	addc	a,#(_tickCounterToIncrement >> 8)
   09FB FC                 3014 	mov	r4,a
   09FC 8B 82              3015 	mov	dpl,r3
   09FE 8C 83              3016 	mov	dph,r4
   0A00 E0                 3017 	movx	a,@dptr
   0A01 FD                 3018 	mov	r5,a
   0A02 A3                 3019 	inc	dptr
   0A03 E0                 3020 	movx	a,@dptr
   0A04 FE                 3021 	mov	r6,a
   0A05 A3                 3022 	inc	dptr
   0A06 E0                 3023 	movx	a,@dptr
   0A07 FF                 3024 	mov	r7,a
   0A08 90s09r06           3025 	mov	dptr,#_addTickCounter_pointerToIncrement_1_1
   0A0B E0                 3026 	movx	a,@dptr
   0A0C F5*00              3027 	mov	_addTickCounter_sloc0_1_0,a
   0A0E A3                 3028 	inc	dptr
   0A0F E0                 3029 	movx	a,@dptr
   0A10 F5*01              3030 	mov	(_addTickCounter_sloc0_1_0 + 1),a
   0A12 A3                 3031 	inc	dptr
   0A13 E0                 3032 	movx	a,@dptr
   0A14 F5*02              3033 	mov	(_addTickCounter_sloc0_1_0 + 2),a
   0A16 ED                 3034 	mov	a,r5
   0A17 B5*00 09           3035 	cjne	a,_addTickCounter_sloc0_1_0,00117$
   0A1A EE                 3036 	mov	a,r6
   0A1B B5*01 05           3037 	cjne	a,(_addTickCounter_sloc0_1_0 + 1),00117$
   0A1E EF                 3038 	mov	a,r7
   0A1F B5*02 01           3039 	cjne	a,(_addTickCounter_sloc0_1_0 + 2),00117$
   0A22 22                 3040 	ret
   0A23                    3041 00117$:
                           3042 ;	../src/projectSpecificHardwareInterface_C8051F040.c:718: if(tickCounterToIncrement[i] == 0)
   0A23 ED                 3043 	mov	a,r5
   0A24 4E                 3044 	orl	a,r6
   0A25 4F                 3045 	orl	a,r7
   0A26 70 10              3046 	jnz	00107$
                           3047 ;	../src/projectSpecificHardwareInterface_C8051F040.c:720: tickCounterToIncrement[i] = pointerToIncrement ;
   0A28 8B 82              3048 	mov	dpl,r3
   0A2A 8C 83              3049 	mov	dph,r4
   0A2C E5*00              3050 	mov	a,_addTickCounter_sloc0_1_0
   0A2E F0                 3051 	movx	@dptr,a
   0A2F A3                 3052 	inc	dptr
   0A30 E5*01              3053 	mov	a,(_addTickCounter_sloc0_1_0 + 1)
   0A32 F0                 3054 	movx	@dptr,a
   0A33 A3                 3055 	inc	dptr
   0A34 E5*02              3056 	mov	a,(_addTickCounter_sloc0_1_0 + 2)
   0A36 F0                 3057 	movx	@dptr,a
                           3058 ;	../src/projectSpecificHardwareInterface_C8051F040.c:722: break ;
   0A37 22                 3059 	ret
   0A38                    3060 00107$:
                           3061 ;	../src/projectSpecificHardwareInterface_C8051F040.c:709: for( i = 0 ; i < configNUMBER_OF_TICK_COUNTERS ; i++ )
   0A38 0A                 3062 	inc	r2
   0A39 80 B0              3063 	sjmp	00105$
   0A3B                    3064 00109$:
   0A3B 22                 3065 	ret
                           3066 ;------------------------------------------------------------
                           3067 ;Allocation info for local variables in function 'vTimer2ISR'
                           3068 ;------------------------------------------------------------
                           3069 ;i                         Allocated with name '_vTimer2ISR_i_1_1'
                           3070 ;------------------------------------------------------------
                           3071 ;	../src/projectSpecificHardwareInterface_C8051F040.c:731: void vTimer2ISR( void ) interrupt 5
                           3072 ;	-----------------------------------------
                           3073 ;	 function vTimer2ISR
                           3074 ;	-----------------------------------------
   0A3C                    3075 _vTimer2ISR:
   0A3C C0*00              3076 	push	bits
   0A3E C0 E0              3077 	push	acc
   0A40 C0 F0              3078 	push	b
   0A42 C0 82              3079 	push	dpl
   0A44 C0 83              3080 	push	dph
   0A46 C0 02              3081 	push	(0+2)
   0A48 C0 03              3082 	push	(0+3)
   0A4A C0 04              3083 	push	(0+4)
   0A4C C0 05              3084 	push	(0+5)
   0A4E C0 06              3085 	push	(0+6)
   0A50 C0 07              3086 	push	(0+7)
   0A52 C0 00              3087 	push	(0+0)
   0A54 C0 01              3088 	push	(0+1)
   0A56 C0 D0              3089 	push	psw
   0A58 75 D0 00           3090 	mov	psw,#0x00
                           3091 ;	../src/projectSpecificHardwareInterface_C8051F040.c:735: for( i = 0 ; i < configNUMBER_OF_TICK_COUNTERS ; i++ )
   0A5B 7A 00              3092 	mov	r2,#0x00
   0A5D                    3093 00103$:
   0A5D BA 0A 00           3094 	cjne	r2,#0x0A,00113$
   0A60                    3095 00113$:
   0A60 50 41              3096 	jnc	00106$
                           3097 ;	../src/projectSpecificHardwareInterface_C8051F040.c:737: if(tickCounterToIncrement[i])
   0A62 EA                 3098 	mov	a,r2
   0A63 75 F0 03           3099 	mov	b,#0x03
   0A66 A4                 3100 	mul	ab
   0A67 24rE8              3101 	add	a,#_tickCounterToIncrement
   0A69 F5 82              3102 	mov	dpl,a
   0A6B E4                 3103 	clr	a
   0A6C 34s08              3104 	addc	a,#(_tickCounterToIncrement >> 8)
   0A6E F5 83              3105 	mov	dph,a
   0A70 E0                 3106 	movx	a,@dptr
   0A71 FB                 3107 	mov	r3,a
   0A72 A3                 3108 	inc	dptr
   0A73 E0                 3109 	movx	a,@dptr
   0A74 FC                 3110 	mov	r4,a
   0A75 A3                 3111 	inc	dptr
   0A76 E0                 3112 	movx	a,@dptr
   0A77 FD                 3113 	mov	r5,a
   0A78 EB                 3114 	mov	a,r3
   0A79 4C                 3115 	orl	a,r4
   0A7A 4D                 3116 	orl	a,r5
   0A7B 60 23              3117 	jz	00105$
                           3118 ;	../src/projectSpecificHardwareInterface_C8051F040.c:739: *tickCounterToIncrement[i] += 1 ;
   0A7D 8B 82              3119 	mov	dpl,r3
   0A7F 8C 83              3120 	mov	dph,r4
   0A81 8D F0              3121 	mov	b,r5
   0A83 12s00r00           3122 	lcall	__gptrget
   0A86 FE                 3123 	mov	r6,a
   0A87 A3                 3124 	inc	dptr
   0A88 12s00r00           3125 	lcall	__gptrget
   0A8B FF                 3126 	mov	r7,a
   0A8C 0E                 3127 	inc	r6
   0A8D BE 00 01           3128 	cjne	r6,#0x00,00116$
   0A90 0F                 3129 	inc	r7
   0A91                    3130 00116$:
   0A91 8B 82              3131 	mov	dpl,r3
   0A93 8C 83              3132 	mov	dph,r4
   0A95 8D F0              3133 	mov	b,r5
   0A97 EE                 3134 	mov	a,r6
   0A98 12s00r00           3135 	lcall	__gptrput
   0A9B A3                 3136 	inc	dptr
   0A9C EF                 3137 	mov	a,r7
   0A9D 12s00r00           3138 	lcall	__gptrput
   0AA0                    3139 00105$:
                           3140 ;	../src/projectSpecificHardwareInterface_C8051F040.c:735: for( i = 0 ; i < configNUMBER_OF_TICK_COUNTERS ; i++ )
   0AA0 0A                 3141 	inc	r2
   0AA1 80 BA              3142 	sjmp	00103$
   0AA3                    3143 00106$:
                           3144 ;	../src/projectSpecificHardwareInterface_C8051F040.c:743: taskSwitcherTickHook() ;
   0AA3 12s00r7F           3145 	lcall	_taskSwitcherTickHook
                           3146 ;	../src/projectSpecificHardwareInterface_C8051F040.c:745: portCLEAR_INTERRUPT_FLAG() ;
   0AA6 53 C8 7F           3147 	anl	_TMR2CN,#0x7F
   0AA9 D0 D0              3148 	pop	psw
   0AAB D0 01              3149 	pop	(0+1)
   0AAD D0 00              3150 	pop	(0+0)
   0AAF D0 07              3151 	pop	(0+7)
   0AB1 D0 06              3152 	pop	(0+6)
   0AB3 D0 05              3153 	pop	(0+5)
   0AB5 D0 04              3154 	pop	(0+4)
   0AB7 D0 03              3155 	pop	(0+3)
   0AB9 D0 02              3156 	pop	(0+2)
   0ABB D0 83              3157 	pop	dph
   0ABD D0 82              3158 	pop	dpl
   0ABF D0 F0              3159 	pop	b
   0AC1 D0 E0              3160 	pop	acc
   0AC3 D0*00              3161 	pop	bits
   0AC5 32                 3162 	reti
                           3163 	.area CSEG    (CODE)
                           3164 	.area CONST   (CODE)
   0000                    3165 __str_0:
   0000 34 74 68 20 47 65  3166 	.ascii "4th Generation state machine test started."
        6E 65 72 61 74 69
        6F 6E 20 73 74 61
        74 65 20 6D 61 63
        68 69 6E 65 20 74
        65 73 74 20 73 74
        61 72 74 65 64 2E
   002A 00                 3167 	.db 0x00
   002B                    3168 __str_1:
   002B 6C 6F 6F 70        3169 	.ascii "loop"
   002F 00                 3170 	.db 0x00
   0030                    3171 __str_2:
   0030 0A                 3172 	.db 0x0A
   0031 34 74 68 20 47 65  3173 	.ascii "4th Generation state machine test done."
        6E 65 72 61 74 69
        6F 6E 20 73 74 61
        74 65 20 6D 61 63
        68 69 6E 65 20 74
        65 73 74 20 64 6F
        6E 65 2E
   0058 00                 3174 	.db 0x00
                           3175 	.area XINIT   (CODE)
   0000                    3176 __xinit__countdown:
   0000 05 00              3177 	.byte #0x05,#0x00
                           3178 	.area CABS    (ABS,CODE)
