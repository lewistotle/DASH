                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.0 #5416 (Mar 22 2009) (MINGW32)
                              4 ; This file was generated Wed Dec 30 18:41:46 2009
                              5 ;--------------------------------------------------------
                              6 	.module main_C8051F040
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _vTimer2ISR
                             13 	.globl _addTickCounter
                             14 	.globl _IsFull
                             15 	.globl _IsEmpty
                             16 	.globl _main
                             17 	.globl _P7_7
                             18 	.globl _P7_6
                             19 	.globl _P7_5
                             20 	.globl _P7_4
                             21 	.globl _P7_3
                             22 	.globl _P7_2
                             23 	.globl _P7_1
                             24 	.globl _P7_0
                             25 	.globl _CANTEST
                             26 	.globl _CANCCE
                             27 	.globl _CANDAR
                             28 	.globl _CANIF
                             29 	.globl _CANEIE
                             30 	.globl _CANSIE
                             31 	.globl _CANIE
                             32 	.globl _CANINIT
                             33 	.globl _SPIF
                             34 	.globl _WCOL
                             35 	.globl _MODF
                             36 	.globl _RXOVRN
                             37 	.globl _NSSMD1
                             38 	.globl _NSSMD0
                             39 	.globl _TXBMT
                             40 	.globl _SPIEN
                             41 	.globl _P6_7
                             42 	.globl _P6_6
                             43 	.globl _P6_5
                             44 	.globl _P6_4
                             45 	.globl _P6_3
                             46 	.globl _P6_2
                             47 	.globl _P6_1
                             48 	.globl _P6_0
                             49 	.globl _AD2EN
                             50 	.globl _AD2TM
                             51 	.globl _AD2INT
                             52 	.globl _AD2BUSY
                             53 	.globl _AD2CM2
                             54 	.globl _AD2CM1
                             55 	.globl _AD2CM0
                             56 	.globl _AD2WINT
                             57 	.globl _AD0EN
                             58 	.globl _AD0TM
                             59 	.globl _AD0INT
                             60 	.globl _AD0BUSY
                             61 	.globl _AD0CM1
                             62 	.globl _AD0CM0
                             63 	.globl _AD0WINT
                             64 	.globl _AD0LJST
                             65 	.globl _P5_7
                             66 	.globl _P5_6
                             67 	.globl _P5_5
                             68 	.globl _P5_4
                             69 	.globl _P5_3
                             70 	.globl _P5_2
                             71 	.globl _P5_1
                             72 	.globl _P5_0
                             73 	.globl _CF
                             74 	.globl _CR
                             75 	.globl _CCF5
                             76 	.globl _CCF4
                             77 	.globl _CCF3
                             78 	.globl _CCF2
                             79 	.globl _CCF1
                             80 	.globl _CCF0
                             81 	.globl _CY
                             82 	.globl _AC
                             83 	.globl _F0
                             84 	.globl _RS1
                             85 	.globl _RS0
                             86 	.globl _OV
                             87 	.globl _F1
                             88 	.globl _P
                             89 	.globl _P4_7
                             90 	.globl _P4_6
                             91 	.globl _P4_5
                             92 	.globl _P4_4
                             93 	.globl _P4_3
                             94 	.globl _P4_2
                             95 	.globl _P4_1
                             96 	.globl _P4_0
                             97 	.globl _TF4
                             98 	.globl _EXF4
                             99 	.globl _EXEN4
                            100 	.globl _TR4
                            101 	.globl _CT4
                            102 	.globl _CPRL4
                            103 	.globl _TF3
                            104 	.globl _EXF3
                            105 	.globl _EXEN3
                            106 	.globl _TR3
                            107 	.globl _CT3
                            108 	.globl _CPRL3
                            109 	.globl _TF2
                            110 	.globl _EXF2
                            111 	.globl _EXEN2
                            112 	.globl _TR2
                            113 	.globl _CT2
                            114 	.globl _CPRL2
                            115 	.globl _CANBOFF
                            116 	.globl _CANEWARN
                            117 	.globl _CANEPASS
                            118 	.globl _CANRXOK
                            119 	.globl _CANTXOK
                            120 	.globl _BUSY
                            121 	.globl _ENSMB
                            122 	.globl _STA
                            123 	.globl _STO
                            124 	.globl _SI
                            125 	.globl _AA
                            126 	.globl _SMBFTE
                            127 	.globl _SMBTOE
                            128 	.globl _PT2
                            129 	.globl _PS
                            130 	.globl _PS0
                            131 	.globl _PT1
                            132 	.globl _PX1
                            133 	.globl _PT0
                            134 	.globl _PX0
                            135 	.globl _P3_7
                            136 	.globl _P3_6
                            137 	.globl _P3_5
                            138 	.globl _P3_4
                            139 	.globl _P3_3
                            140 	.globl _P3_2
                            141 	.globl _P3_1
                            142 	.globl _P3_0
                            143 	.globl _EA
                            144 	.globl _ET2
                            145 	.globl _ES
                            146 	.globl _ES0
                            147 	.globl _ET1
                            148 	.globl _EX1
                            149 	.globl _ET0
                            150 	.globl _EX0
                            151 	.globl _P2_7
                            152 	.globl _P2_6
                            153 	.globl _P2_5
                            154 	.globl _P2_4
                            155 	.globl _P2_3
                            156 	.globl _P2_2
                            157 	.globl _P2_1
                            158 	.globl _P2_0
                            159 	.globl _S1MODE
                            160 	.globl _MCE1
                            161 	.globl _REN1
                            162 	.globl _TB81
                            163 	.globl _RB81
                            164 	.globl _TI1
                            165 	.globl _RI1
                            166 	.globl _SM00
                            167 	.globl _SM10
                            168 	.globl _SM20
                            169 	.globl _REN
                            170 	.globl _REN0
                            171 	.globl _TB80
                            172 	.globl _RB80
                            173 	.globl _TI
                            174 	.globl _TI0
                            175 	.globl _RI
                            176 	.globl _RI0
                            177 	.globl _P1_7
                            178 	.globl _P1_6
                            179 	.globl _P1_5
                            180 	.globl _P1_4
                            181 	.globl _P1_3
                            182 	.globl _P1_2
                            183 	.globl _P1_1
                            184 	.globl _P1_0
                            185 	.globl _CP2EN
                            186 	.globl _CP2OUT
                            187 	.globl _CP2RIF
                            188 	.globl _CP2FIF
                            189 	.globl _CP2HYP1
                            190 	.globl _CP2HYP0
                            191 	.globl _CP2HYN1
                            192 	.globl _CP2HYN0
                            193 	.globl _CP1EN
                            194 	.globl _CP1OUT
                            195 	.globl _CP1RIF
                            196 	.globl _CP1FIF
                            197 	.globl _CP1HYP1
                            198 	.globl _CP1HYP0
                            199 	.globl _CP1HYN1
                            200 	.globl _CP1HYN0
                            201 	.globl _CP0EN
                            202 	.globl _CP0OUT
                            203 	.globl _CP0RIF
                            204 	.globl _CP0FIF
                            205 	.globl _CP0HYP1
                            206 	.globl _CP0HYP0
                            207 	.globl _CP0HYN1
                            208 	.globl _CP0HYN0
                            209 	.globl _TF1
                            210 	.globl _TR1
                            211 	.globl _TF0
                            212 	.globl _TR0
                            213 	.globl _IE1
                            214 	.globl _IT1
                            215 	.globl _IE0
                            216 	.globl _IT0
                            217 	.globl _P0_7
                            218 	.globl _P0_6
                            219 	.globl _P0_5
                            220 	.globl _P0_4
                            221 	.globl _P0_3
                            222 	.globl _P0_2
                            223 	.globl _P0_1
                            224 	.globl _P0_0
                            225 	.globl _P7
                            226 	.globl _P6
                            227 	.globl _XBR3
                            228 	.globl _XBR2
                            229 	.globl _XBR1
                            230 	.globl _XBR0
                            231 	.globl _P5
                            232 	.globl _P4
                            233 	.globl _FLACL
                            234 	.globl _P3MDIN
                            235 	.globl _P2MDIN
                            236 	.globl _P1MDIN
                            237 	.globl _P3MDOUT
                            238 	.globl _P2MDOUT
                            239 	.globl _P1MDOUT
                            240 	.globl _P0MDOUT
                            241 	.globl _P7MDOUT
                            242 	.globl _P6MDOUT
                            243 	.globl _P5MDOUT
                            244 	.globl _P4MDOUT
                            245 	.globl _CLKSEL
                            246 	.globl _SFRPGCN
                            247 	.globl _OSCXCN
                            248 	.globl _OSCICL
                            249 	.globl _OSCICN
                            250 	.globl _CPT2MD
                            251 	.globl _CPT2CN
                            252 	.globl _ADC2CN
                            253 	.globl _TMR4H
                            254 	.globl _TMR4L
                            255 	.globl _RCAP4H
                            256 	.globl _RCAP4L
                            257 	.globl _TMR4CF
                            258 	.globl _TMR4CN
                            259 	.globl _ADC2LT
                            260 	.globl _ADC2GT
                            261 	.globl _ADC2
                            262 	.globl _ADC2CF
                            263 	.globl _AMX2SL
                            264 	.globl _AMX2CF
                            265 	.globl _CPT1MD
                            266 	.globl _CPT1CN
                            267 	.globl _CAN0CN
                            268 	.globl _CAN0TST
                            269 	.globl _CAN0ADR
                            270 	.globl _CAN0DATH
                            271 	.globl _CAN0DATL
                            272 	.globl _DAC1CN
                            273 	.globl _DAC1H
                            274 	.globl _DAC1L
                            275 	.globl _TMR3H
                            276 	.globl _TMR3L
                            277 	.globl _RCAP3H
                            278 	.globl _RCAP3L
                            279 	.globl _TMR3CF
                            280 	.globl _TMR3CN
                            281 	.globl _CAN0STA
                            282 	.globl _SBUF1
                            283 	.globl _SCON1
                            284 	.globl _CPT0MD
                            285 	.globl _CPT0CN
                            286 	.globl _PCA0CPH1
                            287 	.globl _PCA0CPL1
                            288 	.globl _PCA0CPH0
                            289 	.globl _PCA0CPL0
                            290 	.globl _PCA0H
                            291 	.globl _PCA0L
                            292 	.globl _SPI0CN
                            293 	.globl _RSTSRC
                            294 	.globl _PCA0CPH4
                            295 	.globl _PCA0CPL4
                            296 	.globl _PCA0CPH3
                            297 	.globl _PCA0CPL3
                            298 	.globl _PCA0CPH2
                            299 	.globl _PCA0CPL2
                            300 	.globl _ADC0CN
                            301 	.globl _PCA0CPH5
                            302 	.globl _PCA0CPL5
                            303 	.globl _PCA0CPM5
                            304 	.globl _PCA0CPM4
                            305 	.globl _PCA0CPM3
                            306 	.globl _PCA0CPM2
                            307 	.globl _PCA0CPM1
                            308 	.globl _PCA0CPM0
                            309 	.globl _PCA0MD
                            310 	.globl _PCA0CN
                            311 	.globl _HVA0CN
                            312 	.globl _DAC0CN
                            313 	.globl _DAC0H
                            314 	.globl _DAC0L
                            315 	.globl _REF0CN
                            316 	.globl _SMB0CR
                            317 	.globl _TH2
                            318 	.globl _TMR2H
                            319 	.globl _TL2
                            320 	.globl _TMR2L
                            321 	.globl _RCAP2H
                            322 	.globl _RCAP2L
                            323 	.globl _TMR2CF
                            324 	.globl _TMR2CN
                            325 	.globl _ADC0LTH
                            326 	.globl _ADC0LTL
                            327 	.globl _ADC0GTH
                            328 	.globl _ADC0GTL
                            329 	.globl _SMB0ADR
                            330 	.globl _SMB0DAT
                            331 	.globl _SMB0STA
                            332 	.globl _SMB0CN
                            333 	.globl _ADC0H
                            334 	.globl _ADC0L
                            335 	.globl _AMX0PRT
                            336 	.globl _ADC0CF
                            337 	.globl _AMX0SL
                            338 	.globl _AMX0CF
                            339 	.globl _SADEN0
                            340 	.globl _FLSCL
                            341 	.globl _SADDR0
                            342 	.globl _EMI0CF
                            343 	.globl __XPAGE
                            344 	.globl _EMI0CN
                            345 	.globl _EMI0TC
                            346 	.globl _SPI0CKR
                            347 	.globl _SPI0DAT
                            348 	.globl _SPI0CFG
                            349 	.globl _SBUF
                            350 	.globl _SBUF0
                            351 	.globl _SCON
                            352 	.globl _SCON0
                            353 	.globl _SSTA0
                            354 	.globl _PSCTL
                            355 	.globl _CKCON
                            356 	.globl _TH1
                            357 	.globl _TH0
                            358 	.globl _TL1
                            359 	.globl _TL0
                            360 	.globl _TMOD
                            361 	.globl _TCON
                            362 	.globl _WDTCN
                            363 	.globl _EIP2
                            364 	.globl _EIP1
                            365 	.globl _B
                            366 	.globl _EIE2
                            367 	.globl _EIE1
                            368 	.globl _ACC
                            369 	.globl _PSW
                            370 	.globl _IP
                            371 	.globl _P3
                            372 	.globl _IE
                            373 	.globl _P2
                            374 	.globl _P1
                            375 	.globl _PCON
                            376 	.globl _SFRLAST
                            377 	.globl _SFRNEXT
                            378 	.globl _SFRPAGE
                            379 	.globl _DPH
                            380 	.globl _DPL
                            381 	.globl _SP
                            382 	.globl _P0
                            383 	.globl _tickCounterToIncrement
                            384 	.globl _task_UART_gets_projectSpecific_PARM_3
                            385 	.globl _task_UART_gets_projectSpecific_PARM_2
                            386 	.globl _task_UART_puts_projectSpecific_PARM_2
                            387 	.globl _task_UART_putchar_projectSpecific_PARM_2
                            388 	.globl _Succ_PARM_2
                            389 	.globl _UARTtempBuffer
                            390 	.globl _pwm_setDutyCycleAsPercentage_projectSpecific_PARM_2
                            391 	.globl _pwm_adjustDutyCycle_projectSpecific_PARM_2
                            392 	.globl _pwm_setDutyCycle_projectSpecific_PARM_2
                            393 	.globl _taskSwitcherTickHook
                            394 	.globl _gpio_init_projectSpecific
                            395 	.globl _pwm_init_projectSpecific
                            396 	.globl _pwm_incrementDutyCycle_projectSpecific
                            397 	.globl _pwm_decrementDutyCycle_projectSpecific
                            398 	.globl _pwm_getDutyCycle_projectSpecific
                            399 	.globl _pwm_setDutyCycle_projectSpecific
                            400 	.globl _pwm_adjustDutyCycle_projectSpecific
                            401 	.globl _pwm_setDutyCycleAsPercentage_projectSpecific
                            402 	.globl _pwm_getDutyCycleAsPercentage_projectSpecific
                            403 	.globl _task_UART_init_projectSpecific
                            404 	.globl _task_UART_core_projectSpecific
                            405 	.globl _task_UART_putchar_projectSpecific
                            406 	.globl _task_UART_puts_projectSpecific
                            407 	.globl _task_UART_getchar_projectSpecific
                            408 	.globl _task_UART_gets_projectSpecific
                            409 	.globl _task_UART_isLineReady
                            410 	.globl _UART0_Init
                            411 	.globl _UART1_Init
                            412 	.globl _putchar
                            413 ;--------------------------------------------------------
                            414 ; special function registers
                            415 ;--------------------------------------------------------
                            416 	.area RSEG    (DATA)
                    0080    417 _P0	=	0x0080
                    0081    418 _SP	=	0x0081
                    0082    419 _DPL	=	0x0082
                    0083    420 _DPH	=	0x0083
                    0084    421 _SFRPAGE	=	0x0084
                    0085    422 _SFRNEXT	=	0x0085
                    0086    423 _SFRLAST	=	0x0086
                    0087    424 _PCON	=	0x0087
                    0090    425 _P1	=	0x0090
                    00A0    426 _P2	=	0x00a0
                    00A8    427 _IE	=	0x00a8
                    00B0    428 _P3	=	0x00b0
                    00B8    429 _IP	=	0x00b8
                    00D0    430 _PSW	=	0x00d0
                    00E0    431 _ACC	=	0x00e0
                    00E6    432 _EIE1	=	0x00e6
                    00E7    433 _EIE2	=	0x00e7
                    00F0    434 _B	=	0x00f0
                    00F6    435 _EIP1	=	0x00f6
                    00F7    436 _EIP2	=	0x00f7
                    00FF    437 _WDTCN	=	0x00ff
                    0088    438 _TCON	=	0x0088
                    0089    439 _TMOD	=	0x0089
                    008A    440 _TL0	=	0x008a
                    008B    441 _TL1	=	0x008b
                    008C    442 _TH0	=	0x008c
                    008D    443 _TH1	=	0x008d
                    008E    444 _CKCON	=	0x008e
                    008F    445 _PSCTL	=	0x008f
                    0091    446 _SSTA0	=	0x0091
                    0098    447 _SCON0	=	0x0098
                    0098    448 _SCON	=	0x0098
                    0099    449 _SBUF0	=	0x0099
                    0099    450 _SBUF	=	0x0099
                    009A    451 _SPI0CFG	=	0x009a
                    009B    452 _SPI0DAT	=	0x009b
                    009D    453 _SPI0CKR	=	0x009d
                    00A1    454 _EMI0TC	=	0x00a1
                    00A2    455 _EMI0CN	=	0x00a2
                    00A2    456 __XPAGE	=	0x00a2
                    00A3    457 _EMI0CF	=	0x00a3
                    00A9    458 _SADDR0	=	0x00a9
                    00B7    459 _FLSCL	=	0x00b7
                    00B9    460 _SADEN0	=	0x00b9
                    00BA    461 _AMX0CF	=	0x00ba
                    00BB    462 _AMX0SL	=	0x00bb
                    00BC    463 _ADC0CF	=	0x00bc
                    00BD    464 _AMX0PRT	=	0x00bd
                    00BE    465 _ADC0L	=	0x00be
                    00BF    466 _ADC0H	=	0x00bf
                    00C0    467 _SMB0CN	=	0x00c0
                    00C1    468 _SMB0STA	=	0x00c1
                    00C2    469 _SMB0DAT	=	0x00c2
                    00C3    470 _SMB0ADR	=	0x00c3
                    00C4    471 _ADC0GTL	=	0x00c4
                    00C5    472 _ADC0GTH	=	0x00c5
                    00C6    473 _ADC0LTL	=	0x00c6
                    00C7    474 _ADC0LTH	=	0x00c7
                    00C8    475 _TMR2CN	=	0x00c8
                    00C9    476 _TMR2CF	=	0x00c9
                    00CA    477 _RCAP2L	=	0x00ca
                    00CB    478 _RCAP2H	=	0x00cb
                    00CC    479 _TMR2L	=	0x00cc
                    00CC    480 _TL2	=	0x00cc
                    00CD    481 _TMR2H	=	0x00cd
                    00CD    482 _TH2	=	0x00cd
                    00CF    483 _SMB0CR	=	0x00cf
                    00D1    484 _REF0CN	=	0x00d1
                    00D2    485 _DAC0L	=	0x00d2
                    00D3    486 _DAC0H	=	0x00d3
                    00D4    487 _DAC0CN	=	0x00d4
                    00D6    488 _HVA0CN	=	0x00d6
                    00D8    489 _PCA0CN	=	0x00d8
                    00D9    490 _PCA0MD	=	0x00d9
                    00DA    491 _PCA0CPM0	=	0x00da
                    00DB    492 _PCA0CPM1	=	0x00db
                    00DC    493 _PCA0CPM2	=	0x00dc
                    00DD    494 _PCA0CPM3	=	0x00dd
                    00DE    495 _PCA0CPM4	=	0x00de
                    00DF    496 _PCA0CPM5	=	0x00df
                    00E1    497 _PCA0CPL5	=	0x00e1
                    00E2    498 _PCA0CPH5	=	0x00e2
                    00E8    499 _ADC0CN	=	0x00e8
                    00E9    500 _PCA0CPL2	=	0x00e9
                    00EA    501 _PCA0CPH2	=	0x00ea
                    00EB    502 _PCA0CPL3	=	0x00eb
                    00EC    503 _PCA0CPH3	=	0x00ec
                    00ED    504 _PCA0CPL4	=	0x00ed
                    00EE    505 _PCA0CPH4	=	0x00ee
                    00EF    506 _RSTSRC	=	0x00ef
                    00F8    507 _SPI0CN	=	0x00f8
                    00F9    508 _PCA0L	=	0x00f9
                    00FA    509 _PCA0H	=	0x00fa
                    00FB    510 _PCA0CPL0	=	0x00fb
                    00FC    511 _PCA0CPH0	=	0x00fc
                    00FD    512 _PCA0CPL1	=	0x00fd
                    00FE    513 _PCA0CPH1	=	0x00fe
                    0088    514 _CPT0CN	=	0x0088
                    0089    515 _CPT0MD	=	0x0089
                    0098    516 _SCON1	=	0x0098
                    0099    517 _SBUF1	=	0x0099
                    00C0    518 _CAN0STA	=	0x00c0
                    00C8    519 _TMR3CN	=	0x00c8
                    00C9    520 _TMR3CF	=	0x00c9
                    00CA    521 _RCAP3L	=	0x00ca
                    00CB    522 _RCAP3H	=	0x00cb
                    00CC    523 _TMR3L	=	0x00cc
                    00CD    524 _TMR3H	=	0x00cd
                    00D2    525 _DAC1L	=	0x00d2
                    00D3    526 _DAC1H	=	0x00d3
                    00D4    527 _DAC1CN	=	0x00d4
                    00D8    528 _CAN0DATL	=	0x00d8
                    00D9    529 _CAN0DATH	=	0x00d9
                    00DA    530 _CAN0ADR	=	0x00da
                    00DB    531 _CAN0TST	=	0x00db
                    00F8    532 _CAN0CN	=	0x00f8
                    0088    533 _CPT1CN	=	0x0088
                    0089    534 _CPT1MD	=	0x0089
                    00BA    535 _AMX2CF	=	0x00ba
                    00BB    536 _AMX2SL	=	0x00bb
                    00BC    537 _ADC2CF	=	0x00bc
                    00BE    538 _ADC2	=	0x00be
                    00C4    539 _ADC2GT	=	0x00c4
                    00C6    540 _ADC2LT	=	0x00c6
                    00C8    541 _TMR4CN	=	0x00c8
                    00C9    542 _TMR4CF	=	0x00c9
                    00CA    543 _RCAP4L	=	0x00ca
                    00CB    544 _RCAP4H	=	0x00cb
                    00CC    545 _TMR4L	=	0x00cc
                    00CD    546 _TMR4H	=	0x00cd
                    00E8    547 _ADC2CN	=	0x00e8
                    0088    548 _CPT2CN	=	0x0088
                    0089    549 _CPT2MD	=	0x0089
                    008A    550 _OSCICN	=	0x008a
                    008B    551 _OSCICL	=	0x008b
                    008C    552 _OSCXCN	=	0x008c
                    0096    553 _SFRPGCN	=	0x0096
                    0097    554 _CLKSEL	=	0x0097
                    009C    555 _P4MDOUT	=	0x009c
                    009D    556 _P5MDOUT	=	0x009d
                    009E    557 _P6MDOUT	=	0x009e
                    009F    558 _P7MDOUT	=	0x009f
                    00A4    559 _P0MDOUT	=	0x00a4
                    00A5    560 _P1MDOUT	=	0x00a5
                    00A6    561 _P2MDOUT	=	0x00a6
                    00A7    562 _P3MDOUT	=	0x00a7
                    00AD    563 _P1MDIN	=	0x00ad
                    00AE    564 _P2MDIN	=	0x00ae
                    00AF    565 _P3MDIN	=	0x00af
                    00B7    566 _FLACL	=	0x00b7
                    00C8    567 _P4	=	0x00c8
                    00D8    568 _P5	=	0x00d8
                    00E1    569 _XBR0	=	0x00e1
                    00E2    570 _XBR1	=	0x00e2
                    00E3    571 _XBR2	=	0x00e3
                    00E4    572 _XBR3	=	0x00e4
                    00E8    573 _P6	=	0x00e8
                    00F8    574 _P7	=	0x00f8
                            575 ;--------------------------------------------------------
                            576 ; special function bits
                            577 ;--------------------------------------------------------
                            578 	.area RSEG    (DATA)
                    0080    579 _P0_0	=	0x0080
                    0081    580 _P0_1	=	0x0081
                    0082    581 _P0_2	=	0x0082
                    0083    582 _P0_3	=	0x0083
                    0084    583 _P0_4	=	0x0084
                    0085    584 _P0_5	=	0x0085
                    0086    585 _P0_6	=	0x0086
                    0087    586 _P0_7	=	0x0087
                    0088    587 _IT0	=	0x0088
                    0089    588 _IE0	=	0x0089
                    008A    589 _IT1	=	0x008a
                    008B    590 _IE1	=	0x008b
                    008C    591 _TR0	=	0x008c
                    008D    592 _TF0	=	0x008d
                    008E    593 _TR1	=	0x008e
                    008F    594 _TF1	=	0x008f
                    0088    595 _CP0HYN0	=	0x0088
                    0089    596 _CP0HYN1	=	0x0089
                    008A    597 _CP0HYP0	=	0x008a
                    008B    598 _CP0HYP1	=	0x008b
                    008C    599 _CP0FIF	=	0x008c
                    008D    600 _CP0RIF	=	0x008d
                    008E    601 _CP0OUT	=	0x008e
                    008F    602 _CP0EN	=	0x008f
                    0088    603 _CP1HYN0	=	0x0088
                    0089    604 _CP1HYN1	=	0x0089
                    008A    605 _CP1HYP0	=	0x008a
                    008B    606 _CP1HYP1	=	0x008b
                    008C    607 _CP1FIF	=	0x008c
                    008D    608 _CP1RIF	=	0x008d
                    008E    609 _CP1OUT	=	0x008e
                    008F    610 _CP1EN	=	0x008f
                    0088    611 _CP2HYN0	=	0x0088
                    0089    612 _CP2HYN1	=	0x0089
                    008A    613 _CP2HYP0	=	0x008a
                    008B    614 _CP2HYP1	=	0x008b
                    008C    615 _CP2FIF	=	0x008c
                    008D    616 _CP2RIF	=	0x008d
                    008E    617 _CP2OUT	=	0x008e
                    008F    618 _CP2EN	=	0x008f
                    0090    619 _P1_0	=	0x0090
                    0091    620 _P1_1	=	0x0091
                    0092    621 _P1_2	=	0x0092
                    0093    622 _P1_3	=	0x0093
                    0094    623 _P1_4	=	0x0094
                    0095    624 _P1_5	=	0x0095
                    0096    625 _P1_6	=	0x0096
                    0097    626 _P1_7	=	0x0097
                    0098    627 _RI0	=	0x0098
                    0098    628 _RI	=	0x0098
                    0099    629 _TI0	=	0x0099
                    0099    630 _TI	=	0x0099
                    009A    631 _RB80	=	0x009a
                    009B    632 _TB80	=	0x009b
                    009C    633 _REN0	=	0x009c
                    009C    634 _REN	=	0x009c
                    009D    635 _SM20	=	0x009d
                    009E    636 _SM10	=	0x009e
                    009F    637 _SM00	=	0x009f
                    0098    638 _RI1	=	0x0098
                    0099    639 _TI1	=	0x0099
                    009A    640 _RB81	=	0x009a
                    009B    641 _TB81	=	0x009b
                    009C    642 _REN1	=	0x009c
                    009D    643 _MCE1	=	0x009d
                    009F    644 _S1MODE	=	0x009f
                    00A0    645 _P2_0	=	0x00a0
                    00A1    646 _P2_1	=	0x00a1
                    00A2    647 _P2_2	=	0x00a2
                    00A3    648 _P2_3	=	0x00a3
                    00A4    649 _P2_4	=	0x00a4
                    00A5    650 _P2_5	=	0x00a5
                    00A6    651 _P2_6	=	0x00a6
                    00A7    652 _P2_7	=	0x00a7
                    00A8    653 _EX0	=	0x00a8
                    00A9    654 _ET0	=	0x00a9
                    00AA    655 _EX1	=	0x00aa
                    00AB    656 _ET1	=	0x00ab
                    00AC    657 _ES0	=	0x00ac
                    00AC    658 _ES	=	0x00ac
                    00AD    659 _ET2	=	0x00ad
                    00AF    660 _EA	=	0x00af
                    00B0    661 _P3_0	=	0x00b0
                    00B1    662 _P3_1	=	0x00b1
                    00B2    663 _P3_2	=	0x00b2
                    00B3    664 _P3_3	=	0x00b3
                    00B4    665 _P3_4	=	0x00b4
                    00B5    666 _P3_5	=	0x00b5
                    00B6    667 _P3_6	=	0x00b6
                    00B7    668 _P3_7	=	0x00b7
                    00B8    669 _PX0	=	0x00b8
                    00B9    670 _PT0	=	0x00b9
                    00BA    671 _PX1	=	0x00ba
                    00BB    672 _PT1	=	0x00bb
                    00BC    673 _PS0	=	0x00bc
                    00BC    674 _PS	=	0x00bc
                    00BD    675 _PT2	=	0x00bd
                    00C0    676 _SMBTOE	=	0x00c0
                    00C1    677 _SMBFTE	=	0x00c1
                    00C2    678 _AA	=	0x00c2
                    00C3    679 _SI	=	0x00c3
                    00C4    680 _STO	=	0x00c4
                    00C5    681 _STA	=	0x00c5
                    00C6    682 _ENSMB	=	0x00c6
                    00C7    683 _BUSY	=	0x00c7
                    00C3    684 _CANTXOK	=	0x00c3
                    00C4    685 _CANRXOK	=	0x00c4
                    00C5    686 _CANEPASS	=	0x00c5
                    00C6    687 _CANEWARN	=	0x00c6
                    00C7    688 _CANBOFF	=	0x00c7
                    00C8    689 _CPRL2	=	0x00c8
                    00C9    690 _CT2	=	0x00c9
                    00CA    691 _TR2	=	0x00ca
                    00CB    692 _EXEN2	=	0x00cb
                    00CE    693 _EXF2	=	0x00ce
                    00CF    694 _TF2	=	0x00cf
                    00C8    695 _CPRL3	=	0x00c8
                    00C9    696 _CT3	=	0x00c9
                    00CA    697 _TR3	=	0x00ca
                    00CB    698 _EXEN3	=	0x00cb
                    00CE    699 _EXF3	=	0x00ce
                    00CF    700 _TF3	=	0x00cf
                    00C8    701 _CPRL4	=	0x00c8
                    00C9    702 _CT4	=	0x00c9
                    00CA    703 _TR4	=	0x00ca
                    00CB    704 _EXEN4	=	0x00cb
                    00CE    705 _EXF4	=	0x00ce
                    00CF    706 _TF4	=	0x00cf
                    00C8    707 _P4_0	=	0x00c8
                    00C9    708 _P4_1	=	0x00c9
                    00CA    709 _P4_2	=	0x00ca
                    00CB    710 _P4_3	=	0x00cb
                    00CC    711 _P4_4	=	0x00cc
                    00CD    712 _P4_5	=	0x00cd
                    00CE    713 _P4_6	=	0x00ce
                    00CF    714 _P4_7	=	0x00cf
                    00D0    715 _P	=	0x00d0
                    00D1    716 _F1	=	0x00d1
                    00D2    717 _OV	=	0x00d2
                    00D3    718 _RS0	=	0x00d3
                    00D4    719 _RS1	=	0x00d4
                    00D5    720 _F0	=	0x00d5
                    00D6    721 _AC	=	0x00d6
                    00D7    722 _CY	=	0x00d7
                    00D8    723 _CCF0	=	0x00d8
                    00D9    724 _CCF1	=	0x00d9
                    00DA    725 _CCF2	=	0x00da
                    00DB    726 _CCF3	=	0x00db
                    00DC    727 _CCF4	=	0x00dc
                    00DD    728 _CCF5	=	0x00dd
                    00DE    729 _CR	=	0x00de
                    00DF    730 _CF	=	0x00df
                    00D8    731 _P5_0	=	0x00d8
                    00D9    732 _P5_1	=	0x00d9
                    00DA    733 _P5_2	=	0x00da
                    00DB    734 _P5_3	=	0x00db
                    00DC    735 _P5_4	=	0x00dc
                    00DD    736 _P5_5	=	0x00dd
                    00DE    737 _P5_6	=	0x00de
                    00DF    738 _P5_7	=	0x00df
                    00E8    739 _AD0LJST	=	0x00e8
                    00E9    740 _AD0WINT	=	0x00e9
                    00EA    741 _AD0CM0	=	0x00ea
                    00EB    742 _AD0CM1	=	0x00eb
                    00EC    743 _AD0BUSY	=	0x00ec
                    00ED    744 _AD0INT	=	0x00ed
                    00EE    745 _AD0TM	=	0x00ee
                    00EF    746 _AD0EN	=	0x00ef
                    00E8    747 _AD2WINT	=	0x00e8
                    00E9    748 _AD2CM0	=	0x00e9
                    00EA    749 _AD2CM1	=	0x00ea
                    00EB    750 _AD2CM2	=	0x00eb
                    00EC    751 _AD2BUSY	=	0x00ec
                    00ED    752 _AD2INT	=	0x00ed
                    00EE    753 _AD2TM	=	0x00ee
                    00EF    754 _AD2EN	=	0x00ef
                    00E8    755 _P6_0	=	0x00e8
                    00E9    756 _P6_1	=	0x00e9
                    00EA    757 _P6_2	=	0x00ea
                    00EB    758 _P6_3	=	0x00eb
                    00EC    759 _P6_4	=	0x00ec
                    00ED    760 _P6_5	=	0x00ed
                    00EE    761 _P6_6	=	0x00ee
                    00EF    762 _P6_7	=	0x00ef
                    00F8    763 _SPIEN	=	0x00f8
                    00F9    764 _TXBMT	=	0x00f9
                    00FA    765 _NSSMD0	=	0x00fa
                    00FB    766 _NSSMD1	=	0x00fb
                    00FC    767 _RXOVRN	=	0x00fc
                    00FD    768 _MODF	=	0x00fd
                    00FE    769 _WCOL	=	0x00fe
                    00FF    770 _SPIF	=	0x00ff
                    00F8    771 _CANINIT	=	0x00f8
                    00F9    772 _CANIE	=	0x00f9
                    00FA    773 _CANSIE	=	0x00fa
                    00FB    774 _CANEIE	=	0x00fb
                    00FC    775 _CANIF	=	0x00fc
                    00FD    776 _CANDAR	=	0x00fd
                    00FE    777 _CANCCE	=	0x00fe
                    00FF    778 _CANTEST	=	0x00ff
                    00F8    779 _P7_0	=	0x00f8
                    00F9    780 _P7_1	=	0x00f9
                    00FA    781 _P7_2	=	0x00fa
                    00FB    782 _P7_3	=	0x00fb
                    00FC    783 _P7_4	=	0x00fc
                    00FD    784 _P7_5	=	0x00fd
                    00FE    785 _P7_6	=	0x00fe
                    00FF    786 _P7_7	=	0x00ff
                            787 ;--------------------------------------------------------
                            788 ; overlayable register banks
                            789 ;--------------------------------------------------------
                            790 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     791 	.ds 8
                            792 ;--------------------------------------------------------
                            793 ; overlayable bit register bank
                            794 ;--------------------------------------------------------
                            795 	.area BIT_BANK	(REL,OVR,DATA)
   0000                     796 bits:
   0000                     797 	.ds 1
                    8000    798 	b0 = bits[0]
                    8100    799 	b1 = bits[1]
                    8200    800 	b2 = bits[2]
                    8300    801 	b3 = bits[3]
                    8400    802 	b4 = bits[4]
                    8500    803 	b5 = bits[5]
                    8600    804 	b6 = bits[6]
                    8700    805 	b7 = bits[7]
                            806 ;--------------------------------------------------------
                            807 ; internal ram data
                            808 ;--------------------------------------------------------
                            809 	.area DSEG    (DATA)
   0000                     810 _task_UART_core_projectSpecific_sloc0_1_0:
   0000                     811 	.ds 1
   0001                     812 _task_UART_core_projectSpecific_sloc1_1_0:
   0001                     813 	.ds 3
   0004                     814 _task_UART_core_projectSpecific_sloc2_1_0:
   0004                     815 	.ds 2
   0006                     816 _task_UART_core_projectSpecific_sloc3_1_0:
   0006                     817 	.ds 3
   0009                     818 _task_UART_getchar_projectSpecific_sloc0_1_0:
   0009                     819 	.ds 3
   000C                     820 _task_UART_getchar_projectSpecific_sloc1_1_0:
   000C                     821 	.ds 2
   000E                     822 _task_UART_getchar_projectSpecific_sloc2_1_0:
   000E                     823 	.ds 3
   0011                     824 _task_UART_gets_projectSpecific_sloc0_1_0:
   0011                     825 	.ds 1
   0012                     826 _task_UART_gets_projectSpecific_sloc1_1_0:
   0012                     827 	.ds 2
                            828 ;--------------------------------------------------------
                            829 ; overlayable items in internal ram 
                            830 ;--------------------------------------------------------
                            831 	.area	OSEG    (OVR,DATA)
   0000                     832 _addTickCounter_sloc0_1_0::
   0000                     833 	.ds 3
                            834 ;--------------------------------------------------------
                            835 ; Stack segment in internal ram 
                            836 ;--------------------------------------------------------
                            837 	.area	SSEG	(DATA)
   0000                     838 __start__stack:
   0000                     839 	.ds	1
                            840 
                            841 ;--------------------------------------------------------
                            842 ; indirectly addressable internal ram data
                            843 ;--------------------------------------------------------
                            844 	.area ISEG    (DATA)
                            845 ;--------------------------------------------------------
                            846 ; absolute internal ram data
                            847 ;--------------------------------------------------------
                            848 	.area IABS    (ABS,DATA)
                            849 	.area IABS    (ABS,DATA)
                            850 ;--------------------------------------------------------
                            851 ; bit data
                            852 ;--------------------------------------------------------
                            853 	.area BSEG    (BIT)
   0000                     854 _timeForTickProcessing:
   0000                     855 	.ds 1
   0001                     856 _main_processed_2_4:
   0001                     857 	.ds 1
   0002                     858 _pwm_init_projectSpecific_initialized_1_1:
   0002                     859 	.ds 1
   0003                     860 _task_UART_init_projectSpecific_timer1initialized_1_1:
   0003                     861 	.ds 1
   0004                     862 _task_UART_isLineReady_sloc0_1_0:
   0004                     863 	.ds 1
                            864 ;--------------------------------------------------------
                            865 ; paged external ram data
                            866 ;--------------------------------------------------------
                            867 	.area PSEG    (PAG,XDATA)
                            868 ;--------------------------------------------------------
                            869 ; external ram data
                            870 ;--------------------------------------------------------
                            871 	.area XSEG    (XDATA)
   0000                     872 _main_iterationMax_1_1:
   0000                     873 	.ds 2
   0002                     874 _pwm_init_projectSpecific_channelNumber_1_1:
   0002                     875 	.ds 1
   0003                     876 _pwm_setDutyCycle_projectSpecific_PARM_2:
   0003                     877 	.ds 1
   0004                     878 _pwm_adjustDutyCycle_projectSpecific_PARM_2:
   0004                     879 	.ds 1
   0005                     880 _pwm_setDutyCycleAsPercentage_projectSpecific_PARM_2:
   0005                     881 	.ds 1
   0006                     882 _UARTtempBuffer::
   0006                     883 	.ds 1100
   0452                     884 _IsEmpty_Q_1_1:
   0452                     885 	.ds 3
   0455                     886 _IsFull_Q_1_1:
   0455                     887 	.ds 3
   0458                     888 _Succ_PARM_2:
   0458                     889 	.ds 3
   045B                     890 _Succ_Value_1_1:
   045B                     891 	.ds 2
   045D                     892 _transmitBuffer:
   045D                     893 	.ds 1101
   08AA                     894 _receiveBuffer:
   08AA                     895 	.ds 11
   08B5                     896 _transmitBuffers:
   08B5                     897 	.ds 11
   08C0                     898 _receiveBuffers:
   08C0                     899 	.ds 11
   08CB                     900 _charSent:
   08CB                     901 	.ds 1
   08CC                     902 _lineReady:
   08CC                     903 	.ds 1
   08CD                     904 _task_UART_init_projectSpecific_channelNumber_1_1:
   08CD                     905 	.ds 1
   08CE                     906 _task_UART_core_projectSpecific_channelNumber_1_1:
   08CE                     907 	.ds 1
   08CF                     908 _task_UART_core_projectSpecific_Q_4_4:
   08CF                     909 	.ds 3
   08D2                     910 _task_UART_putchar_projectSpecific_PARM_2:
   08D2                     911 	.ds 1
   08D3                     912 _task_UART_putchar_projectSpecific_channelNumber_1_1:
   08D3                     913 	.ds 1
   08D4                     914 _task_UART_putchar_projectSpecific_Q_2_2:
   08D4                     915 	.ds 3
   08D7                     916 _task_UART_puts_projectSpecific_PARM_2:
   08D7                     917 	.ds 3
   08DA                     918 _task_UART_puts_projectSpecific_channelNumber_1_1:
   08DA                     919 	.ds 1
   08DB                     920 _task_UART_getchar_projectSpecific_channelNumber_1_1:
   08DB                     921 	.ds 1
   08DC                     922 _task_UART_getchar_projectSpecific_Q_2_2:
   08DC                     923 	.ds 3
   08DF                     924 _task_UART_gets_projectSpecific_PARM_2:
   08DF                     925 	.ds 3
   08E2                     926 _task_UART_gets_projectSpecific_PARM_3:
   08E2                     927 	.ds 2
   08E4                     928 _task_UART_gets_projectSpecific_channelNumber_1_1:
   08E4                     929 	.ds 1
   08E5                     930 _task_UART_isLineReady_channelNumber_1_1:
   08E5                     931 	.ds 1
   08E6                     932 _putchar_c_1_1:
   08E6                     933 	.ds 1
   08E7                     934 _prvSetupTimerInterrupt_ucOriginalSFRPage_1_1:
   08E7                     935 	.ds 1
   08E8                     936 _tickCounterToIncrement::
   08E8                     937 	.ds 30
   0906                     938 _addTickCounter_pointerToIncrement_1_1:
   0906                     939 	.ds 3
                            940 ;--------------------------------------------------------
                            941 ; absolute external ram data
                            942 ;--------------------------------------------------------
                            943 	.area XABS    (ABS,XDATA)
                            944 ;--------------------------------------------------------
                            945 ; external initialized ram data
                            946 ;--------------------------------------------------------
                            947 	.area XISEG   (XDATA)
   0000                     948 _countdown:
   0000                     949 	.ds 2
                            950 	.area HOME    (CODE)
                            951 	.area GSINIT0 (CODE)
                            952 	.area GSINIT1 (CODE)
                            953 	.area GSINIT2 (CODE)
                            954 	.area GSINIT3 (CODE)
                            955 	.area GSINIT4 (CODE)
                            956 	.area GSINIT5 (CODE)
                            957 	.area GSINIT  (CODE)
                            958 	.area GSFINAL (CODE)
                            959 	.area CSEG    (CODE)
                            960 ;--------------------------------------------------------
                            961 ; interrupt vector 
                            962 ;--------------------------------------------------------
                            963 	.area HOME    (CODE)
   0000                     964 __interrupt_vect:
   0000 02s00r00            965 	ljmp	__sdcc_gsinit_startup
   0003 32                  966 	reti
   0004                     967 	.ds	7
   000B 32                  968 	reti
   000C                     969 	.ds	7
   0013 32                  970 	reti
   0014                     971 	.ds	7
   001B 32                  972 	reti
   001C                     973 	.ds	7
   0023 32                  974 	reti
   0024                     975 	.ds	7
   002B 02s0Ar8B            976 	ljmp	_vTimer2ISR
                            977 ;--------------------------------------------------------
                            978 ; global & static initialisations
                            979 ;--------------------------------------------------------
                            980 	.area HOME    (CODE)
                            981 	.area GSINIT  (CODE)
                            982 	.area GSFINAL (CODE)
                            983 	.area GSINIT  (CODE)
                            984 	.globl __sdcc_gsinit_startup
                            985 	.globl __sdcc_program_startup
                            986 	.globl __start__stack
                            987 	.globl __mcs51_genXINIT
                            988 	.globl __mcs51_genXRAMCLEAR
                            989 	.globl __mcs51_genRAMCLEAR
                            990 ;------------------------------------------------------------
                            991 ;Allocation info for local variables in function 'main'
                            992 ;------------------------------------------------------------
                            993 ;bomb                      Allocated with name '_main_bomb_1_1'
                            994 ;calculator                Allocated with name '_main_calculator_1_1'
                            995 ;iterationMax              Allocated with name '_main_iterationMax_1_1'
                            996 ;------------------------------------------------------------
                            997 ;	../src/main_C8051F040.c:32: static int iterationMax = 10 ;
   0000 90s00r00            998 	mov	dptr,#_main_iterationMax_1_1
   0003 74 0A               999 	mov	a,#0x0A
   0005 F0                 1000 	movx	@dptr,a
   0006 E4                 1001 	clr	a
   0007 A3                 1002 	inc	dptr
   0008 F0                 1003 	movx	@dptr,a
                           1004 ;	../src/main_C8051F040.c:64: static bool processed = false ;
   0009 C2*01              1005 	clr	_main_processed_2_4
                           1006 ;------------------------------------------------------------
                           1007 ;Allocation info for local variables in function 'task_UART_init_projectSpecific'
                           1008 ;------------------------------------------------------------
                           1009 ;channelNumber             Allocated with name '_task_UART_init_projectSpecific_channelNumber_1_1'
                           1010 ;Q                         Allocated with name '_task_UART_init_projectSpecific_Q_1_1'
                           1011 ;SFRPAGE_SAVE              Allocated with name '_task_UART_init_projectSpecific_SFRPAGE_SAVE_3_3'
                           1012 ;------------------------------------------------------------
                           1013 ;	../src/projectSpecificHardwareInterface_C8051F040.c:323: static bool	timer1initialized = false ;
   000B C2*03              1014 	clr	_task_UART_init_projectSpecific_timer1initialized_1_1
                           1015 	.area GSFINAL (CODE)
   0000 02s00r2E           1016 	ljmp	__sdcc_program_startup
                           1017 ;--------------------------------------------------------
                           1018 ; Home
                           1019 ;--------------------------------------------------------
                           1020 	.area HOME    (CODE)
                           1021 	.area HOME    (CODE)
   002E                    1022 __sdcc_program_startup:
   002E 12s00r00           1023 	lcall	_main
                           1024 ;	return from main will lock up
   0031 80 FE              1025 	sjmp .
                           1026 ;--------------------------------------------------------
                           1027 ; code
                           1028 ;--------------------------------------------------------
                           1029 	.area CSEG    (CODE)
                           1030 ;------------------------------------------------------------
                           1031 ;Allocation info for local variables in function 'main'
                           1032 ;------------------------------------------------------------
                           1033 ;bomb                      Allocated with name '_main_bomb_1_1'
                           1034 ;calculator                Allocated with name '_main_calculator_1_1'
                           1035 ;iterationMax              Allocated with name '_main_iterationMax_1_1'
                           1036 ;------------------------------------------------------------
                           1037 ;	../src/main_C8051F040.c:27: void main(	void)
                           1038 ;	-----------------------------------------
                           1039 ;	 function main
                           1040 ;	-----------------------------------------
   0000                    1041 _main:
                    0002   1042 	ar2 = 0x02
                    0003   1043 	ar3 = 0x03
                    0004   1044 	ar4 = 0x04
                    0005   1045 	ar5 = 0x05
                    0006   1046 	ar6 = 0x06
                    0007   1047 	ar7 = 0x07
                    0000   1048 	ar0 = 0x00
                    0001   1049 	ar1 = 0x01
                           1050 ;	../src/main_C8051F040.c:34: WDTCN = 0xDE ;	// Disable the watchdog timer
   0000 75 FF DE           1051 	mov	_WDTCN,#0xDE
                           1052 ;	../src/main_C8051F040.c:35: WDTCN = 0xAD ;
   0003 75 FF AD           1053 	mov	_WDTCN,#0xAD
                           1054 ;	../src/main_C8051F040.c:36: WDTCN = 0xFF ;	// Disable any future ability to modify the watchdog timer
   0006 75 FF FF           1055 	mov	_WDTCN,#0xFF
                           1056 ;	../src/main_C8051F040.c:38: prvSetupSystemClock() ;
   0009 12s09rCF           1057 	lcall	_prvSetupSystemClock
                           1058 ;	../src/main_C8051F040.c:39: gpio_init() ;
   000C 12s00rD1           1059 	lcall	_gpio_init_projectSpecific
                           1060 ;	../src/main_C8051F040.c:40: pwm_init(ioMapping_PWM_TO_TICK_SYNCHRONIZER_CHANNEL) ;
   000F 75 82 00           1061 	mov	dpl,#0x00
   0012 12s00r00           1062 	lcall	_pwm_init
                           1063 ;	../src/main_C8051F040.c:41: prvSetupTimerInterrupt() ;
   0015 12s09rEE           1064 	lcall	_prvSetupTimerInterrupt
                           1065 ;	../src/main_C8051F040.c:42: task_UART_init(0) ;
   0018 75 82 00           1066 	mov	dpl,#0x00
   001B 12s00r00           1067 	lcall	_task_UART_init
                           1068 ;	../src/main_C8051F040.c:44: portENABLE_INTERRUPTS() ;
   001E D2 AF              1069 	setb	_EA
                           1070 ;	../src/main_C8051F040.c:46: puts("4th Generation state machine test started.") ;
   0020 90s00r00           1071 	mov	dptr,#__str_0
   0023 75 F0 80           1072 	mov	b,#0x80
   0026 12s00r00           1073 	lcall	_puts
                           1074 ;	../src/main_C8051F040.c:48: bomb = STATE_MACHINE_CREATE_INSTANCE_OF(timeBomb) ;
   0029 12s00r00           1075 	lcall	_timeBomb_getMachineSize
   002C AA 82              1076 	mov	r2,dpl
   002E AB 83              1077 	mov	r3,dph
   0030 C0 02              1078 	push	ar2
   0032 C0 03              1079 	push	ar3
   0034 12s00r00           1080 	lcall	_timeBomb_getEventQueueDepth
   0037 AC 82              1081 	mov	r4,dpl
   0039 AD 83              1082 	mov	r5,dph
   003B D0 03              1083 	pop	ar3
   003D D0 02              1084 	pop	ar2
   003F 90s00r00           1085 	mov	dptr,#_allocateStateMachineMemory_PARM_2
   0042 EC                 1086 	mov	a,r4
   0043 F0                 1087 	movx	@dptr,a
   0044 A3                 1088 	inc	dptr
   0045 ED                 1089 	mov	a,r5
   0046 F0                 1090 	movx	@dptr,a
   0047 90s00r00           1091 	mov	dptr,#_allocateStateMachineMemory_PARM_3
   004A 74r00              1092 	mov	a,#_timeBomb_constructor
   004C F0                 1093 	movx	@dptr,a
   004D A3                 1094 	inc	dptr
   004E 74s00              1095 	mov	a,#(_timeBomb_constructor >> 8)
   0050 F0                 1096 	movx	@dptr,a
   0051 8A 82              1097 	mov	dpl,r2
   0053 8B 83              1098 	mov	dph,r3
   0055 12s00r00           1099 	lcall	_allocateStateMachineMemory
                           1100 ;	../src/main_C8051F040.c:55: calculator = STATE_MACHINE_CREATE_INSTANCE_OF(calculator) ;
   0058 12s00r00           1101 	lcall	_calculator_getMachineSize
   005B AA 82              1102 	mov	r2,dpl
   005D AB 83              1103 	mov	r3,dph
   005F C0 02              1104 	push	ar2
   0061 C0 03              1105 	push	ar3
   0063 12s00r00           1106 	lcall	_calculator_getEventQueueDepth
   0066 AC 82              1107 	mov	r4,dpl
   0068 AD 83              1108 	mov	r5,dph
   006A D0 03              1109 	pop	ar3
   006C D0 02              1110 	pop	ar2
   006E 90s00r00           1111 	mov	dptr,#_allocateStateMachineMemory_PARM_2
   0071 EC                 1112 	mov	a,r4
   0072 F0                 1113 	movx	@dptr,a
   0073 A3                 1114 	inc	dptr
   0074 ED                 1115 	mov	a,r5
   0075 F0                 1116 	movx	@dptr,a
   0076 90s00r00           1117 	mov	dptr,#_allocateStateMachineMemory_PARM_3
   0079 74r00              1118 	mov	a,#_calculator_constructor
   007B F0                 1119 	movx	@dptr,a
   007C A3                 1120 	inc	dptr
   007D 74s00              1121 	mov	a,#(_calculator_constructor >> 8)
   007F F0                 1122 	movx	@dptr,a
   0080 8A 82              1123 	mov	dpl,r2
   0082 8B 83              1124 	mov	dph,r3
   0084 12s00r00           1125 	lcall	_allocateStateMachineMemory
   0087 AA 82              1126 	mov	r2,dpl
   0089 AB 83              1127 	mov	r3,dph
   008B AC F0              1128 	mov	r4,b
                           1129 ;	../src/main_C8051F040.c:57: if(calculator)
   008D EA                 1130 	mov	a,r2
   008E 4B                 1131 	orl	a,r3
   008F 4C                 1132 	orl	a,r4
   0090 60 09              1133 	jz	00110$
                           1134 ;	../src/main_C8051F040.c:59: REGISTER_STATE_MACHINE(calculator) ;
   0092 8A 82              1135 	mov	dpl,r2
   0094 8B 83              1136 	mov	dph,r3
   0096 8C F0              1137 	mov	b,r4
   0098 12s00r00           1138 	lcall	_registerStateMachine
                           1139 ;	../src/main_C8051F040.c:62: while(true)
   009B                    1140 00110$:
                           1141 ;	../src/main_C8051F040.c:66: if(timeForTickProcessing)
                           1142 ;	../src/main_C8051F040.c:68: timeForTickProcessing = false ;
   009B 10*00 02           1143 	jbc	_timeForTickProcessing,00120$
   009E 80 FB              1144 	sjmp	00110$
   00A0                    1145 00120$:
                           1146 ;	../src/main_C8051F040.c:72: if(!processed)
   00A0 20*01 F8           1147 	jb	_main_processed_2_4,00110$
                           1148 ;	../src/main_C8051F040.c:76: if(iterationMax-- == 0)
   00A3 90s00r00           1149 	mov	dptr,#_main_iterationMax_1_1
   00A6 E0                 1150 	movx	a,@dptr
   00A7 FA                 1151 	mov	r2,a
   00A8 A3                 1152 	inc	dptr
   00A9 E0                 1153 	movx	a,@dptr
   00AA FB                 1154 	mov	r3,a
   00AB EA                 1155 	mov	a,r2
   00AC 24 FF              1156 	add	a,#0xff
   00AE FC                 1157 	mov	r4,a
   00AF EB                 1158 	mov	a,r3
   00B0 34 FF              1159 	addc	a,#0xff
   00B2 FD                 1160 	mov	r5,a
   00B3 90s00r00           1161 	mov	dptr,#_main_iterationMax_1_1
   00B6 EC                 1162 	mov	a,r4
   00B7 F0                 1163 	movx	@dptr,a
   00B8 A3                 1164 	inc	dptr
   00B9 ED                 1165 	mov	a,r5
   00BA F0                 1166 	movx	@dptr,a
   00BB EA                 1167 	mov	a,r2
   00BC 4B                 1168 	orl	a,r3
   00BD 60 0E              1169 	jz	00112$
                           1170 ;	../src/main_C8051F040.c:81: puts("loop") ;
   00BF 90s00r2B           1171 	mov	dptr,#__str_1
   00C2 75 F0 80           1172 	mov	b,#0x80
   00C5 12s00r00           1173 	lcall	_puts
                           1174 ;	../src/main_C8051F040.c:83: ITERATE_ALL_STATE_MACHINES() ;
   00C8 12s00r00           1175 	lcall	_iterateAllStateMachines
   00CB 80 CE              1176 	sjmp	00110$
   00CD                    1177 00112$:
   00CD 22                 1178 	ret
                           1179 ;------------------------------------------------------------
                           1180 ;Allocation info for local variables in function 'taskSwitcherTickHook'
                           1181 ;------------------------------------------------------------
                           1182 ;------------------------------------------------------------
                           1183 ;	../src/main_C8051F040.c:90: void taskSwitcherTickHook(	void)
                           1184 ;	-----------------------------------------
                           1185 ;	 function taskSwitcherTickHook
                           1186 ;	-----------------------------------------
   00CE                    1187 _taskSwitcherTickHook:
                           1188 ;	../src/main_C8051F040.c:92: timeForTickProcessing = true ;
   00CE D2*00              1189 	setb	_timeForTickProcessing
   00D0 22                 1190 	ret
                           1191 ;------------------------------------------------------------
                           1192 ;Allocation info for local variables in function 'gpio_init_projectSpecific'
                           1193 ;------------------------------------------------------------
                           1194 ;SFRPAGE_SAVE              Allocated with name '_gpio_init_projectSpecific_SFRPAGE_SAVE_1_1'
                           1195 ;------------------------------------------------------------
                           1196 ;	../src/projectSpecificHardwareInterface_C8051F040.c:17: void gpio_init_projectSpecific(	void)
                           1197 ;	-----------------------------------------
                           1198 ;	 function gpio_init_projectSpecific
                           1199 ;	-----------------------------------------
   00D1                    1200 _gpio_init_projectSpecific:
                           1201 ;	../src/projectSpecificHardwareInterface_C8051F040.c:21: SFRPAGE_SAVE = SFRPAGE ;
   00D1 AA 84              1202 	mov	r2,_SFRPAGE
                           1203 ;	../src/projectSpecificHardwareInterface_C8051F040.c:23: SFRPAGE	 = SPI0_PAGE ;
   00D3 75 84 00           1204 	mov	_SFRPAGE,#0x00
                           1205 ;	../src/projectSpecificHardwareInterface_C8051F040.c:24: SPI0CN	 = 0x00 ;	// Set the SPI module into 3 pin mode so NSS doesn't get assigned to a pin in the crossbar setup below
   00D6 75 F8 00           1206 	mov	_SPI0CN,#0x00
                           1207 ;	../src/projectSpecificHardwareInterface_C8051F040.c:26: SFRPAGE	 = CONFIG_PAGE ;
   00D9 75 84 0F           1208 	mov	_SFRPAGE,#0x0F
                           1209 ;	../src/projectSpecificHardwareInterface_C8051F040.c:27: XBR0	 = 0x00 ;	// Start with a clean slate
   00DC 75 E1 00           1210 	mov	_XBR0,#0x00
                           1211 ;	../src/projectSpecificHardwareInterface_C8051F040.c:28: XBR1	 = 0x00 ;
   00DF 75 E2 00           1212 	mov	_XBR1,#0x00
                           1213 ;	../src/projectSpecificHardwareInterface_C8051F040.c:29: XBR2	 = 0x00 ;
   00E2 75 E3 00           1214 	mov	_XBR2,#0x00
                           1215 ;	../src/projectSpecificHardwareInterface_C8051F040.c:30: XBR3	 = 0x00 ;
   00E5 75 E4 00           1216 	mov	_XBR3,#0x00
                           1217 ;	../src/projectSpecificHardwareInterface_C8051F040.c:32: XBR0	|= 0x04 ;	// Route UART0 to P0.0-P0.1
   00E8 43 E1 04           1218 	orl	_XBR0,#0x04
                           1219 ;	../src/projectSpecificHardwareInterface_C8051F040.c:33: XBR0	|= 0x02 ;	// Route SPI0 to P0.2-P0.4
   00EB 43 E1 02           1220 	orl	_XBR0,#0x02
                           1221 ;	../src/projectSpecificHardwareInterface_C8051F040.c:34: XBR0	|= 0x01 ;	// Route SMB0 to P0.5-P0.6
   00EE 43 E1 01           1222 	orl	_XBR0,#0x01
                           1223 ;	../src/projectSpecificHardwareInterface_C8051F040.c:35: XBR2	|= 0x04 ;	// Route UART1 to P0.7-P1.0
   00F1 43 E3 04           1224 	orl	_XBR2,#0x04
                           1225 ;	../src/projectSpecificHardwareInterface_C8051F040.c:36: XBR0	|= 0x30 ;	// Route CEXn to P1.1-P1.6
   00F4 43 E1 30           1226 	orl	_XBR0,#0x30
                           1227 ;	../src/projectSpecificHardwareInterface_C8051F040.c:37: XBR0	|= 0x80 ;	// Route CP0 to P1.7
   00F7 43 E1 80           1228 	orl	_XBR0,#0x80
                           1229 ;	../src/projectSpecificHardwareInterface_C8051F040.c:38: XBR3	|= 0x08 ;	// Route CP2 to P2.0
   00FA 43 E4 08           1230 	orl	_XBR3,#0x08
                           1231 ;	../src/projectSpecificHardwareInterface_C8051F040.c:39: XBR1	|= 0x04 ;	// Route INT0# to P2.1
   00FD 43 E2 04           1232 	orl	_XBR1,#0x04
                           1233 ;	../src/projectSpecificHardwareInterface_C8051F040.c:40: XBR1	|= 0x20 ;	// Route T2 from P2.2
   0100 43 E2 20           1234 	orl	_XBR1,#0x20
                           1235 ;	../src/projectSpecificHardwareInterface_C8051F040.c:41: XBR3	|= 0x01 ;	// Route T3 to P2.3
   0103 43 E4 01           1236 	orl	_XBR3,#0x01
                           1237 ;	../src/projectSpecificHardwareInterface_C8051F040.c:43: P0MDOUT |= 0x01 ;	// Set TX0 (P0.0) to push-pull
   0106 43 A4 01           1238 	orl	_P0MDOUT,#0x01
                           1239 ;	../src/projectSpecificHardwareInterface_C8051F040.c:45: P1MDOUT	|= 0x02 ;	// Set CEX0 (P1.1) to push-pull
   0109 43 A5 02           1240 	orl	_P1MDOUT,#0x02
                           1241 ;	../src/projectSpecificHardwareInterface_C8051F040.c:46: P1MDOUT	|= 0x04 ;	// Set CEX1 (P1.2) to push-pull
   010C 43 A5 04           1242 	orl	_P1MDOUT,#0x04
                           1243 ;	../src/projectSpecificHardwareInterface_C8051F040.c:47: P1MDOUT	|= 0x08 ;	// Set CEX2 (P1.3) to push-pull
   010F 43 A5 08           1244 	orl	_P1MDOUT,#0x08
                           1245 ;	../src/projectSpecificHardwareInterface_C8051F040.c:48: P1MDOUT	|= 0x10 ;	// Set CEX3 (P1.4) to push-pull
   0112 43 A5 10           1246 	orl	_P1MDOUT,#0x10
                           1247 ;	../src/projectSpecificHardwareInterface_C8051F040.c:49: P1MDOUT	|= 0x20 ;	// Set CEX4 (P1.5) to push-pull
   0115 43 A5 20           1248 	orl	_P1MDOUT,#0x20
                           1249 ;	../src/projectSpecificHardwareInterface_C8051F040.c:50: P1MDOUT |= 0x40 ;	// Set CEX5 (P1.6) to push-pull
   0118 43 A5 40           1250 	orl	_P1MDOUT,#0x40
                           1251 ;	../src/projectSpecificHardwareInterface_C8051F040.c:52: P1MDOUT |= 0x80 ;	// Set TX1 (P1.7) to push-pull
   011B 43 A5 80           1252 	orl	_P1MDOUT,#0x80
                           1253 ;	../src/projectSpecificHardwareInterface_C8051F040.c:53: P2MDOUT	&= ~0x02 ;	// Set INT0# (P2.1) to be a digital input
                           1254 ;	../src/projectSpecificHardwareInterface_C8051F040.c:54: P2MDOUT	&= ~0x04 ;	// Set T2 (P2.2) to be a digital input
   011E 53 A6 F9           1255 	anl	_P2MDOUT,#(0xFD&0xFB)
                           1256 ;	../src/projectSpecificHardwareInterface_C8051F040.c:55: P2MDOUT	|= 0x08 ;	// Set P2.3 to be the Timer3 output pin
   0121 43 A6 08           1257 	orl	_P2MDOUT,#0x08
                           1258 ;	../src/projectSpecificHardwareInterface_C8051F040.c:57: P3MDIN	 = 0x00 ;	// Configure as analog inputs. This forces the weak pullup for these pins to be disconnected
   0124 75 AF 00           1259 	mov	_P3MDIN,#0x00
                           1260 ;	../src/projectSpecificHardwareInterface_C8051F040.c:58: P3MDOUT	 = 0x00 ;	// Force the output driver for these pins to open drain output mode
   0127 75 A7 00           1261 	mov	_P3MDOUT,#0x00
                           1262 ;	../src/projectSpecificHardwareInterface_C8051F040.c:59: P3		 = 0xFF ;	// Force the input driver for these pins to high impedance
   012A 75 B0 FF           1263 	mov	_P3,#0xFF
                           1264 ;	../src/projectSpecificHardwareInterface_C8051F040.c:61: XBR3	|= 0x80 ;	// Configure CAN TX pin (CTX) as push-pull digital output
   012D 43 E4 80           1265 	orl	_XBR3,#0x80
                           1266 ;	../src/projectSpecificHardwareInterface_C8051F040.c:63: P4MDOUT	|= 0xFF ;	// Set LCD drive pins to push-pull
   0130 E5 9C              1267 	mov	a,_P4MDOUT
   0132 75 9C FF           1268 	mov	_P4MDOUT,#0xFF
                           1269 ;	../src/projectSpecificHardwareInterface_C8051F040.c:64: P5MDOUT	|= 0xFF ;	// Set state machine debug pins to push-pull
   0135 E5 9D              1270 	mov	a,_P5MDOUT
   0137 75 9D FF           1271 	mov	_P5MDOUT,#0xFF
                           1272 ;	../src/projectSpecificHardwareInterface_C8051F040.c:65: P6MDOUT	|= 0xFF ;	// Set general purpose debug pins to push-pull
   013A E5 9E              1273 	mov	a,_P6MDOUT
   013C 75 9E FF           1274 	mov	_P6MDOUT,#0xFF
                           1275 ;	../src/projectSpecificHardwareInterface_C8051F040.c:67: P4		 = 0x00 ;	// Set all debugging pins to low
   013F 75 C8 00           1276 	mov	_P4,#0x00
                           1277 ;	../src/projectSpecificHardwareInterface_C8051F040.c:68: P5		 = 0x00 ;
   0142 75 D8 00           1278 	mov	_P5,#0x00
                           1279 ;	../src/projectSpecificHardwareInterface_C8051F040.c:69: P6		 = 0x00 ;
   0145 75 E8 00           1280 	mov	_P6,#0x00
                           1281 ;	../src/projectSpecificHardwareInterface_C8051F040.c:71: P2MDIN	&= 0x0F ;	// set comparator analog inputs up as per Section 17.1.5 of the C8050F040 manual
   0148 53 AE 0F           1282 	anl	_P2MDIN,#0x0F
                           1283 ;	../src/projectSpecificHardwareInterface_C8051F040.c:72: P2MDOUT	&= 0x0F ;
   014B 53 A6 0F           1284 	anl	_P2MDOUT,#0x0F
                           1285 ;	../src/projectSpecificHardwareInterface_C8051F040.c:73: P2		|= 0xF0 ;
   014E 43 A0 F0           1286 	orl	_P2,#0xF0
                           1287 ;	../src/projectSpecificHardwareInterface_C8051F040.c:78: XBR2	|= 0x40 ;	// Enable Crossbar/low ports and turn on global weak pullups
   0151 43 E3 40           1288 	orl	_XBR2,#0x40
                           1289 ;	../src/projectSpecificHardwareInterface_C8051F040.c:79: SFRPAGE	 = SFRPAGE_SAVE ;
   0154 8A 84              1290 	mov	_SFRPAGE,r2
   0156 22                 1291 	ret
                           1292 ;------------------------------------------------------------
                           1293 ;Allocation info for local variables in function 'pwm_init_projectSpecific'
                           1294 ;------------------------------------------------------------
                           1295 ;channelNumber             Allocated with name '_pwm_init_projectSpecific_channelNumber_1_1'
                           1296 ;SFRPAGE_save              Allocated with name '_pwm_init_projectSpecific_SFRPAGE_save_1_1'
                           1297 ;------------------------------------------------------------
                           1298 ;	../src/projectSpecificHardwareInterface_C8051F040.c:83: void pwm_init_projectSpecific(								unsigned char channelNumber)
                           1299 ;	-----------------------------------------
                           1300 ;	 function pwm_init_projectSpecific
                           1301 ;	-----------------------------------------
   0157                    1302 _pwm_init_projectSpecific:
   0157 E5 82              1303 	mov	a,dpl
   0159 90s00r02           1304 	mov	dptr,#_pwm_init_projectSpecific_channelNumber_1_1
   015C F0                 1305 	movx	@dptr,a
                           1306 ;	../src/projectSpecificHardwareInterface_C8051F040.c:132: char		SFRPAGE_save = SFRPAGE ;	// Save current SFR Page
   015D AA 84              1307 	mov	r2,_SFRPAGE
                           1308 ;	../src/projectSpecificHardwareInterface_C8051F040.c:134: SFRPAGE = PCA0_PAGE ;
   015F 75 84 00           1309 	mov	_SFRPAGE,#0x00
                           1310 ;	../src/projectSpecificHardwareInterface_C8051F040.c:136: if(!initialized)
   0162 20*02 2A           1311 	jb	_pwm_init_projectSpecific_initialized_1_1,00102$
                           1312 ;	../src/projectSpecificHardwareInterface_C8051F040.c:138: PCA0CN = 0x00 ;				// Stop counter; clear all flags
   0165 75 D8 00           1313 	mov	_PCA0CN,#0x00
                           1314 ;	../src/projectSpecificHardwareInterface_C8051F040.c:139: PCA0MD = 0x08 ;				// Use SYSCLK as time base
   0168 75 D9 08           1315 	mov	_PCA0MD,#0x08
                           1316 ;	../src/projectSpecificHardwareInterface_C8051F040.c:141: PCA0CPM0 = 0x00 ;			// Module 0 = Off
   016B 75 DA 00           1317 	mov	_PCA0CPM0,#0x00
                           1318 ;	../src/projectSpecificHardwareInterface_C8051F040.c:142: PCA0CPH0 = 0x00 ;			// Configure initial PWM duty cycle = 100%. This will result in a continuously high output which, since it's active low, will disable any output.
   016E 75 FC 00           1319 	mov	_PCA0CPH0,#0x00
                           1320 ;	../src/projectSpecificHardwareInterface_C8051F040.c:144: PCA0CPM0 = 0x00 ;			// Module 1 = Off
   0171 75 DA 00           1321 	mov	_PCA0CPM0,#0x00
                           1322 ;	../src/projectSpecificHardwareInterface_C8051F040.c:145: PCA0CPH1 = 0x00 ;			// Configure initial PWM duty cycle = 100%. This will result in a continuously high output which, since it's active low, will disable any output.
   0174 75 FE 00           1323 	mov	_PCA0CPH1,#0x00
                           1324 ;	../src/projectSpecificHardwareInterface_C8051F040.c:147: PCA0CPM0 = 0x00 ;			// Module 2 = Off
   0177 75 DA 00           1325 	mov	_PCA0CPM0,#0x00
                           1326 ;	../src/projectSpecificHardwareInterface_C8051F040.c:148: PCA0CPH2 = 0x00 ;			// Configure initial PWM duty cycle = 100%. This will result in a continuously high output which, since it's active low, will disable any output.
   017A 75 EA 00           1327 	mov	_PCA0CPH2,#0x00
                           1328 ;	../src/projectSpecificHardwareInterface_C8051F040.c:150: PCA0CPM0 = 0x00 ;			// Module 3 = Off
   017D 75 DA 00           1329 	mov	_PCA0CPM0,#0x00
                           1330 ;	../src/projectSpecificHardwareInterface_C8051F040.c:151: PCA0CPH3 = 0x00 ;			// Configure initial PWM duty cycle = 100%. This will result in a continuously high output which, since it's active low, will disable any output.
   0180 75 EC 00           1331 	mov	_PCA0CPH3,#0x00
                           1332 ;	../src/projectSpecificHardwareInterface_C8051F040.c:153: PCA0CPM0 = 0x00 ;			// Module 4 = Off
   0183 75 DA 00           1333 	mov	_PCA0CPM0,#0x00
                           1334 ;	../src/projectSpecificHardwareInterface_C8051F040.c:154: PCA0CPH4 = 0x00 ;			// Configure initial PWM duty cycle = 100%. This will result in a continuously high output which, since it's active low, will disable any output.
   0186 75 EE 00           1335 	mov	_PCA0CPH4,#0x00
                           1336 ;	../src/projectSpecificHardwareInterface_C8051F040.c:156: PCA0CPM0 = 0x00 ;			// Module 5 = Off
   0189 75 DA 00           1337 	mov	_PCA0CPM0,#0x00
                           1338 ;	../src/projectSpecificHardwareInterface_C8051F040.c:157: PCA0CPH5 = 0x00 ;			// Configure initial PWM duty cycle = 100%. This will result in a continuously high output which, since it's active low, will disable any output.
   018C 75 E2 00           1339 	mov	_PCA0CPH5,#0x00
   018F                    1340 00102$:
                           1341 ;	../src/projectSpecificHardwareInterface_C8051F040.c:164: if(channelNumber == ioMapping_PWM_TO_TICK_SYNCHRONIZER_CHANNEL)
   018F 90s00r02           1342 	mov	dptr,#_pwm_init_projectSpecific_channelNumber_1_1
   0192 E0                 1343 	movx	a,@dptr
   0193 FB                 1344 	mov	r3,a
   0194 70 06              1345 	jnz	00104$
                           1346 ;	../src/projectSpecificHardwareInterface_C8051F040.c:170: PWM_B50_MODE		= 0x42 ;						// Module 1 = 8-bit PWM mode
   0196 75 DA 42           1347 	mov	_PCA0CPM0,#0x42
                           1348 ;	../src/projectSpecificHardwareInterface_C8051F040.c:171: PWM_B50_HIGH_BYTE	= FIFTY_PERCENT_DUTY_CYCLE ;	// Configure initial PWM duty cycle = 50%
   0199 75 FC 80           1349 	mov	_PCA0CPH0,#0x80
   019C                    1350 00104$:
                           1351 ;	../src/projectSpecificHardwareInterface_C8051F040.c:174: if(!initialized)
   019C 20*02 04           1352 	jb	_pwm_init_projectSpecific_initialized_1_1,00106$
                           1353 ;	../src/projectSpecificHardwareInterface_C8051F040.c:176: initialized = true ;
   019F D2*02              1354 	setb	_pwm_init_projectSpecific_initialized_1_1
                           1355 ;	../src/projectSpecificHardwareInterface_C8051F040.c:178: CR = 1 ;					// Start PCA counter
   01A1 D2 DE              1356 	setb	_CR
   01A3                    1357 00106$:
                           1358 ;	../src/projectSpecificHardwareInterface_C8051F040.c:181: SFRPAGE = SFRPAGE_save ;
   01A3 8A 84              1359 	mov	_SFRPAGE,r2
   01A5 22                 1360 	ret
                           1361 ;------------------------------------------------------------
                           1362 ;Allocation info for local variables in function 'pwm_incrementDutyCycle_projectSpecific'
                           1363 ;------------------------------------------------------------
                           1364 ;channelNumber             Allocated with name '_pwm_incrementDutyCycle_projectSpecific_channelNumber_1_1'
                           1365 ;------------------------------------------------------------
                           1366 ;	../src/projectSpecificHardwareInterface_C8051F040.c:185: void pwm_incrementDutyCycle_projectSpecific(				unsigned char channelNumber)
                           1367 ;	-----------------------------------------
                           1368 ;	 function pwm_incrementDutyCycle_projectSpecific
                           1369 ;	-----------------------------------------
   01A6                    1370 _pwm_incrementDutyCycle_projectSpecific:
                           1371 ;	../src/projectSpecificHardwareInterface_C8051F040.c:187: (void)channelNumber ;	// unused at this time
   01A6 22                 1372 	ret
                           1373 ;------------------------------------------------------------
                           1374 ;Allocation info for local variables in function 'pwm_decrementDutyCycle_projectSpecific'
                           1375 ;------------------------------------------------------------
                           1376 ;channelNumber             Allocated with name '_pwm_decrementDutyCycle_projectSpecific_channelNumber_1_1'
                           1377 ;------------------------------------------------------------
                           1378 ;	../src/projectSpecificHardwareInterface_C8051F040.c:191: void pwm_decrementDutyCycle_projectSpecific(				unsigned char channelNumber)
                           1379 ;	-----------------------------------------
                           1380 ;	 function pwm_decrementDutyCycle_projectSpecific
                           1381 ;	-----------------------------------------
   01A7                    1382 _pwm_decrementDutyCycle_projectSpecific:
                           1383 ;	../src/projectSpecificHardwareInterface_C8051F040.c:193: (void)channelNumber ;	// unused at this time
   01A7 22                 1384 	ret
                           1385 ;------------------------------------------------------------
                           1386 ;Allocation info for local variables in function 'pwm_getDutyCycle_projectSpecific'
                           1387 ;------------------------------------------------------------
                           1388 ;channelNumber             Allocated with name '_pwm_getDutyCycle_projectSpecific_channelNumber_1_1'
                           1389 ;------------------------------------------------------------
                           1390 ;	../src/projectSpecificHardwareInterface_C8051F040.c:197: uint8_t pwm_getDutyCycle_projectSpecific(					unsigned char channelNumber)
                           1391 ;	-----------------------------------------
                           1392 ;	 function pwm_getDutyCycle_projectSpecific
                           1393 ;	-----------------------------------------
   01A8                    1394 _pwm_getDutyCycle_projectSpecific:
                           1395 ;	../src/projectSpecificHardwareInterface_C8051F040.c:201: return 0 ;
   01A8 75 82 00           1396 	mov	dpl,#0x00
   01AB 22                 1397 	ret
                           1398 ;------------------------------------------------------------
                           1399 ;Allocation info for local variables in function 'pwm_setDutyCycle_projectSpecific'
                           1400 ;------------------------------------------------------------
                           1401 ;newDutyCycle              Allocated with name '_pwm_setDutyCycle_projectSpecific_PARM_2'
                           1402 ;channelNumber             Allocated with name '_pwm_setDutyCycle_projectSpecific_channelNumber_1_1'
                           1403 ;------------------------------------------------------------
                           1404 ;	../src/projectSpecificHardwareInterface_C8051F040.c:205: void pwm_setDutyCycle_projectSpecific(						unsigned char channelNumber, uint8_t newDutyCycle)
                           1405 ;	-----------------------------------------
                           1406 ;	 function pwm_setDutyCycle_projectSpecific
                           1407 ;	-----------------------------------------
   01AC                    1408 _pwm_setDutyCycle_projectSpecific:
                           1409 ;	../src/projectSpecificHardwareInterface_C8051F040.c:208: (void)newDutyCycle ;	// unused at this time
   01AC 22                 1410 	ret
                           1411 ;------------------------------------------------------------
                           1412 ;Allocation info for local variables in function 'pwm_adjustDutyCycle_projectSpecific'
                           1413 ;------------------------------------------------------------
                           1414 ;dutyCycleAdjustment       Allocated with name '_pwm_adjustDutyCycle_projectSpecific_PARM_2'
                           1415 ;channelNumber             Allocated with name '_pwm_adjustDutyCycle_projectSpecific_channelNumber_1_1'
                           1416 ;------------------------------------------------------------
                           1417 ;	../src/projectSpecificHardwareInterface_C8051F040.c:212: void pwm_adjustDutyCycle_projectSpecific(					unsigned char channelNumber, int8_t dutyCycleAdjustment)
                           1418 ;	-----------------------------------------
                           1419 ;	 function pwm_adjustDutyCycle_projectSpecific
                           1420 ;	-----------------------------------------
   01AD                    1421 _pwm_adjustDutyCycle_projectSpecific:
                           1422 ;	../src/projectSpecificHardwareInterface_C8051F040.c:215: (void)dutyCycleAdjustment ;	// unused at this time
   01AD 22                 1423 	ret
                           1424 ;------------------------------------------------------------
                           1425 ;Allocation info for local variables in function 'pwm_setDutyCycleAsPercentage_projectSpecific'
                           1426 ;------------------------------------------------------------
                           1427 ;newDutyCycle              Allocated with name '_pwm_setDutyCycleAsPercentage_projectSpecific_PARM_2'
                           1428 ;channelNumber             Allocated with name '_pwm_setDutyCycleAsPercentage_projectSpecific_channelNumber_1_1'
                           1429 ;------------------------------------------------------------
                           1430 ;	../src/projectSpecificHardwareInterface_C8051F040.c:219: void pwm_setDutyCycleAsPercentage_projectSpecific(			unsigned char channelNumber, unsigned char newDutyCycle)
                           1431 ;	-----------------------------------------
                           1432 ;	 function pwm_setDutyCycleAsPercentage_projectSpecific
                           1433 ;	-----------------------------------------
   01AE                    1434 _pwm_setDutyCycleAsPercentage_projectSpecific:
                           1435 ;	../src/projectSpecificHardwareInterface_C8051F040.c:222: (void)newDutyCycle ;		// unused at this time
   01AE 22                 1436 	ret
                           1437 ;------------------------------------------------------------
                           1438 ;Allocation info for local variables in function 'pwm_getDutyCycleAsPercentage_projectSpecific'
                           1439 ;------------------------------------------------------------
                           1440 ;channelNumber             Allocated with name '_pwm_getDutyCycleAsPercentage_projectSpecific_channelNumber_1_1'
                           1441 ;currentPercentage         Allocated with name '_pwm_getDutyCycleAsPercentage_projectSpecific_currentPercentage_1_1'
                           1442 ;divisor                   Allocated with name '_pwm_getDutyCycleAsPercentage_projectSpecific_divisor_1_1'
                           1443 ;------------------------------------------------------------
                           1444 ;	../src/projectSpecificHardwareInterface_C8051F040.c:226: unsigned char pwm_getDutyCycleAsPercentage_projectSpecific(	unsigned char channelNumber)
                           1445 ;	-----------------------------------------
                           1446 ;	 function pwm_getDutyCycleAsPercentage_projectSpecific
                           1447 ;	-----------------------------------------
   01AF                    1448 _pwm_getDutyCycleAsPercentage_projectSpecific:
                           1449 ;	../src/projectSpecificHardwareInterface_C8051F040.c:237: return (unsigned char)0 ;//min(currentPercentage, 100) ;
   01AF 75 82 00           1450 	mov	dpl,#0x00
   01B2 22                 1451 	ret
                           1452 ;------------------------------------------------------------
                           1453 ;Allocation info for local variables in function 'IsEmpty'
                           1454 ;------------------------------------------------------------
                           1455 ;Q                         Allocated with name '_IsEmpty_Q_1_1'
                           1456 ;------------------------------------------------------------
                           1457 ;	../src/projectSpecificHardwareInterface_C8051F040.c:273: unsigned char IsEmpty(QUEUE_TYPE* Q)
                           1458 ;	-----------------------------------------
                           1459 ;	 function IsEmpty
                           1460 ;	-----------------------------------------
   01B3                    1461 _IsEmpty:
   01B3 AA F0              1462 	mov	r2,b
   01B5 AB 83              1463 	mov	r3,dph
   01B7 E5 82              1464 	mov	a,dpl
   01B9 90s04r52           1465 	mov	dptr,#_IsEmpty_Q_1_1
   01BC F0                 1466 	movx	@dptr,a
   01BD A3                 1467 	inc	dptr
   01BE EB                 1468 	mov	a,r3
   01BF F0                 1469 	movx	@dptr,a
   01C0 A3                 1470 	inc	dptr
   01C1 EA                 1471 	mov	a,r2
   01C2 F0                 1472 	movx	@dptr,a
                           1473 ;	../src/projectSpecificHardwareInterface_C8051F040.c:275: return Q->Size == 0 ;
   01C3 90s04r52           1474 	mov	dptr,#_IsEmpty_Q_1_1
   01C6 E0                 1475 	movx	a,@dptr
   01C7 FA                 1476 	mov	r2,a
   01C8 A3                 1477 	inc	dptr
   01C9 E0                 1478 	movx	a,@dptr
   01CA FB                 1479 	mov	r3,a
   01CB A3                 1480 	inc	dptr
   01CC E0                 1481 	movx	a,@dptr
   01CD FC                 1482 	mov	r4,a
   01CE 74 06              1483 	mov	a,#0x06
   01D0 2A                 1484 	add	a,r2
   01D1 FA                 1485 	mov	r2,a
   01D2 E4                 1486 	clr	a
   01D3 3B                 1487 	addc	a,r3
   01D4 FB                 1488 	mov	r3,a
   01D5 8A 82              1489 	mov	dpl,r2
   01D7 8B 83              1490 	mov	dph,r3
   01D9 8C F0              1491 	mov	b,r4
   01DB 12s00r00           1492 	lcall	__gptrget
   01DE FA                 1493 	mov	r2,a
   01DF A3                 1494 	inc	dptr
   01E0 12s00r00           1495 	lcall	__gptrget
   01E3 FB                 1496 	mov	r3,a
   01E4 E4                 1497 	clr	a
   01E5 BA 00 04           1498 	cjne	r2,#0x00,00103$
   01E8 BB 00 01           1499 	cjne	r3,#0x00,00103$
   01EB 04                 1500 	inc	a
   01EC                    1501 00103$:
   01EC F5 82              1502 	mov	dpl,a
   01EE 22                 1503 	ret
                           1504 ;------------------------------------------------------------
                           1505 ;Allocation info for local variables in function 'IsFull'
                           1506 ;------------------------------------------------------------
                           1507 ;Q                         Allocated with name '_IsFull_Q_1_1'
                           1508 ;------------------------------------------------------------
                           1509 ;	../src/projectSpecificHardwareInterface_C8051F040.c:278: unsigned char IsFull(QUEUE_TYPE* Q)
                           1510 ;	-----------------------------------------
                           1511 ;	 function IsFull
                           1512 ;	-----------------------------------------
   01EF                    1513 _IsFull:
   01EF AA F0              1514 	mov	r2,b
   01F1 AB 83              1515 	mov	r3,dph
   01F3 E5 82              1516 	mov	a,dpl
   01F5 90s04r55           1517 	mov	dptr,#_IsFull_Q_1_1
   01F8 F0                 1518 	movx	@dptr,a
   01F9 A3                 1519 	inc	dptr
   01FA EB                 1520 	mov	a,r3
   01FB F0                 1521 	movx	@dptr,a
   01FC A3                 1522 	inc	dptr
   01FD EA                 1523 	mov	a,r2
   01FE F0                 1524 	movx	@dptr,a
                           1525 ;	../src/projectSpecificHardwareInterface_C8051F040.c:280: return Q->Size == Q->Capacity ;
   01FF 90s04r55           1526 	mov	dptr,#_IsFull_Q_1_1
   0202 E0                 1527 	movx	a,@dptr
   0203 FA                 1528 	mov	r2,a
   0204 A3                 1529 	inc	dptr
   0205 E0                 1530 	movx	a,@dptr
   0206 FB                 1531 	mov	r3,a
   0207 A3                 1532 	inc	dptr
   0208 E0                 1533 	movx	a,@dptr
   0209 FC                 1534 	mov	r4,a
   020A 74 06              1535 	mov	a,#0x06
   020C 2A                 1536 	add	a,r2
   020D FD                 1537 	mov	r5,a
   020E E4                 1538 	clr	a
   020F 3B                 1539 	addc	a,r3
   0210 FE                 1540 	mov	r6,a
   0211 8C 07              1541 	mov	ar7,r4
   0213 8D 82              1542 	mov	dpl,r5
   0215 8E 83              1543 	mov	dph,r6
   0217 8F F0              1544 	mov	b,r7
   0219 12s00r00           1545 	lcall	__gptrget
   021C FD                 1546 	mov	r5,a
   021D A3                 1547 	inc	dptr
   021E 12s00r00           1548 	lcall	__gptrget
   0221 FE                 1549 	mov	r6,a
   0222 8A 82              1550 	mov	dpl,r2
   0224 8B 83              1551 	mov	dph,r3
   0226 8C F0              1552 	mov	b,r4
   0228 12s00r00           1553 	lcall	__gptrget
   022B FA                 1554 	mov	r2,a
   022C A3                 1555 	inc	dptr
   022D 12s00r00           1556 	lcall	__gptrget
   0230 FB                 1557 	mov	r3,a
   0231 ED                 1558 	mov	a,r5
   0232 B5 02 08           1559 	cjne	a,ar2,00103$
   0235 EE                 1560 	mov	a,r6
   0236 B5 03 04           1561 	cjne	a,ar3,00103$
   0239 74 01              1562 	mov	a,#0x01
   023B 80 01              1563 	sjmp	00104$
   023D                    1564 00103$:
   023D E4                 1565 	clr	a
   023E                    1566 00104$:
   023E F5 82              1567 	mov	dpl,a
   0240 22                 1568 	ret
                           1569 ;------------------------------------------------------------
                           1570 ;Allocation info for local variables in function 'Succ'
                           1571 ;------------------------------------------------------------
                           1572 ;Q                         Allocated with name '_Succ_PARM_2'
                           1573 ;Value                     Allocated with name '_Succ_Value_1_1'
                           1574 ;------------------------------------------------------------
                           1575 ;	../src/projectSpecificHardwareInterface_C8051F040.c:283: static unsigned short Succ(unsigned short Value, QUEUE_TYPE* Q)
                           1576 ;	-----------------------------------------
                           1577 ;	 function Succ
                           1578 ;	-----------------------------------------
   0241                    1579 _Succ:
   0241 AA 83              1580 	mov	r2,dph
   0243 E5 82              1581 	mov	a,dpl
   0245 90s04r5B           1582 	mov	dptr,#_Succ_Value_1_1
   0248 F0                 1583 	movx	@dptr,a
   0249 A3                 1584 	inc	dptr
   024A EA                 1585 	mov	a,r2
   024B F0                 1586 	movx	@dptr,a
                           1587 ;	../src/projectSpecificHardwareInterface_C8051F040.c:285: if(++Value == Q->Capacity)
   024C 90s04r5B           1588 	mov	dptr,#_Succ_Value_1_1
   024F E0                 1589 	movx	a,@dptr
   0250 24 01              1590 	add	a,#0x01
   0252 F0                 1591 	movx	@dptr,a
   0253 A3                 1592 	inc	dptr
   0254 E0                 1593 	movx	a,@dptr
   0255 34 00              1594 	addc	a,#0x00
   0257 F0                 1595 	movx	@dptr,a
   0258 90s04r58           1596 	mov	dptr,#_Succ_PARM_2
   025B E0                 1597 	movx	a,@dptr
   025C FA                 1598 	mov	r2,a
   025D A3                 1599 	inc	dptr
   025E E0                 1600 	movx	a,@dptr
   025F FB                 1601 	mov	r3,a
   0260 A3                 1602 	inc	dptr
   0261 E0                 1603 	movx	a,@dptr
   0262 FC                 1604 	mov	r4,a
   0263 8A 82              1605 	mov	dpl,r2
   0265 8B 83              1606 	mov	dph,r3
   0267 8C F0              1607 	mov	b,r4
   0269 12s00r00           1608 	lcall	__gptrget
   026C FA                 1609 	mov	r2,a
   026D A3                 1610 	inc	dptr
   026E 12s00r00           1611 	lcall	__gptrget
   0271 FB                 1612 	mov	r3,a
   0272 90s04r5B           1613 	mov	dptr,#_Succ_Value_1_1
   0275 E0                 1614 	movx	a,@dptr
   0276 FC                 1615 	mov	r4,a
   0277 A3                 1616 	inc	dptr
   0278 E0                 1617 	movx	a,@dptr
   0279 FD                 1618 	mov	r5,a
   027A EC                 1619 	mov	a,r4
   027B B5 02 0B           1620 	cjne	a,ar2,00102$
   027E ED                 1621 	mov	a,r5
   027F B5 03 07           1622 	cjne	a,ar3,00102$
                           1623 ;	../src/projectSpecificHardwareInterface_C8051F040.c:287: Value = 0 ;
   0282 90s04r5B           1624 	mov	dptr,#_Succ_Value_1_1
   0285 E4                 1625 	clr	a
   0286 F0                 1626 	movx	@dptr,a
   0287 A3                 1627 	inc	dptr
   0288 F0                 1628 	movx	@dptr,a
   0289                    1629 00102$:
                           1630 ;	../src/projectSpecificHardwareInterface_C8051F040.c:290: return Value ;
   0289 90s04r5B           1631 	mov	dptr,#_Succ_Value_1_1
   028C E0                 1632 	movx	a,@dptr
   028D FA                 1633 	mov	r2,a
   028E A3                 1634 	inc	dptr
   028F E0                 1635 	movx	a,@dptr
   0290 8A 82              1636 	mov	dpl,r2
   0292 F5 83              1637 	mov	dph,a
   0294 22                 1638 	ret
                           1639 ;------------------------------------------------------------
                           1640 ;Allocation info for local variables in function 'task_UART_init_projectSpecific'
                           1641 ;------------------------------------------------------------
                           1642 ;channelNumber             Allocated with name '_task_UART_init_projectSpecific_channelNumber_1_1'
                           1643 ;Q                         Allocated with name '_task_UART_init_projectSpecific_Q_1_1'
                           1644 ;SFRPAGE_SAVE              Allocated with name '_task_UART_init_projectSpecific_SFRPAGE_SAVE_3_3'
                           1645 ;------------------------------------------------------------
                           1646 ;	../src/projectSpecificHardwareInterface_C8051F040.c:321: void task_UART_init_projectSpecific(	unsigned char channelNumber)
                           1647 ;	-----------------------------------------
                           1648 ;	 function task_UART_init_projectSpecific
                           1649 ;	-----------------------------------------
   0295                    1650 _task_UART_init_projectSpecific:
   0295 E5 82              1651 	mov	a,dpl
   0297 90s08rCD           1652 	mov	dptr,#_task_UART_init_projectSpecific_channelNumber_1_1
   029A F0                 1653 	movx	@dptr,a
                           1654 ;	../src/projectSpecificHardwareInterface_C8051F040.c:325: QUEUE_TYPE*	Q = &transmitBuffers[channelNumber] ;
   029B 90s08rCD           1655 	mov	dptr,#_task_UART_init_projectSpecific_channelNumber_1_1
   029E E0                 1656 	movx	a,@dptr
   029F FA                 1657 	mov	r2,a
   02A0 75 F0 0B           1658 	mov	b,#0x0B
   02A3 A4                 1659 	mul	ab
   02A4 FB                 1660 	mov	r3,a
   02A5 24rB5              1661 	add	a,#_transmitBuffers
   02A7 FC                 1662 	mov	r4,a
   02A8 E4                 1663 	clr	a
   02A9 34s08              1664 	addc	a,#(_transmitBuffers >> 8)
   02AB FD                 1665 	mov	r5,a
   02AC 7E 00              1666 	mov	r6,#0x00
                           1667 ;	../src/projectSpecificHardwareInterface_C8051F040.c:327: Q->Capacity	= TRANSMIT_BUFFER_SIZE ;
   02AE 8C 82              1668 	mov	dpl,r4
   02B0 8D 83              1669 	mov	dph,r5
   02B2 8E F0              1670 	mov	b,r6
   02B4 74 4C              1671 	mov	a,#0x4C
   02B6 12s00r00           1672 	lcall	__gptrput
   02B9 A3                 1673 	inc	dptr
   02BA 74 04              1674 	mov	a,#0x04
   02BC 12s00r00           1675 	lcall	__gptrput
                           1676 ;	../src/projectSpecificHardwareInterface_C8051F040.c:328: Q->Size		= 0 ;
   02BF 74 06              1677 	mov	a,#0x06
   02C1 2C                 1678 	add	a,r4
   02C2 FF                 1679 	mov	r7,a
   02C3 E4                 1680 	clr	a
   02C4 3D                 1681 	addc	a,r5
   02C5 F8                 1682 	mov	r0,a
   02C6 8E 01              1683 	mov	ar1,r6
   02C8 8F 82              1684 	mov	dpl,r7
   02CA 88 83              1685 	mov	dph,r0
   02CC 89 F0              1686 	mov	b,r1
   02CE E4                 1687 	clr	a
   02CF 12s00r00           1688 	lcall	__gptrput
   02D2 A3                 1689 	inc	dptr
   02D3 E4                 1690 	clr	a
   02D4 12s00r00           1691 	lcall	__gptrput
                           1692 ;	../src/projectSpecificHardwareInterface_C8051F040.c:329: Q->Front	= 1 ;
   02D7 74 02              1693 	mov	a,#0x02
   02D9 2C                 1694 	add	a,r4
   02DA FF                 1695 	mov	r7,a
   02DB E4                 1696 	clr	a
   02DC 3D                 1697 	addc	a,r5
   02DD F8                 1698 	mov	r0,a
   02DE 8E 01              1699 	mov	ar1,r6
   02E0 8F 82              1700 	mov	dpl,r7
   02E2 88 83              1701 	mov	dph,r0
   02E4 89 F0              1702 	mov	b,r1
   02E6 74 01              1703 	mov	a,#0x01
   02E8 12s00r00           1704 	lcall	__gptrput
   02EB A3                 1705 	inc	dptr
   02EC E4                 1706 	clr	a
   02ED 12s00r00           1707 	lcall	__gptrput
                           1708 ;	../src/projectSpecificHardwareInterface_C8051F040.c:330: Q->Rear		= 0 ;
   02F0 74 04              1709 	mov	a,#0x04
   02F2 2C                 1710 	add	a,r4
   02F3 FF                 1711 	mov	r7,a
   02F4 E4                 1712 	clr	a
   02F5 3D                 1713 	addc	a,r5
   02F6 F8                 1714 	mov	r0,a
   02F7 8E 01              1715 	mov	ar1,r6
   02F9 8F 82              1716 	mov	dpl,r7
   02FB 88 83              1717 	mov	dph,r0
   02FD 89 F0              1718 	mov	b,r1
   02FF E4                 1719 	clr	a
   0300 12s00r00           1720 	lcall	__gptrput
   0303 A3                 1721 	inc	dptr
   0304 E4                 1722 	clr	a
   0305 12s00r00           1723 	lcall	__gptrput
                           1724 ;	../src/projectSpecificHardwareInterface_C8051F040.c:331: Q->Array	= transmitBuffer[0] ;
   0308 74 08              1725 	mov	a,#0x08
   030A 2C                 1726 	add	a,r4
   030B FC                 1727 	mov	r4,a
   030C E4                 1728 	clr	a
   030D 3D                 1729 	addc	a,r5
   030E FD                 1730 	mov	r5,a
   030F 8C 82              1731 	mov	dpl,r4
   0311 8D 83              1732 	mov	dph,r5
   0313 8E F0              1733 	mov	b,r6
   0315 74r5D              1734 	mov	a,#_transmitBuffer
   0317 12s00r00           1735 	lcall	__gptrput
   031A A3                 1736 	inc	dptr
   031B 74s04              1737 	mov	a,#(_transmitBuffer >> 8)
   031D 12s00r00           1738 	lcall	__gptrput
   0320 A3                 1739 	inc	dptr
   0321 E4                 1740 	clr	a
   0322 12s00r00           1741 	lcall	__gptrput
                           1742 ;	../src/projectSpecificHardwareInterface_C8051F040.c:333: Q = &receiveBuffers[channelNumber] ;
   0325 EB                 1743 	mov	a,r3
   0326 24rC0              1744 	add	a,#_receiveBuffers
   0328 FB                 1745 	mov	r3,a
   0329 E4                 1746 	clr	a
   032A 34s08              1747 	addc	a,#(_receiveBuffers >> 8)
   032C FC                 1748 	mov	r4,a
   032D 7D 00              1749 	mov	r5,#0x00
                           1750 ;	../src/projectSpecificHardwareInterface_C8051F040.c:335: Q->Capacity	= RECEIVE_BUFFER_SIZE ;
   032F 8B 82              1751 	mov	dpl,r3
   0331 8C 83              1752 	mov	dph,r4
   0333 8D F0              1753 	mov	b,r5
   0335 74 0A              1754 	mov	a,#0x0A
   0337 12s00r00           1755 	lcall	__gptrput
   033A A3                 1756 	inc	dptr
   033B E4                 1757 	clr	a
   033C 12s00r00           1758 	lcall	__gptrput
                           1759 ;	../src/projectSpecificHardwareInterface_C8051F040.c:336: Q->Size		= 0 ;
   033F 74 06              1760 	mov	a,#0x06
   0341 2B                 1761 	add	a,r3
   0342 FE                 1762 	mov	r6,a
   0343 E4                 1763 	clr	a
   0344 3C                 1764 	addc	a,r4
   0345 FF                 1765 	mov	r7,a
   0346 8D 00              1766 	mov	ar0,r5
   0348 8E 82              1767 	mov	dpl,r6
   034A 8F 83              1768 	mov	dph,r7
   034C 88 F0              1769 	mov	b,r0
   034E E4                 1770 	clr	a
   034F 12s00r00           1771 	lcall	__gptrput
   0352 A3                 1772 	inc	dptr
   0353 E4                 1773 	clr	a
   0354 12s00r00           1774 	lcall	__gptrput
                           1775 ;	../src/projectSpecificHardwareInterface_C8051F040.c:337: Q->Front	= 1 ;
   0357 74 02              1776 	mov	a,#0x02
   0359 2B                 1777 	add	a,r3
   035A FE                 1778 	mov	r6,a
   035B E4                 1779 	clr	a
   035C 3C                 1780 	addc	a,r4
   035D FF                 1781 	mov	r7,a
   035E 8D 00              1782 	mov	ar0,r5
   0360 8E 82              1783 	mov	dpl,r6
   0362 8F 83              1784 	mov	dph,r7
   0364 88 F0              1785 	mov	b,r0
   0366 74 01              1786 	mov	a,#0x01
   0368 12s00r00           1787 	lcall	__gptrput
   036B A3                 1788 	inc	dptr
   036C E4                 1789 	clr	a
   036D 12s00r00           1790 	lcall	__gptrput
                           1791 ;	../src/projectSpecificHardwareInterface_C8051F040.c:338: Q->Rear		= 0 ;
   0370 74 04              1792 	mov	a,#0x04
   0372 2B                 1793 	add	a,r3
   0373 FE                 1794 	mov	r6,a
   0374 E4                 1795 	clr	a
   0375 3C                 1796 	addc	a,r4
   0376 FF                 1797 	mov	r7,a
   0377 8D 00              1798 	mov	ar0,r5
   0379 8E 82              1799 	mov	dpl,r6
   037B 8F 83              1800 	mov	dph,r7
   037D 88 F0              1801 	mov	b,r0
   037F E4                 1802 	clr	a
   0380 12s00r00           1803 	lcall	__gptrput
   0383 A3                 1804 	inc	dptr
   0384 E4                 1805 	clr	a
   0385 12s00r00           1806 	lcall	__gptrput
                           1807 ;	../src/projectSpecificHardwareInterface_C8051F040.c:339: Q->Array	= receiveBuffer[0] ;
   0388 74 08              1808 	mov	a,#0x08
   038A 2B                 1809 	add	a,r3
   038B FB                 1810 	mov	r3,a
   038C E4                 1811 	clr	a
   038D 3C                 1812 	addc	a,r4
   038E FC                 1813 	mov	r4,a
   038F 8B 82              1814 	mov	dpl,r3
   0391 8C 83              1815 	mov	dph,r4
   0393 8D F0              1816 	mov	b,r5
   0395 74rAA              1817 	mov	a,#_receiveBuffer
   0397 12s00r00           1818 	lcall	__gptrput
   039A A3                 1819 	inc	dptr
   039B 74s08              1820 	mov	a,#(_receiveBuffer >> 8)
   039D 12s00r00           1821 	lcall	__gptrput
   03A0 A3                 1822 	inc	dptr
   03A1 E4                 1823 	clr	a
   03A2 12s00r00           1824 	lcall	__gptrput
                           1825 ;	../src/projectSpecificHardwareInterface_C8051F040.c:341: charSent[channelNumber]		= false ;
   03A5 EA                 1826 	mov	a,r2
   03A6 24rCB              1827 	add	a,#_charSent
   03A8 F5 82              1828 	mov	dpl,a
   03AA E4                 1829 	clr	a
   03AB 34s08              1830 	addc	a,#(_charSent >> 8)
   03AD F5 83              1831 	mov	dph,a
   03AF E4                 1832 	clr	a
   03B0 F0                 1833 	movx	@dptr,a
                           1834 ;	../src/projectSpecificHardwareInterface_C8051F040.c:342: lineReady[channelNumber]	= false ;
   03B1 EA                 1835 	mov	a,r2
   03B2 24rCC              1836 	add	a,#_lineReady
   03B4 F5 82              1837 	mov	dpl,a
   03B6 E4                 1838 	clr	a
   03B7 34s08              1839 	addc	a,#(_lineReady >> 8)
   03B9 F5 83              1840 	mov	dph,a
   03BB E4                 1841 	clr	a
   03BC F0                 1842 	movx	@dptr,a
                           1843 ;	../src/projectSpecificHardwareInterface_C8051F040.c:344: if(!timer1initialized)
   03BD 20*03 20           1844 	jb	_task_UART_init_projectSpecific_timer1initialized_1_1,00102$
                           1845 ;	../src/projectSpecificHardwareInterface_C8051F040.c:346: timer1initialized = true ;
   03C0 D2*03              1846 	setb	_task_UART_init_projectSpecific_timer1initialized_1_1
                           1847 ;	../src/projectSpecificHardwareInterface_C8051F040.c:348: portSET_REGISTER_GROUP(TIMER01_PAGE)
   03C2 AA 84              1848 	mov	r2,_SFRPAGE
   03C4 75 84 00           1849 	mov	_SFRPAGE,#0x00
                           1850 ;	../src/projectSpecificHardwareInterface_C8051F040.c:351: TMOD &= 0x08 ;
   03C7 53 89 08           1851 	anl	_TMOD,#0x08
                           1852 ;	../src/projectSpecificHardwareInterface_C8051F040.c:352: TMOD |= ser8BIT_WITH_RELOAD ;
   03CA 43 89 20           1853 	orl	_TMOD,#0x20
                           1854 ;	../src/projectSpecificHardwareInterface_C8051F040.c:353: SSTA0 |= serSMOD ;
   03CD 43 91 10           1855 	orl	_SSTA0,#0x10
                           1856 ;	../src/projectSpecificHardwareInterface_C8051F040.c:354: CKCON |= 0x10 ;
   03D0 43 8E 10           1857 	orl	_CKCON,#0x10
                           1858 ;	../src/projectSpecificHardwareInterface_C8051F040.c:357: TL1 = ( unsigned char ) 0xB2 ;	// B8 = 9600 BAUD on unmoded eval boards, B2 = 9615 on 24MHz systems
   03D3 75 8B B2           1859 	mov	_TL1,#0xB2
                           1860 ;	../src/projectSpecificHardwareInterface_C8051F040.c:358: TH1 = ( unsigned char ) 0xB2 ;
   03D6 75 8D B2           1861 	mov	_TH1,#0xB2
                           1862 ;	../src/projectSpecificHardwareInterface_C8051F040.c:360: SCON = ser8_BIT_MODE | serRX_ENABLE ;	/* Setup the control register for standard n, 8, 1 - variable baud rate. */
   03D9 75 98 50           1863 	mov	_SCON,#0x50
                           1864 ;	../src/projectSpecificHardwareInterface_C8051F040.c:362: TR1 = 1 ;							/* Start the timer. */
   03DC D2 8E              1865 	setb	_TR1
                           1866 ;	../src/projectSpecificHardwareInterface_C8051F040.c:364: portRESTORE_REGISTER_GROUP()
   03DE 8A 84              1867 	mov	_SFRPAGE,r2
   03E0                    1868 00102$:
                           1869 ;	../src/projectSpecificHardwareInterface_C8051F040.c:367: if(channelNumber == 0)
   03E0 90s08rCD           1870 	mov	dptr,#_task_UART_init_projectSpecific_channelNumber_1_1
   03E3 E0                 1871 	movx	a,@dptr
   03E4 FA                 1872 	mov	r2,a
   03E5 70 03              1873 	jnz	00106$
                           1874 ;	../src/projectSpecificHardwareInterface_C8051F040.c:369: UART0_Init() ;
   03E7 02s09r8E           1875 	ljmp	_UART0_Init
   03EA                    1876 00106$:
                           1877 ;	../src/projectSpecificHardwareInterface_C8051F040.c:371: else if(channelNumber == 1)
   03EA BA 01 03           1878 	cjne	r2,#0x01,00108$
                           1879 ;	../src/projectSpecificHardwareInterface_C8051F040.c:373: UART1_Init() ;
   03ED 02s09r9C           1880 	ljmp	_UART1_Init
   03F0                    1881 00108$:
   03F0 22                 1882 	ret
                           1883 ;------------------------------------------------------------
                           1884 ;Allocation info for local variables in function 'task_UART_core_projectSpecific'
                           1885 ;------------------------------------------------------------
                           1886 ;sloc0                     Allocated with name '_task_UART_core_projectSpecific_sloc0_1_0'
                           1887 ;sloc1                     Allocated with name '_task_UART_core_projectSpecific_sloc1_1_0'
                           1888 ;sloc2                     Allocated with name '_task_UART_core_projectSpecific_sloc2_1_0'
                           1889 ;sloc3                     Allocated with name '_task_UART_core_projectSpecific_sloc3_1_0'
                           1890 ;channelNumber             Allocated with name '_task_UART_core_projectSpecific_channelNumber_1_1'
                           1891 ;SFRPAGE_SAVE              Allocated with name '_task_UART_core_projectSpecific_SFRPAGE_SAVE_3_3'
                           1892 ;Q                         Allocated with name '_task_UART_core_projectSpecific_Q_4_4'
                           1893 ;charReceived              Allocated with name '_task_UART_core_projectSpecific_charReceived_6_6'
                           1894 ;byteToSend                Allocated with name '_task_UART_core_projectSpecific_byteToSend_5_10'
                           1895 ;------------------------------------------------------------
                           1896 ;	../src/projectSpecificHardwareInterface_C8051F040.c:382: void task_UART_core_projectSpecific(	unsigned char channelNumber)
                           1897 ;	-----------------------------------------
                           1898 ;	 function task_UART_core_projectSpecific
                           1899 ;	-----------------------------------------
   03F1                    1900 _task_UART_core_projectSpecific:
   03F1 E5 82              1901 	mov	a,dpl
   03F3 90s08rCE           1902 	mov	dptr,#_task_UART_core_projectSpecific_channelNumber_1_1
   03F6 F0                 1903 	movx	@dptr,a
                           1904 ;	../src/projectSpecificHardwareInterface_C8051F040.c:384: if(channelNumber < NUMBER_OF_UARTS)
   03F7 90s08rCE           1905 	mov	dptr,#_task_UART_core_projectSpecific_channelNumber_1_1
   03FA E0                 1906 	movx	a,@dptr
   03FB FA                 1907 	mov	r2,a
   03FC BA 01 00           1908 	cjne	r2,#0x01,00125$
   03FF                    1909 00125$:
   03FF 40 01              1910 	jc	00126$
   0401 22                 1911 	ret
   0402                    1912 00126$:
                           1913 ;	../src/projectSpecificHardwareInterface_C8051F040.c:386: portSET_REGISTER_GROUP(UART0_PAGE)
   0402 AB 84              1914 	mov	r3,_SFRPAGE
   0404 75 84 00           1915 	mov	_SFRPAGE,#0x00
                           1916 ;	../src/projectSpecificHardwareInterface_C8051F040.c:388: QUEUE_TYPE*	Q = &receiveBuffers[channelNumber] ;
   0407 EA                 1917 	mov	a,r2
   0408 75 F0 0B           1918 	mov	b,#0x0B
   040B A4                 1919 	mul	ab
   040C 24rC0              1920 	add	a,#_receiveBuffers
   040E FC                 1921 	mov	r4,a
   040F E4                 1922 	clr	a
   0410 34s08              1923 	addc	a,#(_receiveBuffers >> 8)
   0412 FD                 1924 	mov	r5,a
   0413 7E 00              1925 	mov	r6,#0x00
   0415 90s08rCF           1926 	mov	dptr,#_task_UART_core_projectSpecific_Q_4_4
   0418 EC                 1927 	mov	a,r4
   0419 F0                 1928 	movx	@dptr,a
   041A A3                 1929 	inc	dptr
   041B ED                 1930 	mov	a,r5
   041C F0                 1931 	movx	@dptr,a
   041D A3                 1932 	inc	dptr
   041E EE                 1933 	mov	a,r6
   041F F0                 1934 	movx	@dptr,a
                           1935 ;	../src/projectSpecificHardwareInterface_C8051F040.c:390: if(RI0)
   0420 20 98 03           1936 	jb	_RI0,00127$
   0423 02s05r36           1937 	ljmp	00106$
   0426                    1938 00127$:
                           1939 ;	../src/projectSpecificHardwareInterface_C8051F040.c:392: if(!IsFull(Q))
   0426 8C 82              1940 	mov	dpl,r4
   0428 8D 83              1941 	mov	dph,r5
   042A 8E F0              1942 	mov	b,r6
   042C C0 02              1943 	push	ar2
   042E C0 03              1944 	push	ar3
   0430 12s01rEF           1945 	lcall	_IsFull
   0433 E5 82              1946 	mov	a,dpl
   0435 D0 03              1947 	pop	ar3
   0437 D0 02              1948 	pop	ar2
   0439 60 03              1949 	jz	00128$
   043B 02s05r34           1950 	ljmp	00104$
   043E                    1951 00128$:
                           1952 ;	../src/projectSpecificHardwareInterface_C8051F040.c:394: char	charReceived = SBUF0 ;
   043E C0 03              1953 	push	ar3
   0440 85 99*00           1954 	mov	_task_UART_core_projectSpecific_sloc0_1_0,_SBUF0
                           1955 ;	../src/projectSpecificHardwareInterface_C8051F040.c:396: Q->Size++ ;
   0443 90s08rCF           1956 	mov	dptr,#_task_UART_core_projectSpecific_Q_4_4
   0446 E0                 1957 	movx	a,@dptr
   0447 FD                 1958 	mov	r5,a
   0448 A3                 1959 	inc	dptr
   0449 E0                 1960 	movx	a,@dptr
   044A FE                 1961 	mov	r6,a
   044B A3                 1962 	inc	dptr
   044C E0                 1963 	movx	a,@dptr
   044D FF                 1964 	mov	r7,a
   044E 74 06              1965 	mov	a,#0x06
   0450 2D                 1966 	add	a,r5
   0451 F5*01              1967 	mov	_task_UART_core_projectSpecific_sloc1_1_0,a
   0453 E4                 1968 	clr	a
   0454 3E                 1969 	addc	a,r6
   0455 F5*02              1970 	mov	(_task_UART_core_projectSpecific_sloc1_1_0 + 1),a
   0457 8F*03              1971 	mov	(_task_UART_core_projectSpecific_sloc1_1_0 + 2),r7
   0459 85*01 82           1972 	mov	dpl,_task_UART_core_projectSpecific_sloc1_1_0
   045C 85*02 83           1973 	mov	dph,(_task_UART_core_projectSpecific_sloc1_1_0 + 1)
   045F 85*03 F0           1974 	mov	b,(_task_UART_core_projectSpecific_sloc1_1_0 + 2)
   0462 12s00r00           1975 	lcall	__gptrget
   0465 FC                 1976 	mov	r4,a
   0466 A3                 1977 	inc	dptr
   0467 12s00r00           1978 	lcall	__gptrget
   046A FB                 1979 	mov	r3,a
   046B 0C                 1980 	inc	r4
   046C BC 00 01           1981 	cjne	r4,#0x00,00129$
   046F 0B                 1982 	inc	r3
   0470                    1983 00129$:
   0470 85*01 82           1984 	mov	dpl,_task_UART_core_projectSpecific_sloc1_1_0
   0473 85*02 83           1985 	mov	dph,(_task_UART_core_projectSpecific_sloc1_1_0 + 1)
   0476 85*03 F0           1986 	mov	b,(_task_UART_core_projectSpecific_sloc1_1_0 + 2)
   0479 EC                 1987 	mov	a,r4
   047A 12s00r00           1988 	lcall	__gptrput
   047D A3                 1989 	inc	dptr
   047E EB                 1990 	mov	a,r3
   047F 12s00r00           1991 	lcall	__gptrput
                           1992 ;	../src/projectSpecificHardwareInterface_C8051F040.c:397: Q->Rear = Succ(Q->Rear, Q) ;
   0482 74 04              1993 	mov	a,#0x04
   0484 2D                 1994 	add	a,r5
   0485 F5*01              1995 	mov	_task_UART_core_projectSpecific_sloc1_1_0,a
   0487 E4                 1996 	clr	a
   0488 3E                 1997 	addc	a,r6
   0489 F5*02              1998 	mov	(_task_UART_core_projectSpecific_sloc1_1_0 + 1),a
   048B 8F*03              1999 	mov	(_task_UART_core_projectSpecific_sloc1_1_0 + 2),r7
   048D 85*01 82           2000 	mov	dpl,_task_UART_core_projectSpecific_sloc1_1_0
   0490 85*02 83           2001 	mov	dph,(_task_UART_core_projectSpecific_sloc1_1_0 + 1)
   0493 85*03 F0           2002 	mov	b,(_task_UART_core_projectSpecific_sloc1_1_0 + 2)
   0496 12s00r00           2003 	lcall	__gptrget
   0499 F9                 2004 	mov	r1,a
   049A A3                 2005 	inc	dptr
   049B 12s00r00           2006 	lcall	__gptrget
   049E FB                 2007 	mov	r3,a
   049F 90s04r58           2008 	mov	dptr,#_Succ_PARM_2
   04A2 ED                 2009 	mov	a,r5
   04A3 F0                 2010 	movx	@dptr,a
   04A4 A3                 2011 	inc	dptr
   04A5 EE                 2012 	mov	a,r6
   04A6 F0                 2013 	movx	@dptr,a
   04A7 A3                 2014 	inc	dptr
   04A8 EF                 2015 	mov	a,r7
   04A9 F0                 2016 	movx	@dptr,a
   04AA 89 82              2017 	mov	dpl,r1
   04AC 8B 83              2018 	mov	dph,r3
   04AE C0 02              2019 	push	ar2
   04B0 12s02r41           2020 	lcall	_Succ
   04B3 AB 82              2021 	mov	r3,dpl
   04B5 AC 83              2022 	mov	r4,dph
   04B7 D0 02              2023 	pop	ar2
   04B9 85*01 82           2024 	mov	dpl,_task_UART_core_projectSpecific_sloc1_1_0
   04BC 85*02 83           2025 	mov	dph,(_task_UART_core_projectSpecific_sloc1_1_0 + 1)
   04BF 85*03 F0           2026 	mov	b,(_task_UART_core_projectSpecific_sloc1_1_0 + 2)
   04C2 EB                 2027 	mov	a,r3
   04C3 12s00r00           2028 	lcall	__gptrput
   04C6 A3                 2029 	inc	dptr
   04C7 EC                 2030 	mov	a,r4
   04C8 12s00r00           2031 	lcall	__gptrput
                           2032 ;	../src/projectSpecificHardwareInterface_C8051F040.c:398: Q->Array[Q->Rear] = charReceived ;
   04CB 90s08rCF           2033 	mov	dptr,#_task_UART_core_projectSpecific_Q_4_4
   04CE E0                 2034 	movx	a,@dptr
   04CF FB                 2035 	mov	r3,a
   04D0 A3                 2036 	inc	dptr
   04D1 E0                 2037 	movx	a,@dptr
   04D2 FC                 2038 	mov	r4,a
   04D3 A3                 2039 	inc	dptr
   04D4 E0                 2040 	movx	a,@dptr
   04D5 FD                 2041 	mov	r5,a
   04D6 74 08              2042 	mov	a,#0x08
   04D8 2B                 2043 	add	a,r3
   04D9 FE                 2044 	mov	r6,a
   04DA E4                 2045 	clr	a
   04DB 3C                 2046 	addc	a,r4
   04DC FF                 2047 	mov	r7,a
   04DD 8D 00              2048 	mov	ar0,r5
   04DF 8E 82              2049 	mov	dpl,r6
   04E1 8F 83              2050 	mov	dph,r7
   04E3 88 F0              2051 	mov	b,r0
   04E5 12s00r00           2052 	lcall	__gptrget
   04E8 FE                 2053 	mov	r6,a
   04E9 A3                 2054 	inc	dptr
   04EA 12s00r00           2055 	lcall	__gptrget
   04ED FF                 2056 	mov	r7,a
   04EE A3                 2057 	inc	dptr
   04EF 12s00r00           2058 	lcall	__gptrget
   04F2 F8                 2059 	mov	r0,a
   04F3 74 04              2060 	mov	a,#0x04
   04F5 2B                 2061 	add	a,r3
   04F6 FB                 2062 	mov	r3,a
   04F7 E4                 2063 	clr	a
   04F8 3C                 2064 	addc	a,r4
   04F9 FC                 2065 	mov	r4,a
   04FA 8B 82              2066 	mov	dpl,r3
   04FC 8C 83              2067 	mov	dph,r4
   04FE 8D F0              2068 	mov	b,r5
   0500 12s00r00           2069 	lcall	__gptrget
   0503 FB                 2070 	mov	r3,a
   0504 A3                 2071 	inc	dptr
   0505 12s00r00           2072 	lcall	__gptrget
   0508 FC                 2073 	mov	r4,a
   0509 EB                 2074 	mov	a,r3
   050A 2E                 2075 	add	a,r6
   050B FE                 2076 	mov	r6,a
   050C EC                 2077 	mov	a,r4
   050D 3F                 2078 	addc	a,r7
   050E FF                 2079 	mov	r7,a
   050F 8E 82              2080 	mov	dpl,r6
   0511 8F 83              2081 	mov	dph,r7
   0513 88 F0              2082 	mov	b,r0
   0515 E5*00              2083 	mov	a,_task_UART_core_projectSpecific_sloc0_1_0
   0517 12s00r00           2084 	lcall	__gptrput
                           2085 ;	../src/projectSpecificHardwareInterface_C8051F040.c:400: if(charReceived == '\n')
   051A 74 0A              2086 	mov	a,#0x0A
   051C B5*00 02           2087 	cjne	a,_task_UART_core_projectSpecific_sloc0_1_0,00130$
   051F 80 04              2088 	sjmp	00131$
   0521                    2089 00130$:
   0521 D0 03              2090 	pop	ar3
   0523 80 0F              2091 	sjmp	00104$
   0525                    2092 00131$:
   0525 D0 03              2093 	pop	ar3
                           2094 ;	../src/projectSpecificHardwareInterface_C8051F040.c:402: lineReady[channelNumber] = true ;
   0527 EA                 2095 	mov	a,r2
   0528 24rCC              2096 	add	a,#_lineReady
   052A F5 82              2097 	mov	dpl,a
   052C E4                 2098 	clr	a
   052D 34s08              2099 	addc	a,#(_lineReady >> 8)
   052F F5 83              2100 	mov	dph,a
   0531 74 01              2101 	mov	a,#0x01
   0533 F0                 2102 	movx	@dptr,a
   0534                    2103 00104$:
                           2104 ;	../src/projectSpecificHardwareInterface_C8051F040.c:406: RI0 = 0 ;
   0534 C2 98              2105 	clr	_RI0
   0536                    2106 00106$:
                           2107 ;	../src/projectSpecificHardwareInterface_C8051F040.c:409: Q = &transmitBuffers[channelNumber] ;
   0536 90s08rCE           2108 	mov	dptr,#_task_UART_core_projectSpecific_channelNumber_1_1
   0539 E0                 2109 	movx	a,@dptr
   053A FA                 2110 	mov	r2,a
   053B 75 F0 0B           2111 	mov	b,#0x0B
   053E A4                 2112 	mul	ab
   053F 24rB5              2113 	add	a,#_transmitBuffers
   0541 FC                 2114 	mov	r4,a
   0542 E4                 2115 	clr	a
   0543 34s08              2116 	addc	a,#(_transmitBuffers >> 8)
   0545 FD                 2117 	mov	r5,a
   0546 7E 00              2118 	mov	r6,#0x00
   0548 90s08rCF           2119 	mov	dptr,#_task_UART_core_projectSpecific_Q_4_4
   054B EC                 2120 	mov	a,r4
   054C F0                 2121 	movx	@dptr,a
   054D A3                 2122 	inc	dptr
   054E ED                 2123 	mov	a,r5
   054F F0                 2124 	movx	@dptr,a
   0550 A3                 2125 	inc	dptr
   0551 EE                 2126 	mov	a,r6
   0552 F0                 2127 	movx	@dptr,a
                           2128 ;	../src/projectSpecificHardwareInterface_C8051F040.c:411: if(charSent[channelNumber] == true)
   0553 EA                 2129 	mov	a,r2
   0554 24rCB              2130 	add	a,#_charSent
   0556 FA                 2131 	mov	r2,a
   0557 E4                 2132 	clr	a
   0558 34s08              2133 	addc	a,#(_charSent >> 8)
   055A FF                 2134 	mov	r7,a
   055B 8A 82              2135 	mov	dpl,r2
   055D 8F 83              2136 	mov	dph,r7
   055F E0                 2137 	movx	a,@dptr
   0560 F8                 2138 	mov	r0,a
   0561 B8 01 09           2139 	cjne	r0,#0x01,00111$
                           2140 ;	../src/projectSpecificHardwareInterface_C8051F040.c:413: charSent[channelNumber] = false ;
   0564 8A 82              2141 	mov	dpl,r2
   0566 8F 83              2142 	mov	dph,r7
   0568 E4                 2143 	clr	a
   0569 F0                 2144 	movx	@dptr,a
                           2145 ;	../src/projectSpecificHardwareInterface_C8051F040.c:417: while(TI0 == 0) { /* empty loop */} ;
   056A                    2146 00107$:
   056A 30 99 FD           2147 	jnb	_TI0,00107$
   056D                    2148 00111$:
                           2149 ;	../src/projectSpecificHardwareInterface_C8051F040.c:420: if(!IsEmpty(Q))
   056D 8C 82              2150 	mov	dpl,r4
   056F 8D 83              2151 	mov	dph,r5
   0571 8E F0              2152 	mov	b,r6
   0573 C0 03              2153 	push	ar3
   0575 12s01rB3           2154 	lcall	_IsEmpty
   0578 E5 82              2155 	mov	a,dpl
   057A D0 03              2156 	pop	ar3
   057C 60 03              2157 	jz	00135$
   057E 02s06r52           2158 	ljmp	00113$
   0581                    2159 00135$:
                           2160 ;	../src/projectSpecificHardwareInterface_C8051F040.c:422: unsigned char byteToSend = Q->Array[Q->Front] ;
   0581 C0 03              2161 	push	ar3
   0583 90s08rCF           2162 	mov	dptr,#_task_UART_core_projectSpecific_Q_4_4
   0586 E0                 2163 	movx	a,@dptr
   0587 FA                 2164 	mov	r2,a
   0588 A3                 2165 	inc	dptr
   0589 E0                 2166 	movx	a,@dptr
   058A FC                 2167 	mov	r4,a
   058B A3                 2168 	inc	dptr
   058C E0                 2169 	movx	a,@dptr
   058D FD                 2170 	mov	r5,a
   058E 74 08              2171 	mov	a,#0x08
   0590 2A                 2172 	add	a,r2
   0591 FE                 2173 	mov	r6,a
   0592 E4                 2174 	clr	a
   0593 3C                 2175 	addc	a,r4
   0594 FF                 2176 	mov	r7,a
   0595 8D 00              2177 	mov	ar0,r5
   0597 8E 82              2178 	mov	dpl,r6
   0599 8F 83              2179 	mov	dph,r7
   059B 88 F0              2180 	mov	b,r0
   059D 12s00r00           2181 	lcall	__gptrget
   05A0 F5*01              2182 	mov	_task_UART_core_projectSpecific_sloc1_1_0,a
   05A2 A3                 2183 	inc	dptr
   05A3 12s00r00           2184 	lcall	__gptrget
   05A6 F5*02              2185 	mov	(_task_UART_core_projectSpecific_sloc1_1_0 + 1),a
   05A8 A3                 2186 	inc	dptr
   05A9 12s00r00           2187 	lcall	__gptrget
   05AC F5*03              2188 	mov	(_task_UART_core_projectSpecific_sloc1_1_0 + 2),a
   05AE 74 02              2189 	mov	a,#0x02
   05B0 2A                 2190 	add	a,r2
   05B1 F5*06              2191 	mov	_task_UART_core_projectSpecific_sloc3_1_0,a
   05B3 E4                 2192 	clr	a
   05B4 3C                 2193 	addc	a,r4
   05B5 F5*07              2194 	mov	(_task_UART_core_projectSpecific_sloc3_1_0 + 1),a
   05B7 8D*08              2195 	mov	(_task_UART_core_projectSpecific_sloc3_1_0 + 2),r5
   05B9 85*06 82           2196 	mov	dpl,_task_UART_core_projectSpecific_sloc3_1_0
   05BC 85*07 83           2197 	mov	dph,(_task_UART_core_projectSpecific_sloc3_1_0 + 1)
   05BF 85*08 F0           2198 	mov	b,(_task_UART_core_projectSpecific_sloc3_1_0 + 2)
   05C2 12s00r00           2199 	lcall	__gptrget
   05C5 F5*04              2200 	mov	_task_UART_core_projectSpecific_sloc2_1_0,a
   05C7 A3                 2201 	inc	dptr
   05C8 12s00r00           2202 	lcall	__gptrget
   05CB F5*05              2203 	mov	(_task_UART_core_projectSpecific_sloc2_1_0 + 1),a
   05CD E5*04              2204 	mov	a,_task_UART_core_projectSpecific_sloc2_1_0
   05CF 25*01              2205 	add	a,_task_UART_core_projectSpecific_sloc1_1_0
   05D1 FF                 2206 	mov	r7,a
   05D2 E5*05              2207 	mov	a,(_task_UART_core_projectSpecific_sloc2_1_0 + 1)
   05D4 35*02              2208 	addc	a,(_task_UART_core_projectSpecific_sloc1_1_0 + 1)
   05D6 F8                 2209 	mov	r0,a
   05D7 AB*03              2210 	mov	r3,(_task_UART_core_projectSpecific_sloc1_1_0 + 2)
   05D9 8F 82              2211 	mov	dpl,r7
   05DB 88 83              2212 	mov	dph,r0
   05DD 8B F0              2213 	mov	b,r3
   05DF 12s00r00           2214 	lcall	__gptrget
   05E2 F5*01              2215 	mov	_task_UART_core_projectSpecific_sloc1_1_0,a
                           2216 ;	../src/projectSpecificHardwareInterface_C8051F040.c:424: Q->Size-- ;
   05E4 74 06              2217 	mov	a,#0x06
   05E6 2A                 2218 	add	a,r2
   05E7 FB                 2219 	mov	r3,a
   05E8 E4                 2220 	clr	a
   05E9 3C                 2221 	addc	a,r4
   05EA FE                 2222 	mov	r6,a
   05EB 8D 00              2223 	mov	ar0,r5
   05ED 8B 82              2224 	mov	dpl,r3
   05EF 8E 83              2225 	mov	dph,r6
   05F1 88 F0              2226 	mov	b,r0
   05F3 12s00r00           2227 	lcall	__gptrget
   05F6 F9                 2228 	mov	r1,a
   05F7 A3                 2229 	inc	dptr
   05F8 12s00r00           2230 	lcall	__gptrget
   05FB FF                 2231 	mov	r7,a
   05FC 19                 2232 	dec	r1
   05FD B9 FF 01           2233 	cjne	r1,#0xff,00136$
   0600 1F                 2234 	dec	r7
   0601                    2235 00136$:
   0601 8B 82              2236 	mov	dpl,r3
   0603 8E 83              2237 	mov	dph,r6
   0605 88 F0              2238 	mov	b,r0
   0607 E9                 2239 	mov	a,r1
   0608 12s00r00           2240 	lcall	__gptrput
   060B A3                 2241 	inc	dptr
   060C EF                 2242 	mov	a,r7
   060D 12s00r00           2243 	lcall	__gptrput
                           2244 ;	../src/projectSpecificHardwareInterface_C8051F040.c:425: Q->Front = Succ(Q->Front, Q) ;
   0610 90s04r58           2245 	mov	dptr,#_Succ_PARM_2
   0613 EA                 2246 	mov	a,r2
   0614 F0                 2247 	movx	@dptr,a
   0615 A3                 2248 	inc	dptr
   0616 EC                 2249 	mov	a,r4
   0617 F0                 2250 	movx	@dptr,a
   0618 A3                 2251 	inc	dptr
   0619 ED                 2252 	mov	a,r5
   061A F0                 2253 	movx	@dptr,a
   061B 85*04 82           2254 	mov	dpl,_task_UART_core_projectSpecific_sloc2_1_0
   061E 85*05 83           2255 	mov	dph,(_task_UART_core_projectSpecific_sloc2_1_0 + 1)
   0621 12s02r41           2256 	lcall	_Succ
   0624 AA 82              2257 	mov	r2,dpl
   0626 AB 83              2258 	mov	r3,dph
   0628 85*06 82           2259 	mov	dpl,_task_UART_core_projectSpecific_sloc3_1_0
   062B 85*07 83           2260 	mov	dph,(_task_UART_core_projectSpecific_sloc3_1_0 + 1)
   062E 85*08 F0           2261 	mov	b,(_task_UART_core_projectSpecific_sloc3_1_0 + 2)
   0631 EA                 2262 	mov	a,r2
   0632 12s00r00           2263 	lcall	__gptrput
   0635 A3                 2264 	inc	dptr
   0636 EB                 2265 	mov	a,r3
   0637 12s00r00           2266 	lcall	__gptrput
                           2267 ;	../src/projectSpecificHardwareInterface_C8051F040.c:427: TI0 = 0 ;	// clear it and send the next character
   063A C2 99              2268 	clr	_TI0
                           2269 ;	../src/projectSpecificHardwareInterface_C8051F040.c:429: SBUF0 = byteToSend ;
   063C 85*01 99           2270 	mov	_SBUF0,_task_UART_core_projectSpecific_sloc1_1_0
                           2271 ;	../src/projectSpecificHardwareInterface_C8051F040.c:431: charSent[channelNumber] = true ;
   063F 90s08rCE           2272 	mov	dptr,#_task_UART_core_projectSpecific_channelNumber_1_1
   0642 E0                 2273 	movx	a,@dptr
   0643 FA                 2274 	mov	r2,a
   0644 24rCB              2275 	add	a,#_charSent
   0646 F5 82              2276 	mov	dpl,a
   0648 E4                 2277 	clr	a
   0649 34s08              2278 	addc	a,#(_charSent >> 8)
   064B F5 83              2279 	mov	dph,a
   064D 74 01              2280 	mov	a,#0x01
   064F F0                 2281 	movx	@dptr,a
                           2282 ;	../src/projectSpecificHardwareInterface_C8051F040.c:434: portRESTORE_REGISTER_GROUP()
   0650 D0 03              2283 	pop	ar3
                           2284 ;	../src/projectSpecificHardwareInterface_C8051F040.c:431: charSent[channelNumber] = true ;
   0652                    2285 00113$:
                           2286 ;	../src/projectSpecificHardwareInterface_C8051F040.c:434: portRESTORE_REGISTER_GROUP()
   0652 8B 84              2287 	mov	_SFRPAGE,r3
   0654 22                 2288 	ret
                           2289 ;------------------------------------------------------------
                           2290 ;Allocation info for local variables in function 'task_UART_putchar_projectSpecific'
                           2291 ;------------------------------------------------------------
                           2292 ;charToSend                Allocated with name '_task_UART_putchar_projectSpecific_PARM_2'
                           2293 ;channelNumber             Allocated with name '_task_UART_putchar_projectSpecific_channelNumber_1_1'
                           2294 ;Q                         Allocated with name '_task_UART_putchar_projectSpecific_Q_2_2'
                           2295 ;------------------------------------------------------------
                           2296 ;	../src/projectSpecificHardwareInterface_C8051F040.c:439: bool task_UART_putchar_projectSpecific(	unsigned char channelNumber, char charToSend)
                           2297 ;	-----------------------------------------
                           2298 ;	 function task_UART_putchar_projectSpecific
                           2299 ;	-----------------------------------------
   0655                    2300 _task_UART_putchar_projectSpecific:
   0655 E5 82              2301 	mov	a,dpl
   0657 90s08rD3           2302 	mov	dptr,#_task_UART_putchar_projectSpecific_channelNumber_1_1
   065A F0                 2303 	movx	@dptr,a
                           2304 ;	../src/projectSpecificHardwareInterface_C8051F040.c:441: task_UART_core(0) ;
   065B 75 82 00           2305 	mov	dpl,#0x00
   065E 12s00r00           2306 	lcall	_task_UART_core
                           2307 ;	../src/projectSpecificHardwareInterface_C8051F040.c:443: portDISABLE_INTERRUPTS() ;
   0661 C2 AF              2308 	clr	_EA
                           2309 ;	../src/projectSpecificHardwareInterface_C8051F040.c:445: if(channelNumber < NUMBER_OF_UARTS)
   0663 90s08rD3           2310 	mov	dptr,#_task_UART_putchar_projectSpecific_channelNumber_1_1
   0666 E0                 2311 	movx	a,@dptr
   0667 FA                 2312 	mov	r2,a
   0668 BA 01 00           2313 	cjne	r2,#0x01,00109$
   066B                    2314 00109$:
   066B 40 03              2315 	jc	00110$
   066D 02s07r6E           2316 	ljmp	00104$
   0670                    2317 00110$:
                           2318 ;	../src/projectSpecificHardwareInterface_C8051F040.c:447: QUEUE_TYPE*	Q = &transmitBuffers[channelNumber] ;
   0670 EA                 2319 	mov	a,r2
   0671 75 F0 0B           2320 	mov	b,#0x0B
   0674 A4                 2321 	mul	ab
   0675 24rB5              2322 	add	a,#_transmitBuffers
   0677 FA                 2323 	mov	r2,a
   0678 E4                 2324 	clr	a
   0679 34s08              2325 	addc	a,#(_transmitBuffers >> 8)
   067B FB                 2326 	mov	r3,a
   067C 7C 00              2327 	mov	r4,#0x00
   067E 90s08rD4           2328 	mov	dptr,#_task_UART_putchar_projectSpecific_Q_2_2
   0681 EA                 2329 	mov	a,r2
   0682 F0                 2330 	movx	@dptr,a
   0683 A3                 2331 	inc	dptr
   0684 EB                 2332 	mov	a,r3
   0685 F0                 2333 	movx	@dptr,a
   0686 A3                 2334 	inc	dptr
   0687 EC                 2335 	mov	a,r4
   0688 F0                 2336 	movx	@dptr,a
                           2337 ;	../src/projectSpecificHardwareInterface_C8051F040.c:449: if(!IsFull(Q))
   0689 8A 82              2338 	mov	dpl,r2
   068B 8B 83              2339 	mov	dph,r3
   068D 8C F0              2340 	mov	b,r4
   068F 12s01rEF           2341 	lcall	_IsFull
   0692 E5 82              2342 	mov	a,dpl
   0694 60 03              2343 	jz	00111$
   0696 02s07r6E           2344 	ljmp	00104$
   0699                    2345 00111$:
                           2346 ;	../src/projectSpecificHardwareInterface_C8051F040.c:451: Q->Size++ ;
   0699 90s08rD4           2347 	mov	dptr,#_task_UART_putchar_projectSpecific_Q_2_2
   069C E0                 2348 	movx	a,@dptr
   069D FA                 2349 	mov	r2,a
   069E A3                 2350 	inc	dptr
   069F E0                 2351 	movx	a,@dptr
   06A0 FB                 2352 	mov	r3,a
   06A1 A3                 2353 	inc	dptr
   06A2 E0                 2354 	movx	a,@dptr
   06A3 FC                 2355 	mov	r4,a
   06A4 74 06              2356 	mov	a,#0x06
   06A6 2A                 2357 	add	a,r2
   06A7 FD                 2358 	mov	r5,a
   06A8 E4                 2359 	clr	a
   06A9 3B                 2360 	addc	a,r3
   06AA FE                 2361 	mov	r6,a
   06AB 8C 07              2362 	mov	ar7,r4
   06AD 8D 82              2363 	mov	dpl,r5
   06AF 8E 83              2364 	mov	dph,r6
   06B1 8F F0              2365 	mov	b,r7
   06B3 12s00r00           2366 	lcall	__gptrget
   06B6 F8                 2367 	mov	r0,a
   06B7 A3                 2368 	inc	dptr
   06B8 12s00r00           2369 	lcall	__gptrget
   06BB F9                 2370 	mov	r1,a
   06BC 08                 2371 	inc	r0
   06BD B8 00 01           2372 	cjne	r0,#0x00,00112$
   06C0 09                 2373 	inc	r1
   06C1                    2374 00112$:
   06C1 8D 82              2375 	mov	dpl,r5
   06C3 8E 83              2376 	mov	dph,r6
   06C5 8F F0              2377 	mov	b,r7
   06C7 E8                 2378 	mov	a,r0
   06C8 12s00r00           2379 	lcall	__gptrput
   06CB A3                 2380 	inc	dptr
   06CC E9                 2381 	mov	a,r1
   06CD 12s00r00           2382 	lcall	__gptrput
                           2383 ;	../src/projectSpecificHardwareInterface_C8051F040.c:452: Q->Rear = Succ(Q->Rear, Q) ;
   06D0 74 04              2384 	mov	a,#0x04
   06D2 2A                 2385 	add	a,r2
   06D3 FD                 2386 	mov	r5,a
   06D4 E4                 2387 	clr	a
   06D5 3B                 2388 	addc	a,r3
   06D6 FE                 2389 	mov	r6,a
   06D7 8C 07              2390 	mov	ar7,r4
   06D9 8D 82              2391 	mov	dpl,r5
   06DB 8E 83              2392 	mov	dph,r6
   06DD 8F F0              2393 	mov	b,r7
   06DF 12s00r00           2394 	lcall	__gptrget
   06E2 F8                 2395 	mov	r0,a
   06E3 A3                 2396 	inc	dptr
   06E4 12s00r00           2397 	lcall	__gptrget
   06E7 F9                 2398 	mov	r1,a
   06E8 90s04r58           2399 	mov	dptr,#_Succ_PARM_2
   06EB EA                 2400 	mov	a,r2
   06EC F0                 2401 	movx	@dptr,a
   06ED A3                 2402 	inc	dptr
   06EE EB                 2403 	mov	a,r3
   06EF F0                 2404 	movx	@dptr,a
   06F0 A3                 2405 	inc	dptr
   06F1 EC                 2406 	mov	a,r4
   06F2 F0                 2407 	movx	@dptr,a
   06F3 88 82              2408 	mov	dpl,r0
   06F5 89 83              2409 	mov	dph,r1
   06F7 C0 05              2410 	push	ar5
   06F9 C0 06              2411 	push	ar6
   06FB C0 07              2412 	push	ar7
   06FD 12s02r41           2413 	lcall	_Succ
   0700 AA 82              2414 	mov	r2,dpl
   0702 AB 83              2415 	mov	r3,dph
   0704 D0 07              2416 	pop	ar7
   0706 D0 06              2417 	pop	ar6
   0708 D0 05              2418 	pop	ar5
   070A 8D 82              2419 	mov	dpl,r5
   070C 8E 83              2420 	mov	dph,r6
   070E 8F F0              2421 	mov	b,r7
   0710 EA                 2422 	mov	a,r2
   0711 12s00r00           2423 	lcall	__gptrput
   0714 A3                 2424 	inc	dptr
   0715 EB                 2425 	mov	a,r3
   0716 12s00r00           2426 	lcall	__gptrput
                           2427 ;	../src/projectSpecificHardwareInterface_C8051F040.c:453: Q->Array[Q->Rear] = charToSend ;
   0719 90s08rD4           2428 	mov	dptr,#_task_UART_putchar_projectSpecific_Q_2_2
   071C E0                 2429 	movx	a,@dptr
   071D FA                 2430 	mov	r2,a
   071E A3                 2431 	inc	dptr
   071F E0                 2432 	movx	a,@dptr
   0720 FB                 2433 	mov	r3,a
   0721 A3                 2434 	inc	dptr
   0722 E0                 2435 	movx	a,@dptr
   0723 FC                 2436 	mov	r4,a
   0724 74 08              2437 	mov	a,#0x08
   0726 2A                 2438 	add	a,r2
   0727 FD                 2439 	mov	r5,a
   0728 E4                 2440 	clr	a
   0729 3B                 2441 	addc	a,r3
   072A FE                 2442 	mov	r6,a
   072B 8C 07              2443 	mov	ar7,r4
   072D 8D 82              2444 	mov	dpl,r5
   072F 8E 83              2445 	mov	dph,r6
   0731 8F F0              2446 	mov	b,r7
   0733 12s00r00           2447 	lcall	__gptrget
   0736 FD                 2448 	mov	r5,a
   0737 A3                 2449 	inc	dptr
   0738 12s00r00           2450 	lcall	__gptrget
   073B FE                 2451 	mov	r6,a
   073C A3                 2452 	inc	dptr
   073D 12s00r00           2453 	lcall	__gptrget
   0740 FF                 2454 	mov	r7,a
   0741 74 04              2455 	mov	a,#0x04
   0743 2A                 2456 	add	a,r2
   0744 FA                 2457 	mov	r2,a
   0745 E4                 2458 	clr	a
   0746 3B                 2459 	addc	a,r3
   0747 FB                 2460 	mov	r3,a
   0748 8A 82              2461 	mov	dpl,r2
   074A 8B 83              2462 	mov	dph,r3
   074C 8C F0              2463 	mov	b,r4
   074E 12s00r00           2464 	lcall	__gptrget
   0751 FA                 2465 	mov	r2,a
   0752 A3                 2466 	inc	dptr
   0753 12s00r00           2467 	lcall	__gptrget
   0756 FB                 2468 	mov	r3,a
   0757 EA                 2469 	mov	a,r2
   0758 2D                 2470 	add	a,r5
   0759 FD                 2471 	mov	r5,a
   075A EB                 2472 	mov	a,r3
   075B 3E                 2473 	addc	a,r6
   075C FE                 2474 	mov	r6,a
   075D 90s08rD2           2475 	mov	dptr,#_task_UART_putchar_projectSpecific_PARM_2
   0760 E0                 2476 	movx	a,@dptr
   0761 8D 82              2477 	mov	dpl,r5
   0763 8E 83              2478 	mov	dph,r6
   0765 8F F0              2479 	mov	b,r7
   0767 12s00r00           2480 	lcall	__gptrput
                           2481 ;	../src/projectSpecificHardwareInterface_C8051F040.c:455: portENABLE_INTERRUPTS() ;
   076A D2 AF              2482 	setb	_EA
                           2483 ;	../src/projectSpecificHardwareInterface_C8051F040.c:457: return true ;
   076C D3                 2484 	setb	c
   076D 22                 2485 	ret
   076E                    2486 00104$:
                           2487 ;	../src/projectSpecificHardwareInterface_C8051F040.c:461: portENABLE_INTERRUPTS() ;
   076E D2 AF              2488 	setb	_EA
                           2489 ;	../src/projectSpecificHardwareInterface_C8051F040.c:465: return false ;
   0770 C3                 2490 	clr	c
   0771 22                 2491 	ret
                           2492 ;------------------------------------------------------------
                           2493 ;Allocation info for local variables in function 'task_UART_puts_projectSpecific'
                           2494 ;------------------------------------------------------------
                           2495 ;buffer                    Allocated with name '_task_UART_puts_projectSpecific_PARM_2'
                           2496 ;channelNumber             Allocated with name '_task_UART_puts_projectSpecific_channelNumber_1_1'
                           2497 ;myBuffer                  Allocated with name '_task_UART_puts_projectSpecific_myBuffer_2_2'
                           2498 ;------------------------------------------------------------
                           2499 ;	../src/projectSpecificHardwareInterface_C8051F040.c:469: void task_UART_puts_projectSpecific(	unsigned char channelNumber, const char *buffer)
                           2500 ;	-----------------------------------------
                           2501 ;	 function task_UART_puts_projectSpecific
                           2502 ;	-----------------------------------------
   0772                    2503 _task_UART_puts_projectSpecific:
   0772 E5 82              2504 	mov	a,dpl
   0774 90s08rDA           2505 	mov	dptr,#_task_UART_puts_projectSpecific_channelNumber_1_1
   0777 F0                 2506 	movx	@dptr,a
                           2507 ;	../src/projectSpecificHardwareInterface_C8051F040.c:471: if(channelNumber < NUMBER_OF_UARTS)
   0778 90s08rDA           2508 	mov	dptr,#_task_UART_puts_projectSpecific_channelNumber_1_1
   077B E0                 2509 	movx	a,@dptr
   077C FA                 2510 	mov	r2,a
   077D BA 01 00           2511 	cjne	r2,#0x01,00119$
   0780                    2512 00119$:
   0780 50 6C              2513 	jnc	00112$
                           2514 ;	../src/projectSpecificHardwareInterface_C8051F040.c:473: unsigned char* myBuffer = buffer ;
   0782 90s08rD7           2515 	mov	dptr,#_task_UART_puts_projectSpecific_PARM_2
   0785 E0                 2516 	movx	a,@dptr
   0786 FB                 2517 	mov	r3,a
   0787 A3                 2518 	inc	dptr
   0788 E0                 2519 	movx	a,@dptr
   0789 FC                 2520 	mov	r4,a
   078A A3                 2521 	inc	dptr
   078B E0                 2522 	movx	a,@dptr
   078C FD                 2523 	mov	r5,a
                           2524 ;	../src/projectSpecificHardwareInterface_C8051F040.c:475: while(*myBuffer)
   078D 8A 06              2525 	mov	ar6,r2
   078F                    2526 00107$:
   078F 8B 82              2527 	mov	dpl,r3
   0791 8C 83              2528 	mov	dph,r4
   0793 8D F0              2529 	mov	b,r5
   0795 12s00r00           2530 	lcall	__gptrget
   0798 FF                 2531 	mov	r7,a
   0799 60 53              2532 	jz	00112$
                           2533 ;	../src/projectSpecificHardwareInterface_C8051F040.c:477: if((*myBuffer) == '\n')
   079B BF 0A 21           2534 	cjne	r7,#0x0A,00104$
                           2535 ;	../src/projectSpecificHardwareInterface_C8051F040.c:479: if(!task_UART_putchar(channelNumber, '\r'))
   079E 90s00r00           2536 	mov	dptr,#_task_UART_putchar_PARM_2
   07A1 74 0D              2537 	mov	a,#0x0D
   07A3 F0                 2538 	movx	@dptr,a
   07A4 8E 82              2539 	mov	dpl,r6
   07A6 C0 02              2540 	push	ar2
   07A8 C0 03              2541 	push	ar3
   07AA C0 04              2542 	push	ar4
   07AC C0 05              2543 	push	ar5
   07AE C0 06              2544 	push	ar6
   07B0 12s00r00           2545 	lcall	_task_UART_putchar
   07B3 D0 06              2546 	pop	ar6
   07B5 D0 05              2547 	pop	ar5
   07B7 D0 04              2548 	pop	ar4
   07B9 D0 03              2549 	pop	ar3
   07BB D0 02              2550 	pop	ar2
   07BD 50 2F              2551 	jnc	00112$
                           2552 ;	../src/projectSpecificHardwareInterface_C8051F040.c:481: break ;
   07BF                    2553 00104$:
                           2554 ;	../src/projectSpecificHardwareInterface_C8051F040.c:485: if(!task_UART_putchar(channelNumber, *myBuffer++))
   07BF 8B 82              2555 	mov	dpl,r3
   07C1 8C 83              2556 	mov	dph,r4
   07C3 8D F0              2557 	mov	b,r5
   07C5 12s00r00           2558 	lcall	__gptrget
   07C8 FF                 2559 	mov	r7,a
   07C9 A3                 2560 	inc	dptr
   07CA AB 82              2561 	mov	r3,dpl
   07CC AC 83              2562 	mov	r4,dph
   07CE 90s00r00           2563 	mov	dptr,#_task_UART_putchar_PARM_2
   07D1 EF                 2564 	mov	a,r7
   07D2 F0                 2565 	movx	@dptr,a
   07D3 8A 82              2566 	mov	dpl,r2
   07D5 C0 02              2567 	push	ar2
   07D7 C0 03              2568 	push	ar3
   07D9 C0 04              2569 	push	ar4
   07DB C0 05              2570 	push	ar5
   07DD C0 06              2571 	push	ar6
   07DF 12s00r00           2572 	lcall	_task_UART_putchar
   07E2 D0 06              2573 	pop	ar6
   07E4 D0 05              2574 	pop	ar5
   07E6 D0 04              2575 	pop	ar4
   07E8 D0 03              2576 	pop	ar3
   07EA D0 02              2577 	pop	ar2
   07EC 40 A1              2578 	jc	00107$
                           2579 ;	../src/projectSpecificHardwareInterface_C8051F040.c:487: break ;
   07EE                    2580 00112$:
   07EE 22                 2581 	ret
                           2582 ;------------------------------------------------------------
                           2583 ;Allocation info for local variables in function 'task_UART_getchar_projectSpecific'
                           2584 ;------------------------------------------------------------
                           2585 ;sloc0                     Allocated with name '_task_UART_getchar_projectSpecific_sloc0_1_0'
                           2586 ;sloc1                     Allocated with name '_task_UART_getchar_projectSpecific_sloc1_1_0'
                           2587 ;sloc2                     Allocated with name '_task_UART_getchar_projectSpecific_sloc2_1_0'
                           2588 ;channelNumber             Allocated with name '_task_UART_getchar_projectSpecific_channelNumber_1_1'
                           2589 ;Q                         Allocated with name '_task_UART_getchar_projectSpecific_Q_2_2'
                           2590 ;byteReceived              Allocated with name '_task_UART_getchar_projectSpecific_byteReceived_3_3'
                           2591 ;------------------------------------------------------------
                           2592 ;	../src/projectSpecificHardwareInterface_C8051F040.c:494: char task_UART_getchar_projectSpecific(	unsigned char channelNumber)
                           2593 ;	-----------------------------------------
                           2594 ;	 function task_UART_getchar_projectSpecific
                           2595 ;	-----------------------------------------
   07EF                    2596 _task_UART_getchar_projectSpecific:
   07EF E5 82              2597 	mov	a,dpl
   07F1 90s08rDB           2598 	mov	dptr,#_task_UART_getchar_projectSpecific_channelNumber_1_1
   07F4 F0                 2599 	movx	@dptr,a
                           2600 ;	../src/projectSpecificHardwareInterface_C8051F040.c:496: if(channelNumber < NUMBER_OF_UARTS)
   07F5 90s08rDB           2601 	mov	dptr,#_task_UART_getchar_projectSpecific_channelNumber_1_1
   07F8 E0                 2602 	movx	a,@dptr
   07F9 FA                 2603 	mov	r2,a
   07FA BA 01 00           2604 	cjne	r2,#0x01,00109$
   07FD                    2605 00109$:
   07FD 40 03              2606 	jc	00110$
   07FF 02s08rE6           2607 	ljmp	00104$
   0802                    2608 00110$:
                           2609 ;	../src/projectSpecificHardwareInterface_C8051F040.c:498: QUEUE_TYPE*	Q = &receiveBuffers[channelNumber] ;
   0802 EA                 2610 	mov	a,r2
   0803 75 F0 0B           2611 	mov	b,#0x0B
   0806 A4                 2612 	mul	ab
   0807 24rC0              2613 	add	a,#_receiveBuffers
   0809 FA                 2614 	mov	r2,a
   080A E4                 2615 	clr	a
   080B 34s08              2616 	addc	a,#(_receiveBuffers >> 8)
   080D FB                 2617 	mov	r3,a
   080E 7C 00              2618 	mov	r4,#0x00
   0810 90s08rDC           2619 	mov	dptr,#_task_UART_getchar_projectSpecific_Q_2_2
   0813 EA                 2620 	mov	a,r2
   0814 F0                 2621 	movx	@dptr,a
   0815 A3                 2622 	inc	dptr
   0816 EB                 2623 	mov	a,r3
   0817 F0                 2624 	movx	@dptr,a
   0818 A3                 2625 	inc	dptr
   0819 EC                 2626 	mov	a,r4
   081A F0                 2627 	movx	@dptr,a
                           2628 ;	../src/projectSpecificHardwareInterface_C8051F040.c:500: if(!IsEmpty(Q))
   081B 8A 82              2629 	mov	dpl,r2
   081D 8B 83              2630 	mov	dph,r3
   081F 8C F0              2631 	mov	b,r4
   0821 12s01rB3           2632 	lcall	_IsEmpty
   0824 E5 82              2633 	mov	a,dpl
   0826 60 03              2634 	jz	00111$
   0828 02s08rE6           2635 	ljmp	00104$
   082B                    2636 00111$:
                           2637 ;	../src/projectSpecificHardwareInterface_C8051F040.c:502: unsigned char byteReceived = Q->Array[Q->Front] ;
   082B 90s08rDC           2638 	mov	dptr,#_task_UART_getchar_projectSpecific_Q_2_2
   082E E0                 2639 	movx	a,@dptr
   082F FA                 2640 	mov	r2,a
   0830 A3                 2641 	inc	dptr
   0831 E0                 2642 	movx	a,@dptr
   0832 FB                 2643 	mov	r3,a
   0833 A3                 2644 	inc	dptr
   0834 E0                 2645 	movx	a,@dptr
   0835 FC                 2646 	mov	r4,a
   0836 74 08              2647 	mov	a,#0x08
   0838 2A                 2648 	add	a,r2
   0839 FD                 2649 	mov	r5,a
   083A E4                 2650 	clr	a
   083B 3B                 2651 	addc	a,r3
   083C FE                 2652 	mov	r6,a
   083D 8C 07              2653 	mov	ar7,r4
   083F 8D 82              2654 	mov	dpl,r5
   0841 8E 83              2655 	mov	dph,r6
   0843 8F F0              2656 	mov	b,r7
   0845 12s00r00           2657 	lcall	__gptrget
   0848 F5*09              2658 	mov	_task_UART_getchar_projectSpecific_sloc0_1_0,a
   084A A3                 2659 	inc	dptr
   084B 12s00r00           2660 	lcall	__gptrget
   084E F5*0A              2661 	mov	(_task_UART_getchar_projectSpecific_sloc0_1_0 + 1),a
   0850 A3                 2662 	inc	dptr
   0851 12s00r00           2663 	lcall	__gptrget
   0854 F5*0B              2664 	mov	(_task_UART_getchar_projectSpecific_sloc0_1_0 + 2),a
   0856 74 02              2665 	mov	a,#0x02
   0858 2A                 2666 	add	a,r2
   0859 F5*0E              2667 	mov	_task_UART_getchar_projectSpecific_sloc2_1_0,a
   085B E4                 2668 	clr	a
   085C 3B                 2669 	addc	a,r3
   085D F5*0F              2670 	mov	(_task_UART_getchar_projectSpecific_sloc2_1_0 + 1),a
   085F 8C*10              2671 	mov	(_task_UART_getchar_projectSpecific_sloc2_1_0 + 2),r4
   0861 85*0E 82           2672 	mov	dpl,_task_UART_getchar_projectSpecific_sloc2_1_0
   0864 85*0F 83           2673 	mov	dph,(_task_UART_getchar_projectSpecific_sloc2_1_0 + 1)
   0867 85*10 F0           2674 	mov	b,(_task_UART_getchar_projectSpecific_sloc2_1_0 + 2)
   086A 12s00r00           2675 	lcall	__gptrget
   086D F5*0C              2676 	mov	_task_UART_getchar_projectSpecific_sloc1_1_0,a
   086F A3                 2677 	inc	dptr
   0870 12s00r00           2678 	lcall	__gptrget
   0873 F5*0D              2679 	mov	(_task_UART_getchar_projectSpecific_sloc1_1_0 + 1),a
   0875 E5*0C              2680 	mov	a,_task_UART_getchar_projectSpecific_sloc1_1_0
   0877 25*09              2681 	add	a,_task_UART_getchar_projectSpecific_sloc0_1_0
   0879 FE                 2682 	mov	r6,a
   087A E5*0D              2683 	mov	a,(_task_UART_getchar_projectSpecific_sloc1_1_0 + 1)
   087C 35*0A              2684 	addc	a,(_task_UART_getchar_projectSpecific_sloc0_1_0 + 1)
   087E FF                 2685 	mov	r7,a
   087F AD*0B              2686 	mov	r5,(_task_UART_getchar_projectSpecific_sloc0_1_0 + 2)
   0881 8E 82              2687 	mov	dpl,r6
   0883 8F 83              2688 	mov	dph,r7
   0885 8D F0              2689 	mov	b,r5
   0887 12s00r00           2690 	lcall	__gptrget
   088A F5*09              2691 	mov	_task_UART_getchar_projectSpecific_sloc0_1_0,a
                           2692 ;	../src/projectSpecificHardwareInterface_C8051F040.c:504: Q->Size-- ;
   088C 74 06              2693 	mov	a,#0x06
   088E 2A                 2694 	add	a,r2
   088F FD                 2695 	mov	r5,a
   0890 E4                 2696 	clr	a
   0891 3B                 2697 	addc	a,r3
   0892 FF                 2698 	mov	r7,a
   0893 8C 00              2699 	mov	ar0,r4
   0895 8D 82              2700 	mov	dpl,r5
   0897 8F 83              2701 	mov	dph,r7
   0899 88 F0              2702 	mov	b,r0
   089B 12s00r00           2703 	lcall	__gptrget
   089E F9                 2704 	mov	r1,a
   089F A3                 2705 	inc	dptr
   08A0 12s00r00           2706 	lcall	__gptrget
   08A3 FE                 2707 	mov	r6,a
   08A4 19                 2708 	dec	r1
   08A5 B9 FF 01           2709 	cjne	r1,#0xff,00112$
   08A8 1E                 2710 	dec	r6
   08A9                    2711 00112$:
   08A9 8D 82              2712 	mov	dpl,r5
   08AB 8F 83              2713 	mov	dph,r7
   08AD 88 F0              2714 	mov	b,r0
   08AF E9                 2715 	mov	a,r1
   08B0 12s00r00           2716 	lcall	__gptrput
   08B3 A3                 2717 	inc	dptr
   08B4 EE                 2718 	mov	a,r6
   08B5 12s00r00           2719 	lcall	__gptrput
                           2720 ;	../src/projectSpecificHardwareInterface_C8051F040.c:505: Q->Front = Succ(Q->Front, Q) ;
   08B8 90s04r58           2721 	mov	dptr,#_Succ_PARM_2
   08BB EA                 2722 	mov	a,r2
   08BC F0                 2723 	movx	@dptr,a
   08BD A3                 2724 	inc	dptr
   08BE EB                 2725 	mov	a,r3
   08BF F0                 2726 	movx	@dptr,a
   08C0 A3                 2727 	inc	dptr
   08C1 EC                 2728 	mov	a,r4
   08C2 F0                 2729 	movx	@dptr,a
   08C3 85*0C 82           2730 	mov	dpl,_task_UART_getchar_projectSpecific_sloc1_1_0
   08C6 85*0D 83           2731 	mov	dph,(_task_UART_getchar_projectSpecific_sloc1_1_0 + 1)
   08C9 12s02r41           2732 	lcall	_Succ
   08CC AA 82              2733 	mov	r2,dpl
   08CE AB 83              2734 	mov	r3,dph
   08D0 85*0E 82           2735 	mov	dpl,_task_UART_getchar_projectSpecific_sloc2_1_0
   08D3 85*0F 83           2736 	mov	dph,(_task_UART_getchar_projectSpecific_sloc2_1_0 + 1)
   08D6 85*10 F0           2737 	mov	b,(_task_UART_getchar_projectSpecific_sloc2_1_0 + 2)
   08D9 EA                 2738 	mov	a,r2
   08DA 12s00r00           2739 	lcall	__gptrput
   08DD A3                 2740 	inc	dptr
   08DE EB                 2741 	mov	a,r3
   08DF 12s00r00           2742 	lcall	__gptrput
                           2743 ;	../src/projectSpecificHardwareInterface_C8051F040.c:507: return byteReceived ;
   08E2 85*09 82           2744 	mov	dpl,_task_UART_getchar_projectSpecific_sloc0_1_0
                           2745 ;	../src/projectSpecificHardwareInterface_C8051F040.c:511: return -1 ;
   08E5 22                 2746 	ret
   08E6                    2747 00104$:
   08E6 75 82 FF           2748 	mov	dpl,#0xFF
   08E9 22                 2749 	ret
                           2750 ;------------------------------------------------------------
                           2751 ;Allocation info for local variables in function 'task_UART_gets_projectSpecific'
                           2752 ;------------------------------------------------------------
                           2753 ;sloc0                     Allocated with name '_task_UART_gets_projectSpecific_sloc0_1_0'
                           2754 ;sloc1                     Allocated with name '_task_UART_gets_projectSpecific_sloc1_1_0'
                           2755 ;buffer                    Allocated with name '_task_UART_gets_projectSpecific_PARM_2'
                           2756 ;maxBufferLength           Allocated with name '_task_UART_gets_projectSpecific_PARM_3'
                           2757 ;channelNumber             Allocated with name '_task_UART_gets_projectSpecific_channelNumber_1_1'
                           2758 ;charsReturned             Allocated with name '_task_UART_gets_projectSpecific_charsReturned_2_2'
                           2759 ;latestCharInBuffer        Allocated with name '_task_UART_gets_projectSpecific_latestCharInBuffer_3_3'
                           2760 ;------------------------------------------------------------
                           2761 ;	../src/projectSpecificHardwareInterface_C8051F040.c:515: char* task_UART_gets_projectSpecific(	unsigned char channelNumber, char* buffer, unsigned short maxBufferLength)
                           2762 ;	-----------------------------------------
                           2763 ;	 function task_UART_gets_projectSpecific
                           2764 ;	-----------------------------------------
   08EA                    2765 _task_UART_gets_projectSpecific:
   08EA E5 82              2766 	mov	a,dpl
   08EC 90s08rE4           2767 	mov	dptr,#_task_UART_gets_projectSpecific_channelNumber_1_1
   08EF F0                 2768 	movx	@dptr,a
                           2769 ;	../src/projectSpecificHardwareInterface_C8051F040.c:517: if(channelNumber < NUMBER_OF_UARTS)
   08F0 90s08rE4           2770 	mov	dptr,#_task_UART_gets_projectSpecific_channelNumber_1_1
   08F3 E0                 2771 	movx	a,@dptr
   08F4 FA                 2772 	mov	r2,a
   08F5 BA 01 00           2773 	cjne	r2,#0x01,00119$
   08F8                    2774 00119$:
   08F8 50 74              2775 	jnc	00110$
                           2776 ;	../src/projectSpecificHardwareInterface_C8051F040.c:521: while(charsReturned < maxBufferLength)
   08FA 90s08rE2           2777 	mov	dptr,#_task_UART_gets_projectSpecific_PARM_3
   08FD E0                 2778 	movx	a,@dptr
   08FE F5*12              2779 	mov	_task_UART_gets_projectSpecific_sloc1_1_0,a
   0900 A3                 2780 	inc	dptr
   0901 E0                 2781 	movx	a,@dptr
   0902 F5*13              2782 	mov	(_task_UART_gets_projectSpecific_sloc1_1_0 + 1),a
   0904 90s08rDF           2783 	mov	dptr,#_task_UART_gets_projectSpecific_PARM_2
   0907 E0                 2784 	movx	a,@dptr
   0908 FD                 2785 	mov	r5,a
   0909 A3                 2786 	inc	dptr
   090A E0                 2787 	movx	a,@dptr
   090B FE                 2788 	mov	r6,a
   090C A3                 2789 	inc	dptr
   090D E0                 2790 	movx	a,@dptr
   090E FF                 2791 	mov	r7,a
   090F 78 00              2792 	mov	r0,#0x00
   0911 79 00              2793 	mov	r1,#0x00
   0913                    2794 00106$:
   0913 C3                 2795 	clr	c
   0914 E8                 2796 	mov	a,r0
   0915 95*12              2797 	subb	a,_task_UART_gets_projectSpecific_sloc1_1_0
   0917 E9                 2798 	mov	a,r1
   0918 95*13              2799 	subb	a,(_task_UART_gets_projectSpecific_sloc1_1_0 + 1)
   091A 50 52              2800 	jnc	00110$
                           2801 ;	../src/projectSpecificHardwareInterface_C8051F040.c:523: char latestCharInBuffer = task_UART_getchar(channelNumber) ;
   091C 8A 82              2802 	mov	dpl,r2
   091E C0 02              2803 	push	ar2
   0920 C0 05              2804 	push	ar5
   0922 C0 06              2805 	push	ar6
   0924 C0 07              2806 	push	ar7
   0926 C0 00              2807 	push	ar0
   0928 C0 01              2808 	push	ar1
   092A 12s00r00           2809 	lcall	_task_UART_getchar
   092D 85 82*11           2810 	mov	_task_UART_gets_projectSpecific_sloc0_1_0,dpl
   0930 D0 01              2811 	pop	ar1
   0932 D0 00              2812 	pop	ar0
   0934 D0 07              2813 	pop	ar7
   0936 D0 06              2814 	pop	ar6
   0938 D0 05              2815 	pop	ar5
   093A D0 02              2816 	pop	ar2
                           2817 ;	../src/projectSpecificHardwareInterface_C8051F040.c:525: if(latestCharInBuffer <= 0)	// break on a NULL or a -1
   093C C3                 2818 	clr	c
   093D 74 80              2819 	mov	a,#(0x00 ^ 0x80)
   093F 85*11 F0           2820 	mov	b,_task_UART_gets_projectSpecific_sloc0_1_0
   0942 63 F0 80           2821 	xrl	b,#0x80
   0945 95 F0              2822 	subb	a,b
   0947 50 25              2823 	jnc	00110$
                           2824 ;	../src/projectSpecificHardwareInterface_C8051F040.c:529: else if(latestCharInBuffer == '\r')	// Skip carriage returns
   0949 74 0D              2825 	mov	a,#0x0D
   094B B5*11 02           2826 	cjne	a,_task_UART_gets_projectSpecific_sloc0_1_0,00123$
   094E 80 C3              2827 	sjmp	00106$
   0950                    2828 00123$:
                           2829 ;	../src/projectSpecificHardwareInterface_C8051F040.c:534: buffer[charsReturned] = latestCharInBuffer ;
   0950 C0 02              2830 	push	ar2
   0952 E8                 2831 	mov	a,r0
   0953 2D                 2832 	add	a,r5
   0954 FA                 2833 	mov	r2,a
   0955 E9                 2834 	mov	a,r1
   0956 3E                 2835 	addc	a,r6
   0957 FB                 2836 	mov	r3,a
   0958 8F 04              2837 	mov	ar4,r7
   095A 8A 82              2838 	mov	dpl,r2
   095C 8B 83              2839 	mov	dph,r3
   095E 8C F0              2840 	mov	b,r4
   0960 E5*11              2841 	mov	a,_task_UART_gets_projectSpecific_sloc0_1_0
   0962 12s00r00           2842 	lcall	__gptrput
                           2843 ;	../src/projectSpecificHardwareInterface_C8051F040.c:536: charsReturned++ ;
   0965 08                 2844 	inc	r0
   0966 B8 00 01           2845 	cjne	r0,#0x00,00124$
   0969 09                 2846 	inc	r1
   096A                    2847 00124$:
   096A D0 02              2848 	pop	ar2
   096C 80 A5              2849 	sjmp	00106$
   096E                    2850 00110$:
                           2851 ;	../src/projectSpecificHardwareInterface_C8051F040.c:540: return 0 ;
   096E 90 00 00           2852 	mov	dptr,#0x0000
   0971 75 F0 00           2853 	mov	b,#0x00
   0974 22                 2854 	ret
                           2855 ;------------------------------------------------------------
                           2856 ;Allocation info for local variables in function 'task_UART_isLineReady'
                           2857 ;------------------------------------------------------------
                           2858 ;channelNumber             Allocated with name '_task_UART_isLineReady_channelNumber_1_1'
                           2859 ;------------------------------------------------------------
                           2860 ;	../src/projectSpecificHardwareInterface_C8051F040.c:544: bool task_UART_isLineReady(	unsigned char channelNumber)
                           2861 ;	-----------------------------------------
                           2862 ;	 function task_UART_isLineReady
                           2863 ;	-----------------------------------------
   0975                    2864 _task_UART_isLineReady:
   0975 E5 82              2865 	mov	a,dpl
   0977 90s08rE5           2866 	mov	dptr,#_task_UART_isLineReady_channelNumber_1_1
   097A F0                 2867 	movx	@dptr,a
                           2868 ;	../src/projectSpecificHardwareInterface_C8051F040.c:546: return lineReady[channelNumber] ;
   097B 90s08rE5           2869 	mov	dptr,#_task_UART_isLineReady_channelNumber_1_1
   097E E0                 2870 	movx	a,@dptr
   097F 24rCC              2871 	add	a,#_lineReady
   0981 F5 82              2872 	mov	dpl,a
   0983 E4                 2873 	clr	a
   0984 34s08              2874 	addc	a,#(_lineReady >> 8)
   0986 F5 83              2875 	mov	dph,a
   0988 E0                 2876 	movx	a,@dptr
   0989 24 FF              2877 	add	a,#0xff
   098B 92*04              2878 	mov  _task_UART_isLineReady_sloc0_1_0,c
   098D 22                 2879 	ret
                           2880 ;------------------------------------------------------------
                           2881 ;Allocation info for local variables in function 'UART0_Init'
                           2882 ;------------------------------------------------------------
                           2883 ;SFRPAGE_SAVE              Allocated with name '_UART0_Init_SFRPAGE_SAVE_1_1'
                           2884 ;------------------------------------------------------------
                           2885 ;	../src/projectSpecificHardwareInterface_C8051F040.c:550: void UART0_Init(void)
                           2886 ;	-----------------------------------------
                           2887 ;	 function UART0_Init
                           2888 ;	-----------------------------------------
   098E                    2889 _UART0_Init:
                           2890 ;	../src/projectSpecificHardwareInterface_C8051F040.c:554: SFRPAGE_SAVE = SFRPAGE;             // Preserve SFRPAGE
   098E AA 84              2891 	mov	r2,_SFRPAGE
                           2892 ;	../src/projectSpecificHardwareInterface_C8051F040.c:556: SFRPAGE = UART0_PAGE;
   0990 75 84 00           2893 	mov	_SFRPAGE,#0x00
                           2894 ;	../src/projectSpecificHardwareInterface_C8051F040.c:558: SCON0 = 0x52;                       // 8-bit variable baud rate;
   0993 75 98 52           2895 	mov	_SCON0,#0x52
                           2896 ;	../src/projectSpecificHardwareInterface_C8051F040.c:561: SSTA0 = 0x10;                       // Clear all flags; enable baud rate
   0996 75 91 10           2897 	mov	_SSTA0,#0x10
                           2898 ;	../src/projectSpecificHardwareInterface_C8051F040.c:568: SFRPAGE = SFRPAGE_SAVE;
   0999 8A 84              2899 	mov	_SFRPAGE,r2
   099B 22                 2900 	ret
                           2901 ;------------------------------------------------------------
                           2902 ;Allocation info for local variables in function 'UART1_Init'
                           2903 ;------------------------------------------------------------
                           2904 ;SFRPAGE_SAVE              Allocated with name '_UART1_Init_SFRPAGE_SAVE_2_2'
                           2905 ;------------------------------------------------------------
                           2906 ;	../src/projectSpecificHardwareInterface_C8051F040.c:589: void UART1_Init(void)
                           2907 ;	-----------------------------------------
                           2908 ;	 function UART1_Init
                           2909 ;	-----------------------------------------
   099C                    2910 _UART1_Init:
                           2911 ;	../src/projectSpecificHardwareInterface_C8051F040.c:591: portSET_REGISTER_GROUP(UART1_PAGE)
   099C AA 84              2912 	mov	r2,_SFRPAGE
   099E 75 84 01           2913 	mov	_SFRPAGE,#0x01
                           2914 ;	../src/projectSpecificHardwareInterface_C8051F040.c:593: SCON1 = 0x10 ;	// 8-bit variable baud rate;
   09A1 75 98 10           2915 	mov	_SCON1,#0x10
                           2916 ;	../src/projectSpecificHardwareInterface_C8051F040.c:599: portRESTORE_REGISTER_GROUP()
   09A4 8A 84              2917 	mov	_SFRPAGE,r2
   09A6 22                 2918 	ret
                           2919 ;------------------------------------------------------------
                           2920 ;Allocation info for local variables in function 'putchar'
                           2921 ;------------------------------------------------------------
                           2922 ;c                         Allocated with name '_putchar_c_1_1'
                           2923 ;------------------------------------------------------------
                           2924 ;	../src/projectSpecificHardwareInterface_C8051F040.c:603: void putchar(char c)
                           2925 ;	-----------------------------------------
                           2926 ;	 function putchar
                           2927 ;	-----------------------------------------
   09A7                    2928 _putchar:
   09A7 E5 82              2929 	mov	a,dpl
   09A9 90s08rE6           2930 	mov	dptr,#_putchar_c_1_1
   09AC F0                 2931 	movx	@dptr,a
                           2932 ;	../src/projectSpecificHardwareInterface_C8051F040.c:605: if(c == '\n')
   09AD 90s08rE6           2933 	mov	dptr,#_putchar_c_1_1
   09B0 E0                 2934 	movx	a,@dptr
   09B1 FA                 2935 	mov	r2,a
   09B2 BA 0A 0C           2936 	cjne	r2,#0x0A,00102$
                           2937 ;	../src/projectSpecificHardwareInterface_C8051F040.c:607: task_UART_putchar(0, '\r') ;
   09B5 90s00r00           2938 	mov	dptr,#_task_UART_putchar_PARM_2
   09B8 74 0D              2939 	mov	a,#0x0D
   09BA F0                 2940 	movx	@dptr,a
   09BB 75 82 00           2941 	mov	dpl,#0x00
   09BE 12s00r00           2942 	lcall	_task_UART_putchar
   09C1                    2943 00102$:
                           2944 ;	../src/projectSpecificHardwareInterface_C8051F040.c:610: task_UART_putchar(0, c) ;
   09C1 90s08rE6           2945 	mov	dptr,#_putchar_c_1_1
   09C4 E0                 2946 	movx	a,@dptr
   09C5 90s00r00           2947 	mov	dptr,#_task_UART_putchar_PARM_2
   09C8 F0                 2948 	movx	@dptr,a
   09C9 75 82 00           2949 	mov	dpl,#0x00
   09CC 02s00r00           2950 	ljmp	_task_UART_putchar
                           2951 ;------------------------------------------------------------
                           2952 ;Allocation info for local variables in function 'prvSetupSystemClock'
                           2953 ;------------------------------------------------------------
                           2954 ;n                         Allocated with name '_prvSetupSystemClock_n_1_1'
                           2955 ;------------------------------------------------------------
                           2956 ;	../src/projectSpecificHardwareInterface_C8051F040.c:632: static void prvSetupSystemClock( void )
                           2957 ;	-----------------------------------------
                           2958 ;	 function prvSetupSystemClock
                           2959 ;	-----------------------------------------
   09CF                    2960 _prvSetupSystemClock:
                           2961 ;	../src/projectSpecificHardwareInterface_C8051F040.c:635: SFRPAGE = CONFIG_PAGE ;			// switch to config page to config oscillator
   09CF 75 84 0F           2962 	mov	_SFRPAGE,#0x0F
                           2963 ;	../src/projectSpecificHardwareInterface_C8051F040.c:637: OSCXCN = 0x77 ;					// start external oscillator; 24 MHz Crystal
   09D2 75 8C 77           2964 	mov	_OSCXCN,#0x77
                           2965 ;	../src/projectSpecificHardwareInterface_C8051F040.c:641: for( n = 0 ; n < 255 ; n++ ) ;	// delay about 1ms
   09D5 7A FF              2966 	mov	r2,#0xFF
   09D7 7B 00              2967 	mov	r3,#0x00
   09D9                    2968 00106$:
   09D9 1A                 2969 	dec	r2
   09DA BA FF 01           2970 	cjne	r2,#0xff,00114$
   09DD 1B                 2971 	dec	r3
   09DE                    2972 00114$:
   09DE EA                 2973 	mov	a,r2
   09DF 4B                 2974 	orl	a,r3
   09E0 70 F7              2975 	jnz	00106$
                           2976 ;	../src/projectSpecificHardwareInterface_C8051F040.c:642: while((OSCXCN & 0x80) == 0) ;	// wait for oscillator to stabilize
   09E2                    2977 00101$:
   09E2 E5 8C              2978 	mov	a,_OSCXCN
   09E4 30 E7 FB           2979 	jnb	acc.7,00101$
                           2980 ;	../src/projectSpecificHardwareInterface_C8051F040.c:644: CLKSEL |= 0x01 ;				// switch to external oscillator
   09E7 43 97 01           2981 	orl	_CLKSEL,#0x01
                           2982 ;	../src/projectSpecificHardwareInterface_C8051F040.c:646: OSCICN = 0xC2 ;					// Turn off the internal oscillator to save a little power
   09EA 75 8A C2           2983 	mov	_OSCICN,#0xC2
   09ED 22                 2984 	ret
                           2985 ;------------------------------------------------------------
                           2986 ;Allocation info for local variables in function 'prvSetupTimerInterrupt'
                           2987 ;------------------------------------------------------------
                           2988 ;ucOriginalSFRPage         Allocated with name '_prvSetupTimerInterrupt_ucOriginalSFRPage_1_1'
                           2989 ;ulTicksPerSecond          Allocated with name '_prvSetupTimerInterrupt_ulTicksPerSecond_1_1'
                           2990 ;ulCaptureTime             Allocated with name '_prvSetupTimerInterrupt_ulCaptureTime_1_1'
                           2991 ;ulCaptureValue            Allocated with name '_prvSetupTimerInterrupt_ulCaptureValue_1_1'
                           2992 ;ucLowCaptureByte          Allocated with name '_prvSetupTimerInterrupt_ucLowCaptureByte_1_1'
                           2993 ;ucHighCaptureByte         Allocated with name '_prvSetupTimerInterrupt_ucHighCaptureByte_1_1'
                           2994 ;------------------------------------------------------------
                           2995 ;	../src/projectSpecificHardwareInterface_C8051F040.c:650: static void prvSetupTimerInterrupt( void )
                           2996 ;	-----------------------------------------
                           2997 ;	 function prvSetupTimerInterrupt
                           2998 ;	-----------------------------------------
   09EE                    2999 _prvSetupTimerInterrupt:
                           3000 ;	../src/projectSpecificHardwareInterface_C8051F040.c:664: ucOriginalSFRPage = SFRPAGE;
   09EE 90s08rE7           3001 	mov	dptr,#_prvSetupTimerInterrupt_ucOriginalSFRPage_1_1
   09F1 E5 84              3002 	mov	a,_SFRPAGE
   09F3 F0                 3003 	movx	@dptr,a
                           3004 ;	../src/projectSpecificHardwareInterface_C8051F040.c:665: SFRPAGE = 0;
   09F4 75 84 00           3005 	mov	_SFRPAGE,#0x00
                           3006 ;	../src/projectSpecificHardwareInterface_C8051F040.c:668: TMR2CF = ( unsigned char ) 0;
   09F7 75 C9 00           3007 	mov	_TMR2CF,#0x00
                           3008 ;	../src/projectSpecificHardwareInterface_C8051F040.c:671: RCAP2L = ucLowCaptureByte;
   09FA 75 CA D1           3009 	mov	_RCAP2L,#0xD1
                           3010 ;	../src/projectSpecificHardwareInterface_C8051F040.c:672: RCAP2H = ucHighCaptureByte;
   09FD 75 CB FF           3011 	mov	_RCAP2H,#0xFF
                           3012 ;	../src/projectSpecificHardwareInterface_C8051F040.c:675: TMR2L = ucLowCaptureByte;
   0A00 75 CC D1           3013 	mov	_TMR2L,#0xD1
                           3014 ;	../src/projectSpecificHardwareInterface_C8051F040.c:676: TMR2H = ucHighCaptureByte;
   0A03 75 CD FF           3015 	mov	_TMR2H,#0xFF
                           3016 ;	../src/projectSpecificHardwareInterface_C8051F040.c:679: IE |= portTIMER_2_INTERRUPT_ENABLE;
   0A06 43 A8 20           3017 	orl	_IE,#0x20
                           3018 ;	../src/projectSpecificHardwareInterface_C8051F040.c:682: TMR2CN = portENABLE_TIMER ;
   0A09 75 C8 06           3019 	mov	_TMR2CN,#0x06
                           3020 ;	../src/projectSpecificHardwareInterface_C8051F040.c:685: SFRPAGE	= 1 ;
   0A0C 75 84 01           3021 	mov	_SFRPAGE,#0x01
                           3022 ;	../src/projectSpecificHardwareInterface_C8051F040.c:686: TMR3CF	= 0x0A ;
   0A0F 75 C9 0A           3023 	mov	_TMR3CF,#0x0A
                           3024 ;	../src/projectSpecificHardwareInterface_C8051F040.c:688: RCAP3L	= 0xCE ;	// 120kHz on boost boards
   0A12 75 CA CE           3025 	mov	_RCAP3L,#0xCE
                           3026 ;	../src/projectSpecificHardwareInterface_C8051F040.c:689: RCAP3H	= 0xFF ;	// 120kHz on boost boards
   0A15 75 CB FF           3027 	mov	_RCAP3H,#0xFF
                           3028 ;	../src/projectSpecificHardwareInterface_C8051F040.c:691: TMR3L	= 0xF0 ;
   0A18 75 CC F0           3029 	mov	_TMR3L,#0xF0
                           3030 ;	../src/projectSpecificHardwareInterface_C8051F040.c:692: TMR3H	= 0xFF ;
   0A1B 75 CD FF           3031 	mov	_TMR3H,#0xFF
                           3032 ;	../src/projectSpecificHardwareInterface_C8051F040.c:693: TMR3CN	= 0x04 ;
   0A1E 75 C8 04           3033 	mov	_TMR3CN,#0x04
                           3034 ;	../src/projectSpecificHardwareInterface_C8051F040.c:697: SFRPAGE = ucOriginalSFRPage;
   0A21 90s08rE7           3035 	mov	dptr,#_prvSetupTimerInterrupt_ucOriginalSFRPage_1_1
   0A24 E0                 3036 	movx	a,@dptr
   0A25 F5 84              3037 	mov	_SFRPAGE,a
   0A27 22                 3038 	ret
                           3039 ;------------------------------------------------------------
                           3040 ;Allocation info for local variables in function 'addTickCounter'
                           3041 ;------------------------------------------------------------
                           3042 ;pointerToIncrement        Allocated with name '_addTickCounter_pointerToIncrement_1_1'
                           3043 ;i                         Allocated with name '_addTickCounter_i_1_1'
                           3044 ;sloc0                     Allocated with name '_addTickCounter_sloc0_1_0'
                           3045 ;------------------------------------------------------------
                           3046 ;	../src/projectSpecificHardwareInterface_C8051F040.c:705: void addTickCounter(							unsigned short* pointerToIncrement)
                           3047 ;	-----------------------------------------
                           3048 ;	 function addTickCounter
                           3049 ;	-----------------------------------------
   0A28                    3050 _addTickCounter:
   0A28 AA F0              3051 	mov	r2,b
   0A2A AB 83              3052 	mov	r3,dph
   0A2C E5 82              3053 	mov	a,dpl
   0A2E 90s09r06           3054 	mov	dptr,#_addTickCounter_pointerToIncrement_1_1
   0A31 F0                 3055 	movx	@dptr,a
   0A32 A3                 3056 	inc	dptr
   0A33 EB                 3057 	mov	a,r3
   0A34 F0                 3058 	movx	@dptr,a
   0A35 A3                 3059 	inc	dptr
   0A36 EA                 3060 	mov	a,r2
   0A37 F0                 3061 	movx	@dptr,a
                           3062 ;	../src/projectSpecificHardwareInterface_C8051F040.c:709: for( i = 0 ; i < configNUMBER_OF_TICK_COUNTERS ; i++ )
   0A38 7A 00              3063 	mov	r2,#0x00
   0A3A                    3064 00105$:
   0A3A BA 0A 00           3065 	cjne	r2,#0x0A,00115$
   0A3D                    3066 00115$:
   0A3D 50 4B              3067 	jnc	00109$
                           3068 ;	../src/projectSpecificHardwareInterface_C8051F040.c:713: if(tickCounterToIncrement[i] == pointerToIncrement)
   0A3F EA                 3069 	mov	a,r2
   0A40 75 F0 03           3070 	mov	b,#0x03
   0A43 A4                 3071 	mul	ab
   0A44 24rE8              3072 	add	a,#_tickCounterToIncrement
   0A46 FB                 3073 	mov	r3,a
   0A47 E4                 3074 	clr	a
   0A48 34s08              3075 	addc	a,#(_tickCounterToIncrement >> 8)
   0A4A FC                 3076 	mov	r4,a
   0A4B 8B 82              3077 	mov	dpl,r3
   0A4D 8C 83              3078 	mov	dph,r4
   0A4F E0                 3079 	movx	a,@dptr
   0A50 FD                 3080 	mov	r5,a
   0A51 A3                 3081 	inc	dptr
   0A52 E0                 3082 	movx	a,@dptr
   0A53 FE                 3083 	mov	r6,a
   0A54 A3                 3084 	inc	dptr
   0A55 E0                 3085 	movx	a,@dptr
   0A56 FF                 3086 	mov	r7,a
   0A57 90s09r06           3087 	mov	dptr,#_addTickCounter_pointerToIncrement_1_1
   0A5A E0                 3088 	movx	a,@dptr
   0A5B F5*00              3089 	mov	_addTickCounter_sloc0_1_0,a
   0A5D A3                 3090 	inc	dptr
   0A5E E0                 3091 	movx	a,@dptr
   0A5F F5*01              3092 	mov	(_addTickCounter_sloc0_1_0 + 1),a
   0A61 A3                 3093 	inc	dptr
   0A62 E0                 3094 	movx	a,@dptr
   0A63 F5*02              3095 	mov	(_addTickCounter_sloc0_1_0 + 2),a
   0A65 ED                 3096 	mov	a,r5
   0A66 B5*00 09           3097 	cjne	a,_addTickCounter_sloc0_1_0,00117$
   0A69 EE                 3098 	mov	a,r6
   0A6A B5*01 05           3099 	cjne	a,(_addTickCounter_sloc0_1_0 + 1),00117$
   0A6D EF                 3100 	mov	a,r7
   0A6E B5*02 01           3101 	cjne	a,(_addTickCounter_sloc0_1_0 + 2),00117$
   0A71 22                 3102 	ret
   0A72                    3103 00117$:
                           3104 ;	../src/projectSpecificHardwareInterface_C8051F040.c:718: if(tickCounterToIncrement[i] == 0)
   0A72 ED                 3105 	mov	a,r5
   0A73 4E                 3106 	orl	a,r6
   0A74 4F                 3107 	orl	a,r7
   0A75 70 10              3108 	jnz	00107$
                           3109 ;	../src/projectSpecificHardwareInterface_C8051F040.c:720: tickCounterToIncrement[i] = pointerToIncrement ;
   0A77 8B 82              3110 	mov	dpl,r3
   0A79 8C 83              3111 	mov	dph,r4
   0A7B E5*00              3112 	mov	a,_addTickCounter_sloc0_1_0
   0A7D F0                 3113 	movx	@dptr,a
   0A7E A3                 3114 	inc	dptr
   0A7F E5*01              3115 	mov	a,(_addTickCounter_sloc0_1_0 + 1)
   0A81 F0                 3116 	movx	@dptr,a
   0A82 A3                 3117 	inc	dptr
   0A83 E5*02              3118 	mov	a,(_addTickCounter_sloc0_1_0 + 2)
   0A85 F0                 3119 	movx	@dptr,a
                           3120 ;	../src/projectSpecificHardwareInterface_C8051F040.c:722: break ;
   0A86 22                 3121 	ret
   0A87                    3122 00107$:
                           3123 ;	../src/projectSpecificHardwareInterface_C8051F040.c:709: for( i = 0 ; i < configNUMBER_OF_TICK_COUNTERS ; i++ )
   0A87 0A                 3124 	inc	r2
   0A88 80 B0              3125 	sjmp	00105$
   0A8A                    3126 00109$:
   0A8A 22                 3127 	ret
                           3128 ;------------------------------------------------------------
                           3129 ;Allocation info for local variables in function 'vTimer2ISR'
                           3130 ;------------------------------------------------------------
                           3131 ;i                         Allocated with name '_vTimer2ISR_i_1_1'
                           3132 ;------------------------------------------------------------
                           3133 ;	../src/projectSpecificHardwareInterface_C8051F040.c:731: void vTimer2ISR( void ) interrupt 5
                           3134 ;	-----------------------------------------
                           3135 ;	 function vTimer2ISR
                           3136 ;	-----------------------------------------
   0A8B                    3137 _vTimer2ISR:
   0A8B C0*00              3138 	push	bits
   0A8D C0 E0              3139 	push	acc
   0A8F C0 F0              3140 	push	b
   0A91 C0 82              3141 	push	dpl
   0A93 C0 83              3142 	push	dph
   0A95 C0 02              3143 	push	(0+2)
   0A97 C0 03              3144 	push	(0+3)
   0A99 C0 04              3145 	push	(0+4)
   0A9B C0 05              3146 	push	(0+5)
   0A9D C0 06              3147 	push	(0+6)
   0A9F C0 07              3148 	push	(0+7)
   0AA1 C0 00              3149 	push	(0+0)
   0AA3 C0 01              3150 	push	(0+1)
   0AA5 C0 D0              3151 	push	psw
   0AA7 75 D0 00           3152 	mov	psw,#0x00
                           3153 ;	../src/projectSpecificHardwareInterface_C8051F040.c:735: for( i = 0 ; i < configNUMBER_OF_TICK_COUNTERS ; i++ )
   0AAA 7A 00              3154 	mov	r2,#0x00
   0AAC                    3155 00103$:
   0AAC BA 0A 00           3156 	cjne	r2,#0x0A,00113$
   0AAF                    3157 00113$:
   0AAF 50 41              3158 	jnc	00106$
                           3159 ;	../src/projectSpecificHardwareInterface_C8051F040.c:737: if(tickCounterToIncrement[i])
   0AB1 EA                 3160 	mov	a,r2
   0AB2 75 F0 03           3161 	mov	b,#0x03
   0AB5 A4                 3162 	mul	ab
   0AB6 24rE8              3163 	add	a,#_tickCounterToIncrement
   0AB8 F5 82              3164 	mov	dpl,a
   0ABA E4                 3165 	clr	a
   0ABB 34s08              3166 	addc	a,#(_tickCounterToIncrement >> 8)
   0ABD F5 83              3167 	mov	dph,a
   0ABF E0                 3168 	movx	a,@dptr
   0AC0 FB                 3169 	mov	r3,a
   0AC1 A3                 3170 	inc	dptr
   0AC2 E0                 3171 	movx	a,@dptr
   0AC3 FC                 3172 	mov	r4,a
   0AC4 A3                 3173 	inc	dptr
   0AC5 E0                 3174 	movx	a,@dptr
   0AC6 FD                 3175 	mov	r5,a
   0AC7 EB                 3176 	mov	a,r3
   0AC8 4C                 3177 	orl	a,r4
   0AC9 4D                 3178 	orl	a,r5
   0ACA 60 23              3179 	jz	00105$
                           3180 ;	../src/projectSpecificHardwareInterface_C8051F040.c:739: *tickCounterToIncrement[i] += 1 ;
   0ACC 8B 82              3181 	mov	dpl,r3
   0ACE 8C 83              3182 	mov	dph,r4
   0AD0 8D F0              3183 	mov	b,r5
   0AD2 12s00r00           3184 	lcall	__gptrget
   0AD5 FE                 3185 	mov	r6,a
   0AD6 A3                 3186 	inc	dptr
   0AD7 12s00r00           3187 	lcall	__gptrget
   0ADA FF                 3188 	mov	r7,a
   0ADB 0E                 3189 	inc	r6
   0ADC BE 00 01           3190 	cjne	r6,#0x00,00116$
   0ADF 0F                 3191 	inc	r7
   0AE0                    3192 00116$:
   0AE0 8B 82              3193 	mov	dpl,r3
   0AE2 8C 83              3194 	mov	dph,r4
   0AE4 8D F0              3195 	mov	b,r5
   0AE6 EE                 3196 	mov	a,r6
   0AE7 12s00r00           3197 	lcall	__gptrput
   0AEA A3                 3198 	inc	dptr
   0AEB EF                 3199 	mov	a,r7
   0AEC 12s00r00           3200 	lcall	__gptrput
   0AEF                    3201 00105$:
                           3202 ;	../src/projectSpecificHardwareInterface_C8051F040.c:735: for( i = 0 ; i < configNUMBER_OF_TICK_COUNTERS ; i++ )
   0AEF 0A                 3203 	inc	r2
   0AF0 80 BA              3204 	sjmp	00103$
   0AF2                    3205 00106$:
                           3206 ;	../src/projectSpecificHardwareInterface_C8051F040.c:743: taskSwitcherTickHook() ;
   0AF2 12s00rCE           3207 	lcall	_taskSwitcherTickHook
                           3208 ;	../src/projectSpecificHardwareInterface_C8051F040.c:745: portCLEAR_INTERRUPT_FLAG() ;
   0AF5 53 C8 7F           3209 	anl	_TMR2CN,#0x7F
   0AF8 D0 D0              3210 	pop	psw
   0AFA D0 01              3211 	pop	(0+1)
   0AFC D0 00              3212 	pop	(0+0)
   0AFE D0 07              3213 	pop	(0+7)
   0B00 D0 06              3214 	pop	(0+6)
   0B02 D0 05              3215 	pop	(0+5)
   0B04 D0 04              3216 	pop	(0+4)
   0B06 D0 03              3217 	pop	(0+3)
   0B08 D0 02              3218 	pop	(0+2)
   0B0A D0 83              3219 	pop	dph
   0B0C D0 82              3220 	pop	dpl
   0B0E D0 F0              3221 	pop	b
   0B10 D0 E0              3222 	pop	acc
   0B12 D0*00              3223 	pop	bits
   0B14 32                 3224 	reti
                           3225 	.area CSEG    (CODE)
                           3226 	.area CONST   (CODE)
   0000                    3227 __str_0:
   0000 34 74 68 20 47 65  3228 	.ascii "4th Generation state machine test started."
        6E 65 72 61 74 69
        6F 6E 20 73 74 61
        74 65 20 6D 61 63
        68 69 6E 65 20 74
        65 73 74 20 73 74
        61 72 74 65 64 2E
   002A 00                 3229 	.db 0x00
   002B                    3230 __str_1:
   002B 6C 6F 6F 70        3231 	.ascii "loop"
   002F 00                 3232 	.db 0x00
                           3233 	.area XINIT   (CODE)
   0000                    3234 __xinit__countdown:
   0000 05 00              3235 	.byte #0x05,#0x00
                           3236 	.area CABS    (ABS,CODE)
